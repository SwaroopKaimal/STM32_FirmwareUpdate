
STM32_BL_UART_FwUpdate.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000053e0  080001b0  080001b0  000011b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000057c  08005590  08005590  00006590  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08005b0c  08005b0c  00007088  2**0
                  CONTENTS, READONLY
  4 .ARM          00000008  08005b0c  08005b0c  00006b0c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08005b14  08005b14  00007088  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08005b14  08005b14  00006b14  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08005b18  08005b18  00006b18  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000088  20000000  08005b1c  00007000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000036c  20000088  08005ba4  00007088  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200003f4  08005ba4  000073f4  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00007088  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000cdc8  00000000  00000000  000070b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00002258  00000000  00000000  00013e80  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000b98  00000000  00000000  000160d8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000008ea  00000000  00000000  00016c70  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00028dfd  00000000  00000000  0001755a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000e635  00000000  00000000  00040357  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000f7b21  00000000  00000000  0004e98c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  001464ad  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000336c  00000000  00000000  001464f0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000074  00000000  00000000  0014985c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	@ (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	@ (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	@ (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000088 	.word	0x20000088
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08005578 	.word	0x08005578

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	@ (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	@ (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	@ (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	2000008c 	.word	0x2000008c
 80001ec:	08005578 	.word	0x08005578

080001f0 <strlen>:
 80001f0:	4603      	mov	r3, r0
 80001f2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001f6:	2a00      	cmp	r2, #0
 80001f8:	d1fb      	bne.n	80001f2 <strlen+0x2>
 80001fa:	1a18      	subs	r0, r3, r0
 80001fc:	3801      	subs	r0, #1
 80001fe:	4770      	bx	lr

08000200 <memchr>:
 8000200:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000204:	2a10      	cmp	r2, #16
 8000206:	db2b      	blt.n	8000260 <memchr+0x60>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	d008      	beq.n	8000220 <memchr+0x20>
 800020e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000212:	3a01      	subs	r2, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d02d      	beq.n	8000274 <memchr+0x74>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	b342      	cbz	r2, 8000270 <memchr+0x70>
 800021e:	d1f6      	bne.n	800020e <memchr+0xe>
 8000220:	b4f0      	push	{r4, r5, r6, r7}
 8000222:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000226:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800022a:	f022 0407 	bic.w	r4, r2, #7
 800022e:	f07f 0700 	mvns.w	r7, #0
 8000232:	2300      	movs	r3, #0
 8000234:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000238:	3c08      	subs	r4, #8
 800023a:	ea85 0501 	eor.w	r5, r5, r1
 800023e:	ea86 0601 	eor.w	r6, r6, r1
 8000242:	fa85 f547 	uadd8	r5, r5, r7
 8000246:	faa3 f587 	sel	r5, r3, r7
 800024a:	fa86 f647 	uadd8	r6, r6, r7
 800024e:	faa5 f687 	sel	r6, r5, r7
 8000252:	b98e      	cbnz	r6, 8000278 <memchr+0x78>
 8000254:	d1ee      	bne.n	8000234 <memchr+0x34>
 8000256:	bcf0      	pop	{r4, r5, r6, r7}
 8000258:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800025c:	f002 0207 	and.w	r2, r2, #7
 8000260:	b132      	cbz	r2, 8000270 <memchr+0x70>
 8000262:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000266:	3a01      	subs	r2, #1
 8000268:	ea83 0301 	eor.w	r3, r3, r1
 800026c:	b113      	cbz	r3, 8000274 <memchr+0x74>
 800026e:	d1f8      	bne.n	8000262 <memchr+0x62>
 8000270:	2000      	movs	r0, #0
 8000272:	4770      	bx	lr
 8000274:	3801      	subs	r0, #1
 8000276:	4770      	bx	lr
 8000278:	2d00      	cmp	r5, #0
 800027a:	bf06      	itte	eq
 800027c:	4635      	moveq	r5, r6
 800027e:	3803      	subeq	r0, #3
 8000280:	3807      	subne	r0, #7
 8000282:	f015 0f01 	tst.w	r5, #1
 8000286:	d107      	bne.n	8000298 <memchr+0x98>
 8000288:	3001      	adds	r0, #1
 800028a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800028e:	bf02      	ittt	eq
 8000290:	3001      	addeq	r0, #1
 8000292:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000296:	3001      	addeq	r0, #1
 8000298:	bcf0      	pop	{r4, r5, r6, r7}
 800029a:	3801      	subs	r0, #1
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop

080002a0 <__aeabi_uldivmod>:
 80002a0:	b953      	cbnz	r3, 80002b8 <__aeabi_uldivmod+0x18>
 80002a2:	b94a      	cbnz	r2, 80002b8 <__aeabi_uldivmod+0x18>
 80002a4:	2900      	cmp	r1, #0
 80002a6:	bf08      	it	eq
 80002a8:	2800      	cmpeq	r0, #0
 80002aa:	bf1c      	itt	ne
 80002ac:	f04f 31ff 	movne.w	r1, #4294967295
 80002b0:	f04f 30ff 	movne.w	r0, #4294967295
 80002b4:	f000 b988 	b.w	80005c8 <__aeabi_idiv0>
 80002b8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002bc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002c0:	f000 f806 	bl	80002d0 <__udivmoddi4>
 80002c4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002c8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002cc:	b004      	add	sp, #16
 80002ce:	4770      	bx	lr

080002d0 <__udivmoddi4>:
 80002d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002d4:	9d08      	ldr	r5, [sp, #32]
 80002d6:	468e      	mov	lr, r1
 80002d8:	4604      	mov	r4, r0
 80002da:	4688      	mov	r8, r1
 80002dc:	2b00      	cmp	r3, #0
 80002de:	d14a      	bne.n	8000376 <__udivmoddi4+0xa6>
 80002e0:	428a      	cmp	r2, r1
 80002e2:	4617      	mov	r7, r2
 80002e4:	d962      	bls.n	80003ac <__udivmoddi4+0xdc>
 80002e6:	fab2 f682 	clz	r6, r2
 80002ea:	b14e      	cbz	r6, 8000300 <__udivmoddi4+0x30>
 80002ec:	f1c6 0320 	rsb	r3, r6, #32
 80002f0:	fa01 f806 	lsl.w	r8, r1, r6
 80002f4:	fa20 f303 	lsr.w	r3, r0, r3
 80002f8:	40b7      	lsls	r7, r6
 80002fa:	ea43 0808 	orr.w	r8, r3, r8
 80002fe:	40b4      	lsls	r4, r6
 8000300:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000304:	fa1f fc87 	uxth.w	ip, r7
 8000308:	fbb8 f1fe 	udiv	r1, r8, lr
 800030c:	0c23      	lsrs	r3, r4, #16
 800030e:	fb0e 8811 	mls	r8, lr, r1, r8
 8000312:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000316:	fb01 f20c 	mul.w	r2, r1, ip
 800031a:	429a      	cmp	r2, r3
 800031c:	d909      	bls.n	8000332 <__udivmoddi4+0x62>
 800031e:	18fb      	adds	r3, r7, r3
 8000320:	f101 30ff 	add.w	r0, r1, #4294967295
 8000324:	f080 80ea 	bcs.w	80004fc <__udivmoddi4+0x22c>
 8000328:	429a      	cmp	r2, r3
 800032a:	f240 80e7 	bls.w	80004fc <__udivmoddi4+0x22c>
 800032e:	3902      	subs	r1, #2
 8000330:	443b      	add	r3, r7
 8000332:	1a9a      	subs	r2, r3, r2
 8000334:	b2a3      	uxth	r3, r4
 8000336:	fbb2 f0fe 	udiv	r0, r2, lr
 800033a:	fb0e 2210 	mls	r2, lr, r0, r2
 800033e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000342:	fb00 fc0c 	mul.w	ip, r0, ip
 8000346:	459c      	cmp	ip, r3
 8000348:	d909      	bls.n	800035e <__udivmoddi4+0x8e>
 800034a:	18fb      	adds	r3, r7, r3
 800034c:	f100 32ff 	add.w	r2, r0, #4294967295
 8000350:	f080 80d6 	bcs.w	8000500 <__udivmoddi4+0x230>
 8000354:	459c      	cmp	ip, r3
 8000356:	f240 80d3 	bls.w	8000500 <__udivmoddi4+0x230>
 800035a:	443b      	add	r3, r7
 800035c:	3802      	subs	r0, #2
 800035e:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000362:	eba3 030c 	sub.w	r3, r3, ip
 8000366:	2100      	movs	r1, #0
 8000368:	b11d      	cbz	r5, 8000372 <__udivmoddi4+0xa2>
 800036a:	40f3      	lsrs	r3, r6
 800036c:	2200      	movs	r2, #0
 800036e:	e9c5 3200 	strd	r3, r2, [r5]
 8000372:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000376:	428b      	cmp	r3, r1
 8000378:	d905      	bls.n	8000386 <__udivmoddi4+0xb6>
 800037a:	b10d      	cbz	r5, 8000380 <__udivmoddi4+0xb0>
 800037c:	e9c5 0100 	strd	r0, r1, [r5]
 8000380:	2100      	movs	r1, #0
 8000382:	4608      	mov	r0, r1
 8000384:	e7f5      	b.n	8000372 <__udivmoddi4+0xa2>
 8000386:	fab3 f183 	clz	r1, r3
 800038a:	2900      	cmp	r1, #0
 800038c:	d146      	bne.n	800041c <__udivmoddi4+0x14c>
 800038e:	4573      	cmp	r3, lr
 8000390:	d302      	bcc.n	8000398 <__udivmoddi4+0xc8>
 8000392:	4282      	cmp	r2, r0
 8000394:	f200 8105 	bhi.w	80005a2 <__udivmoddi4+0x2d2>
 8000398:	1a84      	subs	r4, r0, r2
 800039a:	eb6e 0203 	sbc.w	r2, lr, r3
 800039e:	2001      	movs	r0, #1
 80003a0:	4690      	mov	r8, r2
 80003a2:	2d00      	cmp	r5, #0
 80003a4:	d0e5      	beq.n	8000372 <__udivmoddi4+0xa2>
 80003a6:	e9c5 4800 	strd	r4, r8, [r5]
 80003aa:	e7e2      	b.n	8000372 <__udivmoddi4+0xa2>
 80003ac:	2a00      	cmp	r2, #0
 80003ae:	f000 8090 	beq.w	80004d2 <__udivmoddi4+0x202>
 80003b2:	fab2 f682 	clz	r6, r2
 80003b6:	2e00      	cmp	r6, #0
 80003b8:	f040 80a4 	bne.w	8000504 <__udivmoddi4+0x234>
 80003bc:	1a8a      	subs	r2, r1, r2
 80003be:	0c03      	lsrs	r3, r0, #16
 80003c0:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 80003c4:	b280      	uxth	r0, r0
 80003c6:	b2bc      	uxth	r4, r7
 80003c8:	2101      	movs	r1, #1
 80003ca:	fbb2 fcfe 	udiv	ip, r2, lr
 80003ce:	fb0e 221c 	mls	r2, lr, ip, r2
 80003d2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80003d6:	fb04 f20c 	mul.w	r2, r4, ip
 80003da:	429a      	cmp	r2, r3
 80003dc:	d907      	bls.n	80003ee <__udivmoddi4+0x11e>
 80003de:	18fb      	adds	r3, r7, r3
 80003e0:	f10c 38ff 	add.w	r8, ip, #4294967295
 80003e4:	d202      	bcs.n	80003ec <__udivmoddi4+0x11c>
 80003e6:	429a      	cmp	r2, r3
 80003e8:	f200 80e0 	bhi.w	80005ac <__udivmoddi4+0x2dc>
 80003ec:	46c4      	mov	ip, r8
 80003ee:	1a9b      	subs	r3, r3, r2
 80003f0:	fbb3 f2fe 	udiv	r2, r3, lr
 80003f4:	fb0e 3312 	mls	r3, lr, r2, r3
 80003f8:	ea40 4303 	orr.w	r3, r0, r3, lsl #16
 80003fc:	fb02 f404 	mul.w	r4, r2, r4
 8000400:	429c      	cmp	r4, r3
 8000402:	d907      	bls.n	8000414 <__udivmoddi4+0x144>
 8000404:	18fb      	adds	r3, r7, r3
 8000406:	f102 30ff 	add.w	r0, r2, #4294967295
 800040a:	d202      	bcs.n	8000412 <__udivmoddi4+0x142>
 800040c:	429c      	cmp	r4, r3
 800040e:	f200 80ca 	bhi.w	80005a6 <__udivmoddi4+0x2d6>
 8000412:	4602      	mov	r2, r0
 8000414:	1b1b      	subs	r3, r3, r4
 8000416:	ea42 400c 	orr.w	r0, r2, ip, lsl #16
 800041a:	e7a5      	b.n	8000368 <__udivmoddi4+0x98>
 800041c:	f1c1 0620 	rsb	r6, r1, #32
 8000420:	408b      	lsls	r3, r1
 8000422:	fa22 f706 	lsr.w	r7, r2, r6
 8000426:	431f      	orrs	r7, r3
 8000428:	fa0e f401 	lsl.w	r4, lr, r1
 800042c:	fa20 f306 	lsr.w	r3, r0, r6
 8000430:	fa2e fe06 	lsr.w	lr, lr, r6
 8000434:	ea4f 4917 	mov.w	r9, r7, lsr #16
 8000438:	4323      	orrs	r3, r4
 800043a:	fa00 f801 	lsl.w	r8, r0, r1
 800043e:	fa1f fc87 	uxth.w	ip, r7
 8000442:	fbbe f0f9 	udiv	r0, lr, r9
 8000446:	0c1c      	lsrs	r4, r3, #16
 8000448:	fb09 ee10 	mls	lr, r9, r0, lr
 800044c:	ea44 440e 	orr.w	r4, r4, lr, lsl #16
 8000450:	fb00 fe0c 	mul.w	lr, r0, ip
 8000454:	45a6      	cmp	lr, r4
 8000456:	fa02 f201 	lsl.w	r2, r2, r1
 800045a:	d909      	bls.n	8000470 <__udivmoddi4+0x1a0>
 800045c:	193c      	adds	r4, r7, r4
 800045e:	f100 3aff 	add.w	sl, r0, #4294967295
 8000462:	f080 809c 	bcs.w	800059e <__udivmoddi4+0x2ce>
 8000466:	45a6      	cmp	lr, r4
 8000468:	f240 8099 	bls.w	800059e <__udivmoddi4+0x2ce>
 800046c:	3802      	subs	r0, #2
 800046e:	443c      	add	r4, r7
 8000470:	eba4 040e 	sub.w	r4, r4, lr
 8000474:	fa1f fe83 	uxth.w	lr, r3
 8000478:	fbb4 f3f9 	udiv	r3, r4, r9
 800047c:	fb09 4413 	mls	r4, r9, r3, r4
 8000480:	ea4e 4404 	orr.w	r4, lr, r4, lsl #16
 8000484:	fb03 fc0c 	mul.w	ip, r3, ip
 8000488:	45a4      	cmp	ip, r4
 800048a:	d908      	bls.n	800049e <__udivmoddi4+0x1ce>
 800048c:	193c      	adds	r4, r7, r4
 800048e:	f103 3eff 	add.w	lr, r3, #4294967295
 8000492:	f080 8082 	bcs.w	800059a <__udivmoddi4+0x2ca>
 8000496:	45a4      	cmp	ip, r4
 8000498:	d97f      	bls.n	800059a <__udivmoddi4+0x2ca>
 800049a:	3b02      	subs	r3, #2
 800049c:	443c      	add	r4, r7
 800049e:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 80004a2:	eba4 040c 	sub.w	r4, r4, ip
 80004a6:	fba0 ec02 	umull	lr, ip, r0, r2
 80004aa:	4564      	cmp	r4, ip
 80004ac:	4673      	mov	r3, lr
 80004ae:	46e1      	mov	r9, ip
 80004b0:	d362      	bcc.n	8000578 <__udivmoddi4+0x2a8>
 80004b2:	d05f      	beq.n	8000574 <__udivmoddi4+0x2a4>
 80004b4:	b15d      	cbz	r5, 80004ce <__udivmoddi4+0x1fe>
 80004b6:	ebb8 0203 	subs.w	r2, r8, r3
 80004ba:	eb64 0409 	sbc.w	r4, r4, r9
 80004be:	fa04 f606 	lsl.w	r6, r4, r6
 80004c2:	fa22 f301 	lsr.w	r3, r2, r1
 80004c6:	431e      	orrs	r6, r3
 80004c8:	40cc      	lsrs	r4, r1
 80004ca:	e9c5 6400 	strd	r6, r4, [r5]
 80004ce:	2100      	movs	r1, #0
 80004d0:	e74f      	b.n	8000372 <__udivmoddi4+0xa2>
 80004d2:	fbb1 fcf2 	udiv	ip, r1, r2
 80004d6:	0c01      	lsrs	r1, r0, #16
 80004d8:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
 80004dc:	b280      	uxth	r0, r0
 80004de:	ea40 4201 	orr.w	r2, r0, r1, lsl #16
 80004e2:	463b      	mov	r3, r7
 80004e4:	4638      	mov	r0, r7
 80004e6:	463c      	mov	r4, r7
 80004e8:	46b8      	mov	r8, r7
 80004ea:	46be      	mov	lr, r7
 80004ec:	2620      	movs	r6, #32
 80004ee:	fbb1 f1f7 	udiv	r1, r1, r7
 80004f2:	eba2 0208 	sub.w	r2, r2, r8
 80004f6:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
 80004fa:	e766      	b.n	80003ca <__udivmoddi4+0xfa>
 80004fc:	4601      	mov	r1, r0
 80004fe:	e718      	b.n	8000332 <__udivmoddi4+0x62>
 8000500:	4610      	mov	r0, r2
 8000502:	e72c      	b.n	800035e <__udivmoddi4+0x8e>
 8000504:	f1c6 0220 	rsb	r2, r6, #32
 8000508:	fa2e f302 	lsr.w	r3, lr, r2
 800050c:	40b7      	lsls	r7, r6
 800050e:	40b1      	lsls	r1, r6
 8000510:	fa20 f202 	lsr.w	r2, r0, r2
 8000514:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000518:	430a      	orrs	r2, r1
 800051a:	fbb3 f8fe 	udiv	r8, r3, lr
 800051e:	b2bc      	uxth	r4, r7
 8000520:	fb0e 3318 	mls	r3, lr, r8, r3
 8000524:	0c11      	lsrs	r1, r2, #16
 8000526:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 800052a:	fb08 f904 	mul.w	r9, r8, r4
 800052e:	40b0      	lsls	r0, r6
 8000530:	4589      	cmp	r9, r1
 8000532:	ea4f 4310 	mov.w	r3, r0, lsr #16
 8000536:	b280      	uxth	r0, r0
 8000538:	d93e      	bls.n	80005b8 <__udivmoddi4+0x2e8>
 800053a:	1879      	adds	r1, r7, r1
 800053c:	f108 3cff 	add.w	ip, r8, #4294967295
 8000540:	d201      	bcs.n	8000546 <__udivmoddi4+0x276>
 8000542:	4589      	cmp	r9, r1
 8000544:	d81f      	bhi.n	8000586 <__udivmoddi4+0x2b6>
 8000546:	eba1 0109 	sub.w	r1, r1, r9
 800054a:	fbb1 f9fe 	udiv	r9, r1, lr
 800054e:	fb09 f804 	mul.w	r8, r9, r4
 8000552:	fb0e 1119 	mls	r1, lr, r9, r1
 8000556:	b292      	uxth	r2, r2
 8000558:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800055c:	4542      	cmp	r2, r8
 800055e:	d229      	bcs.n	80005b4 <__udivmoddi4+0x2e4>
 8000560:	18ba      	adds	r2, r7, r2
 8000562:	f109 31ff 	add.w	r1, r9, #4294967295
 8000566:	d2c4      	bcs.n	80004f2 <__udivmoddi4+0x222>
 8000568:	4542      	cmp	r2, r8
 800056a:	d2c2      	bcs.n	80004f2 <__udivmoddi4+0x222>
 800056c:	f1a9 0102 	sub.w	r1, r9, #2
 8000570:	443a      	add	r2, r7
 8000572:	e7be      	b.n	80004f2 <__udivmoddi4+0x222>
 8000574:	45f0      	cmp	r8, lr
 8000576:	d29d      	bcs.n	80004b4 <__udivmoddi4+0x1e4>
 8000578:	ebbe 0302 	subs.w	r3, lr, r2
 800057c:	eb6c 0c07 	sbc.w	ip, ip, r7
 8000580:	3801      	subs	r0, #1
 8000582:	46e1      	mov	r9, ip
 8000584:	e796      	b.n	80004b4 <__udivmoddi4+0x1e4>
 8000586:	eba7 0909 	sub.w	r9, r7, r9
 800058a:	4449      	add	r1, r9
 800058c:	f1a8 0c02 	sub.w	ip, r8, #2
 8000590:	fbb1 f9fe 	udiv	r9, r1, lr
 8000594:	fb09 f804 	mul.w	r8, r9, r4
 8000598:	e7db      	b.n	8000552 <__udivmoddi4+0x282>
 800059a:	4673      	mov	r3, lr
 800059c:	e77f      	b.n	800049e <__udivmoddi4+0x1ce>
 800059e:	4650      	mov	r0, sl
 80005a0:	e766      	b.n	8000470 <__udivmoddi4+0x1a0>
 80005a2:	4608      	mov	r0, r1
 80005a4:	e6fd      	b.n	80003a2 <__udivmoddi4+0xd2>
 80005a6:	443b      	add	r3, r7
 80005a8:	3a02      	subs	r2, #2
 80005aa:	e733      	b.n	8000414 <__udivmoddi4+0x144>
 80005ac:	f1ac 0c02 	sub.w	ip, ip, #2
 80005b0:	443b      	add	r3, r7
 80005b2:	e71c      	b.n	80003ee <__udivmoddi4+0x11e>
 80005b4:	4649      	mov	r1, r9
 80005b6:	e79c      	b.n	80004f2 <__udivmoddi4+0x222>
 80005b8:	eba1 0109 	sub.w	r1, r1, r9
 80005bc:	46c4      	mov	ip, r8
 80005be:	fbb1 f9fe 	udiv	r9, r1, lr
 80005c2:	fb09 f804 	mul.w	r8, r9, r4
 80005c6:	e7c4      	b.n	8000552 <__udivmoddi4+0x282>

080005c8 <__aeabi_idiv0>:
 80005c8:	4770      	bx	lr
 80005ca:	bf00      	nop

080005cc <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80005cc:	b580      	push	{r7, lr}
 80005ce:	b082      	sub	sp, #8
 80005d0:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80005d2:	f001 f844 	bl	800165e <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80005d6:	f000 f867 	bl	80006a8 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80005da:	f000 f937 	bl	800084c <MX_GPIO_Init>
  MX_LPUART1_UART_Init();
 80005de:	f000 f8d9 	bl	8000794 <MX_LPUART1_UART_Init>
  MX_USART2_UART_Init();
 80005e2:	f000 f903 	bl	80007ec <MX_USART2_UART_Init>
  MX_CRC_Init();
 80005e6:	f000 f8b3 	bl	8000750 <MX_CRC_Init>
  /* USER CODE BEGIN 2 */

  /*Fetch the bank no. which has to be activated*/
  active_bank_number = fetch_active_bank_number();
 80005ea:	f000 fe8b 	bl	8001304 <fetch_active_bank_number>
 80005ee:	4603      	mov	r3, r0
 80005f0:	461a      	mov	r2, r3
 80005f2:	4b23      	ldr	r3, [pc, #140]	@ (8000680 <main+0xb4>)
 80005f4:	701a      	strb	r2, [r3, #0]
  printmsg("BL_DEBUG_MSG: Active Bank: %d \n\r", active_bank_number);
 80005f6:	4b22      	ldr	r3, [pc, #136]	@ (8000680 <main+0xb4>)
 80005f8:	781b      	ldrb	r3, [r3, #0]
 80005fa:	4619      	mov	r1, r3
 80005fc:	4821      	ldr	r0, [pc, #132]	@ (8000684 <main+0xb8>)
 80005fe:	f000 f9d1 	bl	80009a4 <printmsg>
  /*If button is pressed*/
  if(HAL_GPIO_ReadPin(B1_GPIO_Port, B1_Pin) == GPIO_PIN_SET)
 8000602:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8000606:	4820      	ldr	r0, [pc, #128]	@ (8000688 <main+0xbc>)
 8000608:	f002 f8f8 	bl	80027fc <HAL_GPIO_ReadPin>
 800060c:	4603      	mov	r3, r0
 800060e:	2b01      	cmp	r3, #1
 8000610:	d12f      	bne.n	8000672 <main+0xa6>
  {
	  printmsg("BL_DEBUG_MSG: Button pressed. Checking for firmware updates.\n\r");
 8000612:	481e      	ldr	r0, [pc, #120]	@ (800068c <main+0xc0>)
 8000614:	f000 f9c6 	bl	80009a4 <printmsg>

	  /* Function to return the version available on the host application */
	  uint8_t available_version = fetch_available_firmware_version();
 8000618:	f000 fe42 	bl	80012a0 <fetch_available_firmware_version>
 800061c:	4603      	mov	r3, r0
 800061e:	71fb      	strb	r3, [r7, #7]
	  printmsg("BL_DEBUG_MSG: Fetched version: %d \n\r", available_version);
 8000620:	79fb      	ldrb	r3, [r7, #7]
 8000622:	4619      	mov	r1, r3
 8000624:	481a      	ldr	r0, [pc, #104]	@ (8000690 <main+0xc4>)
 8000626:	f000 f9bd 	bl	80009a4 <printmsg>

	  /* Check if the user needs to update firmware, get input via Debug UART */
	  printmsg("BL_DEBUG_MSG: Update Firmware? Y/n \n\r");
 800062a:	481a      	ldr	r0, [pc, #104]	@ (8000694 <main+0xc8>)
 800062c:	f000 f9ba 	bl	80009a4 <printmsg>
	  uint8_t update_option;
	  HAL_UART_Receive(D_UART, &update_option, 1, HAL_MAX_DELAY);
 8000630:	1db9      	adds	r1, r7, #6
 8000632:	f04f 33ff 	mov.w	r3, #4294967295
 8000636:	2201      	movs	r2, #1
 8000638:	4817      	ldr	r0, [pc, #92]	@ (8000698 <main+0xcc>)
 800063a:	f003 fd62 	bl	8004102 <HAL_UART_Receive>
	  if(update_option == 'Y' || update_option == 'y')
 800063e:	79bb      	ldrb	r3, [r7, #6]
 8000640:	2b59      	cmp	r3, #89	@ 0x59
 8000642:	d002      	beq.n	800064a <main+0x7e>
 8000644:	79bb      	ldrb	r3, [r7, #6]
 8000646:	2b79      	cmp	r3, #121	@ 0x79
 8000648:	d102      	bne.n	8000650 <main+0x84>
	  {
		  /*User requires a firmware update */
		  handle_firmware_update();
 800064a:	f000 fe41 	bl	80012d0 <handle_firmware_update>
 800064e:	e015      	b.n	800067c <main+0xb0>

	  }else if(update_option == 'N' || update_option == 'n')
 8000650:	79bb      	ldrb	r3, [r7, #6]
 8000652:	2b4e      	cmp	r3, #78	@ 0x4e
 8000654:	d002      	beq.n	800065c <main+0x90>
 8000656:	79bb      	ldrb	r3, [r7, #6]
 8000658:	2b6e      	cmp	r3, #110	@ 0x6e
 800065a:	d105      	bne.n	8000668 <main+0x9c>
	  {
		  /*User does not requires a firmware update, go to custom boot loader*/
		  printmsg("BL_DEBUG_MSG: Update not required, entering bootloader mode \n\r");
 800065c:	480f      	ldr	r0, [pc, #60]	@ (800069c <main+0xd0>)
 800065e:	f000 f9a1 	bl	80009a4 <printmsg>

		  /*Continuously check for user inputs to the boot loader*/
		  bootloader_uart_read_data();
 8000662:	f000 fa09 	bl	8000a78 <bootloader_uart_read_data>
 8000666:	e009      	b.n	800067c <main+0xb0>

	  }else{
		  printmsg("BL_DEBUG_MSG: Invalid option. Please reset the board. \n\r");
 8000668:	480d      	ldr	r0, [pc, #52]	@ (80006a0 <main+0xd4>)
 800066a:	f000 f99b 	bl	80009a4 <printmsg>
		  while(1);
 800066e:	bf00      	nop
 8000670:	e7fd      	b.n	800066e <main+0xa2>
	  }

  }else{

	  printmsg("BL_DEBUG_MSG: Button not pressed. Executing user application\n\r");
 8000672:	480c      	ldr	r0, [pc, #48]	@ (80006a4 <main+0xd8>)
 8000674:	f000 f996 	bl	80009a4 <printmsg>

	  bootloader_jump_to_active_bank(); /*Jump to the active bank binaries*/
 8000678:	f000 f9ba 	bl	80009f0 <bootloader_jump_to_active_bank>

  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 800067c:	bf00      	nop
 800067e:	e7fd      	b.n	800067c <main+0xb0>
 8000680:	200002a0 	.word	0x200002a0
 8000684:	08005590 	.word	0x08005590
 8000688:	48000800 	.word	0x48000800
 800068c:	080055b4 	.word	0x080055b4
 8000690:	080055f4 	.word	0x080055f4
 8000694:	0800561c 	.word	0x0800561c
 8000698:	200000c8 	.word	0x200000c8
 800069c:	08005644 	.word	0x08005644
 80006a0:	08005684 	.word	0x08005684
 80006a4:	080056c0 	.word	0x080056c0

080006a8 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80006a8:	b580      	push	{r7, lr}
 80006aa:	b096      	sub	sp, #88	@ 0x58
 80006ac:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80006ae:	f107 0314 	add.w	r3, r7, #20
 80006b2:	2244      	movs	r2, #68	@ 0x44
 80006b4:	2100      	movs	r1, #0
 80006b6:	4618      	mov	r0, r3
 80006b8:	f004 fae0 	bl	8004c7c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80006bc:	463b      	mov	r3, r7
 80006be:	2200      	movs	r2, #0
 80006c0:	601a      	str	r2, [r3, #0]
 80006c2:	605a      	str	r2, [r3, #4]
 80006c4:	609a      	str	r2, [r3, #8]
 80006c6:	60da      	str	r2, [r3, #12]
 80006c8:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 80006ca:	f44f 7000 	mov.w	r0, #512	@ 0x200
 80006ce:	f002 f8d3 	bl	8002878 <HAL_PWREx_ControlVoltageScaling>
 80006d2:	4603      	mov	r3, r0
 80006d4:	2b00      	cmp	r3, #0
 80006d6:	d001      	beq.n	80006dc <SystemClock_Config+0x34>
  {
    Error_Handler();
 80006d8:	f000 fe31 	bl	800133e <Error_Handler>
  }

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_MSI;
 80006dc:	2310      	movs	r3, #16
 80006de:	617b      	str	r3, [r7, #20]
  RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 80006e0:	2301      	movs	r3, #1
 80006e2:	62fb      	str	r3, [r7, #44]	@ 0x2c
  RCC_OscInitStruct.MSICalibrationValue = 0;
 80006e4:	2300      	movs	r3, #0
 80006e6:	633b      	str	r3, [r7, #48]	@ 0x30
  RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 80006e8:	2360      	movs	r3, #96	@ 0x60
 80006ea:	637b      	str	r3, [r7, #52]	@ 0x34
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80006ec:	2302      	movs	r3, #2
 80006ee:	63fb      	str	r3, [r7, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 80006f0:	2301      	movs	r3, #1
 80006f2:	643b      	str	r3, [r7, #64]	@ 0x40
  RCC_OscInitStruct.PLL.PLLM = 1;
 80006f4:	2301      	movs	r3, #1
 80006f6:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLN = 40;
 80006f8:	2328      	movs	r3, #40	@ 0x28
 80006fa:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80006fc:	2302      	movs	r3, #2
 80006fe:	64fb      	str	r3, [r7, #76]	@ 0x4c
  RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 8000700:	2302      	movs	r3, #2
 8000702:	653b      	str	r3, [r7, #80]	@ 0x50
  RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 8000704:	2302      	movs	r3, #2
 8000706:	657b      	str	r3, [r7, #84]	@ 0x54
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000708:	f107 0314 	add.w	r3, r7, #20
 800070c:	4618      	mov	r0, r3
 800070e:	f002 f919 	bl	8002944 <HAL_RCC_OscConfig>
 8000712:	4603      	mov	r3, r0
 8000714:	2b00      	cmp	r3, #0
 8000716:	d001      	beq.n	800071c <SystemClock_Config+0x74>
  {
    Error_Handler();
 8000718:	f000 fe11 	bl	800133e <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800071c:	230f      	movs	r3, #15
 800071e:	603b      	str	r3, [r7, #0]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000720:	2303      	movs	r3, #3
 8000722:	607b      	str	r3, [r7, #4]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000724:	2300      	movs	r3, #0
 8000726:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8000728:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800072c:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 800072e:	2300      	movs	r3, #0
 8000730:	613b      	str	r3, [r7, #16]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 8000732:	463b      	mov	r3, r7
 8000734:	2104      	movs	r1, #4
 8000736:	4618      	mov	r0, r3
 8000738:	f002 fd1e 	bl	8003178 <HAL_RCC_ClockConfig>
 800073c:	4603      	mov	r3, r0
 800073e:	2b00      	cmp	r3, #0
 8000740:	d001      	beq.n	8000746 <SystemClock_Config+0x9e>
  {
    Error_Handler();
 8000742:	f000 fdfc 	bl	800133e <Error_Handler>
  }
}
 8000746:	bf00      	nop
 8000748:	3758      	adds	r7, #88	@ 0x58
 800074a:	46bd      	mov	sp, r7
 800074c:	bd80      	pop	{r7, pc}
	...

08000750 <MX_CRC_Init>:
  * @brief CRC Initialization Function
  * @param None
  * @retval None
  */
static void MX_CRC_Init(void)
{
 8000750:	b580      	push	{r7, lr}
 8000752:	af00      	add	r7, sp, #0
  /* USER CODE END CRC_Init 0 */

  /* USER CODE BEGIN CRC_Init 1 */

  /* USER CODE END CRC_Init 1 */
  hcrc.Instance = CRC;
 8000754:	4b0d      	ldr	r3, [pc, #52]	@ (800078c <MX_CRC_Init+0x3c>)
 8000756:	4a0e      	ldr	r2, [pc, #56]	@ (8000790 <MX_CRC_Init+0x40>)
 8000758:	601a      	str	r2, [r3, #0]
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 800075a:	4b0c      	ldr	r3, [pc, #48]	@ (800078c <MX_CRC_Init+0x3c>)
 800075c:	2200      	movs	r2, #0
 800075e:	711a      	strb	r2, [r3, #4]
  hcrc.Init.DefaultInitValueUse = DEFAULT_INIT_VALUE_ENABLE;
 8000760:	4b0a      	ldr	r3, [pc, #40]	@ (800078c <MX_CRC_Init+0x3c>)
 8000762:	2200      	movs	r2, #0
 8000764:	715a      	strb	r2, [r3, #5]
  hcrc.Init.InputDataInversionMode = CRC_INPUTDATA_INVERSION_NONE;
 8000766:	4b09      	ldr	r3, [pc, #36]	@ (800078c <MX_CRC_Init+0x3c>)
 8000768:	2200      	movs	r2, #0
 800076a:	615a      	str	r2, [r3, #20]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 800076c:	4b07      	ldr	r3, [pc, #28]	@ (800078c <MX_CRC_Init+0x3c>)
 800076e:	2200      	movs	r2, #0
 8000770:	619a      	str	r2, [r3, #24]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_WORDS;
 8000772:	4b06      	ldr	r3, [pc, #24]	@ (800078c <MX_CRC_Init+0x3c>)
 8000774:	2203      	movs	r2, #3
 8000776:	621a      	str	r2, [r3, #32]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8000778:	4804      	ldr	r0, [pc, #16]	@ (800078c <MX_CRC_Init+0x3c>)
 800077a:	f001 f8cb 	bl	8001914 <HAL_CRC_Init>
 800077e:	4603      	mov	r3, r0
 8000780:	2b00      	cmp	r3, #0
 8000782:	d001      	beq.n	8000788 <MX_CRC_Init+0x38>
  {
    Error_Handler();
 8000784:	f000 fddb 	bl	800133e <Error_Handler>
  }
  /* USER CODE BEGIN CRC_Init 2 */

  /* USER CODE END CRC_Init 2 */

}
 8000788:	bf00      	nop
 800078a:	bd80      	pop	{r7, pc}
 800078c:	200000a4 	.word	0x200000a4
 8000790:	40023000 	.word	0x40023000

08000794 <MX_LPUART1_UART_Init>:
  * @brief LPUART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_LPUART1_UART_Init(void)
{
 8000794:	b580      	push	{r7, lr}
 8000796:	af00      	add	r7, sp, #0
  /* USER CODE END LPUART1_Init 0 */

  /* USER CODE BEGIN LPUART1_Init 1 */

  /* USER CODE END LPUART1_Init 1 */
  hlpuart1.Instance = LPUART1;
 8000798:	4b12      	ldr	r3, [pc, #72]	@ (80007e4 <MX_LPUART1_UART_Init+0x50>)
 800079a:	4a13      	ldr	r2, [pc, #76]	@ (80007e8 <MX_LPUART1_UART_Init+0x54>)
 800079c:	601a      	str	r2, [r3, #0]
  hlpuart1.Init.BaudRate = 115200;
 800079e:	4b11      	ldr	r3, [pc, #68]	@ (80007e4 <MX_LPUART1_UART_Init+0x50>)
 80007a0:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 80007a4:	605a      	str	r2, [r3, #4]
  hlpuart1.Init.WordLength = UART_WORDLENGTH_8B;
 80007a6:	4b0f      	ldr	r3, [pc, #60]	@ (80007e4 <MX_LPUART1_UART_Init+0x50>)
 80007a8:	2200      	movs	r2, #0
 80007aa:	609a      	str	r2, [r3, #8]
  hlpuart1.Init.StopBits = UART_STOPBITS_1;
 80007ac:	4b0d      	ldr	r3, [pc, #52]	@ (80007e4 <MX_LPUART1_UART_Init+0x50>)
 80007ae:	2200      	movs	r2, #0
 80007b0:	60da      	str	r2, [r3, #12]
  hlpuart1.Init.Parity = UART_PARITY_NONE;
 80007b2:	4b0c      	ldr	r3, [pc, #48]	@ (80007e4 <MX_LPUART1_UART_Init+0x50>)
 80007b4:	2200      	movs	r2, #0
 80007b6:	611a      	str	r2, [r3, #16]
  hlpuart1.Init.Mode = UART_MODE_TX_RX;
 80007b8:	4b0a      	ldr	r3, [pc, #40]	@ (80007e4 <MX_LPUART1_UART_Init+0x50>)
 80007ba:	220c      	movs	r2, #12
 80007bc:	615a      	str	r2, [r3, #20]
  hlpuart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80007be:	4b09      	ldr	r3, [pc, #36]	@ (80007e4 <MX_LPUART1_UART_Init+0x50>)
 80007c0:	2200      	movs	r2, #0
 80007c2:	619a      	str	r2, [r3, #24]
  hlpuart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 80007c4:	4b07      	ldr	r3, [pc, #28]	@ (80007e4 <MX_LPUART1_UART_Init+0x50>)
 80007c6:	2200      	movs	r2, #0
 80007c8:	621a      	str	r2, [r3, #32]
  hlpuart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 80007ca:	4b06      	ldr	r3, [pc, #24]	@ (80007e4 <MX_LPUART1_UART_Init+0x50>)
 80007cc:	2200      	movs	r2, #0
 80007ce:	625a      	str	r2, [r3, #36]	@ 0x24
  if (HAL_UART_Init(&hlpuart1) != HAL_OK)
 80007d0:	4804      	ldr	r0, [pc, #16]	@ (80007e4 <MX_LPUART1_UART_Init+0x50>)
 80007d2:	f003 fbbf 	bl	8003f54 <HAL_UART_Init>
 80007d6:	4603      	mov	r3, r0
 80007d8:	2b00      	cmp	r3, #0
 80007da:	d001      	beq.n	80007e0 <MX_LPUART1_UART_Init+0x4c>
  {
    Error_Handler();
 80007dc:	f000 fdaf 	bl	800133e <Error_Handler>
  }
  /* USER CODE BEGIN LPUART1_Init 2 */

  /* USER CODE END LPUART1_Init 2 */

}
 80007e0:	bf00      	nop
 80007e2:	bd80      	pop	{r7, pc}
 80007e4:	200000c8 	.word	0x200000c8
 80007e8:	40008000 	.word	0x40008000

080007ec <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 80007ec:	b580      	push	{r7, lr}
 80007ee:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 80007f0:	4b14      	ldr	r3, [pc, #80]	@ (8000844 <MX_USART2_UART_Init+0x58>)
 80007f2:	4a15      	ldr	r2, [pc, #84]	@ (8000848 <MX_USART2_UART_Init+0x5c>)
 80007f4:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 80007f6:	4b13      	ldr	r3, [pc, #76]	@ (8000844 <MX_USART2_UART_Init+0x58>)
 80007f8:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 80007fc:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 80007fe:	4b11      	ldr	r3, [pc, #68]	@ (8000844 <MX_USART2_UART_Init+0x58>)
 8000800:	2200      	movs	r2, #0
 8000802:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8000804:	4b0f      	ldr	r3, [pc, #60]	@ (8000844 <MX_USART2_UART_Init+0x58>)
 8000806:	2200      	movs	r2, #0
 8000808:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 800080a:	4b0e      	ldr	r3, [pc, #56]	@ (8000844 <MX_USART2_UART_Init+0x58>)
 800080c:	2200      	movs	r2, #0
 800080e:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8000810:	4b0c      	ldr	r3, [pc, #48]	@ (8000844 <MX_USART2_UART_Init+0x58>)
 8000812:	220c      	movs	r2, #12
 8000814:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8000816:	4b0b      	ldr	r3, [pc, #44]	@ (8000844 <MX_USART2_UART_Init+0x58>)
 8000818:	2200      	movs	r2, #0
 800081a:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 800081c:	4b09      	ldr	r3, [pc, #36]	@ (8000844 <MX_USART2_UART_Init+0x58>)
 800081e:	2200      	movs	r2, #0
 8000820:	61da      	str	r2, [r3, #28]
  huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8000822:	4b08      	ldr	r3, [pc, #32]	@ (8000844 <MX_USART2_UART_Init+0x58>)
 8000824:	2200      	movs	r2, #0
 8000826:	621a      	str	r2, [r3, #32]
  huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8000828:	4b06      	ldr	r3, [pc, #24]	@ (8000844 <MX_USART2_UART_Init+0x58>)
 800082a:	2200      	movs	r2, #0
 800082c:	625a      	str	r2, [r3, #36]	@ 0x24
  if (HAL_UART_Init(&huart2) != HAL_OK)
 800082e:	4805      	ldr	r0, [pc, #20]	@ (8000844 <MX_USART2_UART_Init+0x58>)
 8000830:	f003 fb90 	bl	8003f54 <HAL_UART_Init>
 8000834:	4603      	mov	r3, r0
 8000836:	2b00      	cmp	r3, #0
 8000838:	d001      	beq.n	800083e <MX_USART2_UART_Init+0x52>
  {
    Error_Handler();
 800083a:	f000 fd80 	bl	800133e <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 800083e:	bf00      	nop
 8000840:	bd80      	pop	{r7, pc}
 8000842:	bf00      	nop
 8000844:	20000150 	.word	0x20000150
 8000848:	40004400 	.word	0x40004400

0800084c <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 800084c:	b580      	push	{r7, lr}
 800084e:	b08a      	sub	sp, #40	@ 0x28
 8000850:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000852:	f107 0314 	add.w	r3, r7, #20
 8000856:	2200      	movs	r2, #0
 8000858:	601a      	str	r2, [r3, #0]
 800085a:	605a      	str	r2, [r3, #4]
 800085c:	609a      	str	r2, [r3, #8]
 800085e:	60da      	str	r2, [r3, #12]
 8000860:	611a      	str	r2, [r3, #16]
  /* USER CODE BEGIN MX_GPIO_Init_1 */

  /* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000862:	4b4c      	ldr	r3, [pc, #304]	@ (8000994 <MX_GPIO_Init+0x148>)
 8000864:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000866:	4a4b      	ldr	r2, [pc, #300]	@ (8000994 <MX_GPIO_Init+0x148>)
 8000868:	f043 0304 	orr.w	r3, r3, #4
 800086c:	64d3      	str	r3, [r2, #76]	@ 0x4c
 800086e:	4b49      	ldr	r3, [pc, #292]	@ (8000994 <MX_GPIO_Init+0x148>)
 8000870:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000872:	f003 0304 	and.w	r3, r3, #4
 8000876:	613b      	str	r3, [r7, #16]
 8000878:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800087a:	4b46      	ldr	r3, [pc, #280]	@ (8000994 <MX_GPIO_Init+0x148>)
 800087c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800087e:	4a45      	ldr	r2, [pc, #276]	@ (8000994 <MX_GPIO_Init+0x148>)
 8000880:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000884:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8000886:	4b43      	ldr	r3, [pc, #268]	@ (8000994 <MX_GPIO_Init+0x148>)
 8000888:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800088a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800088e:	60fb      	str	r3, [r7, #12]
 8000890:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000892:	4b40      	ldr	r3, [pc, #256]	@ (8000994 <MX_GPIO_Init+0x148>)
 8000894:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000896:	4a3f      	ldr	r2, [pc, #252]	@ (8000994 <MX_GPIO_Init+0x148>)
 8000898:	f043 0301 	orr.w	r3, r3, #1
 800089c:	64d3      	str	r3, [r2, #76]	@ 0x4c
 800089e:	4b3d      	ldr	r3, [pc, #244]	@ (8000994 <MX_GPIO_Init+0x148>)
 80008a0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80008a2:	f003 0301 	and.w	r3, r3, #1
 80008a6:	60bb      	str	r3, [r7, #8]
 80008a8:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80008aa:	4b3a      	ldr	r3, [pc, #232]	@ (8000994 <MX_GPIO_Init+0x148>)
 80008ac:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80008ae:	4a39      	ldr	r2, [pc, #228]	@ (8000994 <MX_GPIO_Init+0x148>)
 80008b0:	f043 0302 	orr.w	r3, r3, #2
 80008b4:	64d3      	str	r3, [r2, #76]	@ 0x4c
 80008b6:	4b37      	ldr	r3, [pc, #220]	@ (8000994 <MX_GPIO_Init+0x148>)
 80008b8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80008ba:	f003 0302 	and.w	r3, r3, #2
 80008be:	607b      	str	r3, [r7, #4]
 80008c0:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 80008c2:	4b34      	ldr	r3, [pc, #208]	@ (8000994 <MX_GPIO_Init+0x148>)
 80008c4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80008c6:	4a33      	ldr	r2, [pc, #204]	@ (8000994 <MX_GPIO_Init+0x148>)
 80008c8:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80008cc:	64d3      	str	r3, [r2, #76]	@ 0x4c
 80008ce:	4b31      	ldr	r3, [pc, #196]	@ (8000994 <MX_GPIO_Init+0x148>)
 80008d0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80008d2:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80008d6:	603b      	str	r3, [r7, #0]
 80008d8:	683b      	ldr	r3, [r7, #0]
  HAL_PWREx_EnableVddIO2();
 80008da:	f002 f823 	bl	8002924 <HAL_PWREx_EnableVddIO2>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, LD3_Pin|LD2_Pin, GPIO_PIN_RESET);
 80008de:	2200      	movs	r2, #0
 80008e0:	f44f 4181 	mov.w	r1, #16512	@ 0x4080
 80008e4:	482c      	ldr	r0, [pc, #176]	@ (8000998 <MX_GPIO_Init+0x14c>)
 80008e6:	f001 ffa1 	bl	800282c <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOG, USB_PowerSwitchOn_Pin|SMPS_V1_Pin|SMPS_EN_Pin|SMPS_SW_Pin, GPIO_PIN_RESET);
 80008ea:	2200      	movs	r2, #0
 80008ec:	f44f 5131 	mov.w	r1, #11328	@ 0x2c40
 80008f0:	482a      	ldr	r0, [pc, #168]	@ (800099c <MX_GPIO_Init+0x150>)
 80008f2:	f001 ff9b 	bl	800282c <HAL_GPIO_WritePin>

  /*Configure GPIO pin : B1_Pin */
  GPIO_InitStruct.Pin = B1_Pin;
 80008f6:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 80008fa:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 80008fc:	f44f 1388 	mov.w	r3, #1114112	@ 0x110000
 8000900:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000902:	2300      	movs	r3, #0
 8000904:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 8000906:	f107 0314 	add.w	r3, r7, #20
 800090a:	4619      	mov	r1, r3
 800090c:	4824      	ldr	r0, [pc, #144]	@ (80009a0 <MX_GPIO_Init+0x154>)
 800090e:	f001 fde3 	bl	80024d8 <HAL_GPIO_Init>

  /*Configure GPIO pins : LD3_Pin LD2_Pin */
  GPIO_InitStruct.Pin = LD3_Pin|LD2_Pin;
 8000912:	f44f 4381 	mov.w	r3, #16512	@ 0x4080
 8000916:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000918:	2301      	movs	r3, #1
 800091a:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800091c:	2300      	movs	r3, #0
 800091e:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000920:	2300      	movs	r3, #0
 8000922:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000924:	f107 0314 	add.w	r3, r7, #20
 8000928:	4619      	mov	r1, r3
 800092a:	481b      	ldr	r0, [pc, #108]	@ (8000998 <MX_GPIO_Init+0x14c>)
 800092c:	f001 fdd4 	bl	80024d8 <HAL_GPIO_Init>

  /*Configure GPIO pins : USB_OverCurrent_Pin SMPS_PG_Pin */
  GPIO_InitStruct.Pin = USB_OverCurrent_Pin|SMPS_PG_Pin;
 8000930:	f44f 5381 	mov.w	r3, #4128	@ 0x1020
 8000934:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000936:	2300      	movs	r3, #0
 8000938:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800093a:	2300      	movs	r3, #0
 800093c:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800093e:	f107 0314 	add.w	r3, r7, #20
 8000942:	4619      	mov	r1, r3
 8000944:	4815      	ldr	r0, [pc, #84]	@ (800099c <MX_GPIO_Init+0x150>)
 8000946:	f001 fdc7 	bl	80024d8 <HAL_GPIO_Init>

  /*Configure GPIO pins : USB_PowerSwitchOn_Pin SMPS_V1_Pin SMPS_EN_Pin SMPS_SW_Pin */
  GPIO_InitStruct.Pin = USB_PowerSwitchOn_Pin|SMPS_V1_Pin|SMPS_EN_Pin|SMPS_SW_Pin;
 800094a:	f44f 5331 	mov.w	r3, #11328	@ 0x2c40
 800094e:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000950:	2301      	movs	r3, #1
 8000952:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000954:	2300      	movs	r3, #0
 8000956:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000958:	2300      	movs	r3, #0
 800095a:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800095c:	f107 0314 	add.w	r3, r7, #20
 8000960:	4619      	mov	r1, r3
 8000962:	480e      	ldr	r0, [pc, #56]	@ (800099c <MX_GPIO_Init+0x150>)
 8000964:	f001 fdb8 	bl	80024d8 <HAL_GPIO_Init>

  /*Configure GPIO pins : USB_SOF_Pin USB_ID_Pin USB_DM_Pin USB_DP_Pin */
  GPIO_InitStruct.Pin = USB_SOF_Pin|USB_ID_Pin|USB_DM_Pin|USB_DP_Pin;
 8000968:	f44f 53e8 	mov.w	r3, #7424	@ 0x1d00
 800096c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800096e:	2302      	movs	r3, #2
 8000970:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000972:	2300      	movs	r3, #0
 8000974:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000976:	2303      	movs	r3, #3
 8000978:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Alternate = GPIO_AF10_OTG_FS;
 800097a:	230a      	movs	r3, #10
 800097c:	627b      	str	r3, [r7, #36]	@ 0x24
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800097e:	f107 0314 	add.w	r3, r7, #20
 8000982:	4619      	mov	r1, r3
 8000984:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8000988:	f001 fda6 	bl	80024d8 <HAL_GPIO_Init>

  /* USER CODE BEGIN MX_GPIO_Init_2 */

  /* USER CODE END MX_GPIO_Init_2 */
}
 800098c:	bf00      	nop
 800098e:	3728      	adds	r7, #40	@ 0x28
 8000990:	46bd      	mov	sp, r7
 8000992:	bd80      	pop	{r7, pc}
 8000994:	40021000 	.word	0x40021000
 8000998:	48000400 	.word	0x48000400
 800099c:	48001800 	.word	0x48001800
 80009a0:	48000800 	.word	0x48000800

080009a4 <printmsg>:

/* USER CODE BEGIN 4 */

void printmsg(char *format, ...){/* The ... (ellipsis) means that more arguments can follow */
 80009a4:	b40f      	push	{r0, r1, r2, r3}
 80009a6:	b580      	push	{r7, lr}
 80009a8:	b096      	sub	sp, #88	@ 0x58
 80009aa:	af00      	add	r7, sp, #0
#ifdef BL_DEBUG_MSG_EN

	char str[80];
	/*Extract the argument list using C VA APIs*/
	va_list args;
	va_start(args, format);
 80009ac:	f107 0364 	add.w	r3, r7, #100	@ 0x64
 80009b0:	607b      	str	r3, [r7, #4]
	vsprintf(str, format, args);
 80009b2:	f107 0308 	add.w	r3, r7, #8
 80009b6:	687a      	ldr	r2, [r7, #4]
 80009b8:	6e39      	ldr	r1, [r7, #96]	@ 0x60
 80009ba:	4618      	mov	r0, r3
 80009bc:	f004 f954 	bl	8004c68 <vsiprintf>
	HAL_UART_Transmit(D_UART, (uint8_t*)str, strlen(str), HAL_MAX_DELAY);
 80009c0:	f107 0308 	add.w	r3, r7, #8
 80009c4:	4618      	mov	r0, r3
 80009c6:	f7ff fc13 	bl	80001f0 <strlen>
 80009ca:	4603      	mov	r3, r0
 80009cc:	b29a      	uxth	r2, r3
 80009ce:	f107 0108 	add.w	r1, r7, #8
 80009d2:	f04f 33ff 	mov.w	r3, #4294967295
 80009d6:	4805      	ldr	r0, [pc, #20]	@ (80009ec <printmsg+0x48>)
 80009d8:	f003 fb0a 	bl	8003ff0 <HAL_UART_Transmit>
	va_end(args);
#endif
}
 80009dc:	bf00      	nop
 80009de:	3758      	adds	r7, #88	@ 0x58
 80009e0:	46bd      	mov	sp, r7
 80009e2:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80009e6:	b004      	add	sp, #16
 80009e8:	4770      	bx	lr
 80009ea:	bf00      	nop
 80009ec:	200000c8 	.word	0x200000c8

080009f0 <bootloader_jump_to_active_bank>:

void bootloader_jump_to_active_bank()
{
 80009f0:	b580      	push	{r7, lr}
 80009f2:	b086      	sub	sp, #24
 80009f4:	af00      	add	r7, sp, #0
	 * 2. Redirects interrupts by re-mapping VTOR.
	 * 3. Fetches the application’s Reset_Handler address.
	 * 4. Calls it, effectively jumping to the user application.
	 */

	printmsg("BL_DEBUG_MSG:bootloader_jump_to_user_app\n");
 80009f6:	4818      	ldr	r0, [pc, #96]	@ (8000a58 <bootloader_jump_to_active_bank+0x68>)
 80009f8:	f7ff ffd4 	bl	80009a4 <printmsg>
	 * according to ARM-Cortex Architecture */

	/*1. Configure the Main Stack Pointer (MSP) by reading the value form the flash base address of desired sector*/
	/* Check which firmware bank is active and run active firmware bank*/

	if(active_bank_number == FLASH_ACTIVE_BANK1)
 80009fc:	4b17      	ldr	r3, [pc, #92]	@ (8000a5c <bootloader_jump_to_active_bank+0x6c>)
 80009fe:	781b      	ldrb	r3, [r3, #0]
 8000a00:	2b01      	cmp	r3, #1
 8000a02:	d10f      	bne.n	8000a24 <bootloader_jump_to_active_bank+0x34>
	{

		printmsg("BL_DEBUG_MSG: Firmware Bank 1 Active. \n");
 8000a04:	4816      	ldr	r0, [pc, #88]	@ (8000a60 <bootloader_jump_to_active_bank+0x70>)
 8000a06:	f7ff ffcd 	bl	80009a4 <printmsg>

		uint32_t msp_value = *(volatile uint32_t*)FLASH_FIRMWARE1;
 8000a0a:	4b16      	ldr	r3, [pc, #88]	@ (8000a64 <bootloader_jump_to_active_bank+0x74>)
 8000a0c:	681b      	ldr	r3, [r3, #0]
 8000a0e:	613b      	str	r3, [r7, #16]
 8000a10:	693b      	ldr	r3, [r7, #16]
 8000a12:	607b      	str	r3, [r7, #4]
  \details Assigns the given value to the Main Stack Pointer (MSP).
  \param [in]    topOfMainStack  Main Stack Pointer value to set
 */
__STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
{
  __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 8000a14:	687b      	ldr	r3, [r7, #4]
 8000a16:	f383 8808 	msr	MSP, r3
}
 8000a1a:	bf00      	nop

		/* Set MSP function from CMSIS*/
		__set_MSP(msp_value);

		/* Re-map vector table to user application base address */
		SCB->VTOR = FLASH_FIRMWARE1; /* System Control Block - Vector Table Offset Register */
 8000a1c:	4b12      	ldr	r3, [pc, #72]	@ (8000a68 <bootloader_jump_to_active_bank+0x78>)
 8000a1e:	4a11      	ldr	r2, [pc, #68]	@ (8000a64 <bootloader_jump_to_active_bank+0x74>)
 8000a20:	609a      	str	r2, [r3, #8]
 8000a22:	e00e      	b.n	8000a42 <bootloader_jump_to_active_bank+0x52>

	}else{

		printmsg("BL_DEBUG_MSG: Firmware Bank 2 Active. \n");
 8000a24:	4811      	ldr	r0, [pc, #68]	@ (8000a6c <bootloader_jump_to_active_bank+0x7c>)
 8000a26:	f7ff ffbd 	bl	80009a4 <printmsg>

		uint32_t msp_value = *(volatile uint32_t*)FLASH_FIRMWARE2;
 8000a2a:	4b11      	ldr	r3, [pc, #68]	@ (8000a70 <bootloader_jump_to_active_bank+0x80>)
 8000a2c:	681b      	ldr	r3, [r3, #0]
 8000a2e:	617b      	str	r3, [r7, #20]
 8000a30:	697b      	ldr	r3, [r7, #20]
 8000a32:	603b      	str	r3, [r7, #0]
  __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 8000a34:	683b      	ldr	r3, [r7, #0]
 8000a36:	f383 8808 	msr	MSP, r3
}
 8000a3a:	bf00      	nop

		__set_MSP(msp_value);

		SCB->VTOR = FLASH_FIRMWARE2;
 8000a3c:	4b0a      	ldr	r3, [pc, #40]	@ (8000a68 <bootloader_jump_to_active_bank+0x78>)
 8000a3e:	4a0c      	ldr	r2, [pc, #48]	@ (8000a70 <bootloader_jump_to_active_bank+0x80>)
 8000a40:	609a      	str	r2, [r3, #8]
	}

	/* 2. Now fetch the reset handler address of the user application
	 * from the location FIRMWARE_BASE_ADDRESS + 4 (32bits)*/
	void (*app_reset_handler)(void); /*A function pointer to hold the address of reset handler*/
	uint32_t resethandler_address = *(volatile uint32_t*)(FLASH_FIRMWARE1 + 4);
 8000a42:	4b0c      	ldr	r3, [pc, #48]	@ (8000a74 <bootloader_jump_to_active_bank+0x84>)
 8000a44:	681b      	ldr	r3, [r3, #0]
 8000a46:	60fb      	str	r3, [r7, #12]
	app_reset_handler = (void*) resethandler_address;
 8000a48:	68fb      	ldr	r3, [r7, #12]
 8000a4a:	60bb      	str	r3, [r7, #8]

	/*3. Jumping to the reset handler of user application - Now this address will be loaded into the Program Counter*/
	app_reset_handler();
 8000a4c:	68bb      	ldr	r3, [r7, #8]
 8000a4e:	4798      	blx	r3

}
 8000a50:	bf00      	nop
 8000a52:	3718      	adds	r7, #24
 8000a54:	46bd      	mov	sp, r7
 8000a56:	bd80      	pop	{r7, pc}
 8000a58:	08005700 	.word	0x08005700
 8000a5c:	200002a0 	.word	0x200002a0
 8000a60:	0800572c 	.word	0x0800572c
 8000a64:	08008000 	.word	0x08008000
 8000a68:	e000ed00 	.word	0xe000ed00
 8000a6c:	08005754 	.word	0x08005754
 8000a70:	08080000 	.word	0x08080000
 8000a74:	08008004 	.word	0x08008004

08000a78 <bootloader_uart_read_data>:

void bootloader_uart_read_data()
{
 8000a78:	b580      	push	{r7, lr}
 8000a7a:	b082      	sub	sp, #8
 8000a7c:	af00      	add	r7, sp, #0
	uint8_t rcv_len = 0;
 8000a7e:	2300      	movs	r3, #0
 8000a80:	71fb      	strb	r3, [r7, #7]

	while(1)
	{
		memset(bl_rx_buffer, 0, BL_RX_LEN);
 8000a82:	22c8      	movs	r2, #200	@ 0xc8
 8000a84:	2100      	movs	r1, #0
 8000a86:	4832      	ldr	r0, [pc, #200]	@ (8000b50 <bootloader_uart_read_data+0xd8>)
 8000a88:	f004 f8f8 	bl	8004c7c <memset>

		/*First read only one byte, which is the length. Then read the other bytes from UART */
		HAL_UART_Receive(C_UART, (uint8_t*)&bl_rx_buffer, 1, HAL_MAX_DELAY);
 8000a8c:	f04f 33ff 	mov.w	r3, #4294967295
 8000a90:	2201      	movs	r2, #1
 8000a92:	492f      	ldr	r1, [pc, #188]	@ (8000b50 <bootloader_uart_read_data+0xd8>)
 8000a94:	482f      	ldr	r0, [pc, #188]	@ (8000b54 <bootloader_uart_read_data+0xdc>)
 8000a96:	f003 fb34 	bl	8004102 <HAL_UART_Receive>
		rcv_len = bl_rx_buffer[0];
 8000a9a:	4b2d      	ldr	r3, [pc, #180]	@ (8000b50 <bootloader_uart_read_data+0xd8>)
 8000a9c:	781b      	ldrb	r3, [r3, #0]
 8000a9e:	71fb      	strb	r3, [r7, #7]
		/*Receive the command*/
		HAL_UART_Receive(C_UART, (uint8_t*)&bl_rx_buffer[1], rcv_len, HAL_MAX_DELAY);
 8000aa0:	79fb      	ldrb	r3, [r7, #7]
 8000aa2:	b29a      	uxth	r2, r3
 8000aa4:	f04f 33ff 	mov.w	r3, #4294967295
 8000aa8:	492b      	ldr	r1, [pc, #172]	@ (8000b58 <bootloader_uart_read_data+0xe0>)
 8000aaa:	482a      	ldr	r0, [pc, #168]	@ (8000b54 <bootloader_uart_read_data+0xdc>)
 8000aac:	f003 fb29 	bl	8004102 <HAL_UART_Receive>

		switch(bl_rx_buffer[1]) /* To check for command codes */
 8000ab0:	4b27      	ldr	r3, [pc, #156]	@ (8000b50 <bootloader_uart_read_data+0xd8>)
 8000ab2:	785b      	ldrb	r3, [r3, #1]
 8000ab4:	3b51      	subs	r3, #81	@ 0x51
 8000ab6:	2b0f      	cmp	r3, #15
 8000ab8:	d844      	bhi.n	8000b44 <bootloader_uart_read_data+0xcc>
 8000aba:	a201      	add	r2, pc, #4	@ (adr r2, 8000ac0 <bootloader_uart_read_data+0x48>)
 8000abc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000ac0:	08000b01 	.word	0x08000b01
 8000ac4:	08000b09 	.word	0x08000b09
 8000ac8:	08000b11 	.word	0x08000b11
 8000acc:	08000b19 	.word	0x08000b19
 8000ad0:	08000b45 	.word	0x08000b45
 8000ad4:	08000b21 	.word	0x08000b21
 8000ad8:	08000b29 	.word	0x08000b29
 8000adc:	08000b31 	.word	0x08000b31
 8000ae0:	08000b45 	.word	0x08000b45
 8000ae4:	08000b45 	.word	0x08000b45
 8000ae8:	08000b45 	.word	0x08000b45
 8000aec:	08000b39 	.word	0x08000b39
 8000af0:	08000b45 	.word	0x08000b45
 8000af4:	08000b45 	.word	0x08000b45
 8000af8:	08000b45 	.word	0x08000b45
 8000afc:	08000b41 	.word	0x08000b41
		{
		case BL_GET_VER:
			bootloader_handle_getver_cmd(bl_rx_buffer);
 8000b00:	4813      	ldr	r0, [pc, #76]	@ (8000b50 <bootloader_uart_read_data+0xd8>)
 8000b02:	f000 f82d 	bl	8000b60 <bootloader_handle_getver_cmd>
			break;
 8000b06:	e021      	b.n	8000b4c <bootloader_uart_read_data+0xd4>
		case BL_GET_HELP:
			bootloader_handle_gethelp_cmd(bl_rx_buffer);
 8000b08:	4811      	ldr	r0, [pc, #68]	@ (8000b50 <bootloader_uart_read_data+0xd8>)
 8000b0a:	f000 f86d 	bl	8000be8 <bootloader_handle_gethelp_cmd>
			break;
 8000b0e:	e01d      	b.n	8000b4c <bootloader_uart_read_data+0xd4>
		case BL_GET_CID:
			bootloader_handle_getcid_cmd(bl_rx_buffer);
 8000b10:	480f      	ldr	r0, [pc, #60]	@ (8000b50 <bootloader_uart_read_data+0xd8>)
 8000b12:	f000 f8a1 	bl	8000c58 <bootloader_handle_getcid_cmd>
			break;
 8000b16:	e019      	b.n	8000b4c <bootloader_uart_read_data+0xd4>
		case BL_GET_RDP_STATUS:
			bootloader_handle_getrdp_cmd(bl_rx_buffer);
 8000b18:	480d      	ldr	r0, [pc, #52]	@ (8000b50 <bootloader_uart_read_data+0xd8>)
 8000b1a:	f000 f8e3 	bl	8000ce4 <bootloader_handle_getrdp_cmd>
			break;
 8000b1e:	e015      	b.n	8000b4c <bootloader_uart_read_data+0xd4>
		case BL_FLASH_ERASE:
			bootloader_handle_flash_erase_cmd(bl_rx_buffer);
 8000b20:	480b      	ldr	r0, [pc, #44]	@ (8000b50 <bootloader_uart_read_data+0xd8>)
 8000b22:	f000 f925 	bl	8000d70 <bootloader_handle_flash_erase_cmd>
			break;
 8000b26:	e011      	b.n	8000b4c <bootloader_uart_read_data+0xd4>
		case BL_MEM_WRITE:
			bootloader_handle_mem_write_cmd(bl_rx_buffer);
 8000b28:	4809      	ldr	r0, [pc, #36]	@ (8000b50 <bootloader_uart_read_data+0xd8>)
 8000b2a:	f000 f98b 	bl	8000e44 <bootloader_handle_mem_write_cmd>
			break;
 8000b2e:	e00d      	b.n	8000b4c <bootloader_uart_read_data+0xd4>
		case BL_EN_RW_PROTECT:
			bootloader_handle_en_rw_protect(bl_rx_buffer);
 8000b30:	4807      	ldr	r0, [pc, #28]	@ (8000b50 <bootloader_uart_read_data+0xd8>)
 8000b32:	f000 f9fd 	bl	8000f30 <bootloader_handle_en_rw_protect>
			break;
 8000b36:	e009      	b.n	8000b4c <bootloader_uart_read_data+0xd4>
		case BL_DIS_R_W_PROTECT:
			bootloader_handle_dis_rw_protect(bl_rx_buffer);
 8000b38:	4805      	ldr	r0, [pc, #20]	@ (8000b50 <bootloader_uart_read_data+0xd8>)
 8000b3a:	f000 fa03 	bl	8000f44 <bootloader_handle_dis_rw_protect>
			break;
 8000b3e:	e005      	b.n	8000b4c <bootloader_uart_read_data+0xd4>
		case BL_SHOW_ACTIVE_BANK:
			bootloader_show_active_bank();
 8000b40:	f000 fbe8 	bl	8001314 <bootloader_show_active_bank>
		default:
			printmsg("BL_DEBUG_MSG:Invalid command code received from host \n");
 8000b44:	4805      	ldr	r0, [pc, #20]	@ (8000b5c <bootloader_uart_read_data+0xe4>)
 8000b46:	f7ff ff2d 	bl	80009a4 <printmsg>
			break;
 8000b4a:	bf00      	nop
		memset(bl_rx_buffer, 0, BL_RX_LEN);
 8000b4c:	e799      	b.n	8000a82 <bootloader_uart_read_data+0xa>
 8000b4e:	bf00      	nop
 8000b50:	200001d8 	.word	0x200001d8
 8000b54:	20000150 	.word	0x20000150
 8000b58:	200001d9 	.word	0x200001d9
 8000b5c:	0800577c 	.word	0x0800577c

08000b60 <bootloader_handle_getver_cmd>:
}

/******************* Boot loader handler functions *******************/

void bootloader_handle_getver_cmd(uint8_t *bl_rx_buffer)
{
 8000b60:	b580      	push	{r7, lr}
 8000b62:	b086      	sub	sp, #24
 8000b64:	af00      	add	r7, sp, #0
 8000b66:	6078      	str	r0, [r7, #4]
    /* Handle "Get Version" command */
	uint8_t bl_version;

	uint32_t command_packet_len = bl_rx_buffer[0] + 1; /*Length to follow + First byte*/
 8000b68:	687b      	ldr	r3, [r7, #4]
 8000b6a:	781b      	ldrb	r3, [r3, #0]
 8000b6c:	3301      	adds	r3, #1
 8000b6e:	617b      	str	r3, [r7, #20]

	/*Extract the 4 bytes of CRC32 sent by the host*/
	uint32_t host_crc = *((uint32_t*)(bl_rx_buffer + command_packet_len - 4)); /* CRC is always 32 bits (4 bytes) here */
 8000b70:	697b      	ldr	r3, [r7, #20]
 8000b72:	3b04      	subs	r3, #4
 8000b74:	687a      	ldr	r2, [r7, #4]
 8000b76:	4413      	add	r3, r2
 8000b78:	681b      	ldr	r3, [r3, #0]
 8000b7a:	613b      	str	r3, [r7, #16]

	/*Verify checksum*/
	printmsg("BL_DEBUG_MSG: bootloader_handle_getver_cmd\n\r");
 8000b7c:	4816      	ldr	r0, [pc, #88]	@ (8000bd8 <bootloader_handle_getver_cmd+0x78>)
 8000b7e:	f7ff ff11 	bl	80009a4 <printmsg>
	if(! bootloader_verify_crc(&bl_rx_buffer[0], command_packet_len - 4, host_crc))
 8000b82:	697b      	ldr	r3, [r7, #20]
 8000b84:	3b04      	subs	r3, #4
 8000b86:	693a      	ldr	r2, [r7, #16]
 8000b88:	4619      	mov	r1, r3
 8000b8a:	6878      	ldr	r0, [r7, #4]
 8000b8c:	f000 fa0e 	bl	8000fac <bootloader_verify_crc>
 8000b90:	4603      	mov	r3, r0
 8000b92:	2b00      	cmp	r3, #0
 8000b94:	d117      	bne.n	8000bc6 <bootloader_handle_getver_cmd+0x66>
	{
		/*Checksum is correct*/
		printmsg("BL_DEBUG_MSG: Checksum success...!\n");
 8000b96:	4811      	ldr	r0, [pc, #68]	@ (8000bdc <bootloader_handle_getver_cmd+0x7c>)
 8000b98:	f7ff ff04 	bl	80009a4 <printmsg>
		bootloader_send_ack(1);
 8000b9c:	2001      	movs	r0, #1
 8000b9e:	f000 f9ed 	bl	8000f7c <bootloader_send_ack>
		bl_version = get_bootloader_version();
 8000ba2:	f000 fa4b 	bl	800103c <get_bootloader_version>
 8000ba6:	4603      	mov	r3, r0
 8000ba8:	73fb      	strb	r3, [r7, #15]
		printmsg("BL_DEBUG_MSG: BL_VER: %d &#x\n", bl_version, bl_version);
 8000baa:	7bfb      	ldrb	r3, [r7, #15]
 8000bac:	4619      	mov	r1, r3
 8000bae:	7bfb      	ldrb	r3, [r7, #15]
 8000bb0:	461a      	mov	r2, r3
 8000bb2:	480b      	ldr	r0, [pc, #44]	@ (8000be0 <bootloader_handle_getver_cmd+0x80>)
 8000bb4:	f7ff fef6 	bl	80009a4 <printmsg>
		bootloader_uart_write_data(&bl_version, 1); /* Sends data back to the HOST */
 8000bb8:	f107 030f 	add.w	r3, r7, #15
 8000bbc:	2101      	movs	r1, #1
 8000bbe:	4618      	mov	r0, r3
 8000bc0:	f000 fa28 	bl	8001014 <bootloader_uart_write_data>
		printmsg("BL_DEBUG_MSG: Checksum failed...!\n");
		bootloader_send_nack();

	}

}
 8000bc4:	e004      	b.n	8000bd0 <bootloader_handle_getver_cmd+0x70>
		printmsg("BL_DEBUG_MSG: Checksum failed...!\n");
 8000bc6:	4807      	ldr	r0, [pc, #28]	@ (8000be4 <bootloader_handle_getver_cmd+0x84>)
 8000bc8:	f7ff feec 	bl	80009a4 <printmsg>
		bootloader_send_nack();
 8000bcc:	f000 f9c4 	bl	8000f58 <bootloader_send_nack>
}
 8000bd0:	bf00      	nop
 8000bd2:	3718      	adds	r7, #24
 8000bd4:	46bd      	mov	sp, r7
 8000bd6:	bd80      	pop	{r7, pc}
 8000bd8:	080057b4 	.word	0x080057b4
 8000bdc:	080057e4 	.word	0x080057e4
 8000be0:	08005808 	.word	0x08005808
 8000be4:	08005828 	.word	0x08005828

08000be8 <bootloader_handle_gethelp_cmd>:

void bootloader_handle_gethelp_cmd(uint8_t *bl_rx_buffer)
{
 8000be8:	b580      	push	{r7, lr}
 8000bea:	b084      	sub	sp, #16
 8000bec:	af00      	add	r7, sp, #0
 8000bee:	6078      	str	r0, [r7, #4]
    /* Handle "Get Help" command */
	printmsg("BL_DEBUG_MSG:bootloader_handle_gethelp_cmd\n");
 8000bf0:	4815      	ldr	r0, [pc, #84]	@ (8000c48 <bootloader_handle_gethelp_cmd+0x60>)
 8000bf2:	f7ff fed7 	bl	80009a4 <printmsg>

	uint32_t command_packet_len = bl_rx_buffer[0] + 1;
 8000bf6:	687b      	ldr	r3, [r7, #4]
 8000bf8:	781b      	ldrb	r3, [r3, #0]
 8000bfa:	3301      	adds	r3, #1
 8000bfc:	60fb      	str	r3, [r7, #12]

	uint32_t host_crc = *((uint32_t*)(bl_rx_buffer + command_packet_len - 4));
 8000bfe:	68fb      	ldr	r3, [r7, #12]
 8000c00:	3b04      	subs	r3, #4
 8000c02:	687a      	ldr	r2, [r7, #4]
 8000c04:	4413      	add	r3, r2
 8000c06:	681b      	ldr	r3, [r3, #0]
 8000c08:	60bb      	str	r3, [r7, #8]

	if(! bootloader_verify_crc(&bl_rx_buffer[0], command_packet_len - 4, host_crc))
 8000c0a:	68fb      	ldr	r3, [r7, #12]
 8000c0c:	3b04      	subs	r3, #4
 8000c0e:	68ba      	ldr	r2, [r7, #8]
 8000c10:	4619      	mov	r1, r3
 8000c12:	6878      	ldr	r0, [r7, #4]
 8000c14:	f000 f9ca 	bl	8000fac <bootloader_verify_crc>
 8000c18:	4603      	mov	r3, r0
 8000c1a:	2b00      	cmp	r3, #0
 8000c1c:	d10a      	bne.n	8000c34 <bootloader_handle_gethelp_cmd+0x4c>
	{
		printmsg("BL_DEBUG_MSG:checksum success !!\n");
 8000c1e:	480b      	ldr	r0, [pc, #44]	@ (8000c4c <bootloader_handle_gethelp_cmd+0x64>)
 8000c20:	f7ff fec0 	bl	80009a4 <printmsg>
		bootloader_send_ack(sizeof(supported_commands));
 8000c24:	2009      	movs	r0, #9
 8000c26:	f000 f9a9 	bl	8000f7c <bootloader_send_ack>
		bootloader_uart_write_data(supported_commands, sizeof(supported_commands));
 8000c2a:	2109      	movs	r1, #9
 8000c2c:	4808      	ldr	r0, [pc, #32]	@ (8000c50 <bootloader_handle_gethelp_cmd+0x68>)
 8000c2e:	f000 f9f1 	bl	8001014 <bootloader_uart_write_data>

	}else{
		printmsg("BL_DEBUG_MSG:checksum fail !!\n");
		bootloader_send_nack();
	}
}
 8000c32:	e004      	b.n	8000c3e <bootloader_handle_gethelp_cmd+0x56>
		printmsg("BL_DEBUG_MSG:checksum fail !!\n");
 8000c34:	4807      	ldr	r0, [pc, #28]	@ (8000c54 <bootloader_handle_gethelp_cmd+0x6c>)
 8000c36:	f7ff feb5 	bl	80009a4 <printmsg>
		bootloader_send_nack();
 8000c3a:	f000 f98d 	bl	8000f58 <bootloader_send_nack>
}
 8000c3e:	bf00      	nop
 8000c40:	3710      	adds	r7, #16
 8000c42:	46bd      	mov	sp, r7
 8000c44:	bd80      	pop	{r7, pc}
 8000c46:	bf00      	nop
 8000c48:	0800584c 	.word	0x0800584c
 8000c4c:	08005878 	.word	0x08005878
 8000c50:	20000000 	.word	0x20000000
 8000c54:	0800589c 	.word	0x0800589c

08000c58 <bootloader_handle_getcid_cmd>:

void bootloader_handle_getcid_cmd(uint8_t *bl_rx_buffer)
{
 8000c58:	b580      	push	{r7, lr}
 8000c5a:	b086      	sub	sp, #24
 8000c5c:	af00      	add	r7, sp, #0
 8000c5e:	6078      	str	r0, [r7, #4]
    /* Handle "Get Chip ID" command */
	printmsg("BL_DEBUG_MSG:bootloader_handle_getcid_cmd\n");
 8000c60:	481c      	ldr	r0, [pc, #112]	@ (8000cd4 <bootloader_handle_getcid_cmd+0x7c>)
 8000c62:	f7ff fe9f 	bl	80009a4 <printmsg>

	uint16_t bl_cid_num = 0;
 8000c66:	2300      	movs	r3, #0
 8000c68:	81fb      	strh	r3, [r7, #14]

	uint32_t command_packet_len = bl_rx_buffer[0] + 1;
 8000c6a:	687b      	ldr	r3, [r7, #4]
 8000c6c:	781b      	ldrb	r3, [r3, #0]
 8000c6e:	3301      	adds	r3, #1
 8000c70:	617b      	str	r3, [r7, #20]

	uint32_t host_crc = *((uint32_t*)(bl_rx_buffer + command_packet_len - 4));
 8000c72:	697b      	ldr	r3, [r7, #20]
 8000c74:	3b04      	subs	r3, #4
 8000c76:	687a      	ldr	r2, [r7, #4]
 8000c78:	4413      	add	r3, r2
 8000c7a:	681b      	ldr	r3, [r3, #0]
 8000c7c:	613b      	str	r3, [r7, #16]

	if(! bootloader_verify_crc(&bl_rx_buffer[0], command_packet_len - 4, host_crc))
 8000c7e:	697b      	ldr	r3, [r7, #20]
 8000c80:	3b04      	subs	r3, #4
 8000c82:	693a      	ldr	r2, [r7, #16]
 8000c84:	4619      	mov	r1, r3
 8000c86:	6878      	ldr	r0, [r7, #4]
 8000c88:	f000 f990 	bl	8000fac <bootloader_verify_crc>
 8000c8c:	4603      	mov	r3, r0
 8000c8e:	2b00      	cmp	r3, #0
 8000c90:	d117      	bne.n	8000cc2 <bootloader_handle_getcid_cmd+0x6a>
	{
		printmsg("BL_DEBUG_MSG:checksum success !!\n");
 8000c92:	4811      	ldr	r0, [pc, #68]	@ (8000cd8 <bootloader_handle_getcid_cmd+0x80>)
 8000c94:	f7ff fe86 	bl	80009a4 <printmsg>
		bootloader_send_ack(2);
 8000c98:	2002      	movs	r0, #2
 8000c9a:	f000 f96f 	bl	8000f7c <bootloader_send_ack>
		bl_cid_num = get_mcu_chip_id();
 8000c9e:	f000 f9d5 	bl	800104c <get_mcu_chip_id>
 8000ca2:	4603      	mov	r3, r0
 8000ca4:	81fb      	strh	r3, [r7, #14]
		printmsg("BL_DEBUG_MSG:MCU id : %d %#x !!\n",bl_cid_num, bl_cid_num);
 8000ca6:	89fb      	ldrh	r3, [r7, #14]
 8000ca8:	4619      	mov	r1, r3
 8000caa:	89fb      	ldrh	r3, [r7, #14]
 8000cac:	461a      	mov	r2, r3
 8000cae:	480b      	ldr	r0, [pc, #44]	@ (8000cdc <bootloader_handle_getcid_cmd+0x84>)
 8000cb0:	f7ff fe78 	bl	80009a4 <printmsg>
		bootloader_uart_write_data((uint8_t*)&bl_cid_num, 2);
 8000cb4:	f107 030e 	add.w	r3, r7, #14
 8000cb8:	2102      	movs	r1, #2
 8000cba:	4618      	mov	r0, r3
 8000cbc:	f000 f9aa 	bl	8001014 <bootloader_uart_write_data>
	}else{
		printmsg("BL_DEBUG_MSG:checksum fail !!\n");
		bootloader_send_nack();
	}
}
 8000cc0:	e004      	b.n	8000ccc <bootloader_handle_getcid_cmd+0x74>
		printmsg("BL_DEBUG_MSG:checksum fail !!\n");
 8000cc2:	4807      	ldr	r0, [pc, #28]	@ (8000ce0 <bootloader_handle_getcid_cmd+0x88>)
 8000cc4:	f7ff fe6e 	bl	80009a4 <printmsg>
		bootloader_send_nack();
 8000cc8:	f000 f946 	bl	8000f58 <bootloader_send_nack>
}
 8000ccc:	bf00      	nop
 8000cce:	3718      	adds	r7, #24
 8000cd0:	46bd      	mov	sp, r7
 8000cd2:	bd80      	pop	{r7, pc}
 8000cd4:	080058bc 	.word	0x080058bc
 8000cd8:	08005878 	.word	0x08005878
 8000cdc:	080058e8 	.word	0x080058e8
 8000ce0:	0800589c 	.word	0x0800589c

08000ce4 <bootloader_handle_getrdp_cmd>:

void bootloader_handle_getrdp_cmd(uint8_t *bl_rx_buffer)
{
 8000ce4:	b580      	push	{r7, lr}
 8000ce6:	b086      	sub	sp, #24
 8000ce8:	af00      	add	r7, sp, #0
 8000cea:	6078      	str	r0, [r7, #4]
    /* Handle "Get Read Protection Level" command */
	printmsg("BL_DEBUG_MSG:bootloader_handle_getrdp_cmd\n");
 8000cec:	481c      	ldr	r0, [pc, #112]	@ (8000d60 <bootloader_handle_getrdp_cmd+0x7c>)
 8000cee:	f7ff fe59 	bl	80009a4 <printmsg>

	uint8_t rdp_level = 0x00;
 8000cf2:	2300      	movs	r3, #0
 8000cf4:	73fb      	strb	r3, [r7, #15]

	//Total length of the command packet
	uint32_t command_packet_len = bl_rx_buffer[0]+1 ;
 8000cf6:	687b      	ldr	r3, [r7, #4]
 8000cf8:	781b      	ldrb	r3, [r3, #0]
 8000cfa:	3301      	adds	r3, #1
 8000cfc:	617b      	str	r3, [r7, #20]

	//extract the CRC32 sent by the Host
	uint32_t host_crc = *((uint32_t * ) (bl_rx_buffer+command_packet_len - 4) ) ;
 8000cfe:	697b      	ldr	r3, [r7, #20]
 8000d00:	3b04      	subs	r3, #4
 8000d02:	687a      	ldr	r2, [r7, #4]
 8000d04:	4413      	add	r3, r2
 8000d06:	681b      	ldr	r3, [r3, #0]
 8000d08:	613b      	str	r3, [r7, #16]

	if (! bootloader_verify_crc(&bl_rx_buffer[0],command_packet_len-4,host_crc))
 8000d0a:	697b      	ldr	r3, [r7, #20]
 8000d0c:	3b04      	subs	r3, #4
 8000d0e:	693a      	ldr	r2, [r7, #16]
 8000d10:	4619      	mov	r1, r3
 8000d12:	6878      	ldr	r0, [r7, #4]
 8000d14:	f000 f94a 	bl	8000fac <bootloader_verify_crc>
 8000d18:	4603      	mov	r3, r0
 8000d1a:	2b00      	cmp	r3, #0
 8000d1c:	d117      	bne.n	8000d4e <bootloader_handle_getrdp_cmd+0x6a>
	{
		printmsg("BL_DEBUG_MSG:checksum success !!\n");
 8000d1e:	4811      	ldr	r0, [pc, #68]	@ (8000d64 <bootloader_handle_getrdp_cmd+0x80>)
 8000d20:	f7ff fe40 	bl	80009a4 <printmsg>
		bootloader_send_ack(1);
 8000d24:	2001      	movs	r0, #1
 8000d26:	f000 f929 	bl	8000f7c <bootloader_send_ack>
		rdp_level = get_flash_rdp_level();
 8000d2a:	f000 f9a1 	bl	8001070 <get_flash_rdp_level>
 8000d2e:	4603      	mov	r3, r0
 8000d30:	73fb      	strb	r3, [r7, #15]
		printmsg("BL_DEBUG_MSG:RDP level: %d %#x\n",rdp_level, rdp_level);
 8000d32:	7bfb      	ldrb	r3, [r7, #15]
 8000d34:	4619      	mov	r1, r3
 8000d36:	7bfb      	ldrb	r3, [r7, #15]
 8000d38:	461a      	mov	r2, r3
 8000d3a:	480b      	ldr	r0, [pc, #44]	@ (8000d68 <bootloader_handle_getrdp_cmd+0x84>)
 8000d3c:	f7ff fe32 	bl	80009a4 <printmsg>
		bootloader_uart_write_data(&rdp_level, 1);
 8000d40:	f107 030f 	add.w	r3, r7, #15
 8000d44:	2101      	movs	r1, #1
 8000d46:	4618      	mov	r0, r3
 8000d48:	f000 f964 	bl	8001014 <bootloader_uart_write_data>

	}else{
		printmsg("BL_DEBUG_MSG:checksum fail !!\n");
		bootloader_send_nack();
	}
}
 8000d4c:	e004      	b.n	8000d58 <bootloader_handle_getrdp_cmd+0x74>
		printmsg("BL_DEBUG_MSG:checksum fail !!\n");
 8000d4e:	4807      	ldr	r0, [pc, #28]	@ (8000d6c <bootloader_handle_getrdp_cmd+0x88>)
 8000d50:	f7ff fe28 	bl	80009a4 <printmsg>
		bootloader_send_nack();
 8000d54:	f000 f900 	bl	8000f58 <bootloader_send_nack>
}
 8000d58:	bf00      	nop
 8000d5a:	3718      	adds	r7, #24
 8000d5c:	46bd      	mov	sp, r7
 8000d5e:	bd80      	pop	{r7, pc}
 8000d60:	0800590c 	.word	0x0800590c
 8000d64:	08005878 	.word	0x08005878
 8000d68:	08005938 	.word	0x08005938
 8000d6c:	0800589c 	.word	0x0800589c

08000d70 <bootloader_handle_flash_erase_cmd>:

void bootloader_handle_flash_erase_cmd(uint8_t *pBuffer) {
 8000d70:	b580      	push	{r7, lr}
 8000d72:	b086      	sub	sp, #24
 8000d74:	af00      	add	r7, sp, #0
 8000d76:	6078      	str	r0, [r7, #4]

  uint8_t erase_status = 0x00;
 8000d78:	2300      	movs	r3, #0
 8000d7a:	73fb      	strb	r3, [r7, #15]
  printmsg("BL_DEBUG_MSG:bootloader_handle_flash_erase_cmd\n");
 8000d7c:	482a      	ldr	r0, [pc, #168]	@ (8000e28 <bootloader_handle_flash_erase_cmd+0xb8>)
 8000d7e:	f7ff fe11 	bl	80009a4 <printmsg>

  //Total length of the command packet
  uint32_t command_packet_len = bl_rx_buffer[0]+1 ;
 8000d82:	4b2a      	ldr	r3, [pc, #168]	@ (8000e2c <bootloader_handle_flash_erase_cmd+0xbc>)
 8000d84:	781b      	ldrb	r3, [r3, #0]
 8000d86:	3301      	adds	r3, #1
 8000d88:	617b      	str	r3, [r7, #20]

  //extract the CRC32 sent by the Host
  uint32_t host_crc = *((uint32_t * ) (bl_rx_buffer+command_packet_len - 4) ) ;
 8000d8a:	697b      	ldr	r3, [r7, #20]
 8000d8c:	3b04      	subs	r3, #4
 8000d8e:	4a27      	ldr	r2, [pc, #156]	@ (8000e2c <bootloader_handle_flash_erase_cmd+0xbc>)
 8000d90:	4413      	add	r3, r2
 8000d92:	681b      	ldr	r3, [r3, #0]
 8000d94:	613b      	str	r3, [r7, #16]

  if (! bootloader_verify_crc(&bl_rx_buffer[0],command_packet_len-4,host_crc)) {
 8000d96:	697b      	ldr	r3, [r7, #20]
 8000d98:	3b04      	subs	r3, #4
 8000d9a:	693a      	ldr	r2, [r7, #16]
 8000d9c:	4619      	mov	r1, r3
 8000d9e:	4823      	ldr	r0, [pc, #140]	@ (8000e2c <bootloader_handle_flash_erase_cmd+0xbc>)
 8000da0:	f000 f904 	bl	8000fac <bootloader_verify_crc>
 8000da4:	4603      	mov	r3, r0
 8000da6:	2b00      	cmp	r3, #0
 8000da8:	d134      	bne.n	8000e14 <bootloader_handle_flash_erase_cmd+0xa4>

    printmsg("BL_DEBUG_MSG:checksum success !!\n");
 8000daa:	4821      	ldr	r0, [pc, #132]	@ (8000e30 <bootloader_handle_flash_erase_cmd+0xc0>)
 8000dac:	f7ff fdfa 	bl	80009a4 <printmsg>
    bootloader_send_ack(1);
 8000db0:	2001      	movs	r0, #1
 8000db2:	f000 f8e3 	bl	8000f7c <bootloader_send_ack>
    printmsg("BL_DEBUG_MSG:initial_sector : %d  no_ofsectors: %d\n",pBuffer[2],pBuffer[3]);
 8000db6:	687b      	ldr	r3, [r7, #4]
 8000db8:	3302      	adds	r3, #2
 8000dba:	781b      	ldrb	r3, [r3, #0]
 8000dbc:	4619      	mov	r1, r3
 8000dbe:	687b      	ldr	r3, [r7, #4]
 8000dc0:	3303      	adds	r3, #3
 8000dc2:	781b      	ldrb	r3, [r3, #0]
 8000dc4:	461a      	mov	r2, r3
 8000dc6:	481b      	ldr	r0, [pc, #108]	@ (8000e34 <bootloader_handle_flash_erase_cmd+0xc4>)
 8000dc8:	f7ff fdec 	bl	80009a4 <printmsg>

    HAL_GPIO_WritePin(GPIOB, GPIO_PIN_14,1);
 8000dcc:	2201      	movs	r2, #1
 8000dce:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8000dd2:	4819      	ldr	r0, [pc, #100]	@ (8000e38 <bootloader_handle_flash_erase_cmd+0xc8>)
 8000dd4:	f001 fd2a 	bl	800282c <HAL_GPIO_WritePin>
    erase_status = execute_flash_erase(pBuffer[2] , pBuffer[3]);
 8000dd8:	687b      	ldr	r3, [r7, #4]
 8000dda:	3302      	adds	r3, #2
 8000ddc:	781a      	ldrb	r2, [r3, #0]
 8000dde:	687b      	ldr	r3, [r7, #4]
 8000de0:	3303      	adds	r3, #3
 8000de2:	781b      	ldrb	r3, [r3, #0]
 8000de4:	4619      	mov	r1, r3
 8000de6:	4610      	mov	r0, r2
 8000de8:	f000 f984 	bl	80010f4 <execute_flash_erase>
 8000dec:	4603      	mov	r3, r0
 8000dee:	73fb      	strb	r3, [r7, #15]
    HAL_GPIO_WritePin(GPIOB, GPIO_PIN_14,0);
 8000df0:	2200      	movs	r2, #0
 8000df2:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8000df6:	4810      	ldr	r0, [pc, #64]	@ (8000e38 <bootloader_handle_flash_erase_cmd+0xc8>)
 8000df8:	f001 fd18 	bl	800282c <HAL_GPIO_WritePin>

    printmsg("BL_DEBUG_MSG: flash erase status: %#x\n",erase_status);
 8000dfc:	7bfb      	ldrb	r3, [r7, #15]
 8000dfe:	4619      	mov	r1, r3
 8000e00:	480e      	ldr	r0, [pc, #56]	@ (8000e3c <bootloader_handle_flash_erase_cmd+0xcc>)
 8000e02:	f7ff fdcf 	bl	80009a4 <printmsg>

    bootloader_uart_write_data(&erase_status,1);
 8000e06:	f107 030f 	add.w	r3, r7, #15
 8000e0a:	2101      	movs	r1, #1
 8000e0c:	4618      	mov	r0, r3
 8000e0e:	f000 f901 	bl	8001014 <bootloader_uart_write_data>
  } else {

    printmsg("BL_DEBUG_MSG:checksum fail !!\n");
    bootloader_send_nack();
  }
}
 8000e12:	e004      	b.n	8000e1e <bootloader_handle_flash_erase_cmd+0xae>
    printmsg("BL_DEBUG_MSG:checksum fail !!\n");
 8000e14:	480a      	ldr	r0, [pc, #40]	@ (8000e40 <bootloader_handle_flash_erase_cmd+0xd0>)
 8000e16:	f7ff fdc5 	bl	80009a4 <printmsg>
    bootloader_send_nack();
 8000e1a:	f000 f89d 	bl	8000f58 <bootloader_send_nack>
}
 8000e1e:	bf00      	nop
 8000e20:	3718      	adds	r7, #24
 8000e22:	46bd      	mov	sp, r7
 8000e24:	bd80      	pop	{r7, pc}
 8000e26:	bf00      	nop
 8000e28:	08005958 	.word	0x08005958
 8000e2c:	200001d8 	.word	0x200001d8
 8000e30:	08005878 	.word	0x08005878
 8000e34:	08005988 	.word	0x08005988
 8000e38:	48000400 	.word	0x48000400
 8000e3c:	080059bc 	.word	0x080059bc
 8000e40:	0800589c 	.word	0x0800589c

08000e44 <bootloader_handle_mem_write_cmd>:


void bootloader_handle_mem_write_cmd(uint8_t *bl_rx_buffer)
{
 8000e44:	b580      	push	{r7, lr}
 8000e46:	b088      	sub	sp, #32
 8000e48:	af00      	add	r7, sp, #0
 8000e4a:	6078      	str	r0, [r7, #4]
	/* Handle "Memory Write" command */

	printmsg("BL_DEBUG_MSG:bootloader_handle_mem_write_cmd\n");
 8000e4c:	4831      	ldr	r0, [pc, #196]	@ (8000f14 <bootloader_handle_mem_write_cmd+0xd0>)
 8000e4e:	f7ff fda9 	bl	80009a4 <printmsg>

	uint8_t write_status = 0x00;
 8000e52:	2300      	movs	r3, #0
 8000e54:	73fb      	strb	r3, [r7, #15]
	uint8_t payload_len = bl_rx_buffer[6];
 8000e56:	687b      	ldr	r3, [r7, #4]
 8000e58:	799b      	ldrb	r3, [r3, #6]
 8000e5a:	77fb      	strb	r3, [r7, #31]

	uint32_t mem_addr = *((uint32_t*)(&bl_rx_buffer[2]));
 8000e5c:	687b      	ldr	r3, [r7, #4]
 8000e5e:	f8d3 3002 	ldr.w	r3, [r3, #2]
 8000e62:	61bb      	str	r3, [r7, #24]

	uint32_t command_packet_len = bl_rx_buffer[0] + 1 ;
 8000e64:	687b      	ldr	r3, [r7, #4]
 8000e66:	781b      	ldrb	r3, [r3, #0]
 8000e68:	3301      	adds	r3, #1
 8000e6a:	617b      	str	r3, [r7, #20]
	uint32_t host_crc = *((uint32_t * ) (bl_rx_buffer + command_packet_len - 4));
 8000e6c:	697b      	ldr	r3, [r7, #20]
 8000e6e:	3b04      	subs	r3, #4
 8000e70:	687a      	ldr	r2, [r7, #4]
 8000e72:	4413      	add	r3, r2
 8000e74:	681b      	ldr	r3, [r3, #0]
 8000e76:	613b      	str	r3, [r7, #16]

	if(! bootloader_verify_crc(&bl_rx_buffer[0], command_packet_len -4, host_crc))
 8000e78:	697b      	ldr	r3, [r7, #20]
 8000e7a:	3b04      	subs	r3, #4
 8000e7c:	693a      	ldr	r2, [r7, #16]
 8000e7e:	4619      	mov	r1, r3
 8000e80:	6878      	ldr	r0, [r7, #4]
 8000e82:	f000 f893 	bl	8000fac <bootloader_verify_crc>
 8000e86:	4603      	mov	r3, r0
 8000e88:	2b00      	cmp	r3, #0
 8000e8a:	d13a      	bne.n	8000f02 <bootloader_handle_mem_write_cmd+0xbe>
	{
		printmsg("BL_DEBUG_MSG:checksum success !!\n");
 8000e8c:	4822      	ldr	r0, [pc, #136]	@ (8000f18 <bootloader_handle_mem_write_cmd+0xd4>)
 8000e8e:	f7ff fd89 	bl	80009a4 <printmsg>
		bootloader_send_ack(1);
 8000e92:	2001      	movs	r0, #1
 8000e94:	f000 f872 	bl	8000f7c <bootloader_send_ack>
		printmsg("BL_DEBUG_MSG: mem write address : %#x\n",mem_addr);
 8000e98:	69b9      	ldr	r1, [r7, #24]
 8000e9a:	4820      	ldr	r0, [pc, #128]	@ (8000f1c <bootloader_handle_mem_write_cmd+0xd8>)
 8000e9c:	f7ff fd82 	bl	80009a4 <printmsg>

		if( verify_address(mem_addr) == ADDR_VALID ) {
 8000ea0:	69b8      	ldr	r0, [r7, #24]
 8000ea2:	f000 f8f9 	bl	8001098 <verify_address>
 8000ea6:	4603      	mov	r3, r0
 8000ea8:	2b00      	cmp	r3, #0
 8000eaa:	d11e      	bne.n	8000eea <bootloader_handle_mem_write_cmd+0xa6>


			printmsg("BL_DEBUG_MSG: valid mem write address\n");
 8000eac:	481c      	ldr	r0, [pc, #112]	@ (8000f20 <bootloader_handle_mem_write_cmd+0xdc>)
 8000eae:	f7ff fd79 	bl	80009a4 <printmsg>

			//glow the led to indicate bootloader is currently writing to memory
			HAL_GPIO_WritePin(GPIOB, GPIO_PIN_14,1);
 8000eb2:	2201      	movs	r2, #1
 8000eb4:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8000eb8:	481a      	ldr	r0, [pc, #104]	@ (8000f24 <bootloader_handle_mem_write_cmd+0xe0>)
 8000eba:	f001 fcb7 	bl	800282c <HAL_GPIO_WritePin>

			/* Execute memory write*/
			write_status = execute_mem_write(&bl_rx_buffer[7], mem_addr, payload_len);
 8000ebe:	687b      	ldr	r3, [r7, #4]
 8000ec0:	3307      	adds	r3, #7
 8000ec2:	7ffa      	ldrb	r2, [r7, #31]
 8000ec4:	69b9      	ldr	r1, [r7, #24]
 8000ec6:	4618      	mov	r0, r3
 8000ec8:	f000 f946 	bl	8001158 <execute_mem_write>
 8000ecc:	4603      	mov	r3, r0
 8000ece:	73fb      	strb	r3, [r7, #15]

			HAL_GPIO_WritePin(GPIOB, GPIO_PIN_14,0);
 8000ed0:	2200      	movs	r2, #0
 8000ed2:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8000ed6:	4813      	ldr	r0, [pc, #76]	@ (8000f24 <bootloader_handle_mem_write_cmd+0xe0>)
 8000ed8:	f001 fca8 	bl	800282c <HAL_GPIO_WritePin>

			//inform host about the status
			bootloader_uart_write_data(&write_status,1);
 8000edc:	f107 030f 	add.w	r3, r7, #15
 8000ee0:	2101      	movs	r1, #1
 8000ee2:	4618      	mov	r0, r3
 8000ee4:	f000 f896 	bl	8001014 <bootloader_uart_write_data>
		}
	}else{
		printmsg("BL_DEBUG_MSG:checksum fail !!\n");
		bootloader_send_nack();
	}
}
 8000ee8:	e010      	b.n	8000f0c <bootloader_handle_mem_write_cmd+0xc8>
			printmsg("BL_DEBUG_MSG: invalid mem write address\n");
 8000eea:	480f      	ldr	r0, [pc, #60]	@ (8000f28 <bootloader_handle_mem_write_cmd+0xe4>)
 8000eec:	f7ff fd5a 	bl	80009a4 <printmsg>
			write_status = ADDR_INVALID;
 8000ef0:	2301      	movs	r3, #1
 8000ef2:	73fb      	strb	r3, [r7, #15]
			bootloader_uart_write_data(&write_status,1);
 8000ef4:	f107 030f 	add.w	r3, r7, #15
 8000ef8:	2101      	movs	r1, #1
 8000efa:	4618      	mov	r0, r3
 8000efc:	f000 f88a 	bl	8001014 <bootloader_uart_write_data>
}
 8000f00:	e004      	b.n	8000f0c <bootloader_handle_mem_write_cmd+0xc8>
		printmsg("BL_DEBUG_MSG:checksum fail !!\n");
 8000f02:	480a      	ldr	r0, [pc, #40]	@ (8000f2c <bootloader_handle_mem_write_cmd+0xe8>)
 8000f04:	f7ff fd4e 	bl	80009a4 <printmsg>
		bootloader_send_nack();
 8000f08:	f000 f826 	bl	8000f58 <bootloader_send_nack>
}
 8000f0c:	bf00      	nop
 8000f0e:	3720      	adds	r7, #32
 8000f10:	46bd      	mov	sp, r7
 8000f12:	bd80      	pop	{r7, pc}
 8000f14:	080059e4 	.word	0x080059e4
 8000f18:	08005878 	.word	0x08005878
 8000f1c:	08005a14 	.word	0x08005a14
 8000f20:	08005a3c 	.word	0x08005a3c
 8000f24:	48000400 	.word	0x48000400
 8000f28:	08005a64 	.word	0x08005a64
 8000f2c:	0800589c 	.word	0x0800589c

08000f30 <bootloader_handle_en_rw_protect>:


void bootloader_handle_en_rw_protect(uint8_t *bl_rx_buffer)
{
 8000f30:	b480      	push	{r7}
 8000f32:	b083      	sub	sp, #12
 8000f34:	af00      	add	r7, sp, #0
 8000f36:	6078      	str	r0, [r7, #4]
    /* Handle "Enable Read/Write Protection" command */
}
 8000f38:	bf00      	nop
 8000f3a:	370c      	adds	r7, #12
 8000f3c:	46bd      	mov	sp, r7
 8000f3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f42:	4770      	bx	lr

08000f44 <bootloader_handle_dis_rw_protect>:

void bootloader_handle_dis_rw_protect(uint8_t *bl_rx_buffer)
{
 8000f44:	b480      	push	{r7}
 8000f46:	b083      	sub	sp, #12
 8000f48:	af00      	add	r7, sp, #0
 8000f4a:	6078      	str	r0, [r7, #4]
    /* Handle "Disable Read/Write Protection" command */
}
 8000f4c:	bf00      	nop
 8000f4e:	370c      	adds	r7, #12
 8000f50:	46bd      	mov	sp, r7
 8000f52:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f56:	4770      	bx	lr

08000f58 <bootloader_send_nack>:

void bootloader_send_nack(void)
{
 8000f58:	b580      	push	{r7, lr}
 8000f5a:	b082      	sub	sp, #8
 8000f5c:	af00      	add	r7, sp, #0
	uint8_t nack = BL_NACK;
 8000f5e:	237f      	movs	r3, #127	@ 0x7f
 8000f60:	71fb      	strb	r3, [r7, #7]
	HAL_UART_Transmit(C_UART, (uint8_t*)&nack, 1, HAL_MAX_DELAY);
 8000f62:	1df9      	adds	r1, r7, #7
 8000f64:	f04f 33ff 	mov.w	r3, #4294967295
 8000f68:	2201      	movs	r2, #1
 8000f6a:	4803      	ldr	r0, [pc, #12]	@ (8000f78 <bootloader_send_nack+0x20>)
 8000f6c:	f003 f840 	bl	8003ff0 <HAL_UART_Transmit>
}
 8000f70:	bf00      	nop
 8000f72:	3708      	adds	r7, #8
 8000f74:	46bd      	mov	sp, r7
 8000f76:	bd80      	pop	{r7, pc}
 8000f78:	20000150 	.word	0x20000150

08000f7c <bootloader_send_ack>:

void bootloader_send_ack(uint8_t follow_len)
{
 8000f7c:	b580      	push	{r7, lr}
 8000f7e:	b084      	sub	sp, #16
 8000f80:	af00      	add	r7, sp, #0
 8000f82:	4603      	mov	r3, r0
 8000f84:	71fb      	strb	r3, [r7, #7]
	/* 2 Bytes are sent, first byte is ACK and second is the length value */
	uint8_t ack_buf[2];
	ack_buf[0] = BL_ACK;
 8000f86:	23a5      	movs	r3, #165	@ 0xa5
 8000f88:	733b      	strb	r3, [r7, #12]
	ack_buf[1] = follow_len;
 8000f8a:	79fb      	ldrb	r3, [r7, #7]
 8000f8c:	737b      	strb	r3, [r7, #13]
	HAL_UART_Transmit(C_UART, (uint8_t*)&ack_buf, 2, HAL_MAX_DELAY);
 8000f8e:	f107 010c 	add.w	r1, r7, #12
 8000f92:	f04f 33ff 	mov.w	r3, #4294967295
 8000f96:	2202      	movs	r2, #2
 8000f98:	4803      	ldr	r0, [pc, #12]	@ (8000fa8 <bootloader_send_ack+0x2c>)
 8000f9a:	f003 f829 	bl	8003ff0 <HAL_UART_Transmit>

}
 8000f9e:	bf00      	nop
 8000fa0:	3710      	adds	r7, #16
 8000fa2:	46bd      	mov	sp, r7
 8000fa4:	bd80      	pop	{r7, pc}
 8000fa6:	bf00      	nop
 8000fa8:	20000150 	.word	0x20000150

08000fac <bootloader_verify_crc>:

uint8_t bootloader_verify_crc(uint8_t *pData, uint32_t len, uint32_t crc_host)
{
 8000fac:	b580      	push	{r7, lr}
 8000fae:	b088      	sub	sp, #32
 8000fb0:	af00      	add	r7, sp, #0
 8000fb2:	60f8      	str	r0, [r7, #12]
 8000fb4:	60b9      	str	r1, [r7, #8]
 8000fb6:	607a      	str	r2, [r7, #4]
	uint32_t uwCRCValue = 0xff;
 8000fb8:	23ff      	movs	r3, #255	@ 0xff
 8000fba:	61fb      	str	r3, [r7, #28]

	for(int i=0; i<len; i++)
 8000fbc:	2300      	movs	r3, #0
 8000fbe:	61bb      	str	r3, [r7, #24]
 8000fc0:	e00f      	b.n	8000fe2 <bootloader_verify_crc+0x36>
	{
		uint32_t i_data = pData[i];
 8000fc2:	69bb      	ldr	r3, [r7, #24]
 8000fc4:	68fa      	ldr	r2, [r7, #12]
 8000fc6:	4413      	add	r3, r2
 8000fc8:	781b      	ldrb	r3, [r3, #0]
 8000fca:	617b      	str	r3, [r7, #20]
		uwCRCValue = HAL_CRC_Accumulate(&hcrc, &i_data, 1);
 8000fcc:	f107 0314 	add.w	r3, r7, #20
 8000fd0:	2201      	movs	r2, #1
 8000fd2:	4619      	mov	r1, r3
 8000fd4:	480e      	ldr	r0, [pc, #56]	@ (8001010 <bootloader_verify_crc+0x64>)
 8000fd6:	f000 fd01 	bl	80019dc <HAL_CRC_Accumulate>
 8000fda:	61f8      	str	r0, [r7, #28]
	for(int i=0; i<len; i++)
 8000fdc:	69bb      	ldr	r3, [r7, #24]
 8000fde:	3301      	adds	r3, #1
 8000fe0:	61bb      	str	r3, [r7, #24]
 8000fe2:	69bb      	ldr	r3, [r7, #24]
 8000fe4:	68ba      	ldr	r2, [r7, #8]
 8000fe6:	429a      	cmp	r2, r3
 8000fe8:	d8eb      	bhi.n	8000fc2 <bootloader_verify_crc+0x16>
	}

	/* Reset CRC Calculation Unit */
	__HAL_CRC_DR_RESET(&hcrc);
 8000fea:	4b09      	ldr	r3, [pc, #36]	@ (8001010 <bootloader_verify_crc+0x64>)
 8000fec:	681b      	ldr	r3, [r3, #0]
 8000fee:	689a      	ldr	r2, [r3, #8]
 8000ff0:	4b07      	ldr	r3, [pc, #28]	@ (8001010 <bootloader_verify_crc+0x64>)
 8000ff2:	681b      	ldr	r3, [r3, #0]
 8000ff4:	f042 0201 	orr.w	r2, r2, #1
 8000ff8:	609a      	str	r2, [r3, #8]

	if(uwCRCValue == crc_host)
 8000ffa:	69fa      	ldr	r2, [r7, #28]
 8000ffc:	687b      	ldr	r3, [r7, #4]
 8000ffe:	429a      	cmp	r2, r3
 8001000:	d101      	bne.n	8001006 <bootloader_verify_crc+0x5a>
		return VERIFY_CRC_SUCCESS;
 8001002:	2300      	movs	r3, #0
 8001004:	e000      	b.n	8001008 <bootloader_verify_crc+0x5c>
	return VERIFY_CRC_FAIL;
 8001006:	2301      	movs	r3, #1

}
 8001008:	4618      	mov	r0, r3
 800100a:	3720      	adds	r7, #32
 800100c:	46bd      	mov	sp, r7
 800100e:	bd80      	pop	{r7, pc}
 8001010:	200000a4 	.word	0x200000a4

08001014 <bootloader_uart_write_data>:

void bootloader_uart_write_data(uint8_t *pBuffer,uint32_t len)
{
 8001014:	b580      	push	{r7, lr}
 8001016:	b082      	sub	sp, #8
 8001018:	af00      	add	r7, sp, #0
 800101a:	6078      	str	r0, [r7, #4]
 800101c:	6039      	str	r1, [r7, #0]
	HAL_UART_Transmit(C_UART, pBuffer, len, HAL_MAX_DELAY);
 800101e:	683b      	ldr	r3, [r7, #0]
 8001020:	b29a      	uxth	r2, r3
 8001022:	f04f 33ff 	mov.w	r3, #4294967295
 8001026:	6879      	ldr	r1, [r7, #4]
 8001028:	4803      	ldr	r0, [pc, #12]	@ (8001038 <bootloader_uart_write_data+0x24>)
 800102a:	f002 ffe1 	bl	8003ff0 <HAL_UART_Transmit>
}
 800102e:	bf00      	nop
 8001030:	3708      	adds	r7, #8
 8001032:	46bd      	mov	sp, r7
 8001034:	bd80      	pop	{r7, pc}
 8001036:	bf00      	nop
 8001038:	20000150 	.word	0x20000150

0800103c <get_bootloader_version>:

uint8_t get_bootloader_version()
{
 800103c:	b480      	push	{r7}
 800103e:	af00      	add	r7, sp, #0
	return (uint8_t)BL_VERSION;
 8001040:	2310      	movs	r3, #16
}
 8001042:	4618      	mov	r0, r3
 8001044:	46bd      	mov	sp, r7
 8001046:	f85d 7b04 	ldr.w	r7, [sp], #4
 800104a:	4770      	bx	lr

0800104c <get_mcu_chip_id>:

uint16_t get_mcu_chip_id(void)
{
 800104c:	b480      	push	{r7}
 800104e:	b083      	sub	sp, #12
 8001050:	af00      	add	r7, sp, #0
	   the user software. It is even accessible while the MCU is under system reset.
	 */

	uint16_t cid;
	/* Reading the register and masking the unnecessary bits */
	cid = (uint16_t)(DBGMCU->IDCODE) & 0x0FFF;
 8001052:	4b06      	ldr	r3, [pc, #24]	@ (800106c <get_mcu_chip_id+0x20>)
 8001054:	681b      	ldr	r3, [r3, #0]
 8001056:	b29b      	uxth	r3, r3
 8001058:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800105c:	80fb      	strh	r3, [r7, #6]
	return cid;
 800105e:	88fb      	ldrh	r3, [r7, #6]
}
 8001060:	4618      	mov	r0, r3
 8001062:	370c      	adds	r7, #12
 8001064:	46bd      	mov	sp, r7
 8001066:	f85d 7b04 	ldr.w	r7, [sp], #4
 800106a:	4770      	bx	lr
 800106c:	e0042000 	.word	0xe0042000

08001070 <get_flash_rdp_level>:

uint8_t get_flash_rdp_level(void)
{
 8001070:	b580      	push	{r7, lr}
 8001072:	b08c      	sub	sp, #48	@ 0x30
 8001074:	af00      	add	r7, sp, #0
	 *
	 * When decreased from 'Level 1 to Level 0', the FLASH goes into MASS ERASE.
	 *
	 * */
	/*HAL Implementation*/
	uint8_t rdp_status = 0;
 8001076:	2300      	movs	r3, #0
 8001078:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
	FLASH_OBProgramInitTypeDef ob_handle;
	HAL_FLASHEx_OBGetConfig(&ob_handle);
 800107c:	1d3b      	adds	r3, r7, #4
 800107e:	4618      	mov	r0, r3
 8001080:	f001 f834 	bl	80020ec <HAL_FLASHEx_OBGetConfig>
	rdp_status = (uint8_t)ob_handle.RDPLevel;
 8001084:	697b      	ldr	r3, [r7, #20]
 8001086:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
	return rdp_status;
 800108a:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
}
 800108e:	4618      	mov	r0, r3
 8001090:	3730      	adds	r7, #48	@ 0x30
 8001092:	46bd      	mov	sp, r7
 8001094:	bd80      	pop	{r7, pc}
	...

08001098 <verify_address>:


uint8_t verify_address(uint32_t go_address)
{
 8001098:	b480      	push	{r7}
 800109a:	b083      	sub	sp, #12
 800109c:	af00      	add	r7, sp, #0
 800109e:	6078      	str	r0, [r7, #4]
	/*Jump to FLASH, System Memory, SRAM1, SRAM2, Backup SRAM allowed,
	 * others such as peripheral memory not allowed*/

	if ( go_address >= SRAM1_BASE && go_address <= SRAM1_END) {
 80010a0:	687b      	ldr	r3, [r7, #4]
 80010a2:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 80010a6:	d305      	bcc.n	80010b4 <verify_address+0x1c>
 80010a8:	687b      	ldr	r3, [r7, #4]
 80010aa:	4a10      	ldr	r2, [pc, #64]	@ (80010ec <verify_address+0x54>)
 80010ac:	4293      	cmp	r3, r2
 80010ae:	d801      	bhi.n	80010b4 <verify_address+0x1c>

		return ADDR_VALID;
 80010b0:	2300      	movs	r3, #0
 80010b2:	e014      	b.n	80010de <verify_address+0x46>
	} else if ( go_address >= SRAM2_BASE && go_address <= SRAM2_END) {
 80010b4:	687b      	ldr	r3, [r7, #4]
 80010b6:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 80010ba:	d305      	bcc.n	80010c8 <verify_address+0x30>
 80010bc:	687b      	ldr	r3, [r7, #4]
 80010be:	4a0c      	ldr	r2, [pc, #48]	@ (80010f0 <verify_address+0x58>)
 80010c0:	4293      	cmp	r3, r2
 80010c2:	d801      	bhi.n	80010c8 <verify_address+0x30>

		return ADDR_VALID;
 80010c4:	2300      	movs	r3, #0
 80010c6:	e00a      	b.n	80010de <verify_address+0x46>
	} else if ( go_address >= FLASH_BASE && go_address <= FLASH_END) {
 80010c8:	687b      	ldr	r3, [r7, #4]
 80010ca:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 80010ce:	d305      	bcc.n	80010dc <verify_address+0x44>
 80010d0:	687b      	ldr	r3, [r7, #4]
 80010d2:	f1b3 6f01 	cmp.w	r3, #135266304	@ 0x8100000
 80010d6:	d201      	bcs.n	80010dc <verify_address+0x44>

		return ADDR_VALID;
 80010d8:	2300      	movs	r3, #0
 80010da:	e000      	b.n	80010de <verify_address+0x46>
	}else
	return ADDR_INVALID;
 80010dc:	2301      	movs	r3, #1
}
 80010de:	4618      	mov	r0, r3
 80010e0:	370c      	adds	r7, #12
 80010e2:	46bd      	mov	sp, r7
 80010e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010e8:	4770      	bx	lr
 80010ea:	bf00      	nop
 80010ec:	20040000 	.word	0x20040000
 80010f0:	10010000 	.word	0x10010000

080010f4 <execute_flash_erase>:

uint8_t execute_flash_erase(uint8_t page_number , uint8_t number_of_pages) {
 80010f4:	b580      	push	{r7, lr}
 80010f6:	b088      	sub	sp, #32
 80010f8:	af00      	add	r7, sp, #0
 80010fa:	4603      	mov	r3, r0
 80010fc:	460a      	mov	r2, r1
 80010fe:	71fb      	strb	r3, [r7, #7]
 8001100:	4613      	mov	r3, r2
 8001102:	71bb      	strb	r3, [r7, #6]

  if( number_of_pages > 511 )
    return INVALID_SECTOR;

  if( (page_number == 0xff ) || (page_number <= 511) ) {
    if(page_number == (uint8_t) 0xff) {
 8001104:	79fb      	ldrb	r3, [r7, #7]
 8001106:	2bff      	cmp	r3, #255	@ 0xff
 8001108:	d102      	bne.n	8001110 <execute_flash_erase+0x1c>
    flashErase_handle.TypeErase = FLASH_TYPEERASE_MASSERASE;
 800110a:	2301      	movs	r3, #1
 800110c:	60fb      	str	r3, [r7, #12]
 800110e:	e00e      	b.n	800112e <execute_flash_erase+0x3a>

    } else {
      /*Here we are just calculating how many sectors needs to erased */
      uint8_t remanining_page = 511 - page_number;
 8001110:	79fb      	ldrb	r3, [r7, #7]
 8001112:	43db      	mvns	r3, r3
 8001114:	77fb      	strb	r3, [r7, #31]
      if( number_of_pages > remanining_page) {
 8001116:	79ba      	ldrb	r2, [r7, #6]
 8001118:	7ffb      	ldrb	r3, [r7, #31]
 800111a:	429a      	cmp	r2, r3
 800111c:	d901      	bls.n	8001122 <execute_flash_erase+0x2e>

    	  number_of_pages = remanining_page;
 800111e:	7ffb      	ldrb	r3, [r7, #31]
 8001120:	71bb      	strb	r3, [r7, #6]
      }
      flashErase_handle.TypeErase = FLASH_TYPEERASE_PAGES; /*Macro from HAL*/
 8001122:	2300      	movs	r3, #0
 8001124:	60fb      	str	r3, [r7, #12]
      flashErase_handle.Page = page_number; // This is the initial page
 8001126:	79fb      	ldrb	r3, [r7, #7]
 8001128:	617b      	str	r3, [r7, #20]
      flashErase_handle.NbPages = number_of_pages;
 800112a:	79bb      	ldrb	r3, [r7, #6]
 800112c:	61bb      	str	r3, [r7, #24]
    }
    flashErase_handle.Banks = FLASH_BANK_1;
 800112e:	2301      	movs	r3, #1
 8001130:	613b      	str	r3, [r7, #16]

    /*Get access to the flash registers, unlock them first */
    HAL_FLASH_Unlock();
 8001132:	f000 fe5b 	bl	8001dec <HAL_FLASH_Unlock>
    status = (uint8_t) HAL_FLASHEx_Erase(&flashErase_handle, &sectorError);
 8001136:	f107 0208 	add.w	r2, r7, #8
 800113a:	f107 030c 	add.w	r3, r7, #12
 800113e:	4611      	mov	r1, r2
 8001140:	4618      	mov	r0, r3
 8001142:	f000 ff37 	bl	8001fb4 <HAL_FLASHEx_Erase>
 8001146:	4603      	mov	r3, r0
 8001148:	77bb      	strb	r3, [r7, #30]
    HAL_FLASH_Lock();
 800114a:	f000 fe71 	bl	8001e30 <HAL_FLASH_Lock>

    return status;
 800114e:	7fbb      	ldrb	r3, [r7, #30]
  }

  return INVALID_SECTOR;
}
 8001150:	4618      	mov	r0, r3
 8001152:	3720      	adds	r7, #32
 8001154:	46bd      	mov	sp, r7
 8001156:	bd80      	pop	{r7, pc}

08001158 <execute_mem_write>:

uint8_t execute_mem_write(uint8_t *pBuffer, uint32_t mem_address, uint32_t len)
{
 8001158:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800115c:	b091      	sub	sp, #68	@ 0x44
 800115e:	af00      	add	r7, sp, #0
 8001160:	61f8      	str	r0, [r7, #28]
 8001162:	61b9      	str	r1, [r7, #24]
 8001164:	617a      	str	r2, [r7, #20]
	/* Below code is for FLASH_TYPEPROGRAM_DOUBLEWORD logic - host application sends single word */

    HAL_StatusTypeDef status = HAL_OK;
 8001166:	2300      	movs	r3, #0
 8001168:	f887 303f 	strb.w	r3, [r7, #63]	@ 0x3f

    if ((mem_address & 0x7U) != 0U) return (uint8_t)HAL_ERROR; /* must be 8-byte aligned */
 800116c:	69bb      	ldr	r3, [r7, #24]
 800116e:	f003 0307 	and.w	r3, r3, #7
 8001172:	2b00      	cmp	r3, #0
 8001174:	d001      	beq.n	800117a <execute_mem_write+0x22>
 8001176:	2301      	movs	r3, #1
 8001178:	e08c      	b.n	8001294 <execute_mem_write+0x13c>
    if (len == 0U) return (uint8_t)HAL_OK;
 800117a:	697b      	ldr	r3, [r7, #20]
 800117c:	2b00      	cmp	r3, #0
 800117e:	d101      	bne.n	8001184 <execute_mem_write+0x2c>
 8001180:	2300      	movs	r3, #0
 8001182:	e087      	b.n	8001294 <execute_mem_write+0x13c>

    HAL_FLASH_Unlock();
 8001184:	f000 fe32 	bl	8001dec <HAL_FLASH_Unlock>

    for (uint32_t offset = 0; offset < len; offset += 8U) {
 8001188:	2300      	movs	r3, #0
 800118a:	63bb      	str	r3, [r7, #56]	@ 0x38
 800118c:	e078      	b.n	8001280 <execute_mem_write+0x128>
        uint64_t data64 = 0ULL;
 800118e:	f04f 0200 	mov.w	r2, #0
 8001192:	f04f 0300 	mov.w	r3, #0
 8001196:	e9c7 230c 	strd	r2, r3, [r7, #48]	@ 0x30
        uint32_t chunk = ((len - offset) >= 8U) ? 8U : (len - offset);
 800119a:	697a      	ldr	r2, [r7, #20]
 800119c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800119e:	1ad3      	subs	r3, r2, r3
 80011a0:	2b08      	cmp	r3, #8
 80011a2:	bf28      	it	cs
 80011a4:	2308      	movcs	r3, #8
 80011a6:	627b      	str	r3, [r7, #36]	@ 0x24

        /* pack available bytes (little-endian) */
        for (uint32_t b = 0U; b < chunk; ++b) {
 80011a8:	2300      	movs	r3, #0
 80011aa:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80011ac:	e027      	b.n	80011fe <execute_mem_write+0xa6>
            data64 |= ((uint64_t)pBuffer[offset + b]) << (8U * b);
 80011ae:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 80011b0:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80011b2:	4413      	add	r3, r2
 80011b4:	69fa      	ldr	r2, [r7, #28]
 80011b6:	4413      	add	r3, r2
 80011b8:	781b      	ldrb	r3, [r3, #0]
 80011ba:	b2db      	uxtb	r3, r3
 80011bc:	2200      	movs	r2, #0
 80011be:	469a      	mov	sl, r3
 80011c0:	4693      	mov	fp, r2
 80011c2:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80011c4:	00db      	lsls	r3, r3, #3
 80011c6:	f1a3 0120 	sub.w	r1, r3, #32
 80011ca:	f1c3 0220 	rsb	r2, r3, #32
 80011ce:	fa0b f503 	lsl.w	r5, fp, r3
 80011d2:	fa0a f101 	lsl.w	r1, sl, r1
 80011d6:	430d      	orrs	r5, r1
 80011d8:	fa2a f202 	lsr.w	r2, sl, r2
 80011dc:	4315      	orrs	r5, r2
 80011de:	fa0a f403 	lsl.w	r4, sl, r3
 80011e2:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	@ 0x30
 80011e6:	ea42 0104 	orr.w	r1, r2, r4
 80011ea:	60b9      	str	r1, [r7, #8]
 80011ec:	432b      	orrs	r3, r5
 80011ee:	60fb      	str	r3, [r7, #12]
 80011f0:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 80011f4:	e9c7 230c 	strd	r2, r3, [r7, #48]	@ 0x30
        for (uint32_t b = 0U; b < chunk; ++b) {
 80011f8:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80011fa:	3301      	adds	r3, #1
 80011fc:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80011fe:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8001200:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001202:	429a      	cmp	r2, r3
 8001204:	d3d3      	bcc.n	80011ae <execute_mem_write+0x56>
        }
        /* pad remaining bytes with 0xFF if needed */
        for (uint32_t b = chunk; b < 8U; ++b) {
 8001206:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001208:	62bb      	str	r3, [r7, #40]	@ 0x28
 800120a:	e024      	b.n	8001256 <execute_mem_write+0xfe>
            data64 |= ((uint64_t)0xFFU) << (8U * b);
 800120c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800120e:	00d8      	lsls	r0, r3, #3
 8001210:	f04f 02ff 	mov.w	r2, #255	@ 0xff
 8001214:	f04f 0300 	mov.w	r3, #0
 8001218:	f1a0 0620 	sub.w	r6, r0, #32
 800121c:	f1c0 0120 	rsb	r1, r0, #32
 8001220:	fa03 f900 	lsl.w	r9, r3, r0
 8001224:	fa02 f606 	lsl.w	r6, r2, r6
 8001228:	ea49 0906 	orr.w	r9, r9, r6
 800122c:	fa22 f101 	lsr.w	r1, r2, r1
 8001230:	ea49 0901 	orr.w	r9, r9, r1
 8001234:	fa02 f800 	lsl.w	r8, r2, r0
 8001238:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	@ 0x30
 800123c:	ea42 0108 	orr.w	r1, r2, r8
 8001240:	6039      	str	r1, [r7, #0]
 8001242:	ea43 0309 	orr.w	r3, r3, r9
 8001246:	607b      	str	r3, [r7, #4]
 8001248:	e9d7 2300 	ldrd	r2, r3, [r7]
 800124c:	e9c7 230c 	strd	r2, r3, [r7, #48]	@ 0x30
        for (uint32_t b = chunk; b < 8U; ++b) {
 8001250:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8001252:	3301      	adds	r3, #1
 8001254:	62bb      	str	r3, [r7, #40]	@ 0x28
 8001256:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8001258:	2b07      	cmp	r3, #7
 800125a:	d9d7      	bls.n	800120c <execute_mem_write+0xb4>
        }

        status = HAL_FLASH_Program(FLASH_TYPEPROGRAM_DOUBLEWORD, mem_address + offset, data64);
 800125c:	69ba      	ldr	r2, [r7, #24]
 800125e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8001260:	18d1      	adds	r1, r2, r3
 8001262:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	@ 0x30
 8001266:	2000      	movs	r0, #0
 8001268:	f000 fd54 	bl	8001d14 <HAL_FLASH_Program>
 800126c:	4603      	mov	r3, r0
 800126e:	f887 303f 	strb.w	r3, [r7, #63]	@ 0x3f
        if (status != HAL_OK) break;
 8001272:	f897 303f 	ldrb.w	r3, [r7, #63]	@ 0x3f
 8001276:	2b00      	cmp	r3, #0
 8001278:	d107      	bne.n	800128a <execute_mem_write+0x132>
    for (uint32_t offset = 0; offset < len; offset += 8U) {
 800127a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800127c:	3308      	adds	r3, #8
 800127e:	63bb      	str	r3, [r7, #56]	@ 0x38
 8001280:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 8001282:	697b      	ldr	r3, [r7, #20]
 8001284:	429a      	cmp	r2, r3
 8001286:	d382      	bcc.n	800118e <execute_mem_write+0x36>
 8001288:	e000      	b.n	800128c <execute_mem_write+0x134>
        if (status != HAL_OK) break;
 800128a:	bf00      	nop
    }

    HAL_FLASH_Lock();
 800128c:	f000 fdd0 	bl	8001e30 <HAL_FLASH_Lock>
    return (uint8_t)status; /* 0 = HAL_OK */
 8001290:	f897 303f 	ldrb.w	r3, [r7, #63]	@ 0x3f
}
 8001294:	4618      	mov	r0, r3
 8001296:	3744      	adds	r7, #68	@ 0x44
 8001298:	46bd      	mov	sp, r7
 800129a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080012a0 <fetch_available_firmware_version>:

uint8_t fetch_available_firmware_version(void)
{
 80012a0:	b580      	push	{r7, lr}
 80012a2:	b082      	sub	sp, #8
 80012a4:	af00      	add	r7, sp, #0
	uint8_t version_request_command = 0x99;
 80012a6:	2399      	movs	r3, #153	@ 0x99
 80012a8:	71fb      	strb	r3, [r7, #7]
	uint8_t available_version;
	bootloader_uart_write_data(&version_request_command, 1);
 80012aa:	1dfb      	adds	r3, r7, #7
 80012ac:	2101      	movs	r1, #1
 80012ae:	4618      	mov	r0, r3
 80012b0:	f7ff feb0 	bl	8001014 <bootloader_uart_write_data>
	HAL_UART_Receive(C_UART, &available_version, 1, HAL_MAX_DELAY);
 80012b4:	1db9      	adds	r1, r7, #6
 80012b6:	f04f 33ff 	mov.w	r3, #4294967295
 80012ba:	2201      	movs	r2, #1
 80012bc:	4803      	ldr	r0, [pc, #12]	@ (80012cc <fetch_available_firmware_version+0x2c>)
 80012be:	f002 ff20 	bl	8004102 <HAL_UART_Receive>
	/*TODO: Add CRC verification for the received function*/
	return available_version;
 80012c2:	79bb      	ldrb	r3, [r7, #6]
}
 80012c4:	4618      	mov	r0, r3
 80012c6:	3708      	adds	r7, #8
 80012c8:	46bd      	mov	sp, r7
 80012ca:	bd80      	pop	{r7, pc}
 80012cc:	20000150 	.word	0x20000150

080012d0 <handle_firmware_update>:

void handle_firmware_update(void)
{
 80012d0:	b580      	push	{r7, lr}
 80012d2:	b082      	sub	sp, #8
 80012d4:	af00      	add	r7, sp, #0
	/* Find the inactive bank address*/
	volatile uint32_t inactive_bank_adress;
	inactive_bank_adress = (active_bank_number == FLASH_ACTIVE_BANK1) ? FLASH_FIRMWARE2 : FLASH_FIRMWARE1;
 80012d6:	4b08      	ldr	r3, [pc, #32]	@ (80012f8 <handle_firmware_update+0x28>)
 80012d8:	781b      	ldrb	r3, [r3, #0]
 80012da:	2b01      	cmp	r3, #1
 80012dc:	d101      	bne.n	80012e2 <handle_firmware_update+0x12>
 80012de:	4b07      	ldr	r3, [pc, #28]	@ (80012fc <handle_firmware_update+0x2c>)
 80012e0:	e000      	b.n	80012e4 <handle_firmware_update+0x14>
 80012e2:	4b07      	ldr	r3, [pc, #28]	@ (8001300 <handle_firmware_update+0x30>)
 80012e4:	607b      	str	r3, [r7, #4]
	 * Split into different functions if required
	 * Potential expansion: Use WiFi only for this part, other boot loader functions via UART
	 * TODO: Use boot loader memory write function */

	/*Update the active bank number in FLASH */
	update_active_bank_number(inactive_bank_adress);
 80012e6:	687b      	ldr	r3, [r7, #4]
 80012e8:	b2db      	uxtb	r3, r3
 80012ea:	4618      	mov	r0, r3
 80012ec:	f000 f81c 	bl	8001328 <update_active_bank_number>



}
 80012f0:	bf00      	nop
 80012f2:	3708      	adds	r7, #8
 80012f4:	46bd      	mov	sp, r7
 80012f6:	bd80      	pop	{r7, pc}
 80012f8:	200002a0 	.word	0x200002a0
 80012fc:	08080000 	.word	0x08080000
 8001300:	08008000 	.word	0x08008000

08001304 <fetch_active_bank_number>:

uint8_t fetch_active_bank_number(void)
{
 8001304:	b480      	push	{r7}
 8001306:	af00      	add	r7, sp, #0
	/*Fetch the active bank details from dedicated FLASH meta data page*/
	return 0;
 8001308:	2300      	movs	r3, #0
}
 800130a:	4618      	mov	r0, r3
 800130c:	46bd      	mov	sp, r7
 800130e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001312:	4770      	bx	lr

08001314 <bootloader_show_active_bank>:

void bootloader_show_active_bank(void)
{
 8001314:	b580      	push	{r7, lr}
 8001316:	af00      	add	r7, sp, #0
	/* Variable to store the active firmware bank number - To be preserved even after powering off
	 * One method: one dedicated page (2KB) in FLASH for configuration data - meta-data*/
	bootloader_uart_write_data((uint8_t*)&active_bank_number, 1);
 8001318:	2101      	movs	r1, #1
 800131a:	4802      	ldr	r0, [pc, #8]	@ (8001324 <bootloader_show_active_bank+0x10>)
 800131c:	f7ff fe7a 	bl	8001014 <bootloader_uart_write_data>
}
 8001320:	bf00      	nop
 8001322:	bd80      	pop	{r7, pc}
 8001324:	200002a0 	.word	0x200002a0

08001328 <update_active_bank_number>:

void update_active_bank_number(uint8_t active_bank)
{
 8001328:	b480      	push	{r7}
 800132a:	b083      	sub	sp, #12
 800132c:	af00      	add	r7, sp, #0
 800132e:	4603      	mov	r3, r0
 8001330:	71fb      	strb	r3, [r7, #7]
	/*Update the active bank number in FLASH page, after Firmware Update*/

}
 8001332:	bf00      	nop
 8001334:	370c      	adds	r7, #12
 8001336:	46bd      	mov	sp, r7
 8001338:	f85d 7b04 	ldr.w	r7, [sp], #4
 800133c:	4770      	bx	lr

0800133e <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 800133e:	b480      	push	{r7}
 8001340:	af00      	add	r7, sp, #0
  __ASM volatile ("cpsid i" : : : "memory");
 8001342:	b672      	cpsid	i
}
 8001344:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8001346:	bf00      	nop
 8001348:	e7fd      	b.n	8001346 <Error_Handler+0x8>
	...

0800134c <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 800134c:	b480      	push	{r7}
 800134e:	b083      	sub	sp, #12
 8001350:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001352:	4b0f      	ldr	r3, [pc, #60]	@ (8001390 <HAL_MspInit+0x44>)
 8001354:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8001356:	4a0e      	ldr	r2, [pc, #56]	@ (8001390 <HAL_MspInit+0x44>)
 8001358:	f043 0301 	orr.w	r3, r3, #1
 800135c:	6613      	str	r3, [r2, #96]	@ 0x60
 800135e:	4b0c      	ldr	r3, [pc, #48]	@ (8001390 <HAL_MspInit+0x44>)
 8001360:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8001362:	f003 0301 	and.w	r3, r3, #1
 8001366:	607b      	str	r3, [r7, #4]
 8001368:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 800136a:	4b09      	ldr	r3, [pc, #36]	@ (8001390 <HAL_MspInit+0x44>)
 800136c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800136e:	4a08      	ldr	r2, [pc, #32]	@ (8001390 <HAL_MspInit+0x44>)
 8001370:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8001374:	6593      	str	r3, [r2, #88]	@ 0x58
 8001376:	4b06      	ldr	r3, [pc, #24]	@ (8001390 <HAL_MspInit+0x44>)
 8001378:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800137a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800137e:	603b      	str	r3, [r7, #0]
 8001380:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001382:	bf00      	nop
 8001384:	370c      	adds	r7, #12
 8001386:	46bd      	mov	sp, r7
 8001388:	f85d 7b04 	ldr.w	r7, [sp], #4
 800138c:	4770      	bx	lr
 800138e:	bf00      	nop
 8001390:	40021000 	.word	0x40021000

08001394 <HAL_CRC_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hcrc: CRC handle pointer
  * @retval None
  */
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
 8001394:	b480      	push	{r7}
 8001396:	b085      	sub	sp, #20
 8001398:	af00      	add	r7, sp, #0
 800139a:	6078      	str	r0, [r7, #4]
  if(hcrc->Instance==CRC)
 800139c:	687b      	ldr	r3, [r7, #4]
 800139e:	681b      	ldr	r3, [r3, #0]
 80013a0:	4a0a      	ldr	r2, [pc, #40]	@ (80013cc <HAL_CRC_MspInit+0x38>)
 80013a2:	4293      	cmp	r3, r2
 80013a4:	d10b      	bne.n	80013be <HAL_CRC_MspInit+0x2a>
  {
    /* USER CODE BEGIN CRC_MspInit 0 */

    /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 80013a6:	4b0a      	ldr	r3, [pc, #40]	@ (80013d0 <HAL_CRC_MspInit+0x3c>)
 80013a8:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80013aa:	4a09      	ldr	r2, [pc, #36]	@ (80013d0 <HAL_CRC_MspInit+0x3c>)
 80013ac:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 80013b0:	6493      	str	r3, [r2, #72]	@ 0x48
 80013b2:	4b07      	ldr	r3, [pc, #28]	@ (80013d0 <HAL_CRC_MspInit+0x3c>)
 80013b4:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80013b6:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 80013ba:	60fb      	str	r3, [r7, #12]
 80013bc:	68fb      	ldr	r3, [r7, #12]

    /* USER CODE END CRC_MspInit 1 */

  }

}
 80013be:	bf00      	nop
 80013c0:	3714      	adds	r7, #20
 80013c2:	46bd      	mov	sp, r7
 80013c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013c8:	4770      	bx	lr
 80013ca:	bf00      	nop
 80013cc:	40023000 	.word	0x40023000
 80013d0:	40021000 	.word	0x40021000

080013d4 <HAL_UART_MspInit>:
  * This function configures the hardware resources used in this example
  * @param huart: UART handle pointer
  * @retval None
  */
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 80013d4:	b580      	push	{r7, lr}
 80013d6:	b0ae      	sub	sp, #184	@ 0xb8
 80013d8:	af00      	add	r7, sp, #0
 80013da:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80013dc:	f107 03a4 	add.w	r3, r7, #164	@ 0xa4
 80013e0:	2200      	movs	r2, #0
 80013e2:	601a      	str	r2, [r3, #0]
 80013e4:	605a      	str	r2, [r3, #4]
 80013e6:	609a      	str	r2, [r3, #8]
 80013e8:	60da      	str	r2, [r3, #12]
 80013ea:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 80013ec:	f107 0318 	add.w	r3, r7, #24
 80013f0:	228c      	movs	r2, #140	@ 0x8c
 80013f2:	2100      	movs	r1, #0
 80013f4:	4618      	mov	r0, r3
 80013f6:	f003 fc41 	bl	8004c7c <memset>
  if(huart->Instance==LPUART1)
 80013fa:	687b      	ldr	r3, [r7, #4]
 80013fc:	681b      	ldr	r3, [r3, #0]
 80013fe:	4a43      	ldr	r2, [pc, #268]	@ (800150c <HAL_UART_MspInit+0x138>)
 8001400:	4293      	cmp	r3, r2
 8001402:	d13e      	bne.n	8001482 <HAL_UART_MspInit+0xae>

    /* USER CODE END LPUART1_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_LPUART1;
 8001404:	2320      	movs	r3, #32
 8001406:	61bb      	str	r3, [r7, #24]
    PeriphClkInit.Lpuart1ClockSelection = RCC_LPUART1CLKSOURCE_PCLK1;
 8001408:	2300      	movs	r3, #0
 800140a:	667b      	str	r3, [r7, #100]	@ 0x64
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 800140c:	f107 0318 	add.w	r3, r7, #24
 8001410:	4618      	mov	r0, r3
 8001412:	f002 f8d5 	bl	80035c0 <HAL_RCCEx_PeriphCLKConfig>
 8001416:	4603      	mov	r3, r0
 8001418:	2b00      	cmp	r3, #0
 800141a:	d001      	beq.n	8001420 <HAL_UART_MspInit+0x4c>
    {
      Error_Handler();
 800141c:	f7ff ff8f 	bl	800133e <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LPUART1_CLK_ENABLE();
 8001420:	4b3b      	ldr	r3, [pc, #236]	@ (8001510 <HAL_UART_MspInit+0x13c>)
 8001422:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8001424:	4a3a      	ldr	r2, [pc, #232]	@ (8001510 <HAL_UART_MspInit+0x13c>)
 8001426:	f043 0301 	orr.w	r3, r3, #1
 800142a:	65d3      	str	r3, [r2, #92]	@ 0x5c
 800142c:	4b38      	ldr	r3, [pc, #224]	@ (8001510 <HAL_UART_MspInit+0x13c>)
 800142e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8001430:	f003 0301 	and.w	r3, r3, #1
 8001434:	617b      	str	r3, [r7, #20]
 8001436:	697b      	ldr	r3, [r7, #20]

    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001438:	4b35      	ldr	r3, [pc, #212]	@ (8001510 <HAL_UART_MspInit+0x13c>)
 800143a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800143c:	4a34      	ldr	r2, [pc, #208]	@ (8001510 <HAL_UART_MspInit+0x13c>)
 800143e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001442:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8001444:	4b32      	ldr	r3, [pc, #200]	@ (8001510 <HAL_UART_MspInit+0x13c>)
 8001446:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001448:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800144c:	613b      	str	r3, [r7, #16]
 800144e:	693b      	ldr	r3, [r7, #16]
    HAL_PWREx_EnableVddIO2();
 8001450:	f001 fa68 	bl	8002924 <HAL_PWREx_EnableVddIO2>
    /**LPUART1 GPIO Configuration
    PG7     ------> LPUART1_TX
    PG8     ------> LPUART1_RX
    */
    GPIO_InitStruct.Pin = STLK_RX_Pin|STLK_TX_Pin;
 8001454:	f44f 73c0 	mov.w	r3, #384	@ 0x180
 8001458:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800145c:	2302      	movs	r3, #2
 800145e:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001462:	2300      	movs	r3, #0
 8001464:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001468:	2303      	movs	r3, #3
 800146a:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
    GPIO_InitStruct.Alternate = GPIO_AF8_LPUART1;
 800146e:	2308      	movs	r3, #8
 8001470:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001474:	f107 03a4 	add.w	r3, r7, #164	@ 0xa4
 8001478:	4619      	mov	r1, r3
 800147a:	4826      	ldr	r0, [pc, #152]	@ (8001514 <HAL_UART_MspInit+0x140>)
 800147c:	f001 f82c 	bl	80024d8 <HAL_GPIO_Init>
    /* USER CODE BEGIN USART2_MspInit 1 */

    /* USER CODE END USART2_MspInit 1 */
  }

}
 8001480:	e040      	b.n	8001504 <HAL_UART_MspInit+0x130>
  else if(huart->Instance==USART2)
 8001482:	687b      	ldr	r3, [r7, #4]
 8001484:	681b      	ldr	r3, [r3, #0]
 8001486:	4a24      	ldr	r2, [pc, #144]	@ (8001518 <HAL_UART_MspInit+0x144>)
 8001488:	4293      	cmp	r3, r2
 800148a:	d13b      	bne.n	8001504 <HAL_UART_MspInit+0x130>
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART2;
 800148c:	2302      	movs	r3, #2
 800148e:	61bb      	str	r3, [r7, #24]
    PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 8001490:	2300      	movs	r3, #0
 8001492:	657b      	str	r3, [r7, #84]	@ 0x54
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8001494:	f107 0318 	add.w	r3, r7, #24
 8001498:	4618      	mov	r0, r3
 800149a:	f002 f891 	bl	80035c0 <HAL_RCCEx_PeriphCLKConfig>
 800149e:	4603      	mov	r3, r0
 80014a0:	2b00      	cmp	r3, #0
 80014a2:	d001      	beq.n	80014a8 <HAL_UART_MspInit+0xd4>
      Error_Handler();
 80014a4:	f7ff ff4b 	bl	800133e <Error_Handler>
    __HAL_RCC_USART2_CLK_ENABLE();
 80014a8:	4b19      	ldr	r3, [pc, #100]	@ (8001510 <HAL_UART_MspInit+0x13c>)
 80014aa:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80014ac:	4a18      	ldr	r2, [pc, #96]	@ (8001510 <HAL_UART_MspInit+0x13c>)
 80014ae:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80014b2:	6593      	str	r3, [r2, #88]	@ 0x58
 80014b4:	4b16      	ldr	r3, [pc, #88]	@ (8001510 <HAL_UART_MspInit+0x13c>)
 80014b6:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80014b8:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80014bc:	60fb      	str	r3, [r7, #12]
 80014be:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80014c0:	4b13      	ldr	r3, [pc, #76]	@ (8001510 <HAL_UART_MspInit+0x13c>)
 80014c2:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80014c4:	4a12      	ldr	r2, [pc, #72]	@ (8001510 <HAL_UART_MspInit+0x13c>)
 80014c6:	f043 0301 	orr.w	r3, r3, #1
 80014ca:	64d3      	str	r3, [r2, #76]	@ 0x4c
 80014cc:	4b10      	ldr	r3, [pc, #64]	@ (8001510 <HAL_UART_MspInit+0x13c>)
 80014ce:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80014d0:	f003 0301 	and.w	r3, r3, #1
 80014d4:	60bb      	str	r3, [r7, #8]
 80014d6:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 80014d8:	230c      	movs	r3, #12
 80014da:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80014de:	2302      	movs	r3, #2
 80014e0:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80014e4:	2300      	movs	r3, #0
 80014e6:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80014ea:	2303      	movs	r3, #3
 80014ec:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 80014f0:	2307      	movs	r3, #7
 80014f2:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80014f6:	f107 03a4 	add.w	r3, r7, #164	@ 0xa4
 80014fa:	4619      	mov	r1, r3
 80014fc:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8001500:	f000 ffea 	bl	80024d8 <HAL_GPIO_Init>
}
 8001504:	bf00      	nop
 8001506:	37b8      	adds	r7, #184	@ 0xb8
 8001508:	46bd      	mov	sp, r7
 800150a:	bd80      	pop	{r7, pc}
 800150c:	40008000 	.word	0x40008000
 8001510:	40021000 	.word	0x40021000
 8001514:	48001800 	.word	0x48001800
 8001518:	40004400 	.word	0x40004400

0800151c <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 800151c:	b480      	push	{r7}
 800151e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8001520:	bf00      	nop
 8001522:	e7fd      	b.n	8001520 <NMI_Handler+0x4>

08001524 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001524:	b480      	push	{r7}
 8001526:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001528:	bf00      	nop
 800152a:	e7fd      	b.n	8001528 <HardFault_Handler+0x4>

0800152c <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 800152c:	b480      	push	{r7}
 800152e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001530:	bf00      	nop
 8001532:	e7fd      	b.n	8001530 <MemManage_Handler+0x4>

08001534 <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8001534:	b480      	push	{r7}
 8001536:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001538:	bf00      	nop
 800153a:	e7fd      	b.n	8001538 <BusFault_Handler+0x4>

0800153c <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 800153c:	b480      	push	{r7}
 800153e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001540:	bf00      	nop
 8001542:	e7fd      	b.n	8001540 <UsageFault_Handler+0x4>

08001544 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8001544:	b480      	push	{r7}
 8001546:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8001548:	bf00      	nop
 800154a:	46bd      	mov	sp, r7
 800154c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001550:	4770      	bx	lr

08001552 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8001552:	b480      	push	{r7}
 8001554:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8001556:	bf00      	nop
 8001558:	46bd      	mov	sp, r7
 800155a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800155e:	4770      	bx	lr

08001560 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8001560:	b480      	push	{r7}
 8001562:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8001564:	bf00      	nop
 8001566:	46bd      	mov	sp, r7
 8001568:	f85d 7b04 	ldr.w	r7, [sp], #4
 800156c:	4770      	bx	lr

0800156e <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 800156e:	b580      	push	{r7, lr}
 8001570:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8001572:	f000 f8c9 	bl	8001708 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8001576:	bf00      	nop
 8001578:	bd80      	pop	{r7, pc}
	...

0800157c <_sbrk>:
 800157c:	b580      	push	{r7, lr}
 800157e:	b086      	sub	sp, #24
 8001580:	af00      	add	r7, sp, #0
 8001582:	6078      	str	r0, [r7, #4]
 8001584:	4a14      	ldr	r2, [pc, #80]	@ (80015d8 <_sbrk+0x5c>)
 8001586:	4b15      	ldr	r3, [pc, #84]	@ (80015dc <_sbrk+0x60>)
 8001588:	1ad3      	subs	r3, r2, r3
 800158a:	617b      	str	r3, [r7, #20]
 800158c:	697b      	ldr	r3, [r7, #20]
 800158e:	613b      	str	r3, [r7, #16]
 8001590:	4b13      	ldr	r3, [pc, #76]	@ (80015e0 <_sbrk+0x64>)
 8001592:	681b      	ldr	r3, [r3, #0]
 8001594:	2b00      	cmp	r3, #0
 8001596:	d102      	bne.n	800159e <_sbrk+0x22>
 8001598:	4b11      	ldr	r3, [pc, #68]	@ (80015e0 <_sbrk+0x64>)
 800159a:	4a12      	ldr	r2, [pc, #72]	@ (80015e4 <_sbrk+0x68>)
 800159c:	601a      	str	r2, [r3, #0]
 800159e:	4b10      	ldr	r3, [pc, #64]	@ (80015e0 <_sbrk+0x64>)
 80015a0:	681a      	ldr	r2, [r3, #0]
 80015a2:	687b      	ldr	r3, [r7, #4]
 80015a4:	4413      	add	r3, r2
 80015a6:	693a      	ldr	r2, [r7, #16]
 80015a8:	429a      	cmp	r2, r3
 80015aa:	d207      	bcs.n	80015bc <_sbrk+0x40>
 80015ac:	f003 fb6e 	bl	8004c8c <__errno>
 80015b0:	4603      	mov	r3, r0
 80015b2:	220c      	movs	r2, #12
 80015b4:	601a      	str	r2, [r3, #0]
 80015b6:	f04f 33ff 	mov.w	r3, #4294967295
 80015ba:	e009      	b.n	80015d0 <_sbrk+0x54>
 80015bc:	4b08      	ldr	r3, [pc, #32]	@ (80015e0 <_sbrk+0x64>)
 80015be:	681b      	ldr	r3, [r3, #0]
 80015c0:	60fb      	str	r3, [r7, #12]
 80015c2:	4b07      	ldr	r3, [pc, #28]	@ (80015e0 <_sbrk+0x64>)
 80015c4:	681a      	ldr	r2, [r3, #0]
 80015c6:	687b      	ldr	r3, [r7, #4]
 80015c8:	4413      	add	r3, r2
 80015ca:	4a05      	ldr	r2, [pc, #20]	@ (80015e0 <_sbrk+0x64>)
 80015cc:	6013      	str	r3, [r2, #0]
 80015ce:	68fb      	ldr	r3, [r7, #12]
 80015d0:	4618      	mov	r0, r3
 80015d2:	3718      	adds	r7, #24
 80015d4:	46bd      	mov	sp, r7
 80015d6:	bd80      	pop	{r7, pc}
 80015d8:	20040000 	.word	0x20040000
 80015dc:	00000400 	.word	0x00000400
 80015e0:	200002a4 	.word	0x200002a4
 80015e4:	200003f8 	.word	0x200003f8

080015e8 <SystemInit>:
 80015e8:	b480      	push	{r7}
 80015ea:	af00      	add	r7, sp, #0
 80015ec:	4b06      	ldr	r3, [pc, #24]	@ (8001608 <SystemInit+0x20>)
 80015ee:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80015f2:	4a05      	ldr	r2, [pc, #20]	@ (8001608 <SystemInit+0x20>)
 80015f4:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 80015f8:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 80015fc:	bf00      	nop
 80015fe:	46bd      	mov	sp, r7
 8001600:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001604:	4770      	bx	lr
 8001606:	bf00      	nop
 8001608:	e000ed00 	.word	0xe000ed00

0800160c <Reset_Handler>:
 800160c:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8001644 <LoopForever+0x2>
 8001610:	f7ff ffea 	bl	80015e8 <SystemInit>
 8001614:	480c      	ldr	r0, [pc, #48]	@ (8001648 <LoopForever+0x6>)
 8001616:	490d      	ldr	r1, [pc, #52]	@ (800164c <LoopForever+0xa>)
 8001618:	4a0d      	ldr	r2, [pc, #52]	@ (8001650 <LoopForever+0xe>)
 800161a:	2300      	movs	r3, #0
 800161c:	e002      	b.n	8001624 <LoopCopyDataInit>

0800161e <CopyDataInit>:
 800161e:	58d4      	ldr	r4, [r2, r3]
 8001620:	50c4      	str	r4, [r0, r3]
 8001622:	3304      	adds	r3, #4

08001624 <LoopCopyDataInit>:
 8001624:	18c4      	adds	r4, r0, r3
 8001626:	428c      	cmp	r4, r1
 8001628:	d3f9      	bcc.n	800161e <CopyDataInit>
 800162a:	4a0a      	ldr	r2, [pc, #40]	@ (8001654 <LoopForever+0x12>)
 800162c:	4c0a      	ldr	r4, [pc, #40]	@ (8001658 <LoopForever+0x16>)
 800162e:	2300      	movs	r3, #0
 8001630:	e001      	b.n	8001636 <LoopFillZerobss>

08001632 <FillZerobss>:
 8001632:	6013      	str	r3, [r2, #0]
 8001634:	3204      	adds	r2, #4

08001636 <LoopFillZerobss>:
 8001636:	42a2      	cmp	r2, r4
 8001638:	d3fb      	bcc.n	8001632 <FillZerobss>
 800163a:	f003 fb2d 	bl	8004c98 <__libc_init_array>
 800163e:	f7fe ffc5 	bl	80005cc <main>

08001642 <LoopForever>:
 8001642:	e7fe      	b.n	8001642 <LoopForever>
 8001644:	20040000 	.word	0x20040000
 8001648:	20000000 	.word	0x20000000
 800164c:	20000088 	.word	0x20000088
 8001650:	08005b1c 	.word	0x08005b1c
 8001654:	20000088 	.word	0x20000088
 8001658:	200003f4 	.word	0x200003f4

0800165c <ADC1_2_IRQHandler>:
 800165c:	e7fe      	b.n	800165c <ADC1_2_IRQHandler>

0800165e <HAL_Init>:
 800165e:	b580      	push	{r7, lr}
 8001660:	b082      	sub	sp, #8
 8001662:	af00      	add	r7, sp, #0
 8001664:	2300      	movs	r3, #0
 8001666:	71fb      	strb	r3, [r7, #7]
 8001668:	2003      	movs	r0, #3
 800166a:	f000 f91f 	bl	80018ac <HAL_NVIC_SetPriorityGrouping>
 800166e:	2000      	movs	r0, #0
 8001670:	f000 f80e 	bl	8001690 <HAL_InitTick>
 8001674:	4603      	mov	r3, r0
 8001676:	2b00      	cmp	r3, #0
 8001678:	d002      	beq.n	8001680 <HAL_Init+0x22>
 800167a:	2301      	movs	r3, #1
 800167c:	71fb      	strb	r3, [r7, #7]
 800167e:	e001      	b.n	8001684 <HAL_Init+0x26>
 8001680:	f7ff fe64 	bl	800134c <HAL_MspInit>
 8001684:	79fb      	ldrb	r3, [r7, #7]
 8001686:	4618      	mov	r0, r3
 8001688:	3708      	adds	r7, #8
 800168a:	46bd      	mov	sp, r7
 800168c:	bd80      	pop	{r7, pc}
	...

08001690 <HAL_InitTick>:
 8001690:	b580      	push	{r7, lr}
 8001692:	b084      	sub	sp, #16
 8001694:	af00      	add	r7, sp, #0
 8001696:	6078      	str	r0, [r7, #4]
 8001698:	2300      	movs	r3, #0
 800169a:	73fb      	strb	r3, [r7, #15]
 800169c:	4b17      	ldr	r3, [pc, #92]	@ (80016fc <HAL_InitTick+0x6c>)
 800169e:	781b      	ldrb	r3, [r3, #0]
 80016a0:	2b00      	cmp	r3, #0
 80016a2:	d023      	beq.n	80016ec <HAL_InitTick+0x5c>
 80016a4:	4b16      	ldr	r3, [pc, #88]	@ (8001700 <HAL_InitTick+0x70>)
 80016a6:	681a      	ldr	r2, [r3, #0]
 80016a8:	4b14      	ldr	r3, [pc, #80]	@ (80016fc <HAL_InitTick+0x6c>)
 80016aa:	781b      	ldrb	r3, [r3, #0]
 80016ac:	4619      	mov	r1, r3
 80016ae:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 80016b2:	fbb3 f3f1 	udiv	r3, r3, r1
 80016b6:	fbb2 f3f3 	udiv	r3, r2, r3
 80016ba:	4618      	mov	r0, r3
 80016bc:	f000 f91d 	bl	80018fa <HAL_SYSTICK_Config>
 80016c0:	4603      	mov	r3, r0
 80016c2:	2b00      	cmp	r3, #0
 80016c4:	d10f      	bne.n	80016e6 <HAL_InitTick+0x56>
 80016c6:	687b      	ldr	r3, [r7, #4]
 80016c8:	2b0f      	cmp	r3, #15
 80016ca:	d809      	bhi.n	80016e0 <HAL_InitTick+0x50>
 80016cc:	2200      	movs	r2, #0
 80016ce:	6879      	ldr	r1, [r7, #4]
 80016d0:	f04f 30ff 	mov.w	r0, #4294967295
 80016d4:	f000 f8f5 	bl	80018c2 <HAL_NVIC_SetPriority>
 80016d8:	4a0a      	ldr	r2, [pc, #40]	@ (8001704 <HAL_InitTick+0x74>)
 80016da:	687b      	ldr	r3, [r7, #4]
 80016dc:	6013      	str	r3, [r2, #0]
 80016de:	e007      	b.n	80016f0 <HAL_InitTick+0x60>
 80016e0:	2301      	movs	r3, #1
 80016e2:	73fb      	strb	r3, [r7, #15]
 80016e4:	e004      	b.n	80016f0 <HAL_InitTick+0x60>
 80016e6:	2301      	movs	r3, #1
 80016e8:	73fb      	strb	r3, [r7, #15]
 80016ea:	e001      	b.n	80016f0 <HAL_InitTick+0x60>
 80016ec:	2301      	movs	r3, #1
 80016ee:	73fb      	strb	r3, [r7, #15]
 80016f0:	7bfb      	ldrb	r3, [r7, #15]
 80016f2:	4618      	mov	r0, r3
 80016f4:	3710      	adds	r7, #16
 80016f6:	46bd      	mov	sp, r7
 80016f8:	bd80      	pop	{r7, pc}
 80016fa:	bf00      	nop
 80016fc:	20000014 	.word	0x20000014
 8001700:	2000000c 	.word	0x2000000c
 8001704:	20000010 	.word	0x20000010

08001708 <HAL_IncTick>:
 8001708:	b480      	push	{r7}
 800170a:	af00      	add	r7, sp, #0
 800170c:	4b06      	ldr	r3, [pc, #24]	@ (8001728 <HAL_IncTick+0x20>)
 800170e:	781b      	ldrb	r3, [r3, #0]
 8001710:	461a      	mov	r2, r3
 8001712:	4b06      	ldr	r3, [pc, #24]	@ (800172c <HAL_IncTick+0x24>)
 8001714:	681b      	ldr	r3, [r3, #0]
 8001716:	4413      	add	r3, r2
 8001718:	4a04      	ldr	r2, [pc, #16]	@ (800172c <HAL_IncTick+0x24>)
 800171a:	6013      	str	r3, [r2, #0]
 800171c:	bf00      	nop
 800171e:	46bd      	mov	sp, r7
 8001720:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001724:	4770      	bx	lr
 8001726:	bf00      	nop
 8001728:	20000014 	.word	0x20000014
 800172c:	200002a8 	.word	0x200002a8

08001730 <HAL_GetTick>:
 8001730:	b480      	push	{r7}
 8001732:	af00      	add	r7, sp, #0
 8001734:	4b03      	ldr	r3, [pc, #12]	@ (8001744 <HAL_GetTick+0x14>)
 8001736:	681b      	ldr	r3, [r3, #0]
 8001738:	4618      	mov	r0, r3
 800173a:	46bd      	mov	sp, r7
 800173c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001740:	4770      	bx	lr
 8001742:	bf00      	nop
 8001744:	200002a8 	.word	0x200002a8

08001748 <__NVIC_SetPriorityGrouping>:
 8001748:	b480      	push	{r7}
 800174a:	b085      	sub	sp, #20
 800174c:	af00      	add	r7, sp, #0
 800174e:	6078      	str	r0, [r7, #4]
 8001750:	687b      	ldr	r3, [r7, #4]
 8001752:	f003 0307 	and.w	r3, r3, #7
 8001756:	60fb      	str	r3, [r7, #12]
 8001758:	4b0c      	ldr	r3, [pc, #48]	@ (800178c <__NVIC_SetPriorityGrouping+0x44>)
 800175a:	68db      	ldr	r3, [r3, #12]
 800175c:	60bb      	str	r3, [r7, #8]
 800175e:	68ba      	ldr	r2, [r7, #8]
 8001760:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8001764:	4013      	ands	r3, r2
 8001766:	60bb      	str	r3, [r7, #8]
 8001768:	68fb      	ldr	r3, [r7, #12]
 800176a:	021a      	lsls	r2, r3, #8
 800176c:	68bb      	ldr	r3, [r7, #8]
 800176e:	4313      	orrs	r3, r2
 8001770:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8001774:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8001778:	60bb      	str	r3, [r7, #8]
 800177a:	4a04      	ldr	r2, [pc, #16]	@ (800178c <__NVIC_SetPriorityGrouping+0x44>)
 800177c:	68bb      	ldr	r3, [r7, #8]
 800177e:	60d3      	str	r3, [r2, #12]
 8001780:	bf00      	nop
 8001782:	3714      	adds	r7, #20
 8001784:	46bd      	mov	sp, r7
 8001786:	f85d 7b04 	ldr.w	r7, [sp], #4
 800178a:	4770      	bx	lr
 800178c:	e000ed00 	.word	0xe000ed00

08001790 <__NVIC_GetPriorityGrouping>:
 8001790:	b480      	push	{r7}
 8001792:	af00      	add	r7, sp, #0
 8001794:	4b04      	ldr	r3, [pc, #16]	@ (80017a8 <__NVIC_GetPriorityGrouping+0x18>)
 8001796:	68db      	ldr	r3, [r3, #12]
 8001798:	0a1b      	lsrs	r3, r3, #8
 800179a:	f003 0307 	and.w	r3, r3, #7
 800179e:	4618      	mov	r0, r3
 80017a0:	46bd      	mov	sp, r7
 80017a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017a6:	4770      	bx	lr
 80017a8:	e000ed00 	.word	0xe000ed00

080017ac <__NVIC_SetPriority>:
 80017ac:	b480      	push	{r7}
 80017ae:	b083      	sub	sp, #12
 80017b0:	af00      	add	r7, sp, #0
 80017b2:	4603      	mov	r3, r0
 80017b4:	6039      	str	r1, [r7, #0]
 80017b6:	71fb      	strb	r3, [r7, #7]
 80017b8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80017bc:	2b00      	cmp	r3, #0
 80017be:	db0a      	blt.n	80017d6 <__NVIC_SetPriority+0x2a>
 80017c0:	683b      	ldr	r3, [r7, #0]
 80017c2:	b2da      	uxtb	r2, r3
 80017c4:	490c      	ldr	r1, [pc, #48]	@ (80017f8 <__NVIC_SetPriority+0x4c>)
 80017c6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80017ca:	0112      	lsls	r2, r2, #4
 80017cc:	b2d2      	uxtb	r2, r2
 80017ce:	440b      	add	r3, r1
 80017d0:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 80017d4:	e00a      	b.n	80017ec <__NVIC_SetPriority+0x40>
 80017d6:	683b      	ldr	r3, [r7, #0]
 80017d8:	b2da      	uxtb	r2, r3
 80017da:	4908      	ldr	r1, [pc, #32]	@ (80017fc <__NVIC_SetPriority+0x50>)
 80017dc:	79fb      	ldrb	r3, [r7, #7]
 80017de:	f003 030f 	and.w	r3, r3, #15
 80017e2:	3b04      	subs	r3, #4
 80017e4:	0112      	lsls	r2, r2, #4
 80017e6:	b2d2      	uxtb	r2, r2
 80017e8:	440b      	add	r3, r1
 80017ea:	761a      	strb	r2, [r3, #24]
 80017ec:	bf00      	nop
 80017ee:	370c      	adds	r7, #12
 80017f0:	46bd      	mov	sp, r7
 80017f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017f6:	4770      	bx	lr
 80017f8:	e000e100 	.word	0xe000e100
 80017fc:	e000ed00 	.word	0xe000ed00

08001800 <NVIC_EncodePriority>:
 8001800:	b480      	push	{r7}
 8001802:	b089      	sub	sp, #36	@ 0x24
 8001804:	af00      	add	r7, sp, #0
 8001806:	60f8      	str	r0, [r7, #12]
 8001808:	60b9      	str	r1, [r7, #8]
 800180a:	607a      	str	r2, [r7, #4]
 800180c:	68fb      	ldr	r3, [r7, #12]
 800180e:	f003 0307 	and.w	r3, r3, #7
 8001812:	61fb      	str	r3, [r7, #28]
 8001814:	69fb      	ldr	r3, [r7, #28]
 8001816:	f1c3 0307 	rsb	r3, r3, #7
 800181a:	2b04      	cmp	r3, #4
 800181c:	bf28      	it	cs
 800181e:	2304      	movcs	r3, #4
 8001820:	61bb      	str	r3, [r7, #24]
 8001822:	69fb      	ldr	r3, [r7, #28]
 8001824:	3304      	adds	r3, #4
 8001826:	2b06      	cmp	r3, #6
 8001828:	d902      	bls.n	8001830 <NVIC_EncodePriority+0x30>
 800182a:	69fb      	ldr	r3, [r7, #28]
 800182c:	3b03      	subs	r3, #3
 800182e:	e000      	b.n	8001832 <NVIC_EncodePriority+0x32>
 8001830:	2300      	movs	r3, #0
 8001832:	617b      	str	r3, [r7, #20]
 8001834:	f04f 32ff 	mov.w	r2, #4294967295
 8001838:	69bb      	ldr	r3, [r7, #24]
 800183a:	fa02 f303 	lsl.w	r3, r2, r3
 800183e:	43da      	mvns	r2, r3
 8001840:	68bb      	ldr	r3, [r7, #8]
 8001842:	401a      	ands	r2, r3
 8001844:	697b      	ldr	r3, [r7, #20]
 8001846:	409a      	lsls	r2, r3
 8001848:	f04f 31ff 	mov.w	r1, #4294967295
 800184c:	697b      	ldr	r3, [r7, #20]
 800184e:	fa01 f303 	lsl.w	r3, r1, r3
 8001852:	43d9      	mvns	r1, r3
 8001854:	687b      	ldr	r3, [r7, #4]
 8001856:	400b      	ands	r3, r1
 8001858:	4313      	orrs	r3, r2
 800185a:	4618      	mov	r0, r3
 800185c:	3724      	adds	r7, #36	@ 0x24
 800185e:	46bd      	mov	sp, r7
 8001860:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001864:	4770      	bx	lr
	...

08001868 <SysTick_Config>:
 8001868:	b580      	push	{r7, lr}
 800186a:	b082      	sub	sp, #8
 800186c:	af00      	add	r7, sp, #0
 800186e:	6078      	str	r0, [r7, #4]
 8001870:	687b      	ldr	r3, [r7, #4]
 8001872:	3b01      	subs	r3, #1
 8001874:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8001878:	d301      	bcc.n	800187e <SysTick_Config+0x16>
 800187a:	2301      	movs	r3, #1
 800187c:	e00f      	b.n	800189e <SysTick_Config+0x36>
 800187e:	4a0a      	ldr	r2, [pc, #40]	@ (80018a8 <SysTick_Config+0x40>)
 8001880:	687b      	ldr	r3, [r7, #4]
 8001882:	3b01      	subs	r3, #1
 8001884:	6053      	str	r3, [r2, #4]
 8001886:	210f      	movs	r1, #15
 8001888:	f04f 30ff 	mov.w	r0, #4294967295
 800188c:	f7ff ff8e 	bl	80017ac <__NVIC_SetPriority>
 8001890:	4b05      	ldr	r3, [pc, #20]	@ (80018a8 <SysTick_Config+0x40>)
 8001892:	2200      	movs	r2, #0
 8001894:	609a      	str	r2, [r3, #8]
 8001896:	4b04      	ldr	r3, [pc, #16]	@ (80018a8 <SysTick_Config+0x40>)
 8001898:	2207      	movs	r2, #7
 800189a:	601a      	str	r2, [r3, #0]
 800189c:	2300      	movs	r3, #0
 800189e:	4618      	mov	r0, r3
 80018a0:	3708      	adds	r7, #8
 80018a2:	46bd      	mov	sp, r7
 80018a4:	bd80      	pop	{r7, pc}
 80018a6:	bf00      	nop
 80018a8:	e000e010 	.word	0xe000e010

080018ac <HAL_NVIC_SetPriorityGrouping>:
 80018ac:	b580      	push	{r7, lr}
 80018ae:	b082      	sub	sp, #8
 80018b0:	af00      	add	r7, sp, #0
 80018b2:	6078      	str	r0, [r7, #4]
 80018b4:	6878      	ldr	r0, [r7, #4]
 80018b6:	f7ff ff47 	bl	8001748 <__NVIC_SetPriorityGrouping>
 80018ba:	bf00      	nop
 80018bc:	3708      	adds	r7, #8
 80018be:	46bd      	mov	sp, r7
 80018c0:	bd80      	pop	{r7, pc}

080018c2 <HAL_NVIC_SetPriority>:
 80018c2:	b580      	push	{r7, lr}
 80018c4:	b086      	sub	sp, #24
 80018c6:	af00      	add	r7, sp, #0
 80018c8:	4603      	mov	r3, r0
 80018ca:	60b9      	str	r1, [r7, #8]
 80018cc:	607a      	str	r2, [r7, #4]
 80018ce:	73fb      	strb	r3, [r7, #15]
 80018d0:	2300      	movs	r3, #0
 80018d2:	617b      	str	r3, [r7, #20]
 80018d4:	f7ff ff5c 	bl	8001790 <__NVIC_GetPriorityGrouping>
 80018d8:	6178      	str	r0, [r7, #20]
 80018da:	687a      	ldr	r2, [r7, #4]
 80018dc:	68b9      	ldr	r1, [r7, #8]
 80018de:	6978      	ldr	r0, [r7, #20]
 80018e0:	f7ff ff8e 	bl	8001800 <NVIC_EncodePriority>
 80018e4:	4602      	mov	r2, r0
 80018e6:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80018ea:	4611      	mov	r1, r2
 80018ec:	4618      	mov	r0, r3
 80018ee:	f7ff ff5d 	bl	80017ac <__NVIC_SetPriority>
 80018f2:	bf00      	nop
 80018f4:	3718      	adds	r7, #24
 80018f6:	46bd      	mov	sp, r7
 80018f8:	bd80      	pop	{r7, pc}

080018fa <HAL_SYSTICK_Config>:
 80018fa:	b580      	push	{r7, lr}
 80018fc:	b082      	sub	sp, #8
 80018fe:	af00      	add	r7, sp, #0
 8001900:	6078      	str	r0, [r7, #4]
 8001902:	6878      	ldr	r0, [r7, #4]
 8001904:	f7ff ffb0 	bl	8001868 <SysTick_Config>
 8001908:	4603      	mov	r3, r0
 800190a:	4618      	mov	r0, r3
 800190c:	3708      	adds	r7, #8
 800190e:	46bd      	mov	sp, r7
 8001910:	bd80      	pop	{r7, pc}
	...

08001914 <HAL_CRC_Init>:
 8001914:	b580      	push	{r7, lr}
 8001916:	b082      	sub	sp, #8
 8001918:	af00      	add	r7, sp, #0
 800191a:	6078      	str	r0, [r7, #4]
 800191c:	687b      	ldr	r3, [r7, #4]
 800191e:	2b00      	cmp	r3, #0
 8001920:	d101      	bne.n	8001926 <HAL_CRC_Init+0x12>
 8001922:	2301      	movs	r3, #1
 8001924:	e054      	b.n	80019d0 <HAL_CRC_Init+0xbc>
 8001926:	687b      	ldr	r3, [r7, #4]
 8001928:	7f5b      	ldrb	r3, [r3, #29]
 800192a:	b2db      	uxtb	r3, r3
 800192c:	2b00      	cmp	r3, #0
 800192e:	d105      	bne.n	800193c <HAL_CRC_Init+0x28>
 8001930:	687b      	ldr	r3, [r7, #4]
 8001932:	2200      	movs	r2, #0
 8001934:	771a      	strb	r2, [r3, #28]
 8001936:	6878      	ldr	r0, [r7, #4]
 8001938:	f7ff fd2c 	bl	8001394 <HAL_CRC_MspInit>
 800193c:	687b      	ldr	r3, [r7, #4]
 800193e:	2202      	movs	r2, #2
 8001940:	775a      	strb	r2, [r3, #29]
 8001942:	687b      	ldr	r3, [r7, #4]
 8001944:	791b      	ldrb	r3, [r3, #4]
 8001946:	2b00      	cmp	r3, #0
 8001948:	d10c      	bne.n	8001964 <HAL_CRC_Init+0x50>
 800194a:	687b      	ldr	r3, [r7, #4]
 800194c:	681b      	ldr	r3, [r3, #0]
 800194e:	4a22      	ldr	r2, [pc, #136]	@ (80019d8 <HAL_CRC_Init+0xc4>)
 8001950:	615a      	str	r2, [r3, #20]
 8001952:	687b      	ldr	r3, [r7, #4]
 8001954:	681b      	ldr	r3, [r3, #0]
 8001956:	689a      	ldr	r2, [r3, #8]
 8001958:	687b      	ldr	r3, [r7, #4]
 800195a:	681b      	ldr	r3, [r3, #0]
 800195c:	f022 0218 	bic.w	r2, r2, #24
 8001960:	609a      	str	r2, [r3, #8]
 8001962:	e00c      	b.n	800197e <HAL_CRC_Init+0x6a>
 8001964:	687b      	ldr	r3, [r7, #4]
 8001966:	6899      	ldr	r1, [r3, #8]
 8001968:	687b      	ldr	r3, [r7, #4]
 800196a:	68db      	ldr	r3, [r3, #12]
 800196c:	461a      	mov	r2, r3
 800196e:	6878      	ldr	r0, [r7, #4]
 8001970:	f000 f942 	bl	8001bf8 <HAL_CRCEx_Polynomial_Set>
 8001974:	4603      	mov	r3, r0
 8001976:	2b00      	cmp	r3, #0
 8001978:	d001      	beq.n	800197e <HAL_CRC_Init+0x6a>
 800197a:	2301      	movs	r3, #1
 800197c:	e028      	b.n	80019d0 <HAL_CRC_Init+0xbc>
 800197e:	687b      	ldr	r3, [r7, #4]
 8001980:	795b      	ldrb	r3, [r3, #5]
 8001982:	2b00      	cmp	r3, #0
 8001984:	d105      	bne.n	8001992 <HAL_CRC_Init+0x7e>
 8001986:	687b      	ldr	r3, [r7, #4]
 8001988:	681b      	ldr	r3, [r3, #0]
 800198a:	f04f 32ff 	mov.w	r2, #4294967295
 800198e:	611a      	str	r2, [r3, #16]
 8001990:	e004      	b.n	800199c <HAL_CRC_Init+0x88>
 8001992:	687b      	ldr	r3, [r7, #4]
 8001994:	681b      	ldr	r3, [r3, #0]
 8001996:	687a      	ldr	r2, [r7, #4]
 8001998:	6912      	ldr	r2, [r2, #16]
 800199a:	611a      	str	r2, [r3, #16]
 800199c:	687b      	ldr	r3, [r7, #4]
 800199e:	681b      	ldr	r3, [r3, #0]
 80019a0:	689b      	ldr	r3, [r3, #8]
 80019a2:	f023 0160 	bic.w	r1, r3, #96	@ 0x60
 80019a6:	687b      	ldr	r3, [r7, #4]
 80019a8:	695a      	ldr	r2, [r3, #20]
 80019aa:	687b      	ldr	r3, [r7, #4]
 80019ac:	681b      	ldr	r3, [r3, #0]
 80019ae:	430a      	orrs	r2, r1
 80019b0:	609a      	str	r2, [r3, #8]
 80019b2:	687b      	ldr	r3, [r7, #4]
 80019b4:	681b      	ldr	r3, [r3, #0]
 80019b6:	689b      	ldr	r3, [r3, #8]
 80019b8:	f023 0180 	bic.w	r1, r3, #128	@ 0x80
 80019bc:	687b      	ldr	r3, [r7, #4]
 80019be:	699a      	ldr	r2, [r3, #24]
 80019c0:	687b      	ldr	r3, [r7, #4]
 80019c2:	681b      	ldr	r3, [r3, #0]
 80019c4:	430a      	orrs	r2, r1
 80019c6:	609a      	str	r2, [r3, #8]
 80019c8:	687b      	ldr	r3, [r7, #4]
 80019ca:	2201      	movs	r2, #1
 80019cc:	775a      	strb	r2, [r3, #29]
 80019ce:	2300      	movs	r3, #0
 80019d0:	4618      	mov	r0, r3
 80019d2:	3708      	adds	r7, #8
 80019d4:	46bd      	mov	sp, r7
 80019d6:	bd80      	pop	{r7, pc}
 80019d8:	04c11db7 	.word	0x04c11db7

080019dc <HAL_CRC_Accumulate>:
 80019dc:	b580      	push	{r7, lr}
 80019de:	b086      	sub	sp, #24
 80019e0:	af00      	add	r7, sp, #0
 80019e2:	60f8      	str	r0, [r7, #12]
 80019e4:	60b9      	str	r1, [r7, #8]
 80019e6:	607a      	str	r2, [r7, #4]
 80019e8:	2300      	movs	r3, #0
 80019ea:	613b      	str	r3, [r7, #16]
 80019ec:	68fb      	ldr	r3, [r7, #12]
 80019ee:	2202      	movs	r2, #2
 80019f0:	775a      	strb	r2, [r3, #29]
 80019f2:	68fb      	ldr	r3, [r7, #12]
 80019f4:	6a1b      	ldr	r3, [r3, #32]
 80019f6:	2b03      	cmp	r3, #3
 80019f8:	d006      	beq.n	8001a08 <HAL_CRC_Accumulate+0x2c>
 80019fa:	2b03      	cmp	r3, #3
 80019fc:	d829      	bhi.n	8001a52 <HAL_CRC_Accumulate+0x76>
 80019fe:	2b01      	cmp	r3, #1
 8001a00:	d019      	beq.n	8001a36 <HAL_CRC_Accumulate+0x5a>
 8001a02:	2b02      	cmp	r3, #2
 8001a04:	d01e      	beq.n	8001a44 <HAL_CRC_Accumulate+0x68>
 8001a06:	e024      	b.n	8001a52 <HAL_CRC_Accumulate+0x76>
 8001a08:	2300      	movs	r3, #0
 8001a0a:	617b      	str	r3, [r7, #20]
 8001a0c:	e00a      	b.n	8001a24 <HAL_CRC_Accumulate+0x48>
 8001a0e:	697b      	ldr	r3, [r7, #20]
 8001a10:	009b      	lsls	r3, r3, #2
 8001a12:	68ba      	ldr	r2, [r7, #8]
 8001a14:	441a      	add	r2, r3
 8001a16:	68fb      	ldr	r3, [r7, #12]
 8001a18:	681b      	ldr	r3, [r3, #0]
 8001a1a:	6812      	ldr	r2, [r2, #0]
 8001a1c:	601a      	str	r2, [r3, #0]
 8001a1e:	697b      	ldr	r3, [r7, #20]
 8001a20:	3301      	adds	r3, #1
 8001a22:	617b      	str	r3, [r7, #20]
 8001a24:	697a      	ldr	r2, [r7, #20]
 8001a26:	687b      	ldr	r3, [r7, #4]
 8001a28:	429a      	cmp	r2, r3
 8001a2a:	d3f0      	bcc.n	8001a0e <HAL_CRC_Accumulate+0x32>
 8001a2c:	68fb      	ldr	r3, [r7, #12]
 8001a2e:	681b      	ldr	r3, [r3, #0]
 8001a30:	681b      	ldr	r3, [r3, #0]
 8001a32:	613b      	str	r3, [r7, #16]
 8001a34:	e00e      	b.n	8001a54 <HAL_CRC_Accumulate+0x78>
 8001a36:	687a      	ldr	r2, [r7, #4]
 8001a38:	68b9      	ldr	r1, [r7, #8]
 8001a3a:	68f8      	ldr	r0, [r7, #12]
 8001a3c:	f000 f812 	bl	8001a64 <CRC_Handle_8>
 8001a40:	6138      	str	r0, [r7, #16]
 8001a42:	e007      	b.n	8001a54 <HAL_CRC_Accumulate+0x78>
 8001a44:	687a      	ldr	r2, [r7, #4]
 8001a46:	68b9      	ldr	r1, [r7, #8]
 8001a48:	68f8      	ldr	r0, [r7, #12]
 8001a4a:	f000 f89b 	bl	8001b84 <CRC_Handle_16>
 8001a4e:	6138      	str	r0, [r7, #16]
 8001a50:	e000      	b.n	8001a54 <HAL_CRC_Accumulate+0x78>
 8001a52:	bf00      	nop
 8001a54:	68fb      	ldr	r3, [r7, #12]
 8001a56:	2201      	movs	r2, #1
 8001a58:	775a      	strb	r2, [r3, #29]
 8001a5a:	693b      	ldr	r3, [r7, #16]
 8001a5c:	4618      	mov	r0, r3
 8001a5e:	3718      	adds	r7, #24
 8001a60:	46bd      	mov	sp, r7
 8001a62:	bd80      	pop	{r7, pc}

08001a64 <CRC_Handle_8>:
 8001a64:	b480      	push	{r7}
 8001a66:	b089      	sub	sp, #36	@ 0x24
 8001a68:	af00      	add	r7, sp, #0
 8001a6a:	60f8      	str	r0, [r7, #12]
 8001a6c:	60b9      	str	r1, [r7, #8]
 8001a6e:	607a      	str	r2, [r7, #4]
 8001a70:	2300      	movs	r3, #0
 8001a72:	61fb      	str	r3, [r7, #28]
 8001a74:	e023      	b.n	8001abe <CRC_Handle_8+0x5a>
 8001a76:	69fb      	ldr	r3, [r7, #28]
 8001a78:	009b      	lsls	r3, r3, #2
 8001a7a:	68ba      	ldr	r2, [r7, #8]
 8001a7c:	4413      	add	r3, r2
 8001a7e:	781b      	ldrb	r3, [r3, #0]
 8001a80:	061a      	lsls	r2, r3, #24
 8001a82:	69fb      	ldr	r3, [r7, #28]
 8001a84:	009b      	lsls	r3, r3, #2
 8001a86:	3301      	adds	r3, #1
 8001a88:	68b9      	ldr	r1, [r7, #8]
 8001a8a:	440b      	add	r3, r1
 8001a8c:	781b      	ldrb	r3, [r3, #0]
 8001a8e:	041b      	lsls	r3, r3, #16
 8001a90:	431a      	orrs	r2, r3
 8001a92:	69fb      	ldr	r3, [r7, #28]
 8001a94:	009b      	lsls	r3, r3, #2
 8001a96:	3302      	adds	r3, #2
 8001a98:	68b9      	ldr	r1, [r7, #8]
 8001a9a:	440b      	add	r3, r1
 8001a9c:	781b      	ldrb	r3, [r3, #0]
 8001a9e:	021b      	lsls	r3, r3, #8
 8001aa0:	431a      	orrs	r2, r3
 8001aa2:	69fb      	ldr	r3, [r7, #28]
 8001aa4:	009b      	lsls	r3, r3, #2
 8001aa6:	3303      	adds	r3, #3
 8001aa8:	68b9      	ldr	r1, [r7, #8]
 8001aaa:	440b      	add	r3, r1
 8001aac:	781b      	ldrb	r3, [r3, #0]
 8001aae:	4619      	mov	r1, r3
 8001ab0:	68fb      	ldr	r3, [r7, #12]
 8001ab2:	681b      	ldr	r3, [r3, #0]
 8001ab4:	430a      	orrs	r2, r1
 8001ab6:	601a      	str	r2, [r3, #0]
 8001ab8:	69fb      	ldr	r3, [r7, #28]
 8001aba:	3301      	adds	r3, #1
 8001abc:	61fb      	str	r3, [r7, #28]
 8001abe:	687b      	ldr	r3, [r7, #4]
 8001ac0:	089b      	lsrs	r3, r3, #2
 8001ac2:	69fa      	ldr	r2, [r7, #28]
 8001ac4:	429a      	cmp	r2, r3
 8001ac6:	d3d6      	bcc.n	8001a76 <CRC_Handle_8+0x12>
 8001ac8:	687b      	ldr	r3, [r7, #4]
 8001aca:	f003 0303 	and.w	r3, r3, #3
 8001ace:	2b00      	cmp	r3, #0
 8001ad0:	d04f      	beq.n	8001b72 <CRC_Handle_8+0x10e>
 8001ad2:	687b      	ldr	r3, [r7, #4]
 8001ad4:	f003 0303 	and.w	r3, r3, #3
 8001ad8:	2b01      	cmp	r3, #1
 8001ada:	d107      	bne.n	8001aec <CRC_Handle_8+0x88>
 8001adc:	69fb      	ldr	r3, [r7, #28]
 8001ade:	009b      	lsls	r3, r3, #2
 8001ae0:	68ba      	ldr	r2, [r7, #8]
 8001ae2:	4413      	add	r3, r2
 8001ae4:	68fa      	ldr	r2, [r7, #12]
 8001ae6:	6812      	ldr	r2, [r2, #0]
 8001ae8:	781b      	ldrb	r3, [r3, #0]
 8001aea:	7013      	strb	r3, [r2, #0]
 8001aec:	687b      	ldr	r3, [r7, #4]
 8001aee:	f003 0303 	and.w	r3, r3, #3
 8001af2:	2b02      	cmp	r3, #2
 8001af4:	d117      	bne.n	8001b26 <CRC_Handle_8+0xc2>
 8001af6:	69fb      	ldr	r3, [r7, #28]
 8001af8:	009b      	lsls	r3, r3, #2
 8001afa:	68ba      	ldr	r2, [r7, #8]
 8001afc:	4413      	add	r3, r2
 8001afe:	781b      	ldrb	r3, [r3, #0]
 8001b00:	b21b      	sxth	r3, r3
 8001b02:	021b      	lsls	r3, r3, #8
 8001b04:	b21a      	sxth	r2, r3
 8001b06:	69fb      	ldr	r3, [r7, #28]
 8001b08:	009b      	lsls	r3, r3, #2
 8001b0a:	3301      	adds	r3, #1
 8001b0c:	68b9      	ldr	r1, [r7, #8]
 8001b0e:	440b      	add	r3, r1
 8001b10:	781b      	ldrb	r3, [r3, #0]
 8001b12:	b21b      	sxth	r3, r3
 8001b14:	4313      	orrs	r3, r2
 8001b16:	b21b      	sxth	r3, r3
 8001b18:	837b      	strh	r3, [r7, #26]
 8001b1a:	68fb      	ldr	r3, [r7, #12]
 8001b1c:	681b      	ldr	r3, [r3, #0]
 8001b1e:	617b      	str	r3, [r7, #20]
 8001b20:	697b      	ldr	r3, [r7, #20]
 8001b22:	8b7a      	ldrh	r2, [r7, #26]
 8001b24:	801a      	strh	r2, [r3, #0]
 8001b26:	687b      	ldr	r3, [r7, #4]
 8001b28:	f003 0303 	and.w	r3, r3, #3
 8001b2c:	2b03      	cmp	r3, #3
 8001b2e:	d120      	bne.n	8001b72 <CRC_Handle_8+0x10e>
 8001b30:	69fb      	ldr	r3, [r7, #28]
 8001b32:	009b      	lsls	r3, r3, #2
 8001b34:	68ba      	ldr	r2, [r7, #8]
 8001b36:	4413      	add	r3, r2
 8001b38:	781b      	ldrb	r3, [r3, #0]
 8001b3a:	b21b      	sxth	r3, r3
 8001b3c:	021b      	lsls	r3, r3, #8
 8001b3e:	b21a      	sxth	r2, r3
 8001b40:	69fb      	ldr	r3, [r7, #28]
 8001b42:	009b      	lsls	r3, r3, #2
 8001b44:	3301      	adds	r3, #1
 8001b46:	68b9      	ldr	r1, [r7, #8]
 8001b48:	440b      	add	r3, r1
 8001b4a:	781b      	ldrb	r3, [r3, #0]
 8001b4c:	b21b      	sxth	r3, r3
 8001b4e:	4313      	orrs	r3, r2
 8001b50:	b21b      	sxth	r3, r3
 8001b52:	837b      	strh	r3, [r7, #26]
 8001b54:	68fb      	ldr	r3, [r7, #12]
 8001b56:	681b      	ldr	r3, [r3, #0]
 8001b58:	617b      	str	r3, [r7, #20]
 8001b5a:	697b      	ldr	r3, [r7, #20]
 8001b5c:	8b7a      	ldrh	r2, [r7, #26]
 8001b5e:	801a      	strh	r2, [r3, #0]
 8001b60:	69fb      	ldr	r3, [r7, #28]
 8001b62:	009b      	lsls	r3, r3, #2
 8001b64:	3302      	adds	r3, #2
 8001b66:	68ba      	ldr	r2, [r7, #8]
 8001b68:	4413      	add	r3, r2
 8001b6a:	68fa      	ldr	r2, [r7, #12]
 8001b6c:	6812      	ldr	r2, [r2, #0]
 8001b6e:	781b      	ldrb	r3, [r3, #0]
 8001b70:	7013      	strb	r3, [r2, #0]
 8001b72:	68fb      	ldr	r3, [r7, #12]
 8001b74:	681b      	ldr	r3, [r3, #0]
 8001b76:	681b      	ldr	r3, [r3, #0]
 8001b78:	4618      	mov	r0, r3
 8001b7a:	3724      	adds	r7, #36	@ 0x24
 8001b7c:	46bd      	mov	sp, r7
 8001b7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b82:	4770      	bx	lr

08001b84 <CRC_Handle_16>:
 8001b84:	b480      	push	{r7}
 8001b86:	b087      	sub	sp, #28
 8001b88:	af00      	add	r7, sp, #0
 8001b8a:	60f8      	str	r0, [r7, #12]
 8001b8c:	60b9      	str	r1, [r7, #8]
 8001b8e:	607a      	str	r2, [r7, #4]
 8001b90:	2300      	movs	r3, #0
 8001b92:	617b      	str	r3, [r7, #20]
 8001b94:	e013      	b.n	8001bbe <CRC_Handle_16+0x3a>
 8001b96:	697b      	ldr	r3, [r7, #20]
 8001b98:	009b      	lsls	r3, r3, #2
 8001b9a:	68ba      	ldr	r2, [r7, #8]
 8001b9c:	4413      	add	r3, r2
 8001b9e:	881b      	ldrh	r3, [r3, #0]
 8001ba0:	041a      	lsls	r2, r3, #16
 8001ba2:	697b      	ldr	r3, [r7, #20]
 8001ba4:	009b      	lsls	r3, r3, #2
 8001ba6:	3302      	adds	r3, #2
 8001ba8:	68b9      	ldr	r1, [r7, #8]
 8001baa:	440b      	add	r3, r1
 8001bac:	881b      	ldrh	r3, [r3, #0]
 8001bae:	4619      	mov	r1, r3
 8001bb0:	68fb      	ldr	r3, [r7, #12]
 8001bb2:	681b      	ldr	r3, [r3, #0]
 8001bb4:	430a      	orrs	r2, r1
 8001bb6:	601a      	str	r2, [r3, #0]
 8001bb8:	697b      	ldr	r3, [r7, #20]
 8001bba:	3301      	adds	r3, #1
 8001bbc:	617b      	str	r3, [r7, #20]
 8001bbe:	687b      	ldr	r3, [r7, #4]
 8001bc0:	085b      	lsrs	r3, r3, #1
 8001bc2:	697a      	ldr	r2, [r7, #20]
 8001bc4:	429a      	cmp	r2, r3
 8001bc6:	d3e6      	bcc.n	8001b96 <CRC_Handle_16+0x12>
 8001bc8:	687b      	ldr	r3, [r7, #4]
 8001bca:	f003 0301 	and.w	r3, r3, #1
 8001bce:	2b00      	cmp	r3, #0
 8001bd0:	d009      	beq.n	8001be6 <CRC_Handle_16+0x62>
 8001bd2:	68fb      	ldr	r3, [r7, #12]
 8001bd4:	681b      	ldr	r3, [r3, #0]
 8001bd6:	613b      	str	r3, [r7, #16]
 8001bd8:	697b      	ldr	r3, [r7, #20]
 8001bda:	009b      	lsls	r3, r3, #2
 8001bdc:	68ba      	ldr	r2, [r7, #8]
 8001bde:	4413      	add	r3, r2
 8001be0:	881a      	ldrh	r2, [r3, #0]
 8001be2:	693b      	ldr	r3, [r7, #16]
 8001be4:	801a      	strh	r2, [r3, #0]
 8001be6:	68fb      	ldr	r3, [r7, #12]
 8001be8:	681b      	ldr	r3, [r3, #0]
 8001bea:	681b      	ldr	r3, [r3, #0]
 8001bec:	4618      	mov	r0, r3
 8001bee:	371c      	adds	r7, #28
 8001bf0:	46bd      	mov	sp, r7
 8001bf2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001bf6:	4770      	bx	lr

08001bf8 <HAL_CRCEx_Polynomial_Set>:
 8001bf8:	b480      	push	{r7}
 8001bfa:	b087      	sub	sp, #28
 8001bfc:	af00      	add	r7, sp, #0
 8001bfe:	60f8      	str	r0, [r7, #12]
 8001c00:	60b9      	str	r1, [r7, #8]
 8001c02:	607a      	str	r2, [r7, #4]
 8001c04:	2300      	movs	r3, #0
 8001c06:	75fb      	strb	r3, [r7, #23]
 8001c08:	231f      	movs	r3, #31
 8001c0a:	613b      	str	r3, [r7, #16]
 8001c0c:	68bb      	ldr	r3, [r7, #8]
 8001c0e:	f003 0301 	and.w	r3, r3, #1
 8001c12:	2b00      	cmp	r3, #0
 8001c14:	d102      	bne.n	8001c1c <HAL_CRCEx_Polynomial_Set+0x24>
 8001c16:	2301      	movs	r3, #1
 8001c18:	75fb      	strb	r3, [r7, #23]
 8001c1a:	e063      	b.n	8001ce4 <HAL_CRCEx_Polynomial_Set+0xec>
 8001c1c:	bf00      	nop
 8001c1e:	693b      	ldr	r3, [r7, #16]
 8001c20:	1e5a      	subs	r2, r3, #1
 8001c22:	613a      	str	r2, [r7, #16]
 8001c24:	2b00      	cmp	r3, #0
 8001c26:	d009      	beq.n	8001c3c <HAL_CRCEx_Polynomial_Set+0x44>
 8001c28:	693b      	ldr	r3, [r7, #16]
 8001c2a:	f003 031f 	and.w	r3, r3, #31
 8001c2e:	68ba      	ldr	r2, [r7, #8]
 8001c30:	fa22 f303 	lsr.w	r3, r2, r3
 8001c34:	f003 0301 	and.w	r3, r3, #1
 8001c38:	2b00      	cmp	r3, #0
 8001c3a:	d0f0      	beq.n	8001c1e <HAL_CRCEx_Polynomial_Set+0x26>
 8001c3c:	687b      	ldr	r3, [r7, #4]
 8001c3e:	2b18      	cmp	r3, #24
 8001c40:	d846      	bhi.n	8001cd0 <HAL_CRCEx_Polynomial_Set+0xd8>
 8001c42:	a201      	add	r2, pc, #4	@ (adr r2, 8001c48 <HAL_CRCEx_Polynomial_Set+0x50>)
 8001c44:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001c48:	08001cd7 	.word	0x08001cd7
 8001c4c:	08001cd1 	.word	0x08001cd1
 8001c50:	08001cd1 	.word	0x08001cd1
 8001c54:	08001cd1 	.word	0x08001cd1
 8001c58:	08001cd1 	.word	0x08001cd1
 8001c5c:	08001cd1 	.word	0x08001cd1
 8001c60:	08001cd1 	.word	0x08001cd1
 8001c64:	08001cd1 	.word	0x08001cd1
 8001c68:	08001cc5 	.word	0x08001cc5
 8001c6c:	08001cd1 	.word	0x08001cd1
 8001c70:	08001cd1 	.word	0x08001cd1
 8001c74:	08001cd1 	.word	0x08001cd1
 8001c78:	08001cd1 	.word	0x08001cd1
 8001c7c:	08001cd1 	.word	0x08001cd1
 8001c80:	08001cd1 	.word	0x08001cd1
 8001c84:	08001cd1 	.word	0x08001cd1
 8001c88:	08001cb9 	.word	0x08001cb9
 8001c8c:	08001cd1 	.word	0x08001cd1
 8001c90:	08001cd1 	.word	0x08001cd1
 8001c94:	08001cd1 	.word	0x08001cd1
 8001c98:	08001cd1 	.word	0x08001cd1
 8001c9c:	08001cd1 	.word	0x08001cd1
 8001ca0:	08001cd1 	.word	0x08001cd1
 8001ca4:	08001cd1 	.word	0x08001cd1
 8001ca8:	08001cad 	.word	0x08001cad
 8001cac:	693b      	ldr	r3, [r7, #16]
 8001cae:	2b06      	cmp	r3, #6
 8001cb0:	d913      	bls.n	8001cda <HAL_CRCEx_Polynomial_Set+0xe2>
 8001cb2:	2301      	movs	r3, #1
 8001cb4:	75fb      	strb	r3, [r7, #23]
 8001cb6:	e010      	b.n	8001cda <HAL_CRCEx_Polynomial_Set+0xe2>
 8001cb8:	693b      	ldr	r3, [r7, #16]
 8001cba:	2b07      	cmp	r3, #7
 8001cbc:	d90f      	bls.n	8001cde <HAL_CRCEx_Polynomial_Set+0xe6>
 8001cbe:	2301      	movs	r3, #1
 8001cc0:	75fb      	strb	r3, [r7, #23]
 8001cc2:	e00c      	b.n	8001cde <HAL_CRCEx_Polynomial_Set+0xe6>
 8001cc4:	693b      	ldr	r3, [r7, #16]
 8001cc6:	2b0f      	cmp	r3, #15
 8001cc8:	d90b      	bls.n	8001ce2 <HAL_CRCEx_Polynomial_Set+0xea>
 8001cca:	2301      	movs	r3, #1
 8001ccc:	75fb      	strb	r3, [r7, #23]
 8001cce:	e008      	b.n	8001ce2 <HAL_CRCEx_Polynomial_Set+0xea>
 8001cd0:	2301      	movs	r3, #1
 8001cd2:	75fb      	strb	r3, [r7, #23]
 8001cd4:	e006      	b.n	8001ce4 <HAL_CRCEx_Polynomial_Set+0xec>
 8001cd6:	bf00      	nop
 8001cd8:	e004      	b.n	8001ce4 <HAL_CRCEx_Polynomial_Set+0xec>
 8001cda:	bf00      	nop
 8001cdc:	e002      	b.n	8001ce4 <HAL_CRCEx_Polynomial_Set+0xec>
 8001cde:	bf00      	nop
 8001ce0:	e000      	b.n	8001ce4 <HAL_CRCEx_Polynomial_Set+0xec>
 8001ce2:	bf00      	nop
 8001ce4:	7dfb      	ldrb	r3, [r7, #23]
 8001ce6:	2b00      	cmp	r3, #0
 8001ce8:	d10d      	bne.n	8001d06 <HAL_CRCEx_Polynomial_Set+0x10e>
 8001cea:	68fb      	ldr	r3, [r7, #12]
 8001cec:	681b      	ldr	r3, [r3, #0]
 8001cee:	68ba      	ldr	r2, [r7, #8]
 8001cf0:	615a      	str	r2, [r3, #20]
 8001cf2:	68fb      	ldr	r3, [r7, #12]
 8001cf4:	681b      	ldr	r3, [r3, #0]
 8001cf6:	689b      	ldr	r3, [r3, #8]
 8001cf8:	f023 0118 	bic.w	r1, r3, #24
 8001cfc:	68fb      	ldr	r3, [r7, #12]
 8001cfe:	681b      	ldr	r3, [r3, #0]
 8001d00:	687a      	ldr	r2, [r7, #4]
 8001d02:	430a      	orrs	r2, r1
 8001d04:	609a      	str	r2, [r3, #8]
 8001d06:	7dfb      	ldrb	r3, [r7, #23]
 8001d08:	4618      	mov	r0, r3
 8001d0a:	371c      	adds	r7, #28
 8001d0c:	46bd      	mov	sp, r7
 8001d0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d12:	4770      	bx	lr

08001d14 <HAL_FLASH_Program>:
 8001d14:	b580      	push	{r7, lr}
 8001d16:	b086      	sub	sp, #24
 8001d18:	af00      	add	r7, sp, #0
 8001d1a:	60f8      	str	r0, [r7, #12]
 8001d1c:	60b9      	str	r1, [r7, #8]
 8001d1e:	e9c7 2300 	strd	r2, r3, [r7]
 8001d22:	2300      	movs	r3, #0
 8001d24:	613b      	str	r3, [r7, #16]
 8001d26:	4b2f      	ldr	r3, [pc, #188]	@ (8001de4 <HAL_FLASH_Program+0xd0>)
 8001d28:	781b      	ldrb	r3, [r3, #0]
 8001d2a:	2b01      	cmp	r3, #1
 8001d2c:	d101      	bne.n	8001d32 <HAL_FLASH_Program+0x1e>
 8001d2e:	2302      	movs	r3, #2
 8001d30:	e053      	b.n	8001dda <HAL_FLASH_Program+0xc6>
 8001d32:	4b2c      	ldr	r3, [pc, #176]	@ (8001de4 <HAL_FLASH_Program+0xd0>)
 8001d34:	2201      	movs	r2, #1
 8001d36:	701a      	strb	r2, [r3, #0]
 8001d38:	f24c 3050 	movw	r0, #50000	@ 0xc350
 8001d3c:	f000 f888 	bl	8001e50 <FLASH_WaitForLastOperation>
 8001d40:	4603      	mov	r3, r0
 8001d42:	75fb      	strb	r3, [r7, #23]
 8001d44:	7dfb      	ldrb	r3, [r7, #23]
 8001d46:	2b00      	cmp	r3, #0
 8001d48:	d143      	bne.n	8001dd2 <HAL_FLASH_Program+0xbe>
 8001d4a:	4b26      	ldr	r3, [pc, #152]	@ (8001de4 <HAL_FLASH_Program+0xd0>)
 8001d4c:	2200      	movs	r2, #0
 8001d4e:	605a      	str	r2, [r3, #4]
 8001d50:	4b25      	ldr	r3, [pc, #148]	@ (8001de8 <HAL_FLASH_Program+0xd4>)
 8001d52:	681b      	ldr	r3, [r3, #0]
 8001d54:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8001d58:	2b00      	cmp	r3, #0
 8001d5a:	d009      	beq.n	8001d70 <HAL_FLASH_Program+0x5c>
 8001d5c:	4b22      	ldr	r3, [pc, #136]	@ (8001de8 <HAL_FLASH_Program+0xd4>)
 8001d5e:	681b      	ldr	r3, [r3, #0]
 8001d60:	4a21      	ldr	r2, [pc, #132]	@ (8001de8 <HAL_FLASH_Program+0xd4>)
 8001d62:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8001d66:	6013      	str	r3, [r2, #0]
 8001d68:	4b1e      	ldr	r3, [pc, #120]	@ (8001de4 <HAL_FLASH_Program+0xd0>)
 8001d6a:	2202      	movs	r2, #2
 8001d6c:	771a      	strb	r2, [r3, #28]
 8001d6e:	e002      	b.n	8001d76 <HAL_FLASH_Program+0x62>
 8001d70:	4b1c      	ldr	r3, [pc, #112]	@ (8001de4 <HAL_FLASH_Program+0xd0>)
 8001d72:	2200      	movs	r2, #0
 8001d74:	771a      	strb	r2, [r3, #28]
 8001d76:	68fb      	ldr	r3, [r7, #12]
 8001d78:	2b00      	cmp	r3, #0
 8001d7a:	d107      	bne.n	8001d8c <HAL_FLASH_Program+0x78>
 8001d7c:	e9d7 2300 	ldrd	r2, r3, [r7]
 8001d80:	68b8      	ldr	r0, [r7, #8]
 8001d82:	f000 f8bb 	bl	8001efc <FLASH_Program_DoubleWord>
 8001d86:	2301      	movs	r3, #1
 8001d88:	613b      	str	r3, [r7, #16]
 8001d8a:	e010      	b.n	8001dae <HAL_FLASH_Program+0x9a>
 8001d8c:	68fb      	ldr	r3, [r7, #12]
 8001d8e:	2b01      	cmp	r3, #1
 8001d90:	d002      	beq.n	8001d98 <HAL_FLASH_Program+0x84>
 8001d92:	68fb      	ldr	r3, [r7, #12]
 8001d94:	2b02      	cmp	r3, #2
 8001d96:	d10a      	bne.n	8001dae <HAL_FLASH_Program+0x9a>
 8001d98:	683b      	ldr	r3, [r7, #0]
 8001d9a:	4619      	mov	r1, r3
 8001d9c:	68b8      	ldr	r0, [r7, #8]
 8001d9e:	f000 f8d3 	bl	8001f48 <FLASH_Program_Fast>
 8001da2:	68fb      	ldr	r3, [r7, #12]
 8001da4:	2b02      	cmp	r3, #2
 8001da6:	d102      	bne.n	8001dae <HAL_FLASH_Program+0x9a>
 8001da8:	f44f 2380 	mov.w	r3, #262144	@ 0x40000
 8001dac:	613b      	str	r3, [r7, #16]
 8001dae:	f24c 3050 	movw	r0, #50000	@ 0xc350
 8001db2:	f000 f84d 	bl	8001e50 <FLASH_WaitForLastOperation>
 8001db6:	4603      	mov	r3, r0
 8001db8:	75fb      	strb	r3, [r7, #23]
 8001dba:	693b      	ldr	r3, [r7, #16]
 8001dbc:	2b00      	cmp	r3, #0
 8001dbe:	d006      	beq.n	8001dce <HAL_FLASH_Program+0xba>
 8001dc0:	4b09      	ldr	r3, [pc, #36]	@ (8001de8 <HAL_FLASH_Program+0xd4>)
 8001dc2:	695a      	ldr	r2, [r3, #20]
 8001dc4:	693b      	ldr	r3, [r7, #16]
 8001dc6:	43db      	mvns	r3, r3
 8001dc8:	4907      	ldr	r1, [pc, #28]	@ (8001de8 <HAL_FLASH_Program+0xd4>)
 8001dca:	4013      	ands	r3, r2
 8001dcc:	614b      	str	r3, [r1, #20]
 8001dce:	f000 fa39 	bl	8002244 <FLASH_FlushCaches>
 8001dd2:	4b04      	ldr	r3, [pc, #16]	@ (8001de4 <HAL_FLASH_Program+0xd0>)
 8001dd4:	2200      	movs	r2, #0
 8001dd6:	701a      	strb	r2, [r3, #0]
 8001dd8:	7dfb      	ldrb	r3, [r7, #23]
 8001dda:	4618      	mov	r0, r3
 8001ddc:	3718      	adds	r7, #24
 8001dde:	46bd      	mov	sp, r7
 8001de0:	bd80      	pop	{r7, pc}
 8001de2:	bf00      	nop
 8001de4:	20000018 	.word	0x20000018
 8001de8:	40022000 	.word	0x40022000

08001dec <HAL_FLASH_Unlock>:
 8001dec:	b480      	push	{r7}
 8001dee:	b083      	sub	sp, #12
 8001df0:	af00      	add	r7, sp, #0
 8001df2:	2300      	movs	r3, #0
 8001df4:	71fb      	strb	r3, [r7, #7]
 8001df6:	4b0b      	ldr	r3, [pc, #44]	@ (8001e24 <HAL_FLASH_Unlock+0x38>)
 8001df8:	695b      	ldr	r3, [r3, #20]
 8001dfa:	2b00      	cmp	r3, #0
 8001dfc:	da0b      	bge.n	8001e16 <HAL_FLASH_Unlock+0x2a>
 8001dfe:	4b09      	ldr	r3, [pc, #36]	@ (8001e24 <HAL_FLASH_Unlock+0x38>)
 8001e00:	4a09      	ldr	r2, [pc, #36]	@ (8001e28 <HAL_FLASH_Unlock+0x3c>)
 8001e02:	609a      	str	r2, [r3, #8]
 8001e04:	4b07      	ldr	r3, [pc, #28]	@ (8001e24 <HAL_FLASH_Unlock+0x38>)
 8001e06:	4a09      	ldr	r2, [pc, #36]	@ (8001e2c <HAL_FLASH_Unlock+0x40>)
 8001e08:	609a      	str	r2, [r3, #8]
 8001e0a:	4b06      	ldr	r3, [pc, #24]	@ (8001e24 <HAL_FLASH_Unlock+0x38>)
 8001e0c:	695b      	ldr	r3, [r3, #20]
 8001e0e:	2b00      	cmp	r3, #0
 8001e10:	da01      	bge.n	8001e16 <HAL_FLASH_Unlock+0x2a>
 8001e12:	2301      	movs	r3, #1
 8001e14:	71fb      	strb	r3, [r7, #7]
 8001e16:	79fb      	ldrb	r3, [r7, #7]
 8001e18:	4618      	mov	r0, r3
 8001e1a:	370c      	adds	r7, #12
 8001e1c:	46bd      	mov	sp, r7
 8001e1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e22:	4770      	bx	lr
 8001e24:	40022000 	.word	0x40022000
 8001e28:	45670123 	.word	0x45670123
 8001e2c:	cdef89ab 	.word	0xcdef89ab

08001e30 <HAL_FLASH_Lock>:
 8001e30:	b480      	push	{r7}
 8001e32:	af00      	add	r7, sp, #0
 8001e34:	4b05      	ldr	r3, [pc, #20]	@ (8001e4c <HAL_FLASH_Lock+0x1c>)
 8001e36:	695b      	ldr	r3, [r3, #20]
 8001e38:	4a04      	ldr	r2, [pc, #16]	@ (8001e4c <HAL_FLASH_Lock+0x1c>)
 8001e3a:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8001e3e:	6153      	str	r3, [r2, #20]
 8001e40:	2300      	movs	r3, #0
 8001e42:	4618      	mov	r0, r3
 8001e44:	46bd      	mov	sp, r7
 8001e46:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e4a:	4770      	bx	lr
 8001e4c:	40022000 	.word	0x40022000

08001e50 <FLASH_WaitForLastOperation>:
 8001e50:	b580      	push	{r7, lr}
 8001e52:	b084      	sub	sp, #16
 8001e54:	af00      	add	r7, sp, #0
 8001e56:	6078      	str	r0, [r7, #4]
 8001e58:	f7ff fc6a 	bl	8001730 <HAL_GetTick>
 8001e5c:	60f8      	str	r0, [r7, #12]
 8001e5e:	e00d      	b.n	8001e7c <FLASH_WaitForLastOperation+0x2c>
 8001e60:	687b      	ldr	r3, [r7, #4]
 8001e62:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001e66:	d009      	beq.n	8001e7c <FLASH_WaitForLastOperation+0x2c>
 8001e68:	f7ff fc62 	bl	8001730 <HAL_GetTick>
 8001e6c:	4602      	mov	r2, r0
 8001e6e:	68fb      	ldr	r3, [r7, #12]
 8001e70:	1ad3      	subs	r3, r2, r3
 8001e72:	687a      	ldr	r2, [r7, #4]
 8001e74:	429a      	cmp	r2, r3
 8001e76:	d801      	bhi.n	8001e7c <FLASH_WaitForLastOperation+0x2c>
 8001e78:	2303      	movs	r3, #3
 8001e7a:	e036      	b.n	8001eea <FLASH_WaitForLastOperation+0x9a>
 8001e7c:	4b1d      	ldr	r3, [pc, #116]	@ (8001ef4 <FLASH_WaitForLastOperation+0xa4>)
 8001e7e:	691b      	ldr	r3, [r3, #16]
 8001e80:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8001e84:	2b00      	cmp	r3, #0
 8001e86:	d1eb      	bne.n	8001e60 <FLASH_WaitForLastOperation+0x10>
 8001e88:	4b1a      	ldr	r3, [pc, #104]	@ (8001ef4 <FLASH_WaitForLastOperation+0xa4>)
 8001e8a:	691a      	ldr	r2, [r3, #16]
 8001e8c:	f24c 33fa 	movw	r3, #50170	@ 0xc3fa
 8001e90:	4013      	ands	r3, r2
 8001e92:	60bb      	str	r3, [r7, #8]
 8001e94:	68bb      	ldr	r3, [r7, #8]
 8001e96:	2b00      	cmp	r3, #0
 8001e98:	d01d      	beq.n	8001ed6 <FLASH_WaitForLastOperation+0x86>
 8001e9a:	4b17      	ldr	r3, [pc, #92]	@ (8001ef8 <FLASH_WaitForLastOperation+0xa8>)
 8001e9c:	685a      	ldr	r2, [r3, #4]
 8001e9e:	68bb      	ldr	r3, [r7, #8]
 8001ea0:	4313      	orrs	r3, r2
 8001ea2:	4a15      	ldr	r2, [pc, #84]	@ (8001ef8 <FLASH_WaitForLastOperation+0xa8>)
 8001ea4:	6053      	str	r3, [r2, #4]
 8001ea6:	68bb      	ldr	r3, [r7, #8]
 8001ea8:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8001eac:	d307      	bcc.n	8001ebe <FLASH_WaitForLastOperation+0x6e>
 8001eae:	4b11      	ldr	r3, [pc, #68]	@ (8001ef4 <FLASH_WaitForLastOperation+0xa4>)
 8001eb0:	699a      	ldr	r2, [r3, #24]
 8001eb2:	68bb      	ldr	r3, [r7, #8]
 8001eb4:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8001eb8:	490e      	ldr	r1, [pc, #56]	@ (8001ef4 <FLASH_WaitForLastOperation+0xa4>)
 8001eba:	4313      	orrs	r3, r2
 8001ebc:	618b      	str	r3, [r1, #24]
 8001ebe:	68bb      	ldr	r3, [r7, #8]
 8001ec0:	f023 4340 	bic.w	r3, r3, #3221225472	@ 0xc0000000
 8001ec4:	2b00      	cmp	r3, #0
 8001ec6:	d004      	beq.n	8001ed2 <FLASH_WaitForLastOperation+0x82>
 8001ec8:	4a0a      	ldr	r2, [pc, #40]	@ (8001ef4 <FLASH_WaitForLastOperation+0xa4>)
 8001eca:	68bb      	ldr	r3, [r7, #8]
 8001ecc:	f023 4340 	bic.w	r3, r3, #3221225472	@ 0xc0000000
 8001ed0:	6113      	str	r3, [r2, #16]
 8001ed2:	2301      	movs	r3, #1
 8001ed4:	e009      	b.n	8001eea <FLASH_WaitForLastOperation+0x9a>
 8001ed6:	4b07      	ldr	r3, [pc, #28]	@ (8001ef4 <FLASH_WaitForLastOperation+0xa4>)
 8001ed8:	691b      	ldr	r3, [r3, #16]
 8001eda:	f003 0301 	and.w	r3, r3, #1
 8001ede:	2b00      	cmp	r3, #0
 8001ee0:	d002      	beq.n	8001ee8 <FLASH_WaitForLastOperation+0x98>
 8001ee2:	4b04      	ldr	r3, [pc, #16]	@ (8001ef4 <FLASH_WaitForLastOperation+0xa4>)
 8001ee4:	2201      	movs	r2, #1
 8001ee6:	611a      	str	r2, [r3, #16]
 8001ee8:	2300      	movs	r3, #0
 8001eea:	4618      	mov	r0, r3
 8001eec:	3710      	adds	r7, #16
 8001eee:	46bd      	mov	sp, r7
 8001ef0:	bd80      	pop	{r7, pc}
 8001ef2:	bf00      	nop
 8001ef4:	40022000 	.word	0x40022000
 8001ef8:	20000018 	.word	0x20000018

08001efc <FLASH_Program_DoubleWord>:
 8001efc:	b480      	push	{r7}
 8001efe:	b085      	sub	sp, #20
 8001f00:	af00      	add	r7, sp, #0
 8001f02:	60f8      	str	r0, [r7, #12]
 8001f04:	e9c7 2300 	strd	r2, r3, [r7]
 8001f08:	4b0e      	ldr	r3, [pc, #56]	@ (8001f44 <FLASH_Program_DoubleWord+0x48>)
 8001f0a:	695b      	ldr	r3, [r3, #20]
 8001f0c:	4a0d      	ldr	r2, [pc, #52]	@ (8001f44 <FLASH_Program_DoubleWord+0x48>)
 8001f0e:	f043 0301 	orr.w	r3, r3, #1
 8001f12:	6153      	str	r3, [r2, #20]
 8001f14:	68fb      	ldr	r3, [r7, #12]
 8001f16:	683a      	ldr	r2, [r7, #0]
 8001f18:	601a      	str	r2, [r3, #0]
 8001f1a:	f3bf 8f6f 	isb	sy
 8001f1e:	bf00      	nop
 8001f20:	e9d7 0100 	ldrd	r0, r1, [r7]
 8001f24:	f04f 0200 	mov.w	r2, #0
 8001f28:	f04f 0300 	mov.w	r3, #0
 8001f2c:	000a      	movs	r2, r1
 8001f2e:	2300      	movs	r3, #0
 8001f30:	68f9      	ldr	r1, [r7, #12]
 8001f32:	3104      	adds	r1, #4
 8001f34:	4613      	mov	r3, r2
 8001f36:	600b      	str	r3, [r1, #0]
 8001f38:	bf00      	nop
 8001f3a:	3714      	adds	r7, #20
 8001f3c:	46bd      	mov	sp, r7
 8001f3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f42:	4770      	bx	lr
 8001f44:	40022000 	.word	0x40022000

08001f48 <FLASH_Program_Fast>:
 8001f48:	b480      	push	{r7}
 8001f4a:	b089      	sub	sp, #36	@ 0x24
 8001f4c:	af00      	add	r7, sp, #0
 8001f4e:	6078      	str	r0, [r7, #4]
 8001f50:	6039      	str	r1, [r7, #0]
 8001f52:	2340      	movs	r3, #64	@ 0x40
 8001f54:	77fb      	strb	r3, [r7, #31]
 8001f56:	687b      	ldr	r3, [r7, #4]
 8001f58:	61bb      	str	r3, [r7, #24]
 8001f5a:	683b      	ldr	r3, [r7, #0]
 8001f5c:	617b      	str	r3, [r7, #20]
 8001f5e:	4b14      	ldr	r3, [pc, #80]	@ (8001fb0 <FLASH_Program_Fast+0x68>)
 8001f60:	695b      	ldr	r3, [r3, #20]
 8001f62:	4a13      	ldr	r2, [pc, #76]	@ (8001fb0 <FLASH_Program_Fast+0x68>)
 8001f64:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8001f68:	6153      	str	r3, [r2, #20]
 8001f6a:	f3ef 8310 	mrs	r3, PRIMASK
 8001f6e:	60fb      	str	r3, [r7, #12]
 8001f70:	68fb      	ldr	r3, [r7, #12]
 8001f72:	613b      	str	r3, [r7, #16]
 8001f74:	b672      	cpsid	i
 8001f76:	bf00      	nop
 8001f78:	697b      	ldr	r3, [r7, #20]
 8001f7a:	681a      	ldr	r2, [r3, #0]
 8001f7c:	69bb      	ldr	r3, [r7, #24]
 8001f7e:	601a      	str	r2, [r3, #0]
 8001f80:	69bb      	ldr	r3, [r7, #24]
 8001f82:	3304      	adds	r3, #4
 8001f84:	61bb      	str	r3, [r7, #24]
 8001f86:	697b      	ldr	r3, [r7, #20]
 8001f88:	3304      	adds	r3, #4
 8001f8a:	617b      	str	r3, [r7, #20]
 8001f8c:	7ffb      	ldrb	r3, [r7, #31]
 8001f8e:	3b01      	subs	r3, #1
 8001f90:	77fb      	strb	r3, [r7, #31]
 8001f92:	7ffb      	ldrb	r3, [r7, #31]
 8001f94:	2b00      	cmp	r3, #0
 8001f96:	d1ef      	bne.n	8001f78 <FLASH_Program_Fast+0x30>
 8001f98:	693b      	ldr	r3, [r7, #16]
 8001f9a:	60bb      	str	r3, [r7, #8]
 8001f9c:	68bb      	ldr	r3, [r7, #8]
 8001f9e:	f383 8810 	msr	PRIMASK, r3
 8001fa2:	bf00      	nop
 8001fa4:	bf00      	nop
 8001fa6:	3724      	adds	r7, #36	@ 0x24
 8001fa8:	46bd      	mov	sp, r7
 8001faa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001fae:	4770      	bx	lr
 8001fb0:	40022000 	.word	0x40022000

08001fb4 <HAL_FLASHEx_Erase>:
 8001fb4:	b580      	push	{r7, lr}
 8001fb6:	b084      	sub	sp, #16
 8001fb8:	af00      	add	r7, sp, #0
 8001fba:	6078      	str	r0, [r7, #4]
 8001fbc:	6039      	str	r1, [r7, #0]
 8001fbe:	4b49      	ldr	r3, [pc, #292]	@ (80020e4 <HAL_FLASHEx_Erase+0x130>)
 8001fc0:	781b      	ldrb	r3, [r3, #0]
 8001fc2:	2b01      	cmp	r3, #1
 8001fc4:	d101      	bne.n	8001fca <HAL_FLASHEx_Erase+0x16>
 8001fc6:	2302      	movs	r3, #2
 8001fc8:	e087      	b.n	80020da <HAL_FLASHEx_Erase+0x126>
 8001fca:	4b46      	ldr	r3, [pc, #280]	@ (80020e4 <HAL_FLASHEx_Erase+0x130>)
 8001fcc:	2201      	movs	r2, #1
 8001fce:	701a      	strb	r2, [r3, #0]
 8001fd0:	f24c 3050 	movw	r0, #50000	@ 0xc350
 8001fd4:	f7ff ff3c 	bl	8001e50 <FLASH_WaitForLastOperation>
 8001fd8:	4603      	mov	r3, r0
 8001fda:	73fb      	strb	r3, [r7, #15]
 8001fdc:	7bfb      	ldrb	r3, [r7, #15]
 8001fde:	2b00      	cmp	r3, #0
 8001fe0:	d177      	bne.n	80020d2 <HAL_FLASHEx_Erase+0x11e>
 8001fe2:	4b40      	ldr	r3, [pc, #256]	@ (80020e4 <HAL_FLASHEx_Erase+0x130>)
 8001fe4:	2200      	movs	r2, #0
 8001fe6:	605a      	str	r2, [r3, #4]
 8001fe8:	4b3f      	ldr	r3, [pc, #252]	@ (80020e8 <HAL_FLASHEx_Erase+0x134>)
 8001fea:	681b      	ldr	r3, [r3, #0]
 8001fec:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8001ff0:	2b00      	cmp	r3, #0
 8001ff2:	d013      	beq.n	800201c <HAL_FLASHEx_Erase+0x68>
 8001ff4:	4b3c      	ldr	r3, [pc, #240]	@ (80020e8 <HAL_FLASHEx_Erase+0x134>)
 8001ff6:	681b      	ldr	r3, [r3, #0]
 8001ff8:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8001ffc:	2b00      	cmp	r3, #0
 8001ffe:	d009      	beq.n	8002014 <HAL_FLASHEx_Erase+0x60>
 8002000:	4b39      	ldr	r3, [pc, #228]	@ (80020e8 <HAL_FLASHEx_Erase+0x134>)
 8002002:	681b      	ldr	r3, [r3, #0]
 8002004:	4a38      	ldr	r2, [pc, #224]	@ (80020e8 <HAL_FLASHEx_Erase+0x134>)
 8002006:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 800200a:	6013      	str	r3, [r2, #0]
 800200c:	4b35      	ldr	r3, [pc, #212]	@ (80020e4 <HAL_FLASHEx_Erase+0x130>)
 800200e:	2203      	movs	r2, #3
 8002010:	771a      	strb	r2, [r3, #28]
 8002012:	e016      	b.n	8002042 <HAL_FLASHEx_Erase+0x8e>
 8002014:	4b33      	ldr	r3, [pc, #204]	@ (80020e4 <HAL_FLASHEx_Erase+0x130>)
 8002016:	2201      	movs	r2, #1
 8002018:	771a      	strb	r2, [r3, #28]
 800201a:	e012      	b.n	8002042 <HAL_FLASHEx_Erase+0x8e>
 800201c:	4b32      	ldr	r3, [pc, #200]	@ (80020e8 <HAL_FLASHEx_Erase+0x134>)
 800201e:	681b      	ldr	r3, [r3, #0]
 8002020:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8002024:	2b00      	cmp	r3, #0
 8002026:	d009      	beq.n	800203c <HAL_FLASHEx_Erase+0x88>
 8002028:	4b2f      	ldr	r3, [pc, #188]	@ (80020e8 <HAL_FLASHEx_Erase+0x134>)
 800202a:	681b      	ldr	r3, [r3, #0]
 800202c:	4a2e      	ldr	r2, [pc, #184]	@ (80020e8 <HAL_FLASHEx_Erase+0x134>)
 800202e:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8002032:	6013      	str	r3, [r2, #0]
 8002034:	4b2b      	ldr	r3, [pc, #172]	@ (80020e4 <HAL_FLASHEx_Erase+0x130>)
 8002036:	2202      	movs	r2, #2
 8002038:	771a      	strb	r2, [r3, #28]
 800203a:	e002      	b.n	8002042 <HAL_FLASHEx_Erase+0x8e>
 800203c:	4b29      	ldr	r3, [pc, #164]	@ (80020e4 <HAL_FLASHEx_Erase+0x130>)
 800203e:	2200      	movs	r2, #0
 8002040:	771a      	strb	r2, [r3, #28]
 8002042:	687b      	ldr	r3, [r7, #4]
 8002044:	681b      	ldr	r3, [r3, #0]
 8002046:	2b01      	cmp	r3, #1
 8002048:	d113      	bne.n	8002072 <HAL_FLASHEx_Erase+0xbe>
 800204a:	687b      	ldr	r3, [r7, #4]
 800204c:	685b      	ldr	r3, [r3, #4]
 800204e:	4618      	mov	r0, r3
 8002050:	f000 f89a 	bl	8002188 <FLASH_MassErase>
 8002054:	f24c 3050 	movw	r0, #50000	@ 0xc350
 8002058:	f7ff fefa 	bl	8001e50 <FLASH_WaitForLastOperation>
 800205c:	4603      	mov	r3, r0
 800205e:	73fb      	strb	r3, [r7, #15]
 8002060:	4b21      	ldr	r3, [pc, #132]	@ (80020e8 <HAL_FLASHEx_Erase+0x134>)
 8002062:	695b      	ldr	r3, [r3, #20]
 8002064:	4a20      	ldr	r2, [pc, #128]	@ (80020e8 <HAL_FLASHEx_Erase+0x134>)
 8002066:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 800206a:	f023 0304 	bic.w	r3, r3, #4
 800206e:	6153      	str	r3, [r2, #20]
 8002070:	e02d      	b.n	80020ce <HAL_FLASHEx_Erase+0x11a>
 8002072:	683b      	ldr	r3, [r7, #0]
 8002074:	f04f 32ff 	mov.w	r2, #4294967295
 8002078:	601a      	str	r2, [r3, #0]
 800207a:	687b      	ldr	r3, [r7, #4]
 800207c:	689b      	ldr	r3, [r3, #8]
 800207e:	60bb      	str	r3, [r7, #8]
 8002080:	e01d      	b.n	80020be <HAL_FLASHEx_Erase+0x10a>
 8002082:	687b      	ldr	r3, [r7, #4]
 8002084:	685b      	ldr	r3, [r3, #4]
 8002086:	4619      	mov	r1, r3
 8002088:	68b8      	ldr	r0, [r7, #8]
 800208a:	f000 f8a5 	bl	80021d8 <FLASH_PageErase>
 800208e:	f24c 3050 	movw	r0, #50000	@ 0xc350
 8002092:	f7ff fedd 	bl	8001e50 <FLASH_WaitForLastOperation>
 8002096:	4603      	mov	r3, r0
 8002098:	73fb      	strb	r3, [r7, #15]
 800209a:	4b13      	ldr	r3, [pc, #76]	@ (80020e8 <HAL_FLASHEx_Erase+0x134>)
 800209c:	695b      	ldr	r3, [r3, #20]
 800209e:	4a12      	ldr	r2, [pc, #72]	@ (80020e8 <HAL_FLASHEx_Erase+0x134>)
 80020a0:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 80020a4:	f023 0302 	bic.w	r3, r3, #2
 80020a8:	6153      	str	r3, [r2, #20]
 80020aa:	7bfb      	ldrb	r3, [r7, #15]
 80020ac:	2b00      	cmp	r3, #0
 80020ae:	d003      	beq.n	80020b8 <HAL_FLASHEx_Erase+0x104>
 80020b0:	683b      	ldr	r3, [r7, #0]
 80020b2:	68ba      	ldr	r2, [r7, #8]
 80020b4:	601a      	str	r2, [r3, #0]
 80020b6:	e00a      	b.n	80020ce <HAL_FLASHEx_Erase+0x11a>
 80020b8:	68bb      	ldr	r3, [r7, #8]
 80020ba:	3301      	adds	r3, #1
 80020bc:	60bb      	str	r3, [r7, #8]
 80020be:	687b      	ldr	r3, [r7, #4]
 80020c0:	689a      	ldr	r2, [r3, #8]
 80020c2:	687b      	ldr	r3, [r7, #4]
 80020c4:	68db      	ldr	r3, [r3, #12]
 80020c6:	4413      	add	r3, r2
 80020c8:	68ba      	ldr	r2, [r7, #8]
 80020ca:	429a      	cmp	r2, r3
 80020cc:	d3d9      	bcc.n	8002082 <HAL_FLASHEx_Erase+0xce>
 80020ce:	f000 f8b9 	bl	8002244 <FLASH_FlushCaches>
 80020d2:	4b04      	ldr	r3, [pc, #16]	@ (80020e4 <HAL_FLASHEx_Erase+0x130>)
 80020d4:	2200      	movs	r2, #0
 80020d6:	701a      	strb	r2, [r3, #0]
 80020d8:	7bfb      	ldrb	r3, [r7, #15]
 80020da:	4618      	mov	r0, r3
 80020dc:	3710      	adds	r7, #16
 80020de:	46bd      	mov	sp, r7
 80020e0:	bd80      	pop	{r7, pc}
 80020e2:	bf00      	nop
 80020e4:	20000018 	.word	0x20000018
 80020e8:	40022000 	.word	0x40022000

080020ec <HAL_FLASHEx_OBGetConfig>:
 80020ec:	b580      	push	{r7, lr}
 80020ee:	b082      	sub	sp, #8
 80020f0:	af00      	add	r7, sp, #0
 80020f2:	6078      	str	r0, [r7, #4]
 80020f4:	687b      	ldr	r3, [r7, #4]
 80020f6:	2206      	movs	r2, #6
 80020f8:	601a      	str	r2, [r3, #0]
 80020fa:	687b      	ldr	r3, [r7, #4]
 80020fc:	685b      	ldr	r3, [r3, #4]
 80020fe:	2b00      	cmp	r3, #0
 8002100:	d00b      	beq.n	800211a <HAL_FLASHEx_OBGetConfig+0x2e>
 8002102:	687b      	ldr	r3, [r7, #4]
 8002104:	685b      	ldr	r3, [r3, #4]
 8002106:	2b01      	cmp	r3, #1
 8002108:	d007      	beq.n	800211a <HAL_FLASHEx_OBGetConfig+0x2e>
 800210a:	687b      	ldr	r3, [r7, #4]
 800210c:	685b      	ldr	r3, [r3, #4]
 800210e:	2b02      	cmp	r3, #2
 8002110:	d003      	beq.n	800211a <HAL_FLASHEx_OBGetConfig+0x2e>
 8002112:	687b      	ldr	r3, [r7, #4]
 8002114:	685b      	ldr	r3, [r3, #4]
 8002116:	2b04      	cmp	r3, #4
 8002118:	d10f      	bne.n	800213a <HAL_FLASHEx_OBGetConfig+0x4e>
 800211a:	687b      	ldr	r3, [r7, #4]
 800211c:	681b      	ldr	r3, [r3, #0]
 800211e:	f043 0201 	orr.w	r2, r3, #1
 8002122:	687b      	ldr	r3, [r7, #4]
 8002124:	601a      	str	r2, [r3, #0]
 8002126:	687b      	ldr	r3, [r7, #4]
 8002128:	6858      	ldr	r0, [r3, #4]
 800212a:	687b      	ldr	r3, [r7, #4]
 800212c:	f103 0108 	add.w	r1, r3, #8
 8002130:	687b      	ldr	r3, [r7, #4]
 8002132:	330c      	adds	r3, #12
 8002134:	461a      	mov	r2, r3
 8002136:	f000 f8cf 	bl	80022d8 <FLASH_OB_GetWRP>
 800213a:	f000 f917 	bl	800236c <FLASH_OB_GetRDP>
 800213e:	4602      	mov	r2, r0
 8002140:	687b      	ldr	r3, [r7, #4]
 8002142:	611a      	str	r2, [r3, #16]
 8002144:	f000 f92c 	bl	80023a0 <FLASH_OB_GetUser>
 8002148:	4602      	mov	r2, r0
 800214a:	687b      	ldr	r3, [r7, #4]
 800214c:	619a      	str	r2, [r3, #24]
 800214e:	687b      	ldr	r3, [r7, #4]
 8002150:	69db      	ldr	r3, [r3, #28]
 8002152:	2b01      	cmp	r3, #1
 8002154:	d003      	beq.n	800215e <HAL_FLASHEx_OBGetConfig+0x72>
 8002156:	687b      	ldr	r3, [r7, #4]
 8002158:	69db      	ldr	r3, [r3, #28]
 800215a:	2b02      	cmp	r3, #2
 800215c:	d110      	bne.n	8002180 <HAL_FLASHEx_OBGetConfig+0x94>
 800215e:	687b      	ldr	r3, [r7, #4]
 8002160:	681b      	ldr	r3, [r3, #0]
 8002162:	f043 0208 	orr.w	r2, r3, #8
 8002166:	687b      	ldr	r3, [r7, #4]
 8002168:	601a      	str	r2, [r3, #0]
 800216a:	687b      	ldr	r3, [r7, #4]
 800216c:	f103 001c 	add.w	r0, r3, #28
 8002170:	687b      	ldr	r3, [r7, #4]
 8002172:	f103 0120 	add.w	r1, r3, #32
 8002176:	687b      	ldr	r3, [r7, #4]
 8002178:	3324      	adds	r3, #36	@ 0x24
 800217a:	461a      	mov	r2, r3
 800217c:	f000 f924 	bl	80023c8 <FLASH_OB_GetPCROP>
 8002180:	bf00      	nop
 8002182:	3708      	adds	r7, #8
 8002184:	46bd      	mov	sp, r7
 8002186:	bd80      	pop	{r7, pc}

08002188 <FLASH_MassErase>:
 8002188:	b480      	push	{r7}
 800218a:	b083      	sub	sp, #12
 800218c:	af00      	add	r7, sp, #0
 800218e:	6078      	str	r0, [r7, #4]
 8002190:	687b      	ldr	r3, [r7, #4]
 8002192:	f003 0301 	and.w	r3, r3, #1
 8002196:	2b00      	cmp	r3, #0
 8002198:	d005      	beq.n	80021a6 <FLASH_MassErase+0x1e>
 800219a:	4b0e      	ldr	r3, [pc, #56]	@ (80021d4 <FLASH_MassErase+0x4c>)
 800219c:	695b      	ldr	r3, [r3, #20]
 800219e:	4a0d      	ldr	r2, [pc, #52]	@ (80021d4 <FLASH_MassErase+0x4c>)
 80021a0:	f043 0304 	orr.w	r3, r3, #4
 80021a4:	6153      	str	r3, [r2, #20]
 80021a6:	687b      	ldr	r3, [r7, #4]
 80021a8:	f003 0302 	and.w	r3, r3, #2
 80021ac:	2b00      	cmp	r3, #0
 80021ae:	d005      	beq.n	80021bc <FLASH_MassErase+0x34>
 80021b0:	4b08      	ldr	r3, [pc, #32]	@ (80021d4 <FLASH_MassErase+0x4c>)
 80021b2:	695b      	ldr	r3, [r3, #20]
 80021b4:	4a07      	ldr	r2, [pc, #28]	@ (80021d4 <FLASH_MassErase+0x4c>)
 80021b6:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 80021ba:	6153      	str	r3, [r2, #20]
 80021bc:	4b05      	ldr	r3, [pc, #20]	@ (80021d4 <FLASH_MassErase+0x4c>)
 80021be:	695b      	ldr	r3, [r3, #20]
 80021c0:	4a04      	ldr	r2, [pc, #16]	@ (80021d4 <FLASH_MassErase+0x4c>)
 80021c2:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80021c6:	6153      	str	r3, [r2, #20]
 80021c8:	bf00      	nop
 80021ca:	370c      	adds	r7, #12
 80021cc:	46bd      	mov	sp, r7
 80021ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80021d2:	4770      	bx	lr
 80021d4:	40022000 	.word	0x40022000

080021d8 <FLASH_PageErase>:
 80021d8:	b480      	push	{r7}
 80021da:	b083      	sub	sp, #12
 80021dc:	af00      	add	r7, sp, #0
 80021de:	6078      	str	r0, [r7, #4]
 80021e0:	6039      	str	r1, [r7, #0]
 80021e2:	683b      	ldr	r3, [r7, #0]
 80021e4:	f003 0301 	and.w	r3, r3, #1
 80021e8:	2b00      	cmp	r3, #0
 80021ea:	d006      	beq.n	80021fa <FLASH_PageErase+0x22>
 80021ec:	4b14      	ldr	r3, [pc, #80]	@ (8002240 <FLASH_PageErase+0x68>)
 80021ee:	695b      	ldr	r3, [r3, #20]
 80021f0:	4a13      	ldr	r2, [pc, #76]	@ (8002240 <FLASH_PageErase+0x68>)
 80021f2:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 80021f6:	6153      	str	r3, [r2, #20]
 80021f8:	e005      	b.n	8002206 <FLASH_PageErase+0x2e>
 80021fa:	4b11      	ldr	r3, [pc, #68]	@ (8002240 <FLASH_PageErase+0x68>)
 80021fc:	695b      	ldr	r3, [r3, #20]
 80021fe:	4a10      	ldr	r2, [pc, #64]	@ (8002240 <FLASH_PageErase+0x68>)
 8002200:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 8002204:	6153      	str	r3, [r2, #20]
 8002206:	4b0e      	ldr	r3, [pc, #56]	@ (8002240 <FLASH_PageErase+0x68>)
 8002208:	695b      	ldr	r3, [r3, #20]
 800220a:	f423 62ff 	bic.w	r2, r3, #2040	@ 0x7f8
 800220e:	687b      	ldr	r3, [r7, #4]
 8002210:	00db      	lsls	r3, r3, #3
 8002212:	f403 63ff 	and.w	r3, r3, #2040	@ 0x7f8
 8002216:	490a      	ldr	r1, [pc, #40]	@ (8002240 <FLASH_PageErase+0x68>)
 8002218:	4313      	orrs	r3, r2
 800221a:	614b      	str	r3, [r1, #20]
 800221c:	4b08      	ldr	r3, [pc, #32]	@ (8002240 <FLASH_PageErase+0x68>)
 800221e:	695b      	ldr	r3, [r3, #20]
 8002220:	4a07      	ldr	r2, [pc, #28]	@ (8002240 <FLASH_PageErase+0x68>)
 8002222:	f043 0302 	orr.w	r3, r3, #2
 8002226:	6153      	str	r3, [r2, #20]
 8002228:	4b05      	ldr	r3, [pc, #20]	@ (8002240 <FLASH_PageErase+0x68>)
 800222a:	695b      	ldr	r3, [r3, #20]
 800222c:	4a04      	ldr	r2, [pc, #16]	@ (8002240 <FLASH_PageErase+0x68>)
 800222e:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8002232:	6153      	str	r3, [r2, #20]
 8002234:	bf00      	nop
 8002236:	370c      	adds	r7, #12
 8002238:	46bd      	mov	sp, r7
 800223a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800223e:	4770      	bx	lr
 8002240:	40022000 	.word	0x40022000

08002244 <FLASH_FlushCaches>:
 8002244:	b480      	push	{r7}
 8002246:	b083      	sub	sp, #12
 8002248:	af00      	add	r7, sp, #0
 800224a:	4b21      	ldr	r3, [pc, #132]	@ (80022d0 <FLASH_FlushCaches+0x8c>)
 800224c:	7f1b      	ldrb	r3, [r3, #28]
 800224e:	71fb      	strb	r3, [r7, #7]
 8002250:	79fb      	ldrb	r3, [r7, #7]
 8002252:	2b01      	cmp	r3, #1
 8002254:	d002      	beq.n	800225c <FLASH_FlushCaches+0x18>
 8002256:	79fb      	ldrb	r3, [r7, #7]
 8002258:	2b03      	cmp	r3, #3
 800225a:	d117      	bne.n	800228c <FLASH_FlushCaches+0x48>
 800225c:	4b1d      	ldr	r3, [pc, #116]	@ (80022d4 <FLASH_FlushCaches+0x90>)
 800225e:	681b      	ldr	r3, [r3, #0]
 8002260:	4a1c      	ldr	r2, [pc, #112]	@ (80022d4 <FLASH_FlushCaches+0x90>)
 8002262:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8002266:	6013      	str	r3, [r2, #0]
 8002268:	4b1a      	ldr	r3, [pc, #104]	@ (80022d4 <FLASH_FlushCaches+0x90>)
 800226a:	681b      	ldr	r3, [r3, #0]
 800226c:	4a19      	ldr	r2, [pc, #100]	@ (80022d4 <FLASH_FlushCaches+0x90>)
 800226e:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 8002272:	6013      	str	r3, [r2, #0]
 8002274:	4b17      	ldr	r3, [pc, #92]	@ (80022d4 <FLASH_FlushCaches+0x90>)
 8002276:	681b      	ldr	r3, [r3, #0]
 8002278:	4a16      	ldr	r2, [pc, #88]	@ (80022d4 <FLASH_FlushCaches+0x90>)
 800227a:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 800227e:	6013      	str	r3, [r2, #0]
 8002280:	4b14      	ldr	r3, [pc, #80]	@ (80022d4 <FLASH_FlushCaches+0x90>)
 8002282:	681b      	ldr	r3, [r3, #0]
 8002284:	4a13      	ldr	r2, [pc, #76]	@ (80022d4 <FLASH_FlushCaches+0x90>)
 8002286:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800228a:	6013      	str	r3, [r2, #0]
 800228c:	79fb      	ldrb	r3, [r7, #7]
 800228e:	2b02      	cmp	r3, #2
 8002290:	d002      	beq.n	8002298 <FLASH_FlushCaches+0x54>
 8002292:	79fb      	ldrb	r3, [r7, #7]
 8002294:	2b03      	cmp	r3, #3
 8002296:	d111      	bne.n	80022bc <FLASH_FlushCaches+0x78>
 8002298:	4b0e      	ldr	r3, [pc, #56]	@ (80022d4 <FLASH_FlushCaches+0x90>)
 800229a:	681b      	ldr	r3, [r3, #0]
 800229c:	4a0d      	ldr	r2, [pc, #52]	@ (80022d4 <FLASH_FlushCaches+0x90>)
 800229e:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 80022a2:	6013      	str	r3, [r2, #0]
 80022a4:	4b0b      	ldr	r3, [pc, #44]	@ (80022d4 <FLASH_FlushCaches+0x90>)
 80022a6:	681b      	ldr	r3, [r3, #0]
 80022a8:	4a0a      	ldr	r2, [pc, #40]	@ (80022d4 <FLASH_FlushCaches+0x90>)
 80022aa:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80022ae:	6013      	str	r3, [r2, #0]
 80022b0:	4b08      	ldr	r3, [pc, #32]	@ (80022d4 <FLASH_FlushCaches+0x90>)
 80022b2:	681b      	ldr	r3, [r3, #0]
 80022b4:	4a07      	ldr	r2, [pc, #28]	@ (80022d4 <FLASH_FlushCaches+0x90>)
 80022b6:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 80022ba:	6013      	str	r3, [r2, #0]
 80022bc:	4b04      	ldr	r3, [pc, #16]	@ (80022d0 <FLASH_FlushCaches+0x8c>)
 80022be:	2200      	movs	r2, #0
 80022c0:	771a      	strb	r2, [r3, #28]
 80022c2:	bf00      	nop
 80022c4:	370c      	adds	r7, #12
 80022c6:	46bd      	mov	sp, r7
 80022c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80022cc:	4770      	bx	lr
 80022ce:	bf00      	nop
 80022d0:	20000018 	.word	0x20000018
 80022d4:	40022000 	.word	0x40022000

080022d8 <FLASH_OB_GetWRP>:
 80022d8:	b480      	push	{r7}
 80022da:	b085      	sub	sp, #20
 80022dc:	af00      	add	r7, sp, #0
 80022de:	60f8      	str	r0, [r7, #12]
 80022e0:	60b9      	str	r1, [r7, #8]
 80022e2:	607a      	str	r2, [r7, #4]
 80022e4:	68fb      	ldr	r3, [r7, #12]
 80022e6:	2b00      	cmp	r3, #0
 80022e8:	d10b      	bne.n	8002302 <FLASH_OB_GetWRP+0x2a>
 80022ea:	4b1f      	ldr	r3, [pc, #124]	@ (8002368 <FLASH_OB_GetWRP+0x90>)
 80022ec:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80022ee:	b2da      	uxtb	r2, r3
 80022f0:	68bb      	ldr	r3, [r7, #8]
 80022f2:	601a      	str	r2, [r3, #0]
 80022f4:	4b1c      	ldr	r3, [pc, #112]	@ (8002368 <FLASH_OB_GetWRP+0x90>)
 80022f6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80022f8:	0c1b      	lsrs	r3, r3, #16
 80022fa:	b2da      	uxtb	r2, r3
 80022fc:	687b      	ldr	r3, [r7, #4]
 80022fe:	601a      	str	r2, [r3, #0]
 8002300:	e02b      	b.n	800235a <FLASH_OB_GetWRP+0x82>
 8002302:	68fb      	ldr	r3, [r7, #12]
 8002304:	2b01      	cmp	r3, #1
 8002306:	d10b      	bne.n	8002320 <FLASH_OB_GetWRP+0x48>
 8002308:	4b17      	ldr	r3, [pc, #92]	@ (8002368 <FLASH_OB_GetWRP+0x90>)
 800230a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800230c:	b2da      	uxtb	r2, r3
 800230e:	68bb      	ldr	r3, [r7, #8]
 8002310:	601a      	str	r2, [r3, #0]
 8002312:	4b15      	ldr	r3, [pc, #84]	@ (8002368 <FLASH_OB_GetWRP+0x90>)
 8002314:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002316:	0c1b      	lsrs	r3, r3, #16
 8002318:	b2da      	uxtb	r2, r3
 800231a:	687b      	ldr	r3, [r7, #4]
 800231c:	601a      	str	r2, [r3, #0]
 800231e:	e01c      	b.n	800235a <FLASH_OB_GetWRP+0x82>
 8002320:	68fb      	ldr	r3, [r7, #12]
 8002322:	2b02      	cmp	r3, #2
 8002324:	d10b      	bne.n	800233e <FLASH_OB_GetWRP+0x66>
 8002326:	4b10      	ldr	r3, [pc, #64]	@ (8002368 <FLASH_OB_GetWRP+0x90>)
 8002328:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800232a:	b2da      	uxtb	r2, r3
 800232c:	68bb      	ldr	r3, [r7, #8]
 800232e:	601a      	str	r2, [r3, #0]
 8002330:	4b0d      	ldr	r3, [pc, #52]	@ (8002368 <FLASH_OB_GetWRP+0x90>)
 8002332:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002334:	0c1b      	lsrs	r3, r3, #16
 8002336:	b2da      	uxtb	r2, r3
 8002338:	687b      	ldr	r3, [r7, #4]
 800233a:	601a      	str	r2, [r3, #0]
 800233c:	e00d      	b.n	800235a <FLASH_OB_GetWRP+0x82>
 800233e:	68fb      	ldr	r3, [r7, #12]
 8002340:	2b04      	cmp	r3, #4
 8002342:	d10a      	bne.n	800235a <FLASH_OB_GetWRP+0x82>
 8002344:	4b08      	ldr	r3, [pc, #32]	@ (8002368 <FLASH_OB_GetWRP+0x90>)
 8002346:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8002348:	b2da      	uxtb	r2, r3
 800234a:	68bb      	ldr	r3, [r7, #8]
 800234c:	601a      	str	r2, [r3, #0]
 800234e:	4b06      	ldr	r3, [pc, #24]	@ (8002368 <FLASH_OB_GetWRP+0x90>)
 8002350:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8002352:	0c1b      	lsrs	r3, r3, #16
 8002354:	b2da      	uxtb	r2, r3
 8002356:	687b      	ldr	r3, [r7, #4]
 8002358:	601a      	str	r2, [r3, #0]
 800235a:	bf00      	nop
 800235c:	3714      	adds	r7, #20
 800235e:	46bd      	mov	sp, r7
 8002360:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002364:	4770      	bx	lr
 8002366:	bf00      	nop
 8002368:	40022000 	.word	0x40022000

0800236c <FLASH_OB_GetRDP>:
 800236c:	b480      	push	{r7}
 800236e:	b083      	sub	sp, #12
 8002370:	af00      	add	r7, sp, #0
 8002372:	4b0a      	ldr	r3, [pc, #40]	@ (800239c <FLASH_OB_GetRDP+0x30>)
 8002374:	6a1b      	ldr	r3, [r3, #32]
 8002376:	b2db      	uxtb	r3, r3
 8002378:	607b      	str	r3, [r7, #4]
 800237a:	687b      	ldr	r3, [r7, #4]
 800237c:	2baa      	cmp	r3, #170	@ 0xaa
 800237e:	d004      	beq.n	800238a <FLASH_OB_GetRDP+0x1e>
 8002380:	687b      	ldr	r3, [r7, #4]
 8002382:	2bcc      	cmp	r3, #204	@ 0xcc
 8002384:	d001      	beq.n	800238a <FLASH_OB_GetRDP+0x1e>
 8002386:	23bb      	movs	r3, #187	@ 0xbb
 8002388:	e002      	b.n	8002390 <FLASH_OB_GetRDP+0x24>
 800238a:	4b04      	ldr	r3, [pc, #16]	@ (800239c <FLASH_OB_GetRDP+0x30>)
 800238c:	6a1b      	ldr	r3, [r3, #32]
 800238e:	b2db      	uxtb	r3, r3
 8002390:	4618      	mov	r0, r3
 8002392:	370c      	adds	r7, #12
 8002394:	46bd      	mov	sp, r7
 8002396:	f85d 7b04 	ldr.w	r7, [sp], #4
 800239a:	4770      	bx	lr
 800239c:	40022000 	.word	0x40022000

080023a0 <FLASH_OB_GetUser>:
 80023a0:	b480      	push	{r7}
 80023a2:	b083      	sub	sp, #12
 80023a4:	af00      	add	r7, sp, #0
 80023a6:	4b07      	ldr	r3, [pc, #28]	@ (80023c4 <FLASH_OB_GetUser+0x24>)
 80023a8:	6a1b      	ldr	r3, [r3, #32]
 80023aa:	607b      	str	r3, [r7, #4]
 80023ac:	687b      	ldr	r3, [r7, #4]
 80023ae:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 80023b2:	607b      	str	r3, [r7, #4]
 80023b4:	687b      	ldr	r3, [r7, #4]
 80023b6:	4618      	mov	r0, r3
 80023b8:	370c      	adds	r7, #12
 80023ba:	46bd      	mov	sp, r7
 80023bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80023c0:	4770      	bx	lr
 80023c2:	bf00      	nop
 80023c4:	40022000 	.word	0x40022000

080023c8 <FLASH_OB_GetPCROP>:
 80023c8:	b480      	push	{r7}
 80023ca:	b089      	sub	sp, #36	@ 0x24
 80023cc:	af00      	add	r7, sp, #0
 80023ce:	60f8      	str	r0, [r7, #12]
 80023d0:	60b9      	str	r1, [r7, #8]
 80023d2:	607a      	str	r2, [r7, #4]
 80023d4:	4b3b      	ldr	r3, [pc, #236]	@ (80024c4 <FLASH_OB_GetPCROP+0xfc>)
 80023d6:	681b      	ldr	r3, [r3, #0]
 80023d8:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80023dc:	2b00      	cmp	r3, #0
 80023de:	d115      	bne.n	800240c <FLASH_OB_GetPCROP+0x44>
 80023e0:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 80023e4:	61fb      	str	r3, [r7, #28]
 80023e6:	4b38      	ldr	r3, [pc, #224]	@ (80024c8 <FLASH_OB_GetPCROP+0x100>)
 80023e8:	681b      	ldr	r3, [r3, #0]
 80023ea:	b29b      	uxth	r3, r3
 80023ec:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80023f0:	4293      	cmp	r3, r2
 80023f2:	d008      	beq.n	8002406 <FLASH_OB_GetPCROP+0x3e>
 80023f4:	4b34      	ldr	r3, [pc, #208]	@ (80024c8 <FLASH_OB_GetPCROP+0x100>)
 80023f6:	681b      	ldr	r3, [r3, #0]
 80023f8:	029b      	lsls	r3, r3, #10
 80023fa:	085a      	lsrs	r2, r3, #1
 80023fc:	4b33      	ldr	r3, [pc, #204]	@ (80024cc <FLASH_OB_GetPCROP+0x104>)
 80023fe:	4013      	ands	r3, r2
 8002400:	f103 6300 	add.w	r3, r3, #134217728	@ 0x8000000
 8002404:	e000      	b.n	8002408 <FLASH_OB_GetPCROP+0x40>
 8002406:	4b32      	ldr	r3, [pc, #200]	@ (80024d0 <FLASH_OB_GetPCROP+0x108>)
 8002408:	61bb      	str	r3, [r7, #24]
 800240a:	e014      	b.n	8002436 <FLASH_OB_GetPCROP+0x6e>
 800240c:	4b2e      	ldr	r3, [pc, #184]	@ (80024c8 <FLASH_OB_GetPCROP+0x100>)
 800240e:	681b      	ldr	r3, [r3, #0]
 8002410:	b29b      	uxth	r3, r3
 8002412:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8002416:	4293      	cmp	r3, r2
 8002418:	d008      	beq.n	800242c <FLASH_OB_GetPCROP+0x64>
 800241a:	4b2b      	ldr	r3, [pc, #172]	@ (80024c8 <FLASH_OB_GetPCROP+0x100>)
 800241c:	681b      	ldr	r3, [r3, #0]
 800241e:	029b      	lsls	r3, r3, #10
 8002420:	085a      	lsrs	r2, r3, #1
 8002422:	4b2a      	ldr	r3, [pc, #168]	@ (80024cc <FLASH_OB_GetPCROP+0x104>)
 8002424:	4013      	ands	r3, r2
 8002426:	f103 6300 	add.w	r3, r3, #134217728	@ 0x8000000
 800242a:	e000      	b.n	800242e <FLASH_OB_GetPCROP+0x66>
 800242c:	4b28      	ldr	r3, [pc, #160]	@ (80024d0 <FLASH_OB_GetPCROP+0x108>)
 800242e:	61fb      	str	r3, [r7, #28]
 8002430:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 8002434:	61bb      	str	r3, [r7, #24]
 8002436:	68fb      	ldr	r3, [r7, #12]
 8002438:	681b      	ldr	r3, [r3, #0]
 800243a:	f003 0303 	and.w	r3, r3, #3
 800243e:	2b01      	cmp	r3, #1
 8002440:	d115      	bne.n	800246e <FLASH_OB_GetPCROP+0xa6>
 8002442:	4b24      	ldr	r3, [pc, #144]	@ (80024d4 <FLASH_OB_GetPCROP+0x10c>)
 8002444:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002446:	b29b      	uxth	r3, r3
 8002448:	617b      	str	r3, [r7, #20]
 800244a:	697b      	ldr	r3, [r7, #20]
 800244c:	00da      	lsls	r2, r3, #3
 800244e:	69fb      	ldr	r3, [r7, #28]
 8002450:	441a      	add	r2, r3
 8002452:	68bb      	ldr	r3, [r7, #8]
 8002454:	601a      	str	r2, [r3, #0]
 8002456:	4b1f      	ldr	r3, [pc, #124]	@ (80024d4 <FLASH_OB_GetPCROP+0x10c>)
 8002458:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800245a:	b29b      	uxth	r3, r3
 800245c:	617b      	str	r3, [r7, #20]
 800245e:	697b      	ldr	r3, [r7, #20]
 8002460:	00da      	lsls	r2, r3, #3
 8002462:	69fb      	ldr	r3, [r7, #28]
 8002464:	4413      	add	r3, r2
 8002466:	1dda      	adds	r2, r3, #7
 8002468:	687b      	ldr	r3, [r7, #4]
 800246a:	601a      	str	r2, [r3, #0]
 800246c:	e01a      	b.n	80024a4 <FLASH_OB_GetPCROP+0xdc>
 800246e:	68fb      	ldr	r3, [r7, #12]
 8002470:	681b      	ldr	r3, [r3, #0]
 8002472:	f003 0303 	and.w	r3, r3, #3
 8002476:	2b02      	cmp	r3, #2
 8002478:	d114      	bne.n	80024a4 <FLASH_OB_GetPCROP+0xdc>
 800247a:	4b16      	ldr	r3, [pc, #88]	@ (80024d4 <FLASH_OB_GetPCROP+0x10c>)
 800247c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800247e:	b29b      	uxth	r3, r3
 8002480:	617b      	str	r3, [r7, #20]
 8002482:	697b      	ldr	r3, [r7, #20]
 8002484:	00da      	lsls	r2, r3, #3
 8002486:	69bb      	ldr	r3, [r7, #24]
 8002488:	441a      	add	r2, r3
 800248a:	68bb      	ldr	r3, [r7, #8]
 800248c:	601a      	str	r2, [r3, #0]
 800248e:	4b11      	ldr	r3, [pc, #68]	@ (80024d4 <FLASH_OB_GetPCROP+0x10c>)
 8002490:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8002492:	b29b      	uxth	r3, r3
 8002494:	617b      	str	r3, [r7, #20]
 8002496:	697b      	ldr	r3, [r7, #20]
 8002498:	00da      	lsls	r2, r3, #3
 800249a:	69bb      	ldr	r3, [r7, #24]
 800249c:	4413      	add	r3, r2
 800249e:	1dda      	adds	r2, r3, #7
 80024a0:	687b      	ldr	r3, [r7, #4]
 80024a2:	601a      	str	r2, [r3, #0]
 80024a4:	4b0b      	ldr	r3, [pc, #44]	@ (80024d4 <FLASH_OB_GetPCROP+0x10c>)
 80024a6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80024a8:	f003 4200 	and.w	r2, r3, #2147483648	@ 0x80000000
 80024ac:	68fb      	ldr	r3, [r7, #12]
 80024ae:	681b      	ldr	r3, [r3, #0]
 80024b0:	431a      	orrs	r2, r3
 80024b2:	68fb      	ldr	r3, [r7, #12]
 80024b4:	601a      	str	r2, [r3, #0]
 80024b6:	bf00      	nop
 80024b8:	3724      	adds	r7, #36	@ 0x24
 80024ba:	46bd      	mov	sp, r7
 80024bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80024c0:	4770      	bx	lr
 80024c2:	bf00      	nop
 80024c4:	40010000 	.word	0x40010000
 80024c8:	1fff75e0 	.word	0x1fff75e0
 80024cc:	01fffe00 	.word	0x01fffe00
 80024d0:	08080000 	.word	0x08080000
 80024d4:	40022000 	.word	0x40022000

080024d8 <HAL_GPIO_Init>:
 80024d8:	b480      	push	{r7}
 80024da:	b087      	sub	sp, #28
 80024dc:	af00      	add	r7, sp, #0
 80024de:	6078      	str	r0, [r7, #4]
 80024e0:	6039      	str	r1, [r7, #0]
 80024e2:	2300      	movs	r3, #0
 80024e4:	617b      	str	r3, [r7, #20]
 80024e6:	e166      	b.n	80027b6 <HAL_GPIO_Init+0x2de>
 80024e8:	683b      	ldr	r3, [r7, #0]
 80024ea:	681a      	ldr	r2, [r3, #0]
 80024ec:	2101      	movs	r1, #1
 80024ee:	697b      	ldr	r3, [r7, #20]
 80024f0:	fa01 f303 	lsl.w	r3, r1, r3
 80024f4:	4013      	ands	r3, r2
 80024f6:	60fb      	str	r3, [r7, #12]
 80024f8:	68fb      	ldr	r3, [r7, #12]
 80024fa:	2b00      	cmp	r3, #0
 80024fc:	f000 8158 	beq.w	80027b0 <HAL_GPIO_Init+0x2d8>
 8002500:	683b      	ldr	r3, [r7, #0]
 8002502:	685b      	ldr	r3, [r3, #4]
 8002504:	f003 0303 	and.w	r3, r3, #3
 8002508:	2b01      	cmp	r3, #1
 800250a:	d005      	beq.n	8002518 <HAL_GPIO_Init+0x40>
 800250c:	683b      	ldr	r3, [r7, #0]
 800250e:	685b      	ldr	r3, [r3, #4]
 8002510:	f003 0303 	and.w	r3, r3, #3
 8002514:	2b02      	cmp	r3, #2
 8002516:	d130      	bne.n	800257a <HAL_GPIO_Init+0xa2>
 8002518:	687b      	ldr	r3, [r7, #4]
 800251a:	689b      	ldr	r3, [r3, #8]
 800251c:	613b      	str	r3, [r7, #16]
 800251e:	697b      	ldr	r3, [r7, #20]
 8002520:	005b      	lsls	r3, r3, #1
 8002522:	2203      	movs	r2, #3
 8002524:	fa02 f303 	lsl.w	r3, r2, r3
 8002528:	43db      	mvns	r3, r3
 800252a:	693a      	ldr	r2, [r7, #16]
 800252c:	4013      	ands	r3, r2
 800252e:	613b      	str	r3, [r7, #16]
 8002530:	683b      	ldr	r3, [r7, #0]
 8002532:	68da      	ldr	r2, [r3, #12]
 8002534:	697b      	ldr	r3, [r7, #20]
 8002536:	005b      	lsls	r3, r3, #1
 8002538:	fa02 f303 	lsl.w	r3, r2, r3
 800253c:	693a      	ldr	r2, [r7, #16]
 800253e:	4313      	orrs	r3, r2
 8002540:	613b      	str	r3, [r7, #16]
 8002542:	687b      	ldr	r3, [r7, #4]
 8002544:	693a      	ldr	r2, [r7, #16]
 8002546:	609a      	str	r2, [r3, #8]
 8002548:	687b      	ldr	r3, [r7, #4]
 800254a:	685b      	ldr	r3, [r3, #4]
 800254c:	613b      	str	r3, [r7, #16]
 800254e:	2201      	movs	r2, #1
 8002550:	697b      	ldr	r3, [r7, #20]
 8002552:	fa02 f303 	lsl.w	r3, r2, r3
 8002556:	43db      	mvns	r3, r3
 8002558:	693a      	ldr	r2, [r7, #16]
 800255a:	4013      	ands	r3, r2
 800255c:	613b      	str	r3, [r7, #16]
 800255e:	683b      	ldr	r3, [r7, #0]
 8002560:	685b      	ldr	r3, [r3, #4]
 8002562:	091b      	lsrs	r3, r3, #4
 8002564:	f003 0201 	and.w	r2, r3, #1
 8002568:	697b      	ldr	r3, [r7, #20]
 800256a:	fa02 f303 	lsl.w	r3, r2, r3
 800256e:	693a      	ldr	r2, [r7, #16]
 8002570:	4313      	orrs	r3, r2
 8002572:	613b      	str	r3, [r7, #16]
 8002574:	687b      	ldr	r3, [r7, #4]
 8002576:	693a      	ldr	r2, [r7, #16]
 8002578:	605a      	str	r2, [r3, #4]
 800257a:	683b      	ldr	r3, [r7, #0]
 800257c:	685b      	ldr	r3, [r3, #4]
 800257e:	f003 0303 	and.w	r3, r3, #3
 8002582:	2b03      	cmp	r3, #3
 8002584:	d017      	beq.n	80025b6 <HAL_GPIO_Init+0xde>
 8002586:	687b      	ldr	r3, [r7, #4]
 8002588:	68db      	ldr	r3, [r3, #12]
 800258a:	613b      	str	r3, [r7, #16]
 800258c:	697b      	ldr	r3, [r7, #20]
 800258e:	005b      	lsls	r3, r3, #1
 8002590:	2203      	movs	r2, #3
 8002592:	fa02 f303 	lsl.w	r3, r2, r3
 8002596:	43db      	mvns	r3, r3
 8002598:	693a      	ldr	r2, [r7, #16]
 800259a:	4013      	ands	r3, r2
 800259c:	613b      	str	r3, [r7, #16]
 800259e:	683b      	ldr	r3, [r7, #0]
 80025a0:	689a      	ldr	r2, [r3, #8]
 80025a2:	697b      	ldr	r3, [r7, #20]
 80025a4:	005b      	lsls	r3, r3, #1
 80025a6:	fa02 f303 	lsl.w	r3, r2, r3
 80025aa:	693a      	ldr	r2, [r7, #16]
 80025ac:	4313      	orrs	r3, r2
 80025ae:	613b      	str	r3, [r7, #16]
 80025b0:	687b      	ldr	r3, [r7, #4]
 80025b2:	693a      	ldr	r2, [r7, #16]
 80025b4:	60da      	str	r2, [r3, #12]
 80025b6:	683b      	ldr	r3, [r7, #0]
 80025b8:	685b      	ldr	r3, [r3, #4]
 80025ba:	f003 0303 	and.w	r3, r3, #3
 80025be:	2b02      	cmp	r3, #2
 80025c0:	d123      	bne.n	800260a <HAL_GPIO_Init+0x132>
 80025c2:	697b      	ldr	r3, [r7, #20]
 80025c4:	08da      	lsrs	r2, r3, #3
 80025c6:	687b      	ldr	r3, [r7, #4]
 80025c8:	3208      	adds	r2, #8
 80025ca:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80025ce:	613b      	str	r3, [r7, #16]
 80025d0:	697b      	ldr	r3, [r7, #20]
 80025d2:	f003 0307 	and.w	r3, r3, #7
 80025d6:	009b      	lsls	r3, r3, #2
 80025d8:	220f      	movs	r2, #15
 80025da:	fa02 f303 	lsl.w	r3, r2, r3
 80025de:	43db      	mvns	r3, r3
 80025e0:	693a      	ldr	r2, [r7, #16]
 80025e2:	4013      	ands	r3, r2
 80025e4:	613b      	str	r3, [r7, #16]
 80025e6:	683b      	ldr	r3, [r7, #0]
 80025e8:	691a      	ldr	r2, [r3, #16]
 80025ea:	697b      	ldr	r3, [r7, #20]
 80025ec:	f003 0307 	and.w	r3, r3, #7
 80025f0:	009b      	lsls	r3, r3, #2
 80025f2:	fa02 f303 	lsl.w	r3, r2, r3
 80025f6:	693a      	ldr	r2, [r7, #16]
 80025f8:	4313      	orrs	r3, r2
 80025fa:	613b      	str	r3, [r7, #16]
 80025fc:	697b      	ldr	r3, [r7, #20]
 80025fe:	08da      	lsrs	r2, r3, #3
 8002600:	687b      	ldr	r3, [r7, #4]
 8002602:	3208      	adds	r2, #8
 8002604:	6939      	ldr	r1, [r7, #16]
 8002606:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 800260a:	687b      	ldr	r3, [r7, #4]
 800260c:	681b      	ldr	r3, [r3, #0]
 800260e:	613b      	str	r3, [r7, #16]
 8002610:	697b      	ldr	r3, [r7, #20]
 8002612:	005b      	lsls	r3, r3, #1
 8002614:	2203      	movs	r2, #3
 8002616:	fa02 f303 	lsl.w	r3, r2, r3
 800261a:	43db      	mvns	r3, r3
 800261c:	693a      	ldr	r2, [r7, #16]
 800261e:	4013      	ands	r3, r2
 8002620:	613b      	str	r3, [r7, #16]
 8002622:	683b      	ldr	r3, [r7, #0]
 8002624:	685b      	ldr	r3, [r3, #4]
 8002626:	f003 0203 	and.w	r2, r3, #3
 800262a:	697b      	ldr	r3, [r7, #20]
 800262c:	005b      	lsls	r3, r3, #1
 800262e:	fa02 f303 	lsl.w	r3, r2, r3
 8002632:	693a      	ldr	r2, [r7, #16]
 8002634:	4313      	orrs	r3, r2
 8002636:	613b      	str	r3, [r7, #16]
 8002638:	687b      	ldr	r3, [r7, #4]
 800263a:	693a      	ldr	r2, [r7, #16]
 800263c:	601a      	str	r2, [r3, #0]
 800263e:	683b      	ldr	r3, [r7, #0]
 8002640:	685b      	ldr	r3, [r3, #4]
 8002642:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8002646:	2b00      	cmp	r3, #0
 8002648:	f000 80b2 	beq.w	80027b0 <HAL_GPIO_Init+0x2d8>
 800264c:	4b61      	ldr	r3, [pc, #388]	@ (80027d4 <HAL_GPIO_Init+0x2fc>)
 800264e:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8002650:	4a60      	ldr	r2, [pc, #384]	@ (80027d4 <HAL_GPIO_Init+0x2fc>)
 8002652:	f043 0301 	orr.w	r3, r3, #1
 8002656:	6613      	str	r3, [r2, #96]	@ 0x60
 8002658:	4b5e      	ldr	r3, [pc, #376]	@ (80027d4 <HAL_GPIO_Init+0x2fc>)
 800265a:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800265c:	f003 0301 	and.w	r3, r3, #1
 8002660:	60bb      	str	r3, [r7, #8]
 8002662:	68bb      	ldr	r3, [r7, #8]
 8002664:	4a5c      	ldr	r2, [pc, #368]	@ (80027d8 <HAL_GPIO_Init+0x300>)
 8002666:	697b      	ldr	r3, [r7, #20]
 8002668:	089b      	lsrs	r3, r3, #2
 800266a:	3302      	adds	r3, #2
 800266c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002670:	613b      	str	r3, [r7, #16]
 8002672:	697b      	ldr	r3, [r7, #20]
 8002674:	f003 0303 	and.w	r3, r3, #3
 8002678:	009b      	lsls	r3, r3, #2
 800267a:	220f      	movs	r2, #15
 800267c:	fa02 f303 	lsl.w	r3, r2, r3
 8002680:	43db      	mvns	r3, r3
 8002682:	693a      	ldr	r2, [r7, #16]
 8002684:	4013      	ands	r3, r2
 8002686:	613b      	str	r3, [r7, #16]
 8002688:	687b      	ldr	r3, [r7, #4]
 800268a:	f1b3 4f90 	cmp.w	r3, #1207959552	@ 0x48000000
 800268e:	d02b      	beq.n	80026e8 <HAL_GPIO_Init+0x210>
 8002690:	687b      	ldr	r3, [r7, #4]
 8002692:	4a52      	ldr	r2, [pc, #328]	@ (80027dc <HAL_GPIO_Init+0x304>)
 8002694:	4293      	cmp	r3, r2
 8002696:	d025      	beq.n	80026e4 <HAL_GPIO_Init+0x20c>
 8002698:	687b      	ldr	r3, [r7, #4]
 800269a:	4a51      	ldr	r2, [pc, #324]	@ (80027e0 <HAL_GPIO_Init+0x308>)
 800269c:	4293      	cmp	r3, r2
 800269e:	d01f      	beq.n	80026e0 <HAL_GPIO_Init+0x208>
 80026a0:	687b      	ldr	r3, [r7, #4]
 80026a2:	4a50      	ldr	r2, [pc, #320]	@ (80027e4 <HAL_GPIO_Init+0x30c>)
 80026a4:	4293      	cmp	r3, r2
 80026a6:	d019      	beq.n	80026dc <HAL_GPIO_Init+0x204>
 80026a8:	687b      	ldr	r3, [r7, #4]
 80026aa:	4a4f      	ldr	r2, [pc, #316]	@ (80027e8 <HAL_GPIO_Init+0x310>)
 80026ac:	4293      	cmp	r3, r2
 80026ae:	d013      	beq.n	80026d8 <HAL_GPIO_Init+0x200>
 80026b0:	687b      	ldr	r3, [r7, #4]
 80026b2:	4a4e      	ldr	r2, [pc, #312]	@ (80027ec <HAL_GPIO_Init+0x314>)
 80026b4:	4293      	cmp	r3, r2
 80026b6:	d00d      	beq.n	80026d4 <HAL_GPIO_Init+0x1fc>
 80026b8:	687b      	ldr	r3, [r7, #4]
 80026ba:	4a4d      	ldr	r2, [pc, #308]	@ (80027f0 <HAL_GPIO_Init+0x318>)
 80026bc:	4293      	cmp	r3, r2
 80026be:	d007      	beq.n	80026d0 <HAL_GPIO_Init+0x1f8>
 80026c0:	687b      	ldr	r3, [r7, #4]
 80026c2:	4a4c      	ldr	r2, [pc, #304]	@ (80027f4 <HAL_GPIO_Init+0x31c>)
 80026c4:	4293      	cmp	r3, r2
 80026c6:	d101      	bne.n	80026cc <HAL_GPIO_Init+0x1f4>
 80026c8:	2307      	movs	r3, #7
 80026ca:	e00e      	b.n	80026ea <HAL_GPIO_Init+0x212>
 80026cc:	2308      	movs	r3, #8
 80026ce:	e00c      	b.n	80026ea <HAL_GPIO_Init+0x212>
 80026d0:	2306      	movs	r3, #6
 80026d2:	e00a      	b.n	80026ea <HAL_GPIO_Init+0x212>
 80026d4:	2305      	movs	r3, #5
 80026d6:	e008      	b.n	80026ea <HAL_GPIO_Init+0x212>
 80026d8:	2304      	movs	r3, #4
 80026da:	e006      	b.n	80026ea <HAL_GPIO_Init+0x212>
 80026dc:	2303      	movs	r3, #3
 80026de:	e004      	b.n	80026ea <HAL_GPIO_Init+0x212>
 80026e0:	2302      	movs	r3, #2
 80026e2:	e002      	b.n	80026ea <HAL_GPIO_Init+0x212>
 80026e4:	2301      	movs	r3, #1
 80026e6:	e000      	b.n	80026ea <HAL_GPIO_Init+0x212>
 80026e8:	2300      	movs	r3, #0
 80026ea:	697a      	ldr	r2, [r7, #20]
 80026ec:	f002 0203 	and.w	r2, r2, #3
 80026f0:	0092      	lsls	r2, r2, #2
 80026f2:	4093      	lsls	r3, r2
 80026f4:	693a      	ldr	r2, [r7, #16]
 80026f6:	4313      	orrs	r3, r2
 80026f8:	613b      	str	r3, [r7, #16]
 80026fa:	4937      	ldr	r1, [pc, #220]	@ (80027d8 <HAL_GPIO_Init+0x300>)
 80026fc:	697b      	ldr	r3, [r7, #20]
 80026fe:	089b      	lsrs	r3, r3, #2
 8002700:	3302      	adds	r3, #2
 8002702:	693a      	ldr	r2, [r7, #16]
 8002704:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002708:	4b3b      	ldr	r3, [pc, #236]	@ (80027f8 <HAL_GPIO_Init+0x320>)
 800270a:	689b      	ldr	r3, [r3, #8]
 800270c:	613b      	str	r3, [r7, #16]
 800270e:	68fb      	ldr	r3, [r7, #12]
 8002710:	43db      	mvns	r3, r3
 8002712:	693a      	ldr	r2, [r7, #16]
 8002714:	4013      	ands	r3, r2
 8002716:	613b      	str	r3, [r7, #16]
 8002718:	683b      	ldr	r3, [r7, #0]
 800271a:	685b      	ldr	r3, [r3, #4]
 800271c:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8002720:	2b00      	cmp	r3, #0
 8002722:	d003      	beq.n	800272c <HAL_GPIO_Init+0x254>
 8002724:	693a      	ldr	r2, [r7, #16]
 8002726:	68fb      	ldr	r3, [r7, #12]
 8002728:	4313      	orrs	r3, r2
 800272a:	613b      	str	r3, [r7, #16]
 800272c:	4a32      	ldr	r2, [pc, #200]	@ (80027f8 <HAL_GPIO_Init+0x320>)
 800272e:	693b      	ldr	r3, [r7, #16]
 8002730:	6093      	str	r3, [r2, #8]
 8002732:	4b31      	ldr	r3, [pc, #196]	@ (80027f8 <HAL_GPIO_Init+0x320>)
 8002734:	68db      	ldr	r3, [r3, #12]
 8002736:	613b      	str	r3, [r7, #16]
 8002738:	68fb      	ldr	r3, [r7, #12]
 800273a:	43db      	mvns	r3, r3
 800273c:	693a      	ldr	r2, [r7, #16]
 800273e:	4013      	ands	r3, r2
 8002740:	613b      	str	r3, [r7, #16]
 8002742:	683b      	ldr	r3, [r7, #0]
 8002744:	685b      	ldr	r3, [r3, #4]
 8002746:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 800274a:	2b00      	cmp	r3, #0
 800274c:	d003      	beq.n	8002756 <HAL_GPIO_Init+0x27e>
 800274e:	693a      	ldr	r2, [r7, #16]
 8002750:	68fb      	ldr	r3, [r7, #12]
 8002752:	4313      	orrs	r3, r2
 8002754:	613b      	str	r3, [r7, #16]
 8002756:	4a28      	ldr	r2, [pc, #160]	@ (80027f8 <HAL_GPIO_Init+0x320>)
 8002758:	693b      	ldr	r3, [r7, #16]
 800275a:	60d3      	str	r3, [r2, #12]
 800275c:	4b26      	ldr	r3, [pc, #152]	@ (80027f8 <HAL_GPIO_Init+0x320>)
 800275e:	685b      	ldr	r3, [r3, #4]
 8002760:	613b      	str	r3, [r7, #16]
 8002762:	68fb      	ldr	r3, [r7, #12]
 8002764:	43db      	mvns	r3, r3
 8002766:	693a      	ldr	r2, [r7, #16]
 8002768:	4013      	ands	r3, r2
 800276a:	613b      	str	r3, [r7, #16]
 800276c:	683b      	ldr	r3, [r7, #0]
 800276e:	685b      	ldr	r3, [r3, #4]
 8002770:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002774:	2b00      	cmp	r3, #0
 8002776:	d003      	beq.n	8002780 <HAL_GPIO_Init+0x2a8>
 8002778:	693a      	ldr	r2, [r7, #16]
 800277a:	68fb      	ldr	r3, [r7, #12]
 800277c:	4313      	orrs	r3, r2
 800277e:	613b      	str	r3, [r7, #16]
 8002780:	4a1d      	ldr	r2, [pc, #116]	@ (80027f8 <HAL_GPIO_Init+0x320>)
 8002782:	693b      	ldr	r3, [r7, #16]
 8002784:	6053      	str	r3, [r2, #4]
 8002786:	4b1c      	ldr	r3, [pc, #112]	@ (80027f8 <HAL_GPIO_Init+0x320>)
 8002788:	681b      	ldr	r3, [r3, #0]
 800278a:	613b      	str	r3, [r7, #16]
 800278c:	68fb      	ldr	r3, [r7, #12]
 800278e:	43db      	mvns	r3, r3
 8002790:	693a      	ldr	r2, [r7, #16]
 8002792:	4013      	ands	r3, r2
 8002794:	613b      	str	r3, [r7, #16]
 8002796:	683b      	ldr	r3, [r7, #0]
 8002798:	685b      	ldr	r3, [r3, #4]
 800279a:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800279e:	2b00      	cmp	r3, #0
 80027a0:	d003      	beq.n	80027aa <HAL_GPIO_Init+0x2d2>
 80027a2:	693a      	ldr	r2, [r7, #16]
 80027a4:	68fb      	ldr	r3, [r7, #12]
 80027a6:	4313      	orrs	r3, r2
 80027a8:	613b      	str	r3, [r7, #16]
 80027aa:	4a13      	ldr	r2, [pc, #76]	@ (80027f8 <HAL_GPIO_Init+0x320>)
 80027ac:	693b      	ldr	r3, [r7, #16]
 80027ae:	6013      	str	r3, [r2, #0]
 80027b0:	697b      	ldr	r3, [r7, #20]
 80027b2:	3301      	adds	r3, #1
 80027b4:	617b      	str	r3, [r7, #20]
 80027b6:	683b      	ldr	r3, [r7, #0]
 80027b8:	681a      	ldr	r2, [r3, #0]
 80027ba:	697b      	ldr	r3, [r7, #20]
 80027bc:	fa22 f303 	lsr.w	r3, r2, r3
 80027c0:	2b00      	cmp	r3, #0
 80027c2:	f47f ae91 	bne.w	80024e8 <HAL_GPIO_Init+0x10>
 80027c6:	bf00      	nop
 80027c8:	bf00      	nop
 80027ca:	371c      	adds	r7, #28
 80027cc:	46bd      	mov	sp, r7
 80027ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027d2:	4770      	bx	lr
 80027d4:	40021000 	.word	0x40021000
 80027d8:	40010000 	.word	0x40010000
 80027dc:	48000400 	.word	0x48000400
 80027e0:	48000800 	.word	0x48000800
 80027e4:	48000c00 	.word	0x48000c00
 80027e8:	48001000 	.word	0x48001000
 80027ec:	48001400 	.word	0x48001400
 80027f0:	48001800 	.word	0x48001800
 80027f4:	48001c00 	.word	0x48001c00
 80027f8:	40010400 	.word	0x40010400

080027fc <HAL_GPIO_ReadPin>:
 80027fc:	b480      	push	{r7}
 80027fe:	b085      	sub	sp, #20
 8002800:	af00      	add	r7, sp, #0
 8002802:	6078      	str	r0, [r7, #4]
 8002804:	460b      	mov	r3, r1
 8002806:	807b      	strh	r3, [r7, #2]
 8002808:	687b      	ldr	r3, [r7, #4]
 800280a:	691a      	ldr	r2, [r3, #16]
 800280c:	887b      	ldrh	r3, [r7, #2]
 800280e:	4013      	ands	r3, r2
 8002810:	2b00      	cmp	r3, #0
 8002812:	d002      	beq.n	800281a <HAL_GPIO_ReadPin+0x1e>
 8002814:	2301      	movs	r3, #1
 8002816:	73fb      	strb	r3, [r7, #15]
 8002818:	e001      	b.n	800281e <HAL_GPIO_ReadPin+0x22>
 800281a:	2300      	movs	r3, #0
 800281c:	73fb      	strb	r3, [r7, #15]
 800281e:	7bfb      	ldrb	r3, [r7, #15]
 8002820:	4618      	mov	r0, r3
 8002822:	3714      	adds	r7, #20
 8002824:	46bd      	mov	sp, r7
 8002826:	f85d 7b04 	ldr.w	r7, [sp], #4
 800282a:	4770      	bx	lr

0800282c <HAL_GPIO_WritePin>:
 800282c:	b480      	push	{r7}
 800282e:	b083      	sub	sp, #12
 8002830:	af00      	add	r7, sp, #0
 8002832:	6078      	str	r0, [r7, #4]
 8002834:	460b      	mov	r3, r1
 8002836:	807b      	strh	r3, [r7, #2]
 8002838:	4613      	mov	r3, r2
 800283a:	707b      	strb	r3, [r7, #1]
 800283c:	787b      	ldrb	r3, [r7, #1]
 800283e:	2b00      	cmp	r3, #0
 8002840:	d003      	beq.n	800284a <HAL_GPIO_WritePin+0x1e>
 8002842:	887a      	ldrh	r2, [r7, #2]
 8002844:	687b      	ldr	r3, [r7, #4]
 8002846:	619a      	str	r2, [r3, #24]
 8002848:	e002      	b.n	8002850 <HAL_GPIO_WritePin+0x24>
 800284a:	887a      	ldrh	r2, [r7, #2]
 800284c:	687b      	ldr	r3, [r7, #4]
 800284e:	629a      	str	r2, [r3, #40]	@ 0x28
 8002850:	bf00      	nop
 8002852:	370c      	adds	r7, #12
 8002854:	46bd      	mov	sp, r7
 8002856:	f85d 7b04 	ldr.w	r7, [sp], #4
 800285a:	4770      	bx	lr

0800285c <HAL_PWREx_GetVoltageRange>:
 800285c:	b480      	push	{r7}
 800285e:	af00      	add	r7, sp, #0
 8002860:	4b04      	ldr	r3, [pc, #16]	@ (8002874 <HAL_PWREx_GetVoltageRange+0x18>)
 8002862:	681b      	ldr	r3, [r3, #0]
 8002864:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 8002868:	4618      	mov	r0, r3
 800286a:	46bd      	mov	sp, r7
 800286c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002870:	4770      	bx	lr
 8002872:	bf00      	nop
 8002874:	40007000 	.word	0x40007000

08002878 <HAL_PWREx_ControlVoltageScaling>:
 8002878:	b480      	push	{r7}
 800287a:	b085      	sub	sp, #20
 800287c:	af00      	add	r7, sp, #0
 800287e:	6078      	str	r0, [r7, #4]
 8002880:	687b      	ldr	r3, [r7, #4]
 8002882:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8002886:	d130      	bne.n	80028ea <HAL_PWREx_ControlVoltageScaling+0x72>
 8002888:	4b23      	ldr	r3, [pc, #140]	@ (8002918 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 800288a:	681b      	ldr	r3, [r3, #0]
 800288c:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 8002890:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8002894:	d038      	beq.n	8002908 <HAL_PWREx_ControlVoltageScaling+0x90>
 8002896:	4b20      	ldr	r3, [pc, #128]	@ (8002918 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8002898:	681b      	ldr	r3, [r3, #0]
 800289a:	f423 63c0 	bic.w	r3, r3, #1536	@ 0x600
 800289e:	4a1e      	ldr	r2, [pc, #120]	@ (8002918 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 80028a0:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 80028a4:	6013      	str	r3, [r2, #0]
 80028a6:	4b1d      	ldr	r3, [pc, #116]	@ (800291c <HAL_PWREx_ControlVoltageScaling+0xa4>)
 80028a8:	681b      	ldr	r3, [r3, #0]
 80028aa:	2232      	movs	r2, #50	@ 0x32
 80028ac:	fb02 f303 	mul.w	r3, r2, r3
 80028b0:	4a1b      	ldr	r2, [pc, #108]	@ (8002920 <HAL_PWREx_ControlVoltageScaling+0xa8>)
 80028b2:	fba2 2303 	umull	r2, r3, r2, r3
 80028b6:	0c9b      	lsrs	r3, r3, #18
 80028b8:	3301      	adds	r3, #1
 80028ba:	60fb      	str	r3, [r7, #12]
 80028bc:	e002      	b.n	80028c4 <HAL_PWREx_ControlVoltageScaling+0x4c>
 80028be:	68fb      	ldr	r3, [r7, #12]
 80028c0:	3b01      	subs	r3, #1
 80028c2:	60fb      	str	r3, [r7, #12]
 80028c4:	4b14      	ldr	r3, [pc, #80]	@ (8002918 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 80028c6:	695b      	ldr	r3, [r3, #20]
 80028c8:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80028cc:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80028d0:	d102      	bne.n	80028d8 <HAL_PWREx_ControlVoltageScaling+0x60>
 80028d2:	68fb      	ldr	r3, [r7, #12]
 80028d4:	2b00      	cmp	r3, #0
 80028d6:	d1f2      	bne.n	80028be <HAL_PWREx_ControlVoltageScaling+0x46>
 80028d8:	4b0f      	ldr	r3, [pc, #60]	@ (8002918 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 80028da:	695b      	ldr	r3, [r3, #20]
 80028dc:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80028e0:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80028e4:	d110      	bne.n	8002908 <HAL_PWREx_ControlVoltageScaling+0x90>
 80028e6:	2303      	movs	r3, #3
 80028e8:	e00f      	b.n	800290a <HAL_PWREx_ControlVoltageScaling+0x92>
 80028ea:	4b0b      	ldr	r3, [pc, #44]	@ (8002918 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 80028ec:	681b      	ldr	r3, [r3, #0]
 80028ee:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 80028f2:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80028f6:	d007      	beq.n	8002908 <HAL_PWREx_ControlVoltageScaling+0x90>
 80028f8:	4b07      	ldr	r3, [pc, #28]	@ (8002918 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 80028fa:	681b      	ldr	r3, [r3, #0]
 80028fc:	f423 63c0 	bic.w	r3, r3, #1536	@ 0x600
 8002900:	4a05      	ldr	r2, [pc, #20]	@ (8002918 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8002902:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8002906:	6013      	str	r3, [r2, #0]
 8002908:	2300      	movs	r3, #0
 800290a:	4618      	mov	r0, r3
 800290c:	3714      	adds	r7, #20
 800290e:	46bd      	mov	sp, r7
 8002910:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002914:	4770      	bx	lr
 8002916:	bf00      	nop
 8002918:	40007000 	.word	0x40007000
 800291c:	2000000c 	.word	0x2000000c
 8002920:	431bde83 	.word	0x431bde83

08002924 <HAL_PWREx_EnableVddIO2>:
 8002924:	b480      	push	{r7}
 8002926:	af00      	add	r7, sp, #0
 8002928:	4b05      	ldr	r3, [pc, #20]	@ (8002940 <HAL_PWREx_EnableVddIO2+0x1c>)
 800292a:	685b      	ldr	r3, [r3, #4]
 800292c:	4a04      	ldr	r2, [pc, #16]	@ (8002940 <HAL_PWREx_EnableVddIO2+0x1c>)
 800292e:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8002932:	6053      	str	r3, [r2, #4]
 8002934:	bf00      	nop
 8002936:	46bd      	mov	sp, r7
 8002938:	f85d 7b04 	ldr.w	r7, [sp], #4
 800293c:	4770      	bx	lr
 800293e:	bf00      	nop
 8002940:	40007000 	.word	0x40007000

08002944 <HAL_RCC_OscConfig>:
 8002944:	b580      	push	{r7, lr}
 8002946:	b088      	sub	sp, #32
 8002948:	af00      	add	r7, sp, #0
 800294a:	6078      	str	r0, [r7, #4]
 800294c:	687b      	ldr	r3, [r7, #4]
 800294e:	2b00      	cmp	r3, #0
 8002950:	d102      	bne.n	8002958 <HAL_RCC_OscConfig+0x14>
 8002952:	2301      	movs	r3, #1
 8002954:	f000 bc08 	b.w	8003168 <HAL_RCC_OscConfig+0x824>
 8002958:	4b96      	ldr	r3, [pc, #600]	@ (8002bb4 <HAL_RCC_OscConfig+0x270>)
 800295a:	689b      	ldr	r3, [r3, #8]
 800295c:	f003 030c 	and.w	r3, r3, #12
 8002960:	61bb      	str	r3, [r7, #24]
 8002962:	4b94      	ldr	r3, [pc, #592]	@ (8002bb4 <HAL_RCC_OscConfig+0x270>)
 8002964:	68db      	ldr	r3, [r3, #12]
 8002966:	f003 0303 	and.w	r3, r3, #3
 800296a:	617b      	str	r3, [r7, #20]
 800296c:	687b      	ldr	r3, [r7, #4]
 800296e:	681b      	ldr	r3, [r3, #0]
 8002970:	f003 0310 	and.w	r3, r3, #16
 8002974:	2b00      	cmp	r3, #0
 8002976:	f000 80e4 	beq.w	8002b42 <HAL_RCC_OscConfig+0x1fe>
 800297a:	69bb      	ldr	r3, [r7, #24]
 800297c:	2b00      	cmp	r3, #0
 800297e:	d007      	beq.n	8002990 <HAL_RCC_OscConfig+0x4c>
 8002980:	69bb      	ldr	r3, [r7, #24]
 8002982:	2b0c      	cmp	r3, #12
 8002984:	f040 808b 	bne.w	8002a9e <HAL_RCC_OscConfig+0x15a>
 8002988:	697b      	ldr	r3, [r7, #20]
 800298a:	2b01      	cmp	r3, #1
 800298c:	f040 8087 	bne.w	8002a9e <HAL_RCC_OscConfig+0x15a>
 8002990:	4b88      	ldr	r3, [pc, #544]	@ (8002bb4 <HAL_RCC_OscConfig+0x270>)
 8002992:	681b      	ldr	r3, [r3, #0]
 8002994:	f003 0302 	and.w	r3, r3, #2
 8002998:	2b00      	cmp	r3, #0
 800299a:	d005      	beq.n	80029a8 <HAL_RCC_OscConfig+0x64>
 800299c:	687b      	ldr	r3, [r7, #4]
 800299e:	699b      	ldr	r3, [r3, #24]
 80029a0:	2b00      	cmp	r3, #0
 80029a2:	d101      	bne.n	80029a8 <HAL_RCC_OscConfig+0x64>
 80029a4:	2301      	movs	r3, #1
 80029a6:	e3df      	b.n	8003168 <HAL_RCC_OscConfig+0x824>
 80029a8:	687b      	ldr	r3, [r7, #4]
 80029aa:	6a1a      	ldr	r2, [r3, #32]
 80029ac:	4b81      	ldr	r3, [pc, #516]	@ (8002bb4 <HAL_RCC_OscConfig+0x270>)
 80029ae:	681b      	ldr	r3, [r3, #0]
 80029b0:	f003 0308 	and.w	r3, r3, #8
 80029b4:	2b00      	cmp	r3, #0
 80029b6:	d004      	beq.n	80029c2 <HAL_RCC_OscConfig+0x7e>
 80029b8:	4b7e      	ldr	r3, [pc, #504]	@ (8002bb4 <HAL_RCC_OscConfig+0x270>)
 80029ba:	681b      	ldr	r3, [r3, #0]
 80029bc:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 80029c0:	e005      	b.n	80029ce <HAL_RCC_OscConfig+0x8a>
 80029c2:	4b7c      	ldr	r3, [pc, #496]	@ (8002bb4 <HAL_RCC_OscConfig+0x270>)
 80029c4:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 80029c8:	091b      	lsrs	r3, r3, #4
 80029ca:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 80029ce:	4293      	cmp	r3, r2
 80029d0:	d223      	bcs.n	8002a1a <HAL_RCC_OscConfig+0xd6>
 80029d2:	687b      	ldr	r3, [r7, #4]
 80029d4:	6a1b      	ldr	r3, [r3, #32]
 80029d6:	4618      	mov	r0, r3
 80029d8:	f000 fd92 	bl	8003500 <RCC_SetFlashLatencyFromMSIRange>
 80029dc:	4603      	mov	r3, r0
 80029de:	2b00      	cmp	r3, #0
 80029e0:	d001      	beq.n	80029e6 <HAL_RCC_OscConfig+0xa2>
 80029e2:	2301      	movs	r3, #1
 80029e4:	e3c0      	b.n	8003168 <HAL_RCC_OscConfig+0x824>
 80029e6:	4b73      	ldr	r3, [pc, #460]	@ (8002bb4 <HAL_RCC_OscConfig+0x270>)
 80029e8:	681b      	ldr	r3, [r3, #0]
 80029ea:	4a72      	ldr	r2, [pc, #456]	@ (8002bb4 <HAL_RCC_OscConfig+0x270>)
 80029ec:	f043 0308 	orr.w	r3, r3, #8
 80029f0:	6013      	str	r3, [r2, #0]
 80029f2:	4b70      	ldr	r3, [pc, #448]	@ (8002bb4 <HAL_RCC_OscConfig+0x270>)
 80029f4:	681b      	ldr	r3, [r3, #0]
 80029f6:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 80029fa:	687b      	ldr	r3, [r7, #4]
 80029fc:	6a1b      	ldr	r3, [r3, #32]
 80029fe:	496d      	ldr	r1, [pc, #436]	@ (8002bb4 <HAL_RCC_OscConfig+0x270>)
 8002a00:	4313      	orrs	r3, r2
 8002a02:	600b      	str	r3, [r1, #0]
 8002a04:	4b6b      	ldr	r3, [pc, #428]	@ (8002bb4 <HAL_RCC_OscConfig+0x270>)
 8002a06:	685b      	ldr	r3, [r3, #4]
 8002a08:	f423 427f 	bic.w	r2, r3, #65280	@ 0xff00
 8002a0c:	687b      	ldr	r3, [r7, #4]
 8002a0e:	69db      	ldr	r3, [r3, #28]
 8002a10:	021b      	lsls	r3, r3, #8
 8002a12:	4968      	ldr	r1, [pc, #416]	@ (8002bb4 <HAL_RCC_OscConfig+0x270>)
 8002a14:	4313      	orrs	r3, r2
 8002a16:	604b      	str	r3, [r1, #4]
 8002a18:	e025      	b.n	8002a66 <HAL_RCC_OscConfig+0x122>
 8002a1a:	4b66      	ldr	r3, [pc, #408]	@ (8002bb4 <HAL_RCC_OscConfig+0x270>)
 8002a1c:	681b      	ldr	r3, [r3, #0]
 8002a1e:	4a65      	ldr	r2, [pc, #404]	@ (8002bb4 <HAL_RCC_OscConfig+0x270>)
 8002a20:	f043 0308 	orr.w	r3, r3, #8
 8002a24:	6013      	str	r3, [r2, #0]
 8002a26:	4b63      	ldr	r3, [pc, #396]	@ (8002bb4 <HAL_RCC_OscConfig+0x270>)
 8002a28:	681b      	ldr	r3, [r3, #0]
 8002a2a:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8002a2e:	687b      	ldr	r3, [r7, #4]
 8002a30:	6a1b      	ldr	r3, [r3, #32]
 8002a32:	4960      	ldr	r1, [pc, #384]	@ (8002bb4 <HAL_RCC_OscConfig+0x270>)
 8002a34:	4313      	orrs	r3, r2
 8002a36:	600b      	str	r3, [r1, #0]
 8002a38:	4b5e      	ldr	r3, [pc, #376]	@ (8002bb4 <HAL_RCC_OscConfig+0x270>)
 8002a3a:	685b      	ldr	r3, [r3, #4]
 8002a3c:	f423 427f 	bic.w	r2, r3, #65280	@ 0xff00
 8002a40:	687b      	ldr	r3, [r7, #4]
 8002a42:	69db      	ldr	r3, [r3, #28]
 8002a44:	021b      	lsls	r3, r3, #8
 8002a46:	495b      	ldr	r1, [pc, #364]	@ (8002bb4 <HAL_RCC_OscConfig+0x270>)
 8002a48:	4313      	orrs	r3, r2
 8002a4a:	604b      	str	r3, [r1, #4]
 8002a4c:	69bb      	ldr	r3, [r7, #24]
 8002a4e:	2b00      	cmp	r3, #0
 8002a50:	d109      	bne.n	8002a66 <HAL_RCC_OscConfig+0x122>
 8002a52:	687b      	ldr	r3, [r7, #4]
 8002a54:	6a1b      	ldr	r3, [r3, #32]
 8002a56:	4618      	mov	r0, r3
 8002a58:	f000 fd52 	bl	8003500 <RCC_SetFlashLatencyFromMSIRange>
 8002a5c:	4603      	mov	r3, r0
 8002a5e:	2b00      	cmp	r3, #0
 8002a60:	d001      	beq.n	8002a66 <HAL_RCC_OscConfig+0x122>
 8002a62:	2301      	movs	r3, #1
 8002a64:	e380      	b.n	8003168 <HAL_RCC_OscConfig+0x824>
 8002a66:	f000 fc87 	bl	8003378 <HAL_RCC_GetSysClockFreq>
 8002a6a:	4602      	mov	r2, r0
 8002a6c:	4b51      	ldr	r3, [pc, #324]	@ (8002bb4 <HAL_RCC_OscConfig+0x270>)
 8002a6e:	689b      	ldr	r3, [r3, #8]
 8002a70:	091b      	lsrs	r3, r3, #4
 8002a72:	f003 030f 	and.w	r3, r3, #15
 8002a76:	4950      	ldr	r1, [pc, #320]	@ (8002bb8 <HAL_RCC_OscConfig+0x274>)
 8002a78:	5ccb      	ldrb	r3, [r1, r3]
 8002a7a:	f003 031f 	and.w	r3, r3, #31
 8002a7e:	fa22 f303 	lsr.w	r3, r2, r3
 8002a82:	4a4e      	ldr	r2, [pc, #312]	@ (8002bbc <HAL_RCC_OscConfig+0x278>)
 8002a84:	6013      	str	r3, [r2, #0]
 8002a86:	4b4e      	ldr	r3, [pc, #312]	@ (8002bc0 <HAL_RCC_OscConfig+0x27c>)
 8002a88:	681b      	ldr	r3, [r3, #0]
 8002a8a:	4618      	mov	r0, r3
 8002a8c:	f7fe fe00 	bl	8001690 <HAL_InitTick>
 8002a90:	4603      	mov	r3, r0
 8002a92:	73fb      	strb	r3, [r7, #15]
 8002a94:	7bfb      	ldrb	r3, [r7, #15]
 8002a96:	2b00      	cmp	r3, #0
 8002a98:	d052      	beq.n	8002b40 <HAL_RCC_OscConfig+0x1fc>
 8002a9a:	7bfb      	ldrb	r3, [r7, #15]
 8002a9c:	e364      	b.n	8003168 <HAL_RCC_OscConfig+0x824>
 8002a9e:	687b      	ldr	r3, [r7, #4]
 8002aa0:	699b      	ldr	r3, [r3, #24]
 8002aa2:	2b00      	cmp	r3, #0
 8002aa4:	d032      	beq.n	8002b0c <HAL_RCC_OscConfig+0x1c8>
 8002aa6:	4b43      	ldr	r3, [pc, #268]	@ (8002bb4 <HAL_RCC_OscConfig+0x270>)
 8002aa8:	681b      	ldr	r3, [r3, #0]
 8002aaa:	4a42      	ldr	r2, [pc, #264]	@ (8002bb4 <HAL_RCC_OscConfig+0x270>)
 8002aac:	f043 0301 	orr.w	r3, r3, #1
 8002ab0:	6013      	str	r3, [r2, #0]
 8002ab2:	f7fe fe3d 	bl	8001730 <HAL_GetTick>
 8002ab6:	6138      	str	r0, [r7, #16]
 8002ab8:	e008      	b.n	8002acc <HAL_RCC_OscConfig+0x188>
 8002aba:	f7fe fe39 	bl	8001730 <HAL_GetTick>
 8002abe:	4602      	mov	r2, r0
 8002ac0:	693b      	ldr	r3, [r7, #16]
 8002ac2:	1ad3      	subs	r3, r2, r3
 8002ac4:	2b02      	cmp	r3, #2
 8002ac6:	d901      	bls.n	8002acc <HAL_RCC_OscConfig+0x188>
 8002ac8:	2303      	movs	r3, #3
 8002aca:	e34d      	b.n	8003168 <HAL_RCC_OscConfig+0x824>
 8002acc:	4b39      	ldr	r3, [pc, #228]	@ (8002bb4 <HAL_RCC_OscConfig+0x270>)
 8002ace:	681b      	ldr	r3, [r3, #0]
 8002ad0:	f003 0302 	and.w	r3, r3, #2
 8002ad4:	2b00      	cmp	r3, #0
 8002ad6:	d0f0      	beq.n	8002aba <HAL_RCC_OscConfig+0x176>
 8002ad8:	4b36      	ldr	r3, [pc, #216]	@ (8002bb4 <HAL_RCC_OscConfig+0x270>)
 8002ada:	681b      	ldr	r3, [r3, #0]
 8002adc:	4a35      	ldr	r2, [pc, #212]	@ (8002bb4 <HAL_RCC_OscConfig+0x270>)
 8002ade:	f043 0308 	orr.w	r3, r3, #8
 8002ae2:	6013      	str	r3, [r2, #0]
 8002ae4:	4b33      	ldr	r3, [pc, #204]	@ (8002bb4 <HAL_RCC_OscConfig+0x270>)
 8002ae6:	681b      	ldr	r3, [r3, #0]
 8002ae8:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8002aec:	687b      	ldr	r3, [r7, #4]
 8002aee:	6a1b      	ldr	r3, [r3, #32]
 8002af0:	4930      	ldr	r1, [pc, #192]	@ (8002bb4 <HAL_RCC_OscConfig+0x270>)
 8002af2:	4313      	orrs	r3, r2
 8002af4:	600b      	str	r3, [r1, #0]
 8002af6:	4b2f      	ldr	r3, [pc, #188]	@ (8002bb4 <HAL_RCC_OscConfig+0x270>)
 8002af8:	685b      	ldr	r3, [r3, #4]
 8002afa:	f423 427f 	bic.w	r2, r3, #65280	@ 0xff00
 8002afe:	687b      	ldr	r3, [r7, #4]
 8002b00:	69db      	ldr	r3, [r3, #28]
 8002b02:	021b      	lsls	r3, r3, #8
 8002b04:	492b      	ldr	r1, [pc, #172]	@ (8002bb4 <HAL_RCC_OscConfig+0x270>)
 8002b06:	4313      	orrs	r3, r2
 8002b08:	604b      	str	r3, [r1, #4]
 8002b0a:	e01a      	b.n	8002b42 <HAL_RCC_OscConfig+0x1fe>
 8002b0c:	4b29      	ldr	r3, [pc, #164]	@ (8002bb4 <HAL_RCC_OscConfig+0x270>)
 8002b0e:	681b      	ldr	r3, [r3, #0]
 8002b10:	4a28      	ldr	r2, [pc, #160]	@ (8002bb4 <HAL_RCC_OscConfig+0x270>)
 8002b12:	f023 0301 	bic.w	r3, r3, #1
 8002b16:	6013      	str	r3, [r2, #0]
 8002b18:	f7fe fe0a 	bl	8001730 <HAL_GetTick>
 8002b1c:	6138      	str	r0, [r7, #16]
 8002b1e:	e008      	b.n	8002b32 <HAL_RCC_OscConfig+0x1ee>
 8002b20:	f7fe fe06 	bl	8001730 <HAL_GetTick>
 8002b24:	4602      	mov	r2, r0
 8002b26:	693b      	ldr	r3, [r7, #16]
 8002b28:	1ad3      	subs	r3, r2, r3
 8002b2a:	2b02      	cmp	r3, #2
 8002b2c:	d901      	bls.n	8002b32 <HAL_RCC_OscConfig+0x1ee>
 8002b2e:	2303      	movs	r3, #3
 8002b30:	e31a      	b.n	8003168 <HAL_RCC_OscConfig+0x824>
 8002b32:	4b20      	ldr	r3, [pc, #128]	@ (8002bb4 <HAL_RCC_OscConfig+0x270>)
 8002b34:	681b      	ldr	r3, [r3, #0]
 8002b36:	f003 0302 	and.w	r3, r3, #2
 8002b3a:	2b00      	cmp	r3, #0
 8002b3c:	d1f0      	bne.n	8002b20 <HAL_RCC_OscConfig+0x1dc>
 8002b3e:	e000      	b.n	8002b42 <HAL_RCC_OscConfig+0x1fe>
 8002b40:	bf00      	nop
 8002b42:	687b      	ldr	r3, [r7, #4]
 8002b44:	681b      	ldr	r3, [r3, #0]
 8002b46:	f003 0301 	and.w	r3, r3, #1
 8002b4a:	2b00      	cmp	r3, #0
 8002b4c:	d073      	beq.n	8002c36 <HAL_RCC_OscConfig+0x2f2>
 8002b4e:	69bb      	ldr	r3, [r7, #24]
 8002b50:	2b08      	cmp	r3, #8
 8002b52:	d005      	beq.n	8002b60 <HAL_RCC_OscConfig+0x21c>
 8002b54:	69bb      	ldr	r3, [r7, #24]
 8002b56:	2b0c      	cmp	r3, #12
 8002b58:	d10e      	bne.n	8002b78 <HAL_RCC_OscConfig+0x234>
 8002b5a:	697b      	ldr	r3, [r7, #20]
 8002b5c:	2b03      	cmp	r3, #3
 8002b5e:	d10b      	bne.n	8002b78 <HAL_RCC_OscConfig+0x234>
 8002b60:	4b14      	ldr	r3, [pc, #80]	@ (8002bb4 <HAL_RCC_OscConfig+0x270>)
 8002b62:	681b      	ldr	r3, [r3, #0]
 8002b64:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002b68:	2b00      	cmp	r3, #0
 8002b6a:	d063      	beq.n	8002c34 <HAL_RCC_OscConfig+0x2f0>
 8002b6c:	687b      	ldr	r3, [r7, #4]
 8002b6e:	685b      	ldr	r3, [r3, #4]
 8002b70:	2b00      	cmp	r3, #0
 8002b72:	d15f      	bne.n	8002c34 <HAL_RCC_OscConfig+0x2f0>
 8002b74:	2301      	movs	r3, #1
 8002b76:	e2f7      	b.n	8003168 <HAL_RCC_OscConfig+0x824>
 8002b78:	687b      	ldr	r3, [r7, #4]
 8002b7a:	685b      	ldr	r3, [r3, #4]
 8002b7c:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8002b80:	d106      	bne.n	8002b90 <HAL_RCC_OscConfig+0x24c>
 8002b82:	4b0c      	ldr	r3, [pc, #48]	@ (8002bb4 <HAL_RCC_OscConfig+0x270>)
 8002b84:	681b      	ldr	r3, [r3, #0]
 8002b86:	4a0b      	ldr	r2, [pc, #44]	@ (8002bb4 <HAL_RCC_OscConfig+0x270>)
 8002b88:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8002b8c:	6013      	str	r3, [r2, #0]
 8002b8e:	e025      	b.n	8002bdc <HAL_RCC_OscConfig+0x298>
 8002b90:	687b      	ldr	r3, [r7, #4]
 8002b92:	685b      	ldr	r3, [r3, #4]
 8002b94:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8002b98:	d114      	bne.n	8002bc4 <HAL_RCC_OscConfig+0x280>
 8002b9a:	4b06      	ldr	r3, [pc, #24]	@ (8002bb4 <HAL_RCC_OscConfig+0x270>)
 8002b9c:	681b      	ldr	r3, [r3, #0]
 8002b9e:	4a05      	ldr	r2, [pc, #20]	@ (8002bb4 <HAL_RCC_OscConfig+0x270>)
 8002ba0:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8002ba4:	6013      	str	r3, [r2, #0]
 8002ba6:	4b03      	ldr	r3, [pc, #12]	@ (8002bb4 <HAL_RCC_OscConfig+0x270>)
 8002ba8:	681b      	ldr	r3, [r3, #0]
 8002baa:	4a02      	ldr	r2, [pc, #8]	@ (8002bb4 <HAL_RCC_OscConfig+0x270>)
 8002bac:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8002bb0:	6013      	str	r3, [r2, #0]
 8002bb2:	e013      	b.n	8002bdc <HAL_RCC_OscConfig+0x298>
 8002bb4:	40021000 	.word	0x40021000
 8002bb8:	08005a90 	.word	0x08005a90
 8002bbc:	2000000c 	.word	0x2000000c
 8002bc0:	20000010 	.word	0x20000010
 8002bc4:	4ba0      	ldr	r3, [pc, #640]	@ (8002e48 <HAL_RCC_OscConfig+0x504>)
 8002bc6:	681b      	ldr	r3, [r3, #0]
 8002bc8:	4a9f      	ldr	r2, [pc, #636]	@ (8002e48 <HAL_RCC_OscConfig+0x504>)
 8002bca:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8002bce:	6013      	str	r3, [r2, #0]
 8002bd0:	4b9d      	ldr	r3, [pc, #628]	@ (8002e48 <HAL_RCC_OscConfig+0x504>)
 8002bd2:	681b      	ldr	r3, [r3, #0]
 8002bd4:	4a9c      	ldr	r2, [pc, #624]	@ (8002e48 <HAL_RCC_OscConfig+0x504>)
 8002bd6:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8002bda:	6013      	str	r3, [r2, #0]
 8002bdc:	687b      	ldr	r3, [r7, #4]
 8002bde:	685b      	ldr	r3, [r3, #4]
 8002be0:	2b00      	cmp	r3, #0
 8002be2:	d013      	beq.n	8002c0c <HAL_RCC_OscConfig+0x2c8>
 8002be4:	f7fe fda4 	bl	8001730 <HAL_GetTick>
 8002be8:	6138      	str	r0, [r7, #16]
 8002bea:	e008      	b.n	8002bfe <HAL_RCC_OscConfig+0x2ba>
 8002bec:	f7fe fda0 	bl	8001730 <HAL_GetTick>
 8002bf0:	4602      	mov	r2, r0
 8002bf2:	693b      	ldr	r3, [r7, #16]
 8002bf4:	1ad3      	subs	r3, r2, r3
 8002bf6:	2b64      	cmp	r3, #100	@ 0x64
 8002bf8:	d901      	bls.n	8002bfe <HAL_RCC_OscConfig+0x2ba>
 8002bfa:	2303      	movs	r3, #3
 8002bfc:	e2b4      	b.n	8003168 <HAL_RCC_OscConfig+0x824>
 8002bfe:	4b92      	ldr	r3, [pc, #584]	@ (8002e48 <HAL_RCC_OscConfig+0x504>)
 8002c00:	681b      	ldr	r3, [r3, #0]
 8002c02:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002c06:	2b00      	cmp	r3, #0
 8002c08:	d0f0      	beq.n	8002bec <HAL_RCC_OscConfig+0x2a8>
 8002c0a:	e014      	b.n	8002c36 <HAL_RCC_OscConfig+0x2f2>
 8002c0c:	f7fe fd90 	bl	8001730 <HAL_GetTick>
 8002c10:	6138      	str	r0, [r7, #16]
 8002c12:	e008      	b.n	8002c26 <HAL_RCC_OscConfig+0x2e2>
 8002c14:	f7fe fd8c 	bl	8001730 <HAL_GetTick>
 8002c18:	4602      	mov	r2, r0
 8002c1a:	693b      	ldr	r3, [r7, #16]
 8002c1c:	1ad3      	subs	r3, r2, r3
 8002c1e:	2b64      	cmp	r3, #100	@ 0x64
 8002c20:	d901      	bls.n	8002c26 <HAL_RCC_OscConfig+0x2e2>
 8002c22:	2303      	movs	r3, #3
 8002c24:	e2a0      	b.n	8003168 <HAL_RCC_OscConfig+0x824>
 8002c26:	4b88      	ldr	r3, [pc, #544]	@ (8002e48 <HAL_RCC_OscConfig+0x504>)
 8002c28:	681b      	ldr	r3, [r3, #0]
 8002c2a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002c2e:	2b00      	cmp	r3, #0
 8002c30:	d1f0      	bne.n	8002c14 <HAL_RCC_OscConfig+0x2d0>
 8002c32:	e000      	b.n	8002c36 <HAL_RCC_OscConfig+0x2f2>
 8002c34:	bf00      	nop
 8002c36:	687b      	ldr	r3, [r7, #4]
 8002c38:	681b      	ldr	r3, [r3, #0]
 8002c3a:	f003 0302 	and.w	r3, r3, #2
 8002c3e:	2b00      	cmp	r3, #0
 8002c40:	d060      	beq.n	8002d04 <HAL_RCC_OscConfig+0x3c0>
 8002c42:	69bb      	ldr	r3, [r7, #24]
 8002c44:	2b04      	cmp	r3, #4
 8002c46:	d005      	beq.n	8002c54 <HAL_RCC_OscConfig+0x310>
 8002c48:	69bb      	ldr	r3, [r7, #24]
 8002c4a:	2b0c      	cmp	r3, #12
 8002c4c:	d119      	bne.n	8002c82 <HAL_RCC_OscConfig+0x33e>
 8002c4e:	697b      	ldr	r3, [r7, #20]
 8002c50:	2b02      	cmp	r3, #2
 8002c52:	d116      	bne.n	8002c82 <HAL_RCC_OscConfig+0x33e>
 8002c54:	4b7c      	ldr	r3, [pc, #496]	@ (8002e48 <HAL_RCC_OscConfig+0x504>)
 8002c56:	681b      	ldr	r3, [r3, #0]
 8002c58:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8002c5c:	2b00      	cmp	r3, #0
 8002c5e:	d005      	beq.n	8002c6c <HAL_RCC_OscConfig+0x328>
 8002c60:	687b      	ldr	r3, [r7, #4]
 8002c62:	68db      	ldr	r3, [r3, #12]
 8002c64:	2b00      	cmp	r3, #0
 8002c66:	d101      	bne.n	8002c6c <HAL_RCC_OscConfig+0x328>
 8002c68:	2301      	movs	r3, #1
 8002c6a:	e27d      	b.n	8003168 <HAL_RCC_OscConfig+0x824>
 8002c6c:	4b76      	ldr	r3, [pc, #472]	@ (8002e48 <HAL_RCC_OscConfig+0x504>)
 8002c6e:	685b      	ldr	r3, [r3, #4]
 8002c70:	f023 42fe 	bic.w	r2, r3, #2130706432	@ 0x7f000000
 8002c74:	687b      	ldr	r3, [r7, #4]
 8002c76:	691b      	ldr	r3, [r3, #16]
 8002c78:	061b      	lsls	r3, r3, #24
 8002c7a:	4973      	ldr	r1, [pc, #460]	@ (8002e48 <HAL_RCC_OscConfig+0x504>)
 8002c7c:	4313      	orrs	r3, r2
 8002c7e:	604b      	str	r3, [r1, #4]
 8002c80:	e040      	b.n	8002d04 <HAL_RCC_OscConfig+0x3c0>
 8002c82:	687b      	ldr	r3, [r7, #4]
 8002c84:	68db      	ldr	r3, [r3, #12]
 8002c86:	2b00      	cmp	r3, #0
 8002c88:	d023      	beq.n	8002cd2 <HAL_RCC_OscConfig+0x38e>
 8002c8a:	4b6f      	ldr	r3, [pc, #444]	@ (8002e48 <HAL_RCC_OscConfig+0x504>)
 8002c8c:	681b      	ldr	r3, [r3, #0]
 8002c8e:	4a6e      	ldr	r2, [pc, #440]	@ (8002e48 <HAL_RCC_OscConfig+0x504>)
 8002c90:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8002c94:	6013      	str	r3, [r2, #0]
 8002c96:	f7fe fd4b 	bl	8001730 <HAL_GetTick>
 8002c9a:	6138      	str	r0, [r7, #16]
 8002c9c:	e008      	b.n	8002cb0 <HAL_RCC_OscConfig+0x36c>
 8002c9e:	f7fe fd47 	bl	8001730 <HAL_GetTick>
 8002ca2:	4602      	mov	r2, r0
 8002ca4:	693b      	ldr	r3, [r7, #16]
 8002ca6:	1ad3      	subs	r3, r2, r3
 8002ca8:	2b02      	cmp	r3, #2
 8002caa:	d901      	bls.n	8002cb0 <HAL_RCC_OscConfig+0x36c>
 8002cac:	2303      	movs	r3, #3
 8002cae:	e25b      	b.n	8003168 <HAL_RCC_OscConfig+0x824>
 8002cb0:	4b65      	ldr	r3, [pc, #404]	@ (8002e48 <HAL_RCC_OscConfig+0x504>)
 8002cb2:	681b      	ldr	r3, [r3, #0]
 8002cb4:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8002cb8:	2b00      	cmp	r3, #0
 8002cba:	d0f0      	beq.n	8002c9e <HAL_RCC_OscConfig+0x35a>
 8002cbc:	4b62      	ldr	r3, [pc, #392]	@ (8002e48 <HAL_RCC_OscConfig+0x504>)
 8002cbe:	685b      	ldr	r3, [r3, #4]
 8002cc0:	f023 42fe 	bic.w	r2, r3, #2130706432	@ 0x7f000000
 8002cc4:	687b      	ldr	r3, [r7, #4]
 8002cc6:	691b      	ldr	r3, [r3, #16]
 8002cc8:	061b      	lsls	r3, r3, #24
 8002cca:	495f      	ldr	r1, [pc, #380]	@ (8002e48 <HAL_RCC_OscConfig+0x504>)
 8002ccc:	4313      	orrs	r3, r2
 8002cce:	604b      	str	r3, [r1, #4]
 8002cd0:	e018      	b.n	8002d04 <HAL_RCC_OscConfig+0x3c0>
 8002cd2:	4b5d      	ldr	r3, [pc, #372]	@ (8002e48 <HAL_RCC_OscConfig+0x504>)
 8002cd4:	681b      	ldr	r3, [r3, #0]
 8002cd6:	4a5c      	ldr	r2, [pc, #368]	@ (8002e48 <HAL_RCC_OscConfig+0x504>)
 8002cd8:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8002cdc:	6013      	str	r3, [r2, #0]
 8002cde:	f7fe fd27 	bl	8001730 <HAL_GetTick>
 8002ce2:	6138      	str	r0, [r7, #16]
 8002ce4:	e008      	b.n	8002cf8 <HAL_RCC_OscConfig+0x3b4>
 8002ce6:	f7fe fd23 	bl	8001730 <HAL_GetTick>
 8002cea:	4602      	mov	r2, r0
 8002cec:	693b      	ldr	r3, [r7, #16]
 8002cee:	1ad3      	subs	r3, r2, r3
 8002cf0:	2b02      	cmp	r3, #2
 8002cf2:	d901      	bls.n	8002cf8 <HAL_RCC_OscConfig+0x3b4>
 8002cf4:	2303      	movs	r3, #3
 8002cf6:	e237      	b.n	8003168 <HAL_RCC_OscConfig+0x824>
 8002cf8:	4b53      	ldr	r3, [pc, #332]	@ (8002e48 <HAL_RCC_OscConfig+0x504>)
 8002cfa:	681b      	ldr	r3, [r3, #0]
 8002cfc:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8002d00:	2b00      	cmp	r3, #0
 8002d02:	d1f0      	bne.n	8002ce6 <HAL_RCC_OscConfig+0x3a2>
 8002d04:	687b      	ldr	r3, [r7, #4]
 8002d06:	681b      	ldr	r3, [r3, #0]
 8002d08:	f003 0308 	and.w	r3, r3, #8
 8002d0c:	2b00      	cmp	r3, #0
 8002d0e:	d03c      	beq.n	8002d8a <HAL_RCC_OscConfig+0x446>
 8002d10:	687b      	ldr	r3, [r7, #4]
 8002d12:	695b      	ldr	r3, [r3, #20]
 8002d14:	2b00      	cmp	r3, #0
 8002d16:	d01c      	beq.n	8002d52 <HAL_RCC_OscConfig+0x40e>
 8002d18:	4b4b      	ldr	r3, [pc, #300]	@ (8002e48 <HAL_RCC_OscConfig+0x504>)
 8002d1a:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8002d1e:	4a4a      	ldr	r2, [pc, #296]	@ (8002e48 <HAL_RCC_OscConfig+0x504>)
 8002d20:	f043 0301 	orr.w	r3, r3, #1
 8002d24:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
 8002d28:	f7fe fd02 	bl	8001730 <HAL_GetTick>
 8002d2c:	6138      	str	r0, [r7, #16]
 8002d2e:	e008      	b.n	8002d42 <HAL_RCC_OscConfig+0x3fe>
 8002d30:	f7fe fcfe 	bl	8001730 <HAL_GetTick>
 8002d34:	4602      	mov	r2, r0
 8002d36:	693b      	ldr	r3, [r7, #16]
 8002d38:	1ad3      	subs	r3, r2, r3
 8002d3a:	2b02      	cmp	r3, #2
 8002d3c:	d901      	bls.n	8002d42 <HAL_RCC_OscConfig+0x3fe>
 8002d3e:	2303      	movs	r3, #3
 8002d40:	e212      	b.n	8003168 <HAL_RCC_OscConfig+0x824>
 8002d42:	4b41      	ldr	r3, [pc, #260]	@ (8002e48 <HAL_RCC_OscConfig+0x504>)
 8002d44:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8002d48:	f003 0302 	and.w	r3, r3, #2
 8002d4c:	2b00      	cmp	r3, #0
 8002d4e:	d0ef      	beq.n	8002d30 <HAL_RCC_OscConfig+0x3ec>
 8002d50:	e01b      	b.n	8002d8a <HAL_RCC_OscConfig+0x446>
 8002d52:	4b3d      	ldr	r3, [pc, #244]	@ (8002e48 <HAL_RCC_OscConfig+0x504>)
 8002d54:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8002d58:	4a3b      	ldr	r2, [pc, #236]	@ (8002e48 <HAL_RCC_OscConfig+0x504>)
 8002d5a:	f023 0301 	bic.w	r3, r3, #1
 8002d5e:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
 8002d62:	f7fe fce5 	bl	8001730 <HAL_GetTick>
 8002d66:	6138      	str	r0, [r7, #16]
 8002d68:	e008      	b.n	8002d7c <HAL_RCC_OscConfig+0x438>
 8002d6a:	f7fe fce1 	bl	8001730 <HAL_GetTick>
 8002d6e:	4602      	mov	r2, r0
 8002d70:	693b      	ldr	r3, [r7, #16]
 8002d72:	1ad3      	subs	r3, r2, r3
 8002d74:	2b02      	cmp	r3, #2
 8002d76:	d901      	bls.n	8002d7c <HAL_RCC_OscConfig+0x438>
 8002d78:	2303      	movs	r3, #3
 8002d7a:	e1f5      	b.n	8003168 <HAL_RCC_OscConfig+0x824>
 8002d7c:	4b32      	ldr	r3, [pc, #200]	@ (8002e48 <HAL_RCC_OscConfig+0x504>)
 8002d7e:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8002d82:	f003 0302 	and.w	r3, r3, #2
 8002d86:	2b00      	cmp	r3, #0
 8002d88:	d1ef      	bne.n	8002d6a <HAL_RCC_OscConfig+0x426>
 8002d8a:	687b      	ldr	r3, [r7, #4]
 8002d8c:	681b      	ldr	r3, [r3, #0]
 8002d8e:	f003 0304 	and.w	r3, r3, #4
 8002d92:	2b00      	cmp	r3, #0
 8002d94:	f000 80a6 	beq.w	8002ee4 <HAL_RCC_OscConfig+0x5a0>
 8002d98:	2300      	movs	r3, #0
 8002d9a:	77fb      	strb	r3, [r7, #31]
 8002d9c:	4b2a      	ldr	r3, [pc, #168]	@ (8002e48 <HAL_RCC_OscConfig+0x504>)
 8002d9e:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002da0:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002da4:	2b00      	cmp	r3, #0
 8002da6:	d10d      	bne.n	8002dc4 <HAL_RCC_OscConfig+0x480>
 8002da8:	4b27      	ldr	r3, [pc, #156]	@ (8002e48 <HAL_RCC_OscConfig+0x504>)
 8002daa:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002dac:	4a26      	ldr	r2, [pc, #152]	@ (8002e48 <HAL_RCC_OscConfig+0x504>)
 8002dae:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8002db2:	6593      	str	r3, [r2, #88]	@ 0x58
 8002db4:	4b24      	ldr	r3, [pc, #144]	@ (8002e48 <HAL_RCC_OscConfig+0x504>)
 8002db6:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002db8:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002dbc:	60bb      	str	r3, [r7, #8]
 8002dbe:	68bb      	ldr	r3, [r7, #8]
 8002dc0:	2301      	movs	r3, #1
 8002dc2:	77fb      	strb	r3, [r7, #31]
 8002dc4:	4b21      	ldr	r3, [pc, #132]	@ (8002e4c <HAL_RCC_OscConfig+0x508>)
 8002dc6:	681b      	ldr	r3, [r3, #0]
 8002dc8:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002dcc:	2b00      	cmp	r3, #0
 8002dce:	d118      	bne.n	8002e02 <HAL_RCC_OscConfig+0x4be>
 8002dd0:	4b1e      	ldr	r3, [pc, #120]	@ (8002e4c <HAL_RCC_OscConfig+0x508>)
 8002dd2:	681b      	ldr	r3, [r3, #0]
 8002dd4:	4a1d      	ldr	r2, [pc, #116]	@ (8002e4c <HAL_RCC_OscConfig+0x508>)
 8002dd6:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8002dda:	6013      	str	r3, [r2, #0]
 8002ddc:	f7fe fca8 	bl	8001730 <HAL_GetTick>
 8002de0:	6138      	str	r0, [r7, #16]
 8002de2:	e008      	b.n	8002df6 <HAL_RCC_OscConfig+0x4b2>
 8002de4:	f7fe fca4 	bl	8001730 <HAL_GetTick>
 8002de8:	4602      	mov	r2, r0
 8002dea:	693b      	ldr	r3, [r7, #16]
 8002dec:	1ad3      	subs	r3, r2, r3
 8002dee:	2b02      	cmp	r3, #2
 8002df0:	d901      	bls.n	8002df6 <HAL_RCC_OscConfig+0x4b2>
 8002df2:	2303      	movs	r3, #3
 8002df4:	e1b8      	b.n	8003168 <HAL_RCC_OscConfig+0x824>
 8002df6:	4b15      	ldr	r3, [pc, #84]	@ (8002e4c <HAL_RCC_OscConfig+0x508>)
 8002df8:	681b      	ldr	r3, [r3, #0]
 8002dfa:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002dfe:	2b00      	cmp	r3, #0
 8002e00:	d0f0      	beq.n	8002de4 <HAL_RCC_OscConfig+0x4a0>
 8002e02:	687b      	ldr	r3, [r7, #4]
 8002e04:	689b      	ldr	r3, [r3, #8]
 8002e06:	2b01      	cmp	r3, #1
 8002e08:	d108      	bne.n	8002e1c <HAL_RCC_OscConfig+0x4d8>
 8002e0a:	4b0f      	ldr	r3, [pc, #60]	@ (8002e48 <HAL_RCC_OscConfig+0x504>)
 8002e0c:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8002e10:	4a0d      	ldr	r2, [pc, #52]	@ (8002e48 <HAL_RCC_OscConfig+0x504>)
 8002e12:	f043 0301 	orr.w	r3, r3, #1
 8002e16:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8002e1a:	e029      	b.n	8002e70 <HAL_RCC_OscConfig+0x52c>
 8002e1c:	687b      	ldr	r3, [r7, #4]
 8002e1e:	689b      	ldr	r3, [r3, #8]
 8002e20:	2b05      	cmp	r3, #5
 8002e22:	d115      	bne.n	8002e50 <HAL_RCC_OscConfig+0x50c>
 8002e24:	4b08      	ldr	r3, [pc, #32]	@ (8002e48 <HAL_RCC_OscConfig+0x504>)
 8002e26:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8002e2a:	4a07      	ldr	r2, [pc, #28]	@ (8002e48 <HAL_RCC_OscConfig+0x504>)
 8002e2c:	f043 0304 	orr.w	r3, r3, #4
 8002e30:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8002e34:	4b04      	ldr	r3, [pc, #16]	@ (8002e48 <HAL_RCC_OscConfig+0x504>)
 8002e36:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8002e3a:	4a03      	ldr	r2, [pc, #12]	@ (8002e48 <HAL_RCC_OscConfig+0x504>)
 8002e3c:	f043 0301 	orr.w	r3, r3, #1
 8002e40:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8002e44:	e014      	b.n	8002e70 <HAL_RCC_OscConfig+0x52c>
 8002e46:	bf00      	nop
 8002e48:	40021000 	.word	0x40021000
 8002e4c:	40007000 	.word	0x40007000
 8002e50:	4b9d      	ldr	r3, [pc, #628]	@ (80030c8 <HAL_RCC_OscConfig+0x784>)
 8002e52:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8002e56:	4a9c      	ldr	r2, [pc, #624]	@ (80030c8 <HAL_RCC_OscConfig+0x784>)
 8002e58:	f023 0301 	bic.w	r3, r3, #1
 8002e5c:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8002e60:	4b99      	ldr	r3, [pc, #612]	@ (80030c8 <HAL_RCC_OscConfig+0x784>)
 8002e62:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8002e66:	4a98      	ldr	r2, [pc, #608]	@ (80030c8 <HAL_RCC_OscConfig+0x784>)
 8002e68:	f023 0304 	bic.w	r3, r3, #4
 8002e6c:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8002e70:	687b      	ldr	r3, [r7, #4]
 8002e72:	689b      	ldr	r3, [r3, #8]
 8002e74:	2b00      	cmp	r3, #0
 8002e76:	d016      	beq.n	8002ea6 <HAL_RCC_OscConfig+0x562>
 8002e78:	f7fe fc5a 	bl	8001730 <HAL_GetTick>
 8002e7c:	6138      	str	r0, [r7, #16]
 8002e7e:	e00a      	b.n	8002e96 <HAL_RCC_OscConfig+0x552>
 8002e80:	f7fe fc56 	bl	8001730 <HAL_GetTick>
 8002e84:	4602      	mov	r2, r0
 8002e86:	693b      	ldr	r3, [r7, #16]
 8002e88:	1ad3      	subs	r3, r2, r3
 8002e8a:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002e8e:	4293      	cmp	r3, r2
 8002e90:	d901      	bls.n	8002e96 <HAL_RCC_OscConfig+0x552>
 8002e92:	2303      	movs	r3, #3
 8002e94:	e168      	b.n	8003168 <HAL_RCC_OscConfig+0x824>
 8002e96:	4b8c      	ldr	r3, [pc, #560]	@ (80030c8 <HAL_RCC_OscConfig+0x784>)
 8002e98:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8002e9c:	f003 0302 	and.w	r3, r3, #2
 8002ea0:	2b00      	cmp	r3, #0
 8002ea2:	d0ed      	beq.n	8002e80 <HAL_RCC_OscConfig+0x53c>
 8002ea4:	e015      	b.n	8002ed2 <HAL_RCC_OscConfig+0x58e>
 8002ea6:	f7fe fc43 	bl	8001730 <HAL_GetTick>
 8002eaa:	6138      	str	r0, [r7, #16]
 8002eac:	e00a      	b.n	8002ec4 <HAL_RCC_OscConfig+0x580>
 8002eae:	f7fe fc3f 	bl	8001730 <HAL_GetTick>
 8002eb2:	4602      	mov	r2, r0
 8002eb4:	693b      	ldr	r3, [r7, #16]
 8002eb6:	1ad3      	subs	r3, r2, r3
 8002eb8:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002ebc:	4293      	cmp	r3, r2
 8002ebe:	d901      	bls.n	8002ec4 <HAL_RCC_OscConfig+0x580>
 8002ec0:	2303      	movs	r3, #3
 8002ec2:	e151      	b.n	8003168 <HAL_RCC_OscConfig+0x824>
 8002ec4:	4b80      	ldr	r3, [pc, #512]	@ (80030c8 <HAL_RCC_OscConfig+0x784>)
 8002ec6:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8002eca:	f003 0302 	and.w	r3, r3, #2
 8002ece:	2b00      	cmp	r3, #0
 8002ed0:	d1ed      	bne.n	8002eae <HAL_RCC_OscConfig+0x56a>
 8002ed2:	7ffb      	ldrb	r3, [r7, #31]
 8002ed4:	2b01      	cmp	r3, #1
 8002ed6:	d105      	bne.n	8002ee4 <HAL_RCC_OscConfig+0x5a0>
 8002ed8:	4b7b      	ldr	r3, [pc, #492]	@ (80030c8 <HAL_RCC_OscConfig+0x784>)
 8002eda:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002edc:	4a7a      	ldr	r2, [pc, #488]	@ (80030c8 <HAL_RCC_OscConfig+0x784>)
 8002ede:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8002ee2:	6593      	str	r3, [r2, #88]	@ 0x58
 8002ee4:	687b      	ldr	r3, [r7, #4]
 8002ee6:	681b      	ldr	r3, [r3, #0]
 8002ee8:	f003 0320 	and.w	r3, r3, #32
 8002eec:	2b00      	cmp	r3, #0
 8002eee:	d03c      	beq.n	8002f6a <HAL_RCC_OscConfig+0x626>
 8002ef0:	687b      	ldr	r3, [r7, #4]
 8002ef2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002ef4:	2b00      	cmp	r3, #0
 8002ef6:	d01c      	beq.n	8002f32 <HAL_RCC_OscConfig+0x5ee>
 8002ef8:	4b73      	ldr	r3, [pc, #460]	@ (80030c8 <HAL_RCC_OscConfig+0x784>)
 8002efa:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8002efe:	4a72      	ldr	r2, [pc, #456]	@ (80030c8 <HAL_RCC_OscConfig+0x784>)
 8002f00:	f043 0301 	orr.w	r3, r3, #1
 8002f04:	f8c2 3098 	str.w	r3, [r2, #152]	@ 0x98
 8002f08:	f7fe fc12 	bl	8001730 <HAL_GetTick>
 8002f0c:	6138      	str	r0, [r7, #16]
 8002f0e:	e008      	b.n	8002f22 <HAL_RCC_OscConfig+0x5de>
 8002f10:	f7fe fc0e 	bl	8001730 <HAL_GetTick>
 8002f14:	4602      	mov	r2, r0
 8002f16:	693b      	ldr	r3, [r7, #16]
 8002f18:	1ad3      	subs	r3, r2, r3
 8002f1a:	2b02      	cmp	r3, #2
 8002f1c:	d901      	bls.n	8002f22 <HAL_RCC_OscConfig+0x5de>
 8002f1e:	2303      	movs	r3, #3
 8002f20:	e122      	b.n	8003168 <HAL_RCC_OscConfig+0x824>
 8002f22:	4b69      	ldr	r3, [pc, #420]	@ (80030c8 <HAL_RCC_OscConfig+0x784>)
 8002f24:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8002f28:	f003 0302 	and.w	r3, r3, #2
 8002f2c:	2b00      	cmp	r3, #0
 8002f2e:	d0ef      	beq.n	8002f10 <HAL_RCC_OscConfig+0x5cc>
 8002f30:	e01b      	b.n	8002f6a <HAL_RCC_OscConfig+0x626>
 8002f32:	4b65      	ldr	r3, [pc, #404]	@ (80030c8 <HAL_RCC_OscConfig+0x784>)
 8002f34:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8002f38:	4a63      	ldr	r2, [pc, #396]	@ (80030c8 <HAL_RCC_OscConfig+0x784>)
 8002f3a:	f023 0301 	bic.w	r3, r3, #1
 8002f3e:	f8c2 3098 	str.w	r3, [r2, #152]	@ 0x98
 8002f42:	f7fe fbf5 	bl	8001730 <HAL_GetTick>
 8002f46:	6138      	str	r0, [r7, #16]
 8002f48:	e008      	b.n	8002f5c <HAL_RCC_OscConfig+0x618>
 8002f4a:	f7fe fbf1 	bl	8001730 <HAL_GetTick>
 8002f4e:	4602      	mov	r2, r0
 8002f50:	693b      	ldr	r3, [r7, #16]
 8002f52:	1ad3      	subs	r3, r2, r3
 8002f54:	2b02      	cmp	r3, #2
 8002f56:	d901      	bls.n	8002f5c <HAL_RCC_OscConfig+0x618>
 8002f58:	2303      	movs	r3, #3
 8002f5a:	e105      	b.n	8003168 <HAL_RCC_OscConfig+0x824>
 8002f5c:	4b5a      	ldr	r3, [pc, #360]	@ (80030c8 <HAL_RCC_OscConfig+0x784>)
 8002f5e:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8002f62:	f003 0302 	and.w	r3, r3, #2
 8002f66:	2b00      	cmp	r3, #0
 8002f68:	d1ef      	bne.n	8002f4a <HAL_RCC_OscConfig+0x606>
 8002f6a:	687b      	ldr	r3, [r7, #4]
 8002f6c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002f6e:	2b00      	cmp	r3, #0
 8002f70:	f000 80f9 	beq.w	8003166 <HAL_RCC_OscConfig+0x822>
 8002f74:	687b      	ldr	r3, [r7, #4]
 8002f76:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002f78:	2b02      	cmp	r3, #2
 8002f7a:	f040 80cf 	bne.w	800311c <HAL_RCC_OscConfig+0x7d8>
 8002f7e:	4b52      	ldr	r3, [pc, #328]	@ (80030c8 <HAL_RCC_OscConfig+0x784>)
 8002f80:	68db      	ldr	r3, [r3, #12]
 8002f82:	617b      	str	r3, [r7, #20]
 8002f84:	697b      	ldr	r3, [r7, #20]
 8002f86:	f003 0203 	and.w	r2, r3, #3
 8002f8a:	687b      	ldr	r3, [r7, #4]
 8002f8c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002f8e:	429a      	cmp	r2, r3
 8002f90:	d12c      	bne.n	8002fec <HAL_RCC_OscConfig+0x6a8>
 8002f92:	697b      	ldr	r3, [r7, #20]
 8002f94:	f003 0270 	and.w	r2, r3, #112	@ 0x70
 8002f98:	687b      	ldr	r3, [r7, #4]
 8002f9a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002f9c:	3b01      	subs	r3, #1
 8002f9e:	011b      	lsls	r3, r3, #4
 8002fa0:	429a      	cmp	r2, r3
 8002fa2:	d123      	bne.n	8002fec <HAL_RCC_OscConfig+0x6a8>
 8002fa4:	697b      	ldr	r3, [r7, #20]
 8002fa6:	f403 42fe 	and.w	r2, r3, #32512	@ 0x7f00
 8002faa:	687b      	ldr	r3, [r7, #4]
 8002fac:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8002fae:	021b      	lsls	r3, r3, #8
 8002fb0:	429a      	cmp	r2, r3
 8002fb2:	d11b      	bne.n	8002fec <HAL_RCC_OscConfig+0x6a8>
 8002fb4:	697b      	ldr	r3, [r7, #20]
 8002fb6:	f003 4278 	and.w	r2, r3, #4160749568	@ 0xf8000000
 8002fba:	687b      	ldr	r3, [r7, #4]
 8002fbc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002fbe:	06db      	lsls	r3, r3, #27
 8002fc0:	429a      	cmp	r2, r3
 8002fc2:	d113      	bne.n	8002fec <HAL_RCC_OscConfig+0x6a8>
 8002fc4:	697b      	ldr	r3, [r7, #20]
 8002fc6:	f403 02c0 	and.w	r2, r3, #6291456	@ 0x600000
 8002fca:	687b      	ldr	r3, [r7, #4]
 8002fcc:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002fce:	085b      	lsrs	r3, r3, #1
 8002fd0:	3b01      	subs	r3, #1
 8002fd2:	055b      	lsls	r3, r3, #21
 8002fd4:	429a      	cmp	r2, r3
 8002fd6:	d109      	bne.n	8002fec <HAL_RCC_OscConfig+0x6a8>
 8002fd8:	697b      	ldr	r3, [r7, #20]
 8002fda:	f003 62c0 	and.w	r2, r3, #100663296	@ 0x6000000
 8002fde:	687b      	ldr	r3, [r7, #4]
 8002fe0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002fe2:	085b      	lsrs	r3, r3, #1
 8002fe4:	3b01      	subs	r3, #1
 8002fe6:	065b      	lsls	r3, r3, #25
 8002fe8:	429a      	cmp	r2, r3
 8002fea:	d071      	beq.n	80030d0 <HAL_RCC_OscConfig+0x78c>
 8002fec:	69bb      	ldr	r3, [r7, #24]
 8002fee:	2b0c      	cmp	r3, #12
 8002ff0:	d068      	beq.n	80030c4 <HAL_RCC_OscConfig+0x780>
 8002ff2:	4b35      	ldr	r3, [pc, #212]	@ (80030c8 <HAL_RCC_OscConfig+0x784>)
 8002ff4:	681b      	ldr	r3, [r3, #0]
 8002ff6:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 8002ffa:	2b00      	cmp	r3, #0
 8002ffc:	d105      	bne.n	800300a <HAL_RCC_OscConfig+0x6c6>
 8002ffe:	4b32      	ldr	r3, [pc, #200]	@ (80030c8 <HAL_RCC_OscConfig+0x784>)
 8003000:	681b      	ldr	r3, [r3, #0]
 8003002:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8003006:	2b00      	cmp	r3, #0
 8003008:	d001      	beq.n	800300e <HAL_RCC_OscConfig+0x6ca>
 800300a:	2301      	movs	r3, #1
 800300c:	e0ac      	b.n	8003168 <HAL_RCC_OscConfig+0x824>
 800300e:	4b2e      	ldr	r3, [pc, #184]	@ (80030c8 <HAL_RCC_OscConfig+0x784>)
 8003010:	681b      	ldr	r3, [r3, #0]
 8003012:	4a2d      	ldr	r2, [pc, #180]	@ (80030c8 <HAL_RCC_OscConfig+0x784>)
 8003014:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8003018:	6013      	str	r3, [r2, #0]
 800301a:	f7fe fb89 	bl	8001730 <HAL_GetTick>
 800301e:	6138      	str	r0, [r7, #16]
 8003020:	e008      	b.n	8003034 <HAL_RCC_OscConfig+0x6f0>
 8003022:	f7fe fb85 	bl	8001730 <HAL_GetTick>
 8003026:	4602      	mov	r2, r0
 8003028:	693b      	ldr	r3, [r7, #16]
 800302a:	1ad3      	subs	r3, r2, r3
 800302c:	2b02      	cmp	r3, #2
 800302e:	d901      	bls.n	8003034 <HAL_RCC_OscConfig+0x6f0>
 8003030:	2303      	movs	r3, #3
 8003032:	e099      	b.n	8003168 <HAL_RCC_OscConfig+0x824>
 8003034:	4b24      	ldr	r3, [pc, #144]	@ (80030c8 <HAL_RCC_OscConfig+0x784>)
 8003036:	681b      	ldr	r3, [r3, #0]
 8003038:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800303c:	2b00      	cmp	r3, #0
 800303e:	d1f0      	bne.n	8003022 <HAL_RCC_OscConfig+0x6de>
 8003040:	4b21      	ldr	r3, [pc, #132]	@ (80030c8 <HAL_RCC_OscConfig+0x784>)
 8003042:	68da      	ldr	r2, [r3, #12]
 8003044:	4b21      	ldr	r3, [pc, #132]	@ (80030cc <HAL_RCC_OscConfig+0x788>)
 8003046:	4013      	ands	r3, r2
 8003048:	687a      	ldr	r2, [r7, #4]
 800304a:	6ad1      	ldr	r1, [r2, #44]	@ 0x2c
 800304c:	687a      	ldr	r2, [r7, #4]
 800304e:	6b12      	ldr	r2, [r2, #48]	@ 0x30
 8003050:	3a01      	subs	r2, #1
 8003052:	0112      	lsls	r2, r2, #4
 8003054:	4311      	orrs	r1, r2
 8003056:	687a      	ldr	r2, [r7, #4]
 8003058:	6b52      	ldr	r2, [r2, #52]	@ 0x34
 800305a:	0212      	lsls	r2, r2, #8
 800305c:	4311      	orrs	r1, r2
 800305e:	687a      	ldr	r2, [r7, #4]
 8003060:	6bd2      	ldr	r2, [r2, #60]	@ 0x3c
 8003062:	0852      	lsrs	r2, r2, #1
 8003064:	3a01      	subs	r2, #1
 8003066:	0552      	lsls	r2, r2, #21
 8003068:	4311      	orrs	r1, r2
 800306a:	687a      	ldr	r2, [r7, #4]
 800306c:	6c12      	ldr	r2, [r2, #64]	@ 0x40
 800306e:	0852      	lsrs	r2, r2, #1
 8003070:	3a01      	subs	r2, #1
 8003072:	0652      	lsls	r2, r2, #25
 8003074:	4311      	orrs	r1, r2
 8003076:	687a      	ldr	r2, [r7, #4]
 8003078:	6b92      	ldr	r2, [r2, #56]	@ 0x38
 800307a:	06d2      	lsls	r2, r2, #27
 800307c:	430a      	orrs	r2, r1
 800307e:	4912      	ldr	r1, [pc, #72]	@ (80030c8 <HAL_RCC_OscConfig+0x784>)
 8003080:	4313      	orrs	r3, r2
 8003082:	60cb      	str	r3, [r1, #12]
 8003084:	4b10      	ldr	r3, [pc, #64]	@ (80030c8 <HAL_RCC_OscConfig+0x784>)
 8003086:	681b      	ldr	r3, [r3, #0]
 8003088:	4a0f      	ldr	r2, [pc, #60]	@ (80030c8 <HAL_RCC_OscConfig+0x784>)
 800308a:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 800308e:	6013      	str	r3, [r2, #0]
 8003090:	4b0d      	ldr	r3, [pc, #52]	@ (80030c8 <HAL_RCC_OscConfig+0x784>)
 8003092:	68db      	ldr	r3, [r3, #12]
 8003094:	4a0c      	ldr	r2, [pc, #48]	@ (80030c8 <HAL_RCC_OscConfig+0x784>)
 8003096:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 800309a:	60d3      	str	r3, [r2, #12]
 800309c:	f7fe fb48 	bl	8001730 <HAL_GetTick>
 80030a0:	6138      	str	r0, [r7, #16]
 80030a2:	e008      	b.n	80030b6 <HAL_RCC_OscConfig+0x772>
 80030a4:	f7fe fb44 	bl	8001730 <HAL_GetTick>
 80030a8:	4602      	mov	r2, r0
 80030aa:	693b      	ldr	r3, [r7, #16]
 80030ac:	1ad3      	subs	r3, r2, r3
 80030ae:	2b02      	cmp	r3, #2
 80030b0:	d901      	bls.n	80030b6 <HAL_RCC_OscConfig+0x772>
 80030b2:	2303      	movs	r3, #3
 80030b4:	e058      	b.n	8003168 <HAL_RCC_OscConfig+0x824>
 80030b6:	4b04      	ldr	r3, [pc, #16]	@ (80030c8 <HAL_RCC_OscConfig+0x784>)
 80030b8:	681b      	ldr	r3, [r3, #0]
 80030ba:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80030be:	2b00      	cmp	r3, #0
 80030c0:	d0f0      	beq.n	80030a4 <HAL_RCC_OscConfig+0x760>
 80030c2:	e050      	b.n	8003166 <HAL_RCC_OscConfig+0x822>
 80030c4:	2301      	movs	r3, #1
 80030c6:	e04f      	b.n	8003168 <HAL_RCC_OscConfig+0x824>
 80030c8:	40021000 	.word	0x40021000
 80030cc:	019d808c 	.word	0x019d808c
 80030d0:	4b27      	ldr	r3, [pc, #156]	@ (8003170 <HAL_RCC_OscConfig+0x82c>)
 80030d2:	681b      	ldr	r3, [r3, #0]
 80030d4:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80030d8:	2b00      	cmp	r3, #0
 80030da:	d144      	bne.n	8003166 <HAL_RCC_OscConfig+0x822>
 80030dc:	4b24      	ldr	r3, [pc, #144]	@ (8003170 <HAL_RCC_OscConfig+0x82c>)
 80030de:	681b      	ldr	r3, [r3, #0]
 80030e0:	4a23      	ldr	r2, [pc, #140]	@ (8003170 <HAL_RCC_OscConfig+0x82c>)
 80030e2:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80030e6:	6013      	str	r3, [r2, #0]
 80030e8:	4b21      	ldr	r3, [pc, #132]	@ (8003170 <HAL_RCC_OscConfig+0x82c>)
 80030ea:	68db      	ldr	r3, [r3, #12]
 80030ec:	4a20      	ldr	r2, [pc, #128]	@ (8003170 <HAL_RCC_OscConfig+0x82c>)
 80030ee:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80030f2:	60d3      	str	r3, [r2, #12]
 80030f4:	f7fe fb1c 	bl	8001730 <HAL_GetTick>
 80030f8:	6138      	str	r0, [r7, #16]
 80030fa:	e008      	b.n	800310e <HAL_RCC_OscConfig+0x7ca>
 80030fc:	f7fe fb18 	bl	8001730 <HAL_GetTick>
 8003100:	4602      	mov	r2, r0
 8003102:	693b      	ldr	r3, [r7, #16]
 8003104:	1ad3      	subs	r3, r2, r3
 8003106:	2b02      	cmp	r3, #2
 8003108:	d901      	bls.n	800310e <HAL_RCC_OscConfig+0x7ca>
 800310a:	2303      	movs	r3, #3
 800310c:	e02c      	b.n	8003168 <HAL_RCC_OscConfig+0x824>
 800310e:	4b18      	ldr	r3, [pc, #96]	@ (8003170 <HAL_RCC_OscConfig+0x82c>)
 8003110:	681b      	ldr	r3, [r3, #0]
 8003112:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003116:	2b00      	cmp	r3, #0
 8003118:	d0f0      	beq.n	80030fc <HAL_RCC_OscConfig+0x7b8>
 800311a:	e024      	b.n	8003166 <HAL_RCC_OscConfig+0x822>
 800311c:	69bb      	ldr	r3, [r7, #24]
 800311e:	2b0c      	cmp	r3, #12
 8003120:	d01f      	beq.n	8003162 <HAL_RCC_OscConfig+0x81e>
 8003122:	4b13      	ldr	r3, [pc, #76]	@ (8003170 <HAL_RCC_OscConfig+0x82c>)
 8003124:	681b      	ldr	r3, [r3, #0]
 8003126:	4a12      	ldr	r2, [pc, #72]	@ (8003170 <HAL_RCC_OscConfig+0x82c>)
 8003128:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 800312c:	6013      	str	r3, [r2, #0]
 800312e:	f7fe faff 	bl	8001730 <HAL_GetTick>
 8003132:	6138      	str	r0, [r7, #16]
 8003134:	e008      	b.n	8003148 <HAL_RCC_OscConfig+0x804>
 8003136:	f7fe fafb 	bl	8001730 <HAL_GetTick>
 800313a:	4602      	mov	r2, r0
 800313c:	693b      	ldr	r3, [r7, #16]
 800313e:	1ad3      	subs	r3, r2, r3
 8003140:	2b02      	cmp	r3, #2
 8003142:	d901      	bls.n	8003148 <HAL_RCC_OscConfig+0x804>
 8003144:	2303      	movs	r3, #3
 8003146:	e00f      	b.n	8003168 <HAL_RCC_OscConfig+0x824>
 8003148:	4b09      	ldr	r3, [pc, #36]	@ (8003170 <HAL_RCC_OscConfig+0x82c>)
 800314a:	681b      	ldr	r3, [r3, #0]
 800314c:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003150:	2b00      	cmp	r3, #0
 8003152:	d1f0      	bne.n	8003136 <HAL_RCC_OscConfig+0x7f2>
 8003154:	4b06      	ldr	r3, [pc, #24]	@ (8003170 <HAL_RCC_OscConfig+0x82c>)
 8003156:	68da      	ldr	r2, [r3, #12]
 8003158:	4905      	ldr	r1, [pc, #20]	@ (8003170 <HAL_RCC_OscConfig+0x82c>)
 800315a:	4b06      	ldr	r3, [pc, #24]	@ (8003174 <HAL_RCC_OscConfig+0x830>)
 800315c:	4013      	ands	r3, r2
 800315e:	60cb      	str	r3, [r1, #12]
 8003160:	e001      	b.n	8003166 <HAL_RCC_OscConfig+0x822>
 8003162:	2301      	movs	r3, #1
 8003164:	e000      	b.n	8003168 <HAL_RCC_OscConfig+0x824>
 8003166:	2300      	movs	r3, #0
 8003168:	4618      	mov	r0, r3
 800316a:	3720      	adds	r7, #32
 800316c:	46bd      	mov	sp, r7
 800316e:	bd80      	pop	{r7, pc}
 8003170:	40021000 	.word	0x40021000
 8003174:	feeefffc 	.word	0xfeeefffc

08003178 <HAL_RCC_ClockConfig>:
 8003178:	b580      	push	{r7, lr}
 800317a:	b084      	sub	sp, #16
 800317c:	af00      	add	r7, sp, #0
 800317e:	6078      	str	r0, [r7, #4]
 8003180:	6039      	str	r1, [r7, #0]
 8003182:	687b      	ldr	r3, [r7, #4]
 8003184:	2b00      	cmp	r3, #0
 8003186:	d101      	bne.n	800318c <HAL_RCC_ClockConfig+0x14>
 8003188:	2301      	movs	r3, #1
 800318a:	e0e7      	b.n	800335c <HAL_RCC_ClockConfig+0x1e4>
 800318c:	4b75      	ldr	r3, [pc, #468]	@ (8003364 <HAL_RCC_ClockConfig+0x1ec>)
 800318e:	681b      	ldr	r3, [r3, #0]
 8003190:	f003 0307 	and.w	r3, r3, #7
 8003194:	683a      	ldr	r2, [r7, #0]
 8003196:	429a      	cmp	r2, r3
 8003198:	d910      	bls.n	80031bc <HAL_RCC_ClockConfig+0x44>
 800319a:	4b72      	ldr	r3, [pc, #456]	@ (8003364 <HAL_RCC_ClockConfig+0x1ec>)
 800319c:	681b      	ldr	r3, [r3, #0]
 800319e:	f023 0207 	bic.w	r2, r3, #7
 80031a2:	4970      	ldr	r1, [pc, #448]	@ (8003364 <HAL_RCC_ClockConfig+0x1ec>)
 80031a4:	683b      	ldr	r3, [r7, #0]
 80031a6:	4313      	orrs	r3, r2
 80031a8:	600b      	str	r3, [r1, #0]
 80031aa:	4b6e      	ldr	r3, [pc, #440]	@ (8003364 <HAL_RCC_ClockConfig+0x1ec>)
 80031ac:	681b      	ldr	r3, [r3, #0]
 80031ae:	f003 0307 	and.w	r3, r3, #7
 80031b2:	683a      	ldr	r2, [r7, #0]
 80031b4:	429a      	cmp	r2, r3
 80031b6:	d001      	beq.n	80031bc <HAL_RCC_ClockConfig+0x44>
 80031b8:	2301      	movs	r3, #1
 80031ba:	e0cf      	b.n	800335c <HAL_RCC_ClockConfig+0x1e4>
 80031bc:	687b      	ldr	r3, [r7, #4]
 80031be:	681b      	ldr	r3, [r3, #0]
 80031c0:	f003 0302 	and.w	r3, r3, #2
 80031c4:	2b00      	cmp	r3, #0
 80031c6:	d010      	beq.n	80031ea <HAL_RCC_ClockConfig+0x72>
 80031c8:	687b      	ldr	r3, [r7, #4]
 80031ca:	689a      	ldr	r2, [r3, #8]
 80031cc:	4b66      	ldr	r3, [pc, #408]	@ (8003368 <HAL_RCC_ClockConfig+0x1f0>)
 80031ce:	689b      	ldr	r3, [r3, #8]
 80031d0:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 80031d4:	429a      	cmp	r2, r3
 80031d6:	d908      	bls.n	80031ea <HAL_RCC_ClockConfig+0x72>
 80031d8:	4b63      	ldr	r3, [pc, #396]	@ (8003368 <HAL_RCC_ClockConfig+0x1f0>)
 80031da:	689b      	ldr	r3, [r3, #8]
 80031dc:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 80031e0:	687b      	ldr	r3, [r7, #4]
 80031e2:	689b      	ldr	r3, [r3, #8]
 80031e4:	4960      	ldr	r1, [pc, #384]	@ (8003368 <HAL_RCC_ClockConfig+0x1f0>)
 80031e6:	4313      	orrs	r3, r2
 80031e8:	608b      	str	r3, [r1, #8]
 80031ea:	687b      	ldr	r3, [r7, #4]
 80031ec:	681b      	ldr	r3, [r3, #0]
 80031ee:	f003 0301 	and.w	r3, r3, #1
 80031f2:	2b00      	cmp	r3, #0
 80031f4:	d04c      	beq.n	8003290 <HAL_RCC_ClockConfig+0x118>
 80031f6:	687b      	ldr	r3, [r7, #4]
 80031f8:	685b      	ldr	r3, [r3, #4]
 80031fa:	2b03      	cmp	r3, #3
 80031fc:	d107      	bne.n	800320e <HAL_RCC_ClockConfig+0x96>
 80031fe:	4b5a      	ldr	r3, [pc, #360]	@ (8003368 <HAL_RCC_ClockConfig+0x1f0>)
 8003200:	681b      	ldr	r3, [r3, #0]
 8003202:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003206:	2b00      	cmp	r3, #0
 8003208:	d121      	bne.n	800324e <HAL_RCC_ClockConfig+0xd6>
 800320a:	2301      	movs	r3, #1
 800320c:	e0a6      	b.n	800335c <HAL_RCC_ClockConfig+0x1e4>
 800320e:	687b      	ldr	r3, [r7, #4]
 8003210:	685b      	ldr	r3, [r3, #4]
 8003212:	2b02      	cmp	r3, #2
 8003214:	d107      	bne.n	8003226 <HAL_RCC_ClockConfig+0xae>
 8003216:	4b54      	ldr	r3, [pc, #336]	@ (8003368 <HAL_RCC_ClockConfig+0x1f0>)
 8003218:	681b      	ldr	r3, [r3, #0]
 800321a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800321e:	2b00      	cmp	r3, #0
 8003220:	d115      	bne.n	800324e <HAL_RCC_ClockConfig+0xd6>
 8003222:	2301      	movs	r3, #1
 8003224:	e09a      	b.n	800335c <HAL_RCC_ClockConfig+0x1e4>
 8003226:	687b      	ldr	r3, [r7, #4]
 8003228:	685b      	ldr	r3, [r3, #4]
 800322a:	2b00      	cmp	r3, #0
 800322c:	d107      	bne.n	800323e <HAL_RCC_ClockConfig+0xc6>
 800322e:	4b4e      	ldr	r3, [pc, #312]	@ (8003368 <HAL_RCC_ClockConfig+0x1f0>)
 8003230:	681b      	ldr	r3, [r3, #0]
 8003232:	f003 0302 	and.w	r3, r3, #2
 8003236:	2b00      	cmp	r3, #0
 8003238:	d109      	bne.n	800324e <HAL_RCC_ClockConfig+0xd6>
 800323a:	2301      	movs	r3, #1
 800323c:	e08e      	b.n	800335c <HAL_RCC_ClockConfig+0x1e4>
 800323e:	4b4a      	ldr	r3, [pc, #296]	@ (8003368 <HAL_RCC_ClockConfig+0x1f0>)
 8003240:	681b      	ldr	r3, [r3, #0]
 8003242:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8003246:	2b00      	cmp	r3, #0
 8003248:	d101      	bne.n	800324e <HAL_RCC_ClockConfig+0xd6>
 800324a:	2301      	movs	r3, #1
 800324c:	e086      	b.n	800335c <HAL_RCC_ClockConfig+0x1e4>
 800324e:	4b46      	ldr	r3, [pc, #280]	@ (8003368 <HAL_RCC_ClockConfig+0x1f0>)
 8003250:	689b      	ldr	r3, [r3, #8]
 8003252:	f023 0203 	bic.w	r2, r3, #3
 8003256:	687b      	ldr	r3, [r7, #4]
 8003258:	685b      	ldr	r3, [r3, #4]
 800325a:	4943      	ldr	r1, [pc, #268]	@ (8003368 <HAL_RCC_ClockConfig+0x1f0>)
 800325c:	4313      	orrs	r3, r2
 800325e:	608b      	str	r3, [r1, #8]
 8003260:	f7fe fa66 	bl	8001730 <HAL_GetTick>
 8003264:	60f8      	str	r0, [r7, #12]
 8003266:	e00a      	b.n	800327e <HAL_RCC_ClockConfig+0x106>
 8003268:	f7fe fa62 	bl	8001730 <HAL_GetTick>
 800326c:	4602      	mov	r2, r0
 800326e:	68fb      	ldr	r3, [r7, #12]
 8003270:	1ad3      	subs	r3, r2, r3
 8003272:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003276:	4293      	cmp	r3, r2
 8003278:	d901      	bls.n	800327e <HAL_RCC_ClockConfig+0x106>
 800327a:	2303      	movs	r3, #3
 800327c:	e06e      	b.n	800335c <HAL_RCC_ClockConfig+0x1e4>
 800327e:	4b3a      	ldr	r3, [pc, #232]	@ (8003368 <HAL_RCC_ClockConfig+0x1f0>)
 8003280:	689b      	ldr	r3, [r3, #8]
 8003282:	f003 020c 	and.w	r2, r3, #12
 8003286:	687b      	ldr	r3, [r7, #4]
 8003288:	685b      	ldr	r3, [r3, #4]
 800328a:	009b      	lsls	r3, r3, #2
 800328c:	429a      	cmp	r2, r3
 800328e:	d1eb      	bne.n	8003268 <HAL_RCC_ClockConfig+0xf0>
 8003290:	687b      	ldr	r3, [r7, #4]
 8003292:	681b      	ldr	r3, [r3, #0]
 8003294:	f003 0302 	and.w	r3, r3, #2
 8003298:	2b00      	cmp	r3, #0
 800329a:	d010      	beq.n	80032be <HAL_RCC_ClockConfig+0x146>
 800329c:	687b      	ldr	r3, [r7, #4]
 800329e:	689a      	ldr	r2, [r3, #8]
 80032a0:	4b31      	ldr	r3, [pc, #196]	@ (8003368 <HAL_RCC_ClockConfig+0x1f0>)
 80032a2:	689b      	ldr	r3, [r3, #8]
 80032a4:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 80032a8:	429a      	cmp	r2, r3
 80032aa:	d208      	bcs.n	80032be <HAL_RCC_ClockConfig+0x146>
 80032ac:	4b2e      	ldr	r3, [pc, #184]	@ (8003368 <HAL_RCC_ClockConfig+0x1f0>)
 80032ae:	689b      	ldr	r3, [r3, #8]
 80032b0:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 80032b4:	687b      	ldr	r3, [r7, #4]
 80032b6:	689b      	ldr	r3, [r3, #8]
 80032b8:	492b      	ldr	r1, [pc, #172]	@ (8003368 <HAL_RCC_ClockConfig+0x1f0>)
 80032ba:	4313      	orrs	r3, r2
 80032bc:	608b      	str	r3, [r1, #8]
 80032be:	4b29      	ldr	r3, [pc, #164]	@ (8003364 <HAL_RCC_ClockConfig+0x1ec>)
 80032c0:	681b      	ldr	r3, [r3, #0]
 80032c2:	f003 0307 	and.w	r3, r3, #7
 80032c6:	683a      	ldr	r2, [r7, #0]
 80032c8:	429a      	cmp	r2, r3
 80032ca:	d210      	bcs.n	80032ee <HAL_RCC_ClockConfig+0x176>
 80032cc:	4b25      	ldr	r3, [pc, #148]	@ (8003364 <HAL_RCC_ClockConfig+0x1ec>)
 80032ce:	681b      	ldr	r3, [r3, #0]
 80032d0:	f023 0207 	bic.w	r2, r3, #7
 80032d4:	4923      	ldr	r1, [pc, #140]	@ (8003364 <HAL_RCC_ClockConfig+0x1ec>)
 80032d6:	683b      	ldr	r3, [r7, #0]
 80032d8:	4313      	orrs	r3, r2
 80032da:	600b      	str	r3, [r1, #0]
 80032dc:	4b21      	ldr	r3, [pc, #132]	@ (8003364 <HAL_RCC_ClockConfig+0x1ec>)
 80032de:	681b      	ldr	r3, [r3, #0]
 80032e0:	f003 0307 	and.w	r3, r3, #7
 80032e4:	683a      	ldr	r2, [r7, #0]
 80032e6:	429a      	cmp	r2, r3
 80032e8:	d001      	beq.n	80032ee <HAL_RCC_ClockConfig+0x176>
 80032ea:	2301      	movs	r3, #1
 80032ec:	e036      	b.n	800335c <HAL_RCC_ClockConfig+0x1e4>
 80032ee:	687b      	ldr	r3, [r7, #4]
 80032f0:	681b      	ldr	r3, [r3, #0]
 80032f2:	f003 0304 	and.w	r3, r3, #4
 80032f6:	2b00      	cmp	r3, #0
 80032f8:	d008      	beq.n	800330c <HAL_RCC_ClockConfig+0x194>
 80032fa:	4b1b      	ldr	r3, [pc, #108]	@ (8003368 <HAL_RCC_ClockConfig+0x1f0>)
 80032fc:	689b      	ldr	r3, [r3, #8]
 80032fe:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 8003302:	687b      	ldr	r3, [r7, #4]
 8003304:	68db      	ldr	r3, [r3, #12]
 8003306:	4918      	ldr	r1, [pc, #96]	@ (8003368 <HAL_RCC_ClockConfig+0x1f0>)
 8003308:	4313      	orrs	r3, r2
 800330a:	608b      	str	r3, [r1, #8]
 800330c:	687b      	ldr	r3, [r7, #4]
 800330e:	681b      	ldr	r3, [r3, #0]
 8003310:	f003 0308 	and.w	r3, r3, #8
 8003314:	2b00      	cmp	r3, #0
 8003316:	d009      	beq.n	800332c <HAL_RCC_ClockConfig+0x1b4>
 8003318:	4b13      	ldr	r3, [pc, #76]	@ (8003368 <HAL_RCC_ClockConfig+0x1f0>)
 800331a:	689b      	ldr	r3, [r3, #8]
 800331c:	f423 5260 	bic.w	r2, r3, #14336	@ 0x3800
 8003320:	687b      	ldr	r3, [r7, #4]
 8003322:	691b      	ldr	r3, [r3, #16]
 8003324:	00db      	lsls	r3, r3, #3
 8003326:	4910      	ldr	r1, [pc, #64]	@ (8003368 <HAL_RCC_ClockConfig+0x1f0>)
 8003328:	4313      	orrs	r3, r2
 800332a:	608b      	str	r3, [r1, #8]
 800332c:	f000 f824 	bl	8003378 <HAL_RCC_GetSysClockFreq>
 8003330:	4602      	mov	r2, r0
 8003332:	4b0d      	ldr	r3, [pc, #52]	@ (8003368 <HAL_RCC_ClockConfig+0x1f0>)
 8003334:	689b      	ldr	r3, [r3, #8]
 8003336:	091b      	lsrs	r3, r3, #4
 8003338:	f003 030f 	and.w	r3, r3, #15
 800333c:	490b      	ldr	r1, [pc, #44]	@ (800336c <HAL_RCC_ClockConfig+0x1f4>)
 800333e:	5ccb      	ldrb	r3, [r1, r3]
 8003340:	f003 031f 	and.w	r3, r3, #31
 8003344:	fa22 f303 	lsr.w	r3, r2, r3
 8003348:	4a09      	ldr	r2, [pc, #36]	@ (8003370 <HAL_RCC_ClockConfig+0x1f8>)
 800334a:	6013      	str	r3, [r2, #0]
 800334c:	4b09      	ldr	r3, [pc, #36]	@ (8003374 <HAL_RCC_ClockConfig+0x1fc>)
 800334e:	681b      	ldr	r3, [r3, #0]
 8003350:	4618      	mov	r0, r3
 8003352:	f7fe f99d 	bl	8001690 <HAL_InitTick>
 8003356:	4603      	mov	r3, r0
 8003358:	72fb      	strb	r3, [r7, #11]
 800335a:	7afb      	ldrb	r3, [r7, #11]
 800335c:	4618      	mov	r0, r3
 800335e:	3710      	adds	r7, #16
 8003360:	46bd      	mov	sp, r7
 8003362:	bd80      	pop	{r7, pc}
 8003364:	40022000 	.word	0x40022000
 8003368:	40021000 	.word	0x40021000
 800336c:	08005a90 	.word	0x08005a90
 8003370:	2000000c 	.word	0x2000000c
 8003374:	20000010 	.word	0x20000010

08003378 <HAL_RCC_GetSysClockFreq>:
 8003378:	b480      	push	{r7}
 800337a:	b089      	sub	sp, #36	@ 0x24
 800337c:	af00      	add	r7, sp, #0
 800337e:	2300      	movs	r3, #0
 8003380:	61fb      	str	r3, [r7, #28]
 8003382:	2300      	movs	r3, #0
 8003384:	61bb      	str	r3, [r7, #24]
 8003386:	4b3e      	ldr	r3, [pc, #248]	@ (8003480 <HAL_RCC_GetSysClockFreq+0x108>)
 8003388:	689b      	ldr	r3, [r3, #8]
 800338a:	f003 030c 	and.w	r3, r3, #12
 800338e:	613b      	str	r3, [r7, #16]
 8003390:	4b3b      	ldr	r3, [pc, #236]	@ (8003480 <HAL_RCC_GetSysClockFreq+0x108>)
 8003392:	68db      	ldr	r3, [r3, #12]
 8003394:	f003 0303 	and.w	r3, r3, #3
 8003398:	60fb      	str	r3, [r7, #12]
 800339a:	693b      	ldr	r3, [r7, #16]
 800339c:	2b00      	cmp	r3, #0
 800339e:	d005      	beq.n	80033ac <HAL_RCC_GetSysClockFreq+0x34>
 80033a0:	693b      	ldr	r3, [r7, #16]
 80033a2:	2b0c      	cmp	r3, #12
 80033a4:	d121      	bne.n	80033ea <HAL_RCC_GetSysClockFreq+0x72>
 80033a6:	68fb      	ldr	r3, [r7, #12]
 80033a8:	2b01      	cmp	r3, #1
 80033aa:	d11e      	bne.n	80033ea <HAL_RCC_GetSysClockFreq+0x72>
 80033ac:	4b34      	ldr	r3, [pc, #208]	@ (8003480 <HAL_RCC_GetSysClockFreq+0x108>)
 80033ae:	681b      	ldr	r3, [r3, #0]
 80033b0:	f003 0308 	and.w	r3, r3, #8
 80033b4:	2b00      	cmp	r3, #0
 80033b6:	d107      	bne.n	80033c8 <HAL_RCC_GetSysClockFreq+0x50>
 80033b8:	4b31      	ldr	r3, [pc, #196]	@ (8003480 <HAL_RCC_GetSysClockFreq+0x108>)
 80033ba:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 80033be:	0a1b      	lsrs	r3, r3, #8
 80033c0:	f003 030f 	and.w	r3, r3, #15
 80033c4:	61fb      	str	r3, [r7, #28]
 80033c6:	e005      	b.n	80033d4 <HAL_RCC_GetSysClockFreq+0x5c>
 80033c8:	4b2d      	ldr	r3, [pc, #180]	@ (8003480 <HAL_RCC_GetSysClockFreq+0x108>)
 80033ca:	681b      	ldr	r3, [r3, #0]
 80033cc:	091b      	lsrs	r3, r3, #4
 80033ce:	f003 030f 	and.w	r3, r3, #15
 80033d2:	61fb      	str	r3, [r7, #28]
 80033d4:	4a2b      	ldr	r2, [pc, #172]	@ (8003484 <HAL_RCC_GetSysClockFreq+0x10c>)
 80033d6:	69fb      	ldr	r3, [r7, #28]
 80033d8:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80033dc:	61fb      	str	r3, [r7, #28]
 80033de:	693b      	ldr	r3, [r7, #16]
 80033e0:	2b00      	cmp	r3, #0
 80033e2:	d10d      	bne.n	8003400 <HAL_RCC_GetSysClockFreq+0x88>
 80033e4:	69fb      	ldr	r3, [r7, #28]
 80033e6:	61bb      	str	r3, [r7, #24]
 80033e8:	e00a      	b.n	8003400 <HAL_RCC_GetSysClockFreq+0x88>
 80033ea:	693b      	ldr	r3, [r7, #16]
 80033ec:	2b04      	cmp	r3, #4
 80033ee:	d102      	bne.n	80033f6 <HAL_RCC_GetSysClockFreq+0x7e>
 80033f0:	4b25      	ldr	r3, [pc, #148]	@ (8003488 <HAL_RCC_GetSysClockFreq+0x110>)
 80033f2:	61bb      	str	r3, [r7, #24]
 80033f4:	e004      	b.n	8003400 <HAL_RCC_GetSysClockFreq+0x88>
 80033f6:	693b      	ldr	r3, [r7, #16]
 80033f8:	2b08      	cmp	r3, #8
 80033fa:	d101      	bne.n	8003400 <HAL_RCC_GetSysClockFreq+0x88>
 80033fc:	4b23      	ldr	r3, [pc, #140]	@ (800348c <HAL_RCC_GetSysClockFreq+0x114>)
 80033fe:	61bb      	str	r3, [r7, #24]
 8003400:	693b      	ldr	r3, [r7, #16]
 8003402:	2b0c      	cmp	r3, #12
 8003404:	d134      	bne.n	8003470 <HAL_RCC_GetSysClockFreq+0xf8>
 8003406:	4b1e      	ldr	r3, [pc, #120]	@ (8003480 <HAL_RCC_GetSysClockFreq+0x108>)
 8003408:	68db      	ldr	r3, [r3, #12]
 800340a:	f003 0303 	and.w	r3, r3, #3
 800340e:	60bb      	str	r3, [r7, #8]
 8003410:	68bb      	ldr	r3, [r7, #8]
 8003412:	2b02      	cmp	r3, #2
 8003414:	d003      	beq.n	800341e <HAL_RCC_GetSysClockFreq+0xa6>
 8003416:	68bb      	ldr	r3, [r7, #8]
 8003418:	2b03      	cmp	r3, #3
 800341a:	d003      	beq.n	8003424 <HAL_RCC_GetSysClockFreq+0xac>
 800341c:	e005      	b.n	800342a <HAL_RCC_GetSysClockFreq+0xb2>
 800341e:	4b1a      	ldr	r3, [pc, #104]	@ (8003488 <HAL_RCC_GetSysClockFreq+0x110>)
 8003420:	617b      	str	r3, [r7, #20]
 8003422:	e005      	b.n	8003430 <HAL_RCC_GetSysClockFreq+0xb8>
 8003424:	4b19      	ldr	r3, [pc, #100]	@ (800348c <HAL_RCC_GetSysClockFreq+0x114>)
 8003426:	617b      	str	r3, [r7, #20]
 8003428:	e002      	b.n	8003430 <HAL_RCC_GetSysClockFreq+0xb8>
 800342a:	69fb      	ldr	r3, [r7, #28]
 800342c:	617b      	str	r3, [r7, #20]
 800342e:	bf00      	nop
 8003430:	4b13      	ldr	r3, [pc, #76]	@ (8003480 <HAL_RCC_GetSysClockFreq+0x108>)
 8003432:	68db      	ldr	r3, [r3, #12]
 8003434:	091b      	lsrs	r3, r3, #4
 8003436:	f003 0307 	and.w	r3, r3, #7
 800343a:	3301      	adds	r3, #1
 800343c:	607b      	str	r3, [r7, #4]
 800343e:	4b10      	ldr	r3, [pc, #64]	@ (8003480 <HAL_RCC_GetSysClockFreq+0x108>)
 8003440:	68db      	ldr	r3, [r3, #12]
 8003442:	0a1b      	lsrs	r3, r3, #8
 8003444:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8003448:	697a      	ldr	r2, [r7, #20]
 800344a:	fb03 f202 	mul.w	r2, r3, r2
 800344e:	687b      	ldr	r3, [r7, #4]
 8003450:	fbb2 f3f3 	udiv	r3, r2, r3
 8003454:	617b      	str	r3, [r7, #20]
 8003456:	4b0a      	ldr	r3, [pc, #40]	@ (8003480 <HAL_RCC_GetSysClockFreq+0x108>)
 8003458:	68db      	ldr	r3, [r3, #12]
 800345a:	0e5b      	lsrs	r3, r3, #25
 800345c:	f003 0303 	and.w	r3, r3, #3
 8003460:	3301      	adds	r3, #1
 8003462:	005b      	lsls	r3, r3, #1
 8003464:	603b      	str	r3, [r7, #0]
 8003466:	697a      	ldr	r2, [r7, #20]
 8003468:	683b      	ldr	r3, [r7, #0]
 800346a:	fbb2 f3f3 	udiv	r3, r2, r3
 800346e:	61bb      	str	r3, [r7, #24]
 8003470:	69bb      	ldr	r3, [r7, #24]
 8003472:	4618      	mov	r0, r3
 8003474:	3724      	adds	r7, #36	@ 0x24
 8003476:	46bd      	mov	sp, r7
 8003478:	f85d 7b04 	ldr.w	r7, [sp], #4
 800347c:	4770      	bx	lr
 800347e:	bf00      	nop
 8003480:	40021000 	.word	0x40021000
 8003484:	08005aa8 	.word	0x08005aa8
 8003488:	00f42400 	.word	0x00f42400
 800348c:	007a1200 	.word	0x007a1200

08003490 <HAL_RCC_GetHCLKFreq>:
 8003490:	b480      	push	{r7}
 8003492:	af00      	add	r7, sp, #0
 8003494:	4b03      	ldr	r3, [pc, #12]	@ (80034a4 <HAL_RCC_GetHCLKFreq+0x14>)
 8003496:	681b      	ldr	r3, [r3, #0]
 8003498:	4618      	mov	r0, r3
 800349a:	46bd      	mov	sp, r7
 800349c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80034a0:	4770      	bx	lr
 80034a2:	bf00      	nop
 80034a4:	2000000c 	.word	0x2000000c

080034a8 <HAL_RCC_GetPCLK1Freq>:
 80034a8:	b580      	push	{r7, lr}
 80034aa:	af00      	add	r7, sp, #0
 80034ac:	f7ff fff0 	bl	8003490 <HAL_RCC_GetHCLKFreq>
 80034b0:	4602      	mov	r2, r0
 80034b2:	4b06      	ldr	r3, [pc, #24]	@ (80034cc <HAL_RCC_GetPCLK1Freq+0x24>)
 80034b4:	689b      	ldr	r3, [r3, #8]
 80034b6:	0a1b      	lsrs	r3, r3, #8
 80034b8:	f003 0307 	and.w	r3, r3, #7
 80034bc:	4904      	ldr	r1, [pc, #16]	@ (80034d0 <HAL_RCC_GetPCLK1Freq+0x28>)
 80034be:	5ccb      	ldrb	r3, [r1, r3]
 80034c0:	f003 031f 	and.w	r3, r3, #31
 80034c4:	fa22 f303 	lsr.w	r3, r2, r3
 80034c8:	4618      	mov	r0, r3
 80034ca:	bd80      	pop	{r7, pc}
 80034cc:	40021000 	.word	0x40021000
 80034d0:	08005aa0 	.word	0x08005aa0

080034d4 <HAL_RCC_GetPCLK2Freq>:
 80034d4:	b580      	push	{r7, lr}
 80034d6:	af00      	add	r7, sp, #0
 80034d8:	f7ff ffda 	bl	8003490 <HAL_RCC_GetHCLKFreq>
 80034dc:	4602      	mov	r2, r0
 80034de:	4b06      	ldr	r3, [pc, #24]	@ (80034f8 <HAL_RCC_GetPCLK2Freq+0x24>)
 80034e0:	689b      	ldr	r3, [r3, #8]
 80034e2:	0adb      	lsrs	r3, r3, #11
 80034e4:	f003 0307 	and.w	r3, r3, #7
 80034e8:	4904      	ldr	r1, [pc, #16]	@ (80034fc <HAL_RCC_GetPCLK2Freq+0x28>)
 80034ea:	5ccb      	ldrb	r3, [r1, r3]
 80034ec:	f003 031f 	and.w	r3, r3, #31
 80034f0:	fa22 f303 	lsr.w	r3, r2, r3
 80034f4:	4618      	mov	r0, r3
 80034f6:	bd80      	pop	{r7, pc}
 80034f8:	40021000 	.word	0x40021000
 80034fc:	08005aa0 	.word	0x08005aa0

08003500 <RCC_SetFlashLatencyFromMSIRange>:
 8003500:	b580      	push	{r7, lr}
 8003502:	b086      	sub	sp, #24
 8003504:	af00      	add	r7, sp, #0
 8003506:	6078      	str	r0, [r7, #4]
 8003508:	2300      	movs	r3, #0
 800350a:	613b      	str	r3, [r7, #16]
 800350c:	4b2a      	ldr	r3, [pc, #168]	@ (80035b8 <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 800350e:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003510:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8003514:	2b00      	cmp	r3, #0
 8003516:	d003      	beq.n	8003520 <RCC_SetFlashLatencyFromMSIRange+0x20>
 8003518:	f7ff f9a0 	bl	800285c <HAL_PWREx_GetVoltageRange>
 800351c:	6178      	str	r0, [r7, #20]
 800351e:	e014      	b.n	800354a <RCC_SetFlashLatencyFromMSIRange+0x4a>
 8003520:	4b25      	ldr	r3, [pc, #148]	@ (80035b8 <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 8003522:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003524:	4a24      	ldr	r2, [pc, #144]	@ (80035b8 <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 8003526:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800352a:	6593      	str	r3, [r2, #88]	@ 0x58
 800352c:	4b22      	ldr	r3, [pc, #136]	@ (80035b8 <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 800352e:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003530:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8003534:	60fb      	str	r3, [r7, #12]
 8003536:	68fb      	ldr	r3, [r7, #12]
 8003538:	f7ff f990 	bl	800285c <HAL_PWREx_GetVoltageRange>
 800353c:	6178      	str	r0, [r7, #20]
 800353e:	4b1e      	ldr	r3, [pc, #120]	@ (80035b8 <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 8003540:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003542:	4a1d      	ldr	r2, [pc, #116]	@ (80035b8 <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 8003544:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8003548:	6593      	str	r3, [r2, #88]	@ 0x58
 800354a:	697b      	ldr	r3, [r7, #20]
 800354c:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8003550:	d10b      	bne.n	800356a <RCC_SetFlashLatencyFromMSIRange+0x6a>
 8003552:	687b      	ldr	r3, [r7, #4]
 8003554:	2b80      	cmp	r3, #128	@ 0x80
 8003556:	d919      	bls.n	800358c <RCC_SetFlashLatencyFromMSIRange+0x8c>
 8003558:	687b      	ldr	r3, [r7, #4]
 800355a:	2ba0      	cmp	r3, #160	@ 0xa0
 800355c:	d902      	bls.n	8003564 <RCC_SetFlashLatencyFromMSIRange+0x64>
 800355e:	2302      	movs	r3, #2
 8003560:	613b      	str	r3, [r7, #16]
 8003562:	e013      	b.n	800358c <RCC_SetFlashLatencyFromMSIRange+0x8c>
 8003564:	2301      	movs	r3, #1
 8003566:	613b      	str	r3, [r7, #16]
 8003568:	e010      	b.n	800358c <RCC_SetFlashLatencyFromMSIRange+0x8c>
 800356a:	687b      	ldr	r3, [r7, #4]
 800356c:	2b80      	cmp	r3, #128	@ 0x80
 800356e:	d902      	bls.n	8003576 <RCC_SetFlashLatencyFromMSIRange+0x76>
 8003570:	2303      	movs	r3, #3
 8003572:	613b      	str	r3, [r7, #16]
 8003574:	e00a      	b.n	800358c <RCC_SetFlashLatencyFromMSIRange+0x8c>
 8003576:	687b      	ldr	r3, [r7, #4]
 8003578:	2b80      	cmp	r3, #128	@ 0x80
 800357a:	d102      	bne.n	8003582 <RCC_SetFlashLatencyFromMSIRange+0x82>
 800357c:	2302      	movs	r3, #2
 800357e:	613b      	str	r3, [r7, #16]
 8003580:	e004      	b.n	800358c <RCC_SetFlashLatencyFromMSIRange+0x8c>
 8003582:	687b      	ldr	r3, [r7, #4]
 8003584:	2b70      	cmp	r3, #112	@ 0x70
 8003586:	d101      	bne.n	800358c <RCC_SetFlashLatencyFromMSIRange+0x8c>
 8003588:	2301      	movs	r3, #1
 800358a:	613b      	str	r3, [r7, #16]
 800358c:	4b0b      	ldr	r3, [pc, #44]	@ (80035bc <RCC_SetFlashLatencyFromMSIRange+0xbc>)
 800358e:	681b      	ldr	r3, [r3, #0]
 8003590:	f023 0207 	bic.w	r2, r3, #7
 8003594:	4909      	ldr	r1, [pc, #36]	@ (80035bc <RCC_SetFlashLatencyFromMSIRange+0xbc>)
 8003596:	693b      	ldr	r3, [r7, #16]
 8003598:	4313      	orrs	r3, r2
 800359a:	600b      	str	r3, [r1, #0]
 800359c:	4b07      	ldr	r3, [pc, #28]	@ (80035bc <RCC_SetFlashLatencyFromMSIRange+0xbc>)
 800359e:	681b      	ldr	r3, [r3, #0]
 80035a0:	f003 0307 	and.w	r3, r3, #7
 80035a4:	693a      	ldr	r2, [r7, #16]
 80035a6:	429a      	cmp	r2, r3
 80035a8:	d001      	beq.n	80035ae <RCC_SetFlashLatencyFromMSIRange+0xae>
 80035aa:	2301      	movs	r3, #1
 80035ac:	e000      	b.n	80035b0 <RCC_SetFlashLatencyFromMSIRange+0xb0>
 80035ae:	2300      	movs	r3, #0
 80035b0:	4618      	mov	r0, r3
 80035b2:	3718      	adds	r7, #24
 80035b4:	46bd      	mov	sp, r7
 80035b6:	bd80      	pop	{r7, pc}
 80035b8:	40021000 	.word	0x40021000
 80035bc:	40022000 	.word	0x40022000

080035c0 <HAL_RCCEx_PeriphCLKConfig>:
 80035c0:	b580      	push	{r7, lr}
 80035c2:	b086      	sub	sp, #24
 80035c4:	af00      	add	r7, sp, #0
 80035c6:	6078      	str	r0, [r7, #4]
 80035c8:	2300      	movs	r3, #0
 80035ca:	74fb      	strb	r3, [r7, #19]
 80035cc:	2300      	movs	r3, #0
 80035ce:	74bb      	strb	r3, [r7, #18]
 80035d0:	687b      	ldr	r3, [r7, #4]
 80035d2:	681b      	ldr	r3, [r3, #0]
 80035d4:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 80035d8:	2b00      	cmp	r3, #0
 80035da:	d041      	beq.n	8003660 <HAL_RCCEx_PeriphCLKConfig+0xa0>
 80035dc:	687b      	ldr	r3, [r7, #4]
 80035de:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 80035e0:	f5b3 0f40 	cmp.w	r3, #12582912	@ 0xc00000
 80035e4:	d02a      	beq.n	800363c <HAL_RCCEx_PeriphCLKConfig+0x7c>
 80035e6:	f5b3 0f40 	cmp.w	r3, #12582912	@ 0xc00000
 80035ea:	d824      	bhi.n	8003636 <HAL_RCCEx_PeriphCLKConfig+0x76>
 80035ec:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 80035f0:	d008      	beq.n	8003604 <HAL_RCCEx_PeriphCLKConfig+0x44>
 80035f2:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 80035f6:	d81e      	bhi.n	8003636 <HAL_RCCEx_PeriphCLKConfig+0x76>
 80035f8:	2b00      	cmp	r3, #0
 80035fa:	d00a      	beq.n	8003612 <HAL_RCCEx_PeriphCLKConfig+0x52>
 80035fc:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8003600:	d010      	beq.n	8003624 <HAL_RCCEx_PeriphCLKConfig+0x64>
 8003602:	e018      	b.n	8003636 <HAL_RCCEx_PeriphCLKConfig+0x76>
 8003604:	4b86      	ldr	r3, [pc, #536]	@ (8003820 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8003606:	68db      	ldr	r3, [r3, #12]
 8003608:	4a85      	ldr	r2, [pc, #532]	@ (8003820 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 800360a:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800360e:	60d3      	str	r3, [r2, #12]
 8003610:	e015      	b.n	800363e <HAL_RCCEx_PeriphCLKConfig+0x7e>
 8003612:	687b      	ldr	r3, [r7, #4]
 8003614:	3304      	adds	r3, #4
 8003616:	2100      	movs	r1, #0
 8003618:	4618      	mov	r0, r3
 800361a:	f000 facd 	bl	8003bb8 <RCCEx_PLLSAI1_Config>
 800361e:	4603      	mov	r3, r0
 8003620:	74fb      	strb	r3, [r7, #19]
 8003622:	e00c      	b.n	800363e <HAL_RCCEx_PeriphCLKConfig+0x7e>
 8003624:	687b      	ldr	r3, [r7, #4]
 8003626:	3320      	adds	r3, #32
 8003628:	2100      	movs	r1, #0
 800362a:	4618      	mov	r0, r3
 800362c:	f000 fbb6 	bl	8003d9c <RCCEx_PLLSAI2_Config>
 8003630:	4603      	mov	r3, r0
 8003632:	74fb      	strb	r3, [r7, #19]
 8003634:	e003      	b.n	800363e <HAL_RCCEx_PeriphCLKConfig+0x7e>
 8003636:	2301      	movs	r3, #1
 8003638:	74fb      	strb	r3, [r7, #19]
 800363a:	e000      	b.n	800363e <HAL_RCCEx_PeriphCLKConfig+0x7e>
 800363c:	bf00      	nop
 800363e:	7cfb      	ldrb	r3, [r7, #19]
 8003640:	2b00      	cmp	r3, #0
 8003642:	d10b      	bne.n	800365c <HAL_RCCEx_PeriphCLKConfig+0x9c>
 8003644:	4b76      	ldr	r3, [pc, #472]	@ (8003820 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8003646:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800364a:	f423 0240 	bic.w	r2, r3, #12582912	@ 0xc00000
 800364e:	687b      	ldr	r3, [r7, #4]
 8003650:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 8003652:	4973      	ldr	r1, [pc, #460]	@ (8003820 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8003654:	4313      	orrs	r3, r2
 8003656:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 800365a:	e001      	b.n	8003660 <HAL_RCCEx_PeriphCLKConfig+0xa0>
 800365c:	7cfb      	ldrb	r3, [r7, #19]
 800365e:	74bb      	strb	r3, [r7, #18]
 8003660:	687b      	ldr	r3, [r7, #4]
 8003662:	681b      	ldr	r3, [r3, #0]
 8003664:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8003668:	2b00      	cmp	r3, #0
 800366a:	d041      	beq.n	80036f0 <HAL_RCCEx_PeriphCLKConfig+0x130>
 800366c:	687b      	ldr	r3, [r7, #4]
 800366e:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8003670:	f1b3 7f40 	cmp.w	r3, #50331648	@ 0x3000000
 8003674:	d02a      	beq.n	80036cc <HAL_RCCEx_PeriphCLKConfig+0x10c>
 8003676:	f1b3 7f40 	cmp.w	r3, #50331648	@ 0x3000000
 800367a:	d824      	bhi.n	80036c6 <HAL_RCCEx_PeriphCLKConfig+0x106>
 800367c:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 8003680:	d008      	beq.n	8003694 <HAL_RCCEx_PeriphCLKConfig+0xd4>
 8003682:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 8003686:	d81e      	bhi.n	80036c6 <HAL_RCCEx_PeriphCLKConfig+0x106>
 8003688:	2b00      	cmp	r3, #0
 800368a:	d00a      	beq.n	80036a2 <HAL_RCCEx_PeriphCLKConfig+0xe2>
 800368c:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8003690:	d010      	beq.n	80036b4 <HAL_RCCEx_PeriphCLKConfig+0xf4>
 8003692:	e018      	b.n	80036c6 <HAL_RCCEx_PeriphCLKConfig+0x106>
 8003694:	4b62      	ldr	r3, [pc, #392]	@ (8003820 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8003696:	68db      	ldr	r3, [r3, #12]
 8003698:	4a61      	ldr	r2, [pc, #388]	@ (8003820 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 800369a:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800369e:	60d3      	str	r3, [r2, #12]
 80036a0:	e015      	b.n	80036ce <HAL_RCCEx_PeriphCLKConfig+0x10e>
 80036a2:	687b      	ldr	r3, [r7, #4]
 80036a4:	3304      	adds	r3, #4
 80036a6:	2100      	movs	r1, #0
 80036a8:	4618      	mov	r0, r3
 80036aa:	f000 fa85 	bl	8003bb8 <RCCEx_PLLSAI1_Config>
 80036ae:	4603      	mov	r3, r0
 80036b0:	74fb      	strb	r3, [r7, #19]
 80036b2:	e00c      	b.n	80036ce <HAL_RCCEx_PeriphCLKConfig+0x10e>
 80036b4:	687b      	ldr	r3, [r7, #4]
 80036b6:	3320      	adds	r3, #32
 80036b8:	2100      	movs	r1, #0
 80036ba:	4618      	mov	r0, r3
 80036bc:	f000 fb6e 	bl	8003d9c <RCCEx_PLLSAI2_Config>
 80036c0:	4603      	mov	r3, r0
 80036c2:	74fb      	strb	r3, [r7, #19]
 80036c4:	e003      	b.n	80036ce <HAL_RCCEx_PeriphCLKConfig+0x10e>
 80036c6:	2301      	movs	r3, #1
 80036c8:	74fb      	strb	r3, [r7, #19]
 80036ca:	e000      	b.n	80036ce <HAL_RCCEx_PeriphCLKConfig+0x10e>
 80036cc:	bf00      	nop
 80036ce:	7cfb      	ldrb	r3, [r7, #19]
 80036d0:	2b00      	cmp	r3, #0
 80036d2:	d10b      	bne.n	80036ec <HAL_RCCEx_PeriphCLKConfig+0x12c>
 80036d4:	4b52      	ldr	r3, [pc, #328]	@ (8003820 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 80036d6:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80036da:	f023 7240 	bic.w	r2, r3, #50331648	@ 0x3000000
 80036de:	687b      	ldr	r3, [r7, #4]
 80036e0:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 80036e2:	494f      	ldr	r1, [pc, #316]	@ (8003820 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 80036e4:	4313      	orrs	r3, r2
 80036e6:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80036ea:	e001      	b.n	80036f0 <HAL_RCCEx_PeriphCLKConfig+0x130>
 80036ec:	7cfb      	ldrb	r3, [r7, #19]
 80036ee:	74bb      	strb	r3, [r7, #18]
 80036f0:	687b      	ldr	r3, [r7, #4]
 80036f2:	681b      	ldr	r3, [r3, #0]
 80036f4:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80036f8:	2b00      	cmp	r3, #0
 80036fa:	f000 80a0 	beq.w	800383e <HAL_RCCEx_PeriphCLKConfig+0x27e>
 80036fe:	2300      	movs	r3, #0
 8003700:	747b      	strb	r3, [r7, #17]
 8003702:	4b47      	ldr	r3, [pc, #284]	@ (8003820 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8003704:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003706:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800370a:	2b00      	cmp	r3, #0
 800370c:	d101      	bne.n	8003712 <HAL_RCCEx_PeriphCLKConfig+0x152>
 800370e:	2301      	movs	r3, #1
 8003710:	e000      	b.n	8003714 <HAL_RCCEx_PeriphCLKConfig+0x154>
 8003712:	2300      	movs	r3, #0
 8003714:	2b00      	cmp	r3, #0
 8003716:	d00d      	beq.n	8003734 <HAL_RCCEx_PeriphCLKConfig+0x174>
 8003718:	4b41      	ldr	r3, [pc, #260]	@ (8003820 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 800371a:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800371c:	4a40      	ldr	r2, [pc, #256]	@ (8003820 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 800371e:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8003722:	6593      	str	r3, [r2, #88]	@ 0x58
 8003724:	4b3e      	ldr	r3, [pc, #248]	@ (8003820 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8003726:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003728:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800372c:	60bb      	str	r3, [r7, #8]
 800372e:	68bb      	ldr	r3, [r7, #8]
 8003730:	2301      	movs	r3, #1
 8003732:	747b      	strb	r3, [r7, #17]
 8003734:	4b3b      	ldr	r3, [pc, #236]	@ (8003824 <HAL_RCCEx_PeriphCLKConfig+0x264>)
 8003736:	681b      	ldr	r3, [r3, #0]
 8003738:	4a3a      	ldr	r2, [pc, #232]	@ (8003824 <HAL_RCCEx_PeriphCLKConfig+0x264>)
 800373a:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800373e:	6013      	str	r3, [r2, #0]
 8003740:	f7fd fff6 	bl	8001730 <HAL_GetTick>
 8003744:	60f8      	str	r0, [r7, #12]
 8003746:	e009      	b.n	800375c <HAL_RCCEx_PeriphCLKConfig+0x19c>
 8003748:	f7fd fff2 	bl	8001730 <HAL_GetTick>
 800374c:	4602      	mov	r2, r0
 800374e:	68fb      	ldr	r3, [r7, #12]
 8003750:	1ad3      	subs	r3, r2, r3
 8003752:	2b02      	cmp	r3, #2
 8003754:	d902      	bls.n	800375c <HAL_RCCEx_PeriphCLKConfig+0x19c>
 8003756:	2303      	movs	r3, #3
 8003758:	74fb      	strb	r3, [r7, #19]
 800375a:	e005      	b.n	8003768 <HAL_RCCEx_PeriphCLKConfig+0x1a8>
 800375c:	4b31      	ldr	r3, [pc, #196]	@ (8003824 <HAL_RCCEx_PeriphCLKConfig+0x264>)
 800375e:	681b      	ldr	r3, [r3, #0]
 8003760:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003764:	2b00      	cmp	r3, #0
 8003766:	d0ef      	beq.n	8003748 <HAL_RCCEx_PeriphCLKConfig+0x188>
 8003768:	7cfb      	ldrb	r3, [r7, #19]
 800376a:	2b00      	cmp	r3, #0
 800376c:	d15c      	bne.n	8003828 <HAL_RCCEx_PeriphCLKConfig+0x268>
 800376e:	4b2c      	ldr	r3, [pc, #176]	@ (8003820 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8003770:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8003774:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8003778:	617b      	str	r3, [r7, #20]
 800377a:	697b      	ldr	r3, [r7, #20]
 800377c:	2b00      	cmp	r3, #0
 800377e:	d01f      	beq.n	80037c0 <HAL_RCCEx_PeriphCLKConfig+0x200>
 8003780:	687b      	ldr	r3, [r7, #4]
 8003782:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8003786:	697a      	ldr	r2, [r7, #20]
 8003788:	429a      	cmp	r2, r3
 800378a:	d019      	beq.n	80037c0 <HAL_RCCEx_PeriphCLKConfig+0x200>
 800378c:	4b24      	ldr	r3, [pc, #144]	@ (8003820 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 800378e:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8003792:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8003796:	617b      	str	r3, [r7, #20]
 8003798:	4b21      	ldr	r3, [pc, #132]	@ (8003820 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 800379a:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800379e:	4a20      	ldr	r2, [pc, #128]	@ (8003820 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 80037a0:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80037a4:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 80037a8:	4b1d      	ldr	r3, [pc, #116]	@ (8003820 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 80037aa:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80037ae:	4a1c      	ldr	r2, [pc, #112]	@ (8003820 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 80037b0:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80037b4:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 80037b8:	4a19      	ldr	r2, [pc, #100]	@ (8003820 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 80037ba:	697b      	ldr	r3, [r7, #20]
 80037bc:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 80037c0:	697b      	ldr	r3, [r7, #20]
 80037c2:	f003 0301 	and.w	r3, r3, #1
 80037c6:	2b00      	cmp	r3, #0
 80037c8:	d016      	beq.n	80037f8 <HAL_RCCEx_PeriphCLKConfig+0x238>
 80037ca:	f7fd ffb1 	bl	8001730 <HAL_GetTick>
 80037ce:	60f8      	str	r0, [r7, #12]
 80037d0:	e00b      	b.n	80037ea <HAL_RCCEx_PeriphCLKConfig+0x22a>
 80037d2:	f7fd ffad 	bl	8001730 <HAL_GetTick>
 80037d6:	4602      	mov	r2, r0
 80037d8:	68fb      	ldr	r3, [r7, #12]
 80037da:	1ad3      	subs	r3, r2, r3
 80037dc:	f241 3288 	movw	r2, #5000	@ 0x1388
 80037e0:	4293      	cmp	r3, r2
 80037e2:	d902      	bls.n	80037ea <HAL_RCCEx_PeriphCLKConfig+0x22a>
 80037e4:	2303      	movs	r3, #3
 80037e6:	74fb      	strb	r3, [r7, #19]
 80037e8:	e006      	b.n	80037f8 <HAL_RCCEx_PeriphCLKConfig+0x238>
 80037ea:	4b0d      	ldr	r3, [pc, #52]	@ (8003820 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 80037ec:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80037f0:	f003 0302 	and.w	r3, r3, #2
 80037f4:	2b00      	cmp	r3, #0
 80037f6:	d0ec      	beq.n	80037d2 <HAL_RCCEx_PeriphCLKConfig+0x212>
 80037f8:	7cfb      	ldrb	r3, [r7, #19]
 80037fa:	2b00      	cmp	r3, #0
 80037fc:	d10c      	bne.n	8003818 <HAL_RCCEx_PeriphCLKConfig+0x258>
 80037fe:	4b08      	ldr	r3, [pc, #32]	@ (8003820 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8003800:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8003804:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 8003808:	687b      	ldr	r3, [r7, #4]
 800380a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800380e:	4904      	ldr	r1, [pc, #16]	@ (8003820 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8003810:	4313      	orrs	r3, r2
 8003812:	f8c1 3090 	str.w	r3, [r1, #144]	@ 0x90
 8003816:	e009      	b.n	800382c <HAL_RCCEx_PeriphCLKConfig+0x26c>
 8003818:	7cfb      	ldrb	r3, [r7, #19]
 800381a:	74bb      	strb	r3, [r7, #18]
 800381c:	e006      	b.n	800382c <HAL_RCCEx_PeriphCLKConfig+0x26c>
 800381e:	bf00      	nop
 8003820:	40021000 	.word	0x40021000
 8003824:	40007000 	.word	0x40007000
 8003828:	7cfb      	ldrb	r3, [r7, #19]
 800382a:	74bb      	strb	r3, [r7, #18]
 800382c:	7c7b      	ldrb	r3, [r7, #17]
 800382e:	2b01      	cmp	r3, #1
 8003830:	d105      	bne.n	800383e <HAL_RCCEx_PeriphCLKConfig+0x27e>
 8003832:	4ba6      	ldr	r3, [pc, #664]	@ (8003acc <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 8003834:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003836:	4aa5      	ldr	r2, [pc, #660]	@ (8003acc <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 8003838:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 800383c:	6593      	str	r3, [r2, #88]	@ 0x58
 800383e:	687b      	ldr	r3, [r7, #4]
 8003840:	681b      	ldr	r3, [r3, #0]
 8003842:	f003 0301 	and.w	r3, r3, #1
 8003846:	2b00      	cmp	r3, #0
 8003848:	d00a      	beq.n	8003860 <HAL_RCCEx_PeriphCLKConfig+0x2a0>
 800384a:	4ba0      	ldr	r3, [pc, #640]	@ (8003acc <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 800384c:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8003850:	f023 0203 	bic.w	r2, r3, #3
 8003854:	687b      	ldr	r3, [r7, #4]
 8003856:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8003858:	499c      	ldr	r1, [pc, #624]	@ (8003acc <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 800385a:	4313      	orrs	r3, r2
 800385c:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8003860:	687b      	ldr	r3, [r7, #4]
 8003862:	681b      	ldr	r3, [r3, #0]
 8003864:	f003 0302 	and.w	r3, r3, #2
 8003868:	2b00      	cmp	r3, #0
 800386a:	d00a      	beq.n	8003882 <HAL_RCCEx_PeriphCLKConfig+0x2c2>
 800386c:	4b97      	ldr	r3, [pc, #604]	@ (8003acc <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 800386e:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8003872:	f023 020c 	bic.w	r2, r3, #12
 8003876:	687b      	ldr	r3, [r7, #4]
 8003878:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800387a:	4994      	ldr	r1, [pc, #592]	@ (8003acc <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 800387c:	4313      	orrs	r3, r2
 800387e:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8003882:	687b      	ldr	r3, [r7, #4]
 8003884:	681b      	ldr	r3, [r3, #0]
 8003886:	f003 0304 	and.w	r3, r3, #4
 800388a:	2b00      	cmp	r3, #0
 800388c:	d00a      	beq.n	80038a4 <HAL_RCCEx_PeriphCLKConfig+0x2e4>
 800388e:	4b8f      	ldr	r3, [pc, #572]	@ (8003acc <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 8003890:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8003894:	f023 0230 	bic.w	r2, r3, #48	@ 0x30
 8003898:	687b      	ldr	r3, [r7, #4]
 800389a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800389c:	498b      	ldr	r1, [pc, #556]	@ (8003acc <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 800389e:	4313      	orrs	r3, r2
 80038a0:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80038a4:	687b      	ldr	r3, [r7, #4]
 80038a6:	681b      	ldr	r3, [r3, #0]
 80038a8:	f003 0308 	and.w	r3, r3, #8
 80038ac:	2b00      	cmp	r3, #0
 80038ae:	d00a      	beq.n	80038c6 <HAL_RCCEx_PeriphCLKConfig+0x306>
 80038b0:	4b86      	ldr	r3, [pc, #536]	@ (8003acc <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 80038b2:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80038b6:	f023 02c0 	bic.w	r2, r3, #192	@ 0xc0
 80038ba:	687b      	ldr	r3, [r7, #4]
 80038bc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80038be:	4983      	ldr	r1, [pc, #524]	@ (8003acc <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 80038c0:	4313      	orrs	r3, r2
 80038c2:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80038c6:	687b      	ldr	r3, [r7, #4]
 80038c8:	681b      	ldr	r3, [r3, #0]
 80038ca:	f003 0310 	and.w	r3, r3, #16
 80038ce:	2b00      	cmp	r3, #0
 80038d0:	d00a      	beq.n	80038e8 <HAL_RCCEx_PeriphCLKConfig+0x328>
 80038d2:	4b7e      	ldr	r3, [pc, #504]	@ (8003acc <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 80038d4:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80038d8:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 80038dc:	687b      	ldr	r3, [r7, #4]
 80038de:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80038e0:	497a      	ldr	r1, [pc, #488]	@ (8003acc <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 80038e2:	4313      	orrs	r3, r2
 80038e4:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80038e8:	687b      	ldr	r3, [r7, #4]
 80038ea:	681b      	ldr	r3, [r3, #0]
 80038ec:	f003 0320 	and.w	r3, r3, #32
 80038f0:	2b00      	cmp	r3, #0
 80038f2:	d00a      	beq.n	800390a <HAL_RCCEx_PeriphCLKConfig+0x34a>
 80038f4:	4b75      	ldr	r3, [pc, #468]	@ (8003acc <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 80038f6:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80038fa:	f423 6240 	bic.w	r2, r3, #3072	@ 0xc00
 80038fe:	687b      	ldr	r3, [r7, #4]
 8003900:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8003902:	4972      	ldr	r1, [pc, #456]	@ (8003acc <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 8003904:	4313      	orrs	r3, r2
 8003906:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 800390a:	687b      	ldr	r3, [r7, #4]
 800390c:	681b      	ldr	r3, [r3, #0]
 800390e:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8003912:	2b00      	cmp	r3, #0
 8003914:	d00a      	beq.n	800392c <HAL_RCCEx_PeriphCLKConfig+0x36c>
 8003916:	4b6d      	ldr	r3, [pc, #436]	@ (8003acc <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 8003918:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800391c:	f423 2240 	bic.w	r2, r3, #786432	@ 0xc0000
 8003920:	687b      	ldr	r3, [r7, #4]
 8003922:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003924:	4969      	ldr	r1, [pc, #420]	@ (8003acc <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 8003926:	4313      	orrs	r3, r2
 8003928:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 800392c:	687b      	ldr	r3, [r7, #4]
 800392e:	681b      	ldr	r3, [r3, #0]
 8003930:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8003934:	2b00      	cmp	r3, #0
 8003936:	d00a      	beq.n	800394e <HAL_RCCEx_PeriphCLKConfig+0x38e>
 8003938:	4b64      	ldr	r3, [pc, #400]	@ (8003acc <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 800393a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800393e:	f423 1240 	bic.w	r2, r3, #3145728	@ 0x300000
 8003942:	687b      	ldr	r3, [r7, #4]
 8003944:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8003946:	4961      	ldr	r1, [pc, #388]	@ (8003acc <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 8003948:	4313      	orrs	r3, r2
 800394a:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 800394e:	687b      	ldr	r3, [r7, #4]
 8003950:	681b      	ldr	r3, [r3, #0]
 8003952:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003956:	2b00      	cmp	r3, #0
 8003958:	d00a      	beq.n	8003970 <HAL_RCCEx_PeriphCLKConfig+0x3b0>
 800395a:	4b5c      	ldr	r3, [pc, #368]	@ (8003acc <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 800395c:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8003960:	f423 5240 	bic.w	r2, r3, #12288	@ 0x3000
 8003964:	687b      	ldr	r3, [r7, #4]
 8003966:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8003968:	4958      	ldr	r1, [pc, #352]	@ (8003acc <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 800396a:	4313      	orrs	r3, r2
 800396c:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8003970:	687b      	ldr	r3, [r7, #4]
 8003972:	681b      	ldr	r3, [r3, #0]
 8003974:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003978:	2b00      	cmp	r3, #0
 800397a:	d00a      	beq.n	8003992 <HAL_RCCEx_PeriphCLKConfig+0x3d2>
 800397c:	4b53      	ldr	r3, [pc, #332]	@ (8003acc <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 800397e:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8003982:	f423 4240 	bic.w	r2, r3, #49152	@ 0xc000
 8003986:	687b      	ldr	r3, [r7, #4]
 8003988:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800398a:	4950      	ldr	r1, [pc, #320]	@ (8003acc <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 800398c:	4313      	orrs	r3, r2
 800398e:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8003992:	687b      	ldr	r3, [r7, #4]
 8003994:	681b      	ldr	r3, [r3, #0]
 8003996:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800399a:	2b00      	cmp	r3, #0
 800399c:	d00a      	beq.n	80039b4 <HAL_RCCEx_PeriphCLKConfig+0x3f4>
 800399e:	4b4b      	ldr	r3, [pc, #300]	@ (8003acc <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 80039a0:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80039a4:	f423 3240 	bic.w	r2, r3, #196608	@ 0x30000
 80039a8:	687b      	ldr	r3, [r7, #4]
 80039aa:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80039ac:	4947      	ldr	r1, [pc, #284]	@ (8003acc <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 80039ae:	4313      	orrs	r3, r2
 80039b0:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80039b4:	687b      	ldr	r3, [r7, #4]
 80039b6:	681b      	ldr	r3, [r3, #0]
 80039b8:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 80039bc:	2b00      	cmp	r3, #0
 80039be:	d00a      	beq.n	80039d6 <HAL_RCCEx_PeriphCLKConfig+0x416>
 80039c0:	4b42      	ldr	r3, [pc, #264]	@ (8003acc <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 80039c2:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 80039c6:	f023 0203 	bic.w	r2, r3, #3
 80039ca:	687b      	ldr	r3, [r7, #4]
 80039cc:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80039ce:	493f      	ldr	r1, [pc, #252]	@ (8003acc <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 80039d0:	4313      	orrs	r3, r2
 80039d2:	f8c1 309c 	str.w	r3, [r1, #156]	@ 0x9c
 80039d6:	687b      	ldr	r3, [r7, #4]
 80039d8:	681b      	ldr	r3, [r3, #0]
 80039da:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 80039de:	2b00      	cmp	r3, #0
 80039e0:	d028      	beq.n	8003a34 <HAL_RCCEx_PeriphCLKConfig+0x474>
 80039e2:	4b3a      	ldr	r3, [pc, #232]	@ (8003acc <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 80039e4:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80039e8:	f023 6240 	bic.w	r2, r3, #201326592	@ 0xc000000
 80039ec:	687b      	ldr	r3, [r7, #4]
 80039ee:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80039f0:	4936      	ldr	r1, [pc, #216]	@ (8003acc <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 80039f2:	4313      	orrs	r3, r2
 80039f4:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80039f8:	687b      	ldr	r3, [r7, #4]
 80039fa:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80039fc:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 8003a00:	d106      	bne.n	8003a10 <HAL_RCCEx_PeriphCLKConfig+0x450>
 8003a02:	4b32      	ldr	r3, [pc, #200]	@ (8003acc <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 8003a04:	68db      	ldr	r3, [r3, #12]
 8003a06:	4a31      	ldr	r2, [pc, #196]	@ (8003acc <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 8003a08:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8003a0c:	60d3      	str	r3, [r2, #12]
 8003a0e:	e011      	b.n	8003a34 <HAL_RCCEx_PeriphCLKConfig+0x474>
 8003a10:	687b      	ldr	r3, [r7, #4]
 8003a12:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8003a14:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 8003a18:	d10c      	bne.n	8003a34 <HAL_RCCEx_PeriphCLKConfig+0x474>
 8003a1a:	687b      	ldr	r3, [r7, #4]
 8003a1c:	3304      	adds	r3, #4
 8003a1e:	2101      	movs	r1, #1
 8003a20:	4618      	mov	r0, r3
 8003a22:	f000 f8c9 	bl	8003bb8 <RCCEx_PLLSAI1_Config>
 8003a26:	4603      	mov	r3, r0
 8003a28:	74fb      	strb	r3, [r7, #19]
 8003a2a:	7cfb      	ldrb	r3, [r7, #19]
 8003a2c:	2b00      	cmp	r3, #0
 8003a2e:	d001      	beq.n	8003a34 <HAL_RCCEx_PeriphCLKConfig+0x474>
 8003a30:	7cfb      	ldrb	r3, [r7, #19]
 8003a32:	74bb      	strb	r3, [r7, #18]
 8003a34:	687b      	ldr	r3, [r7, #4]
 8003a36:	681b      	ldr	r3, [r3, #0]
 8003a38:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8003a3c:	2b00      	cmp	r3, #0
 8003a3e:	d028      	beq.n	8003a92 <HAL_RCCEx_PeriphCLKConfig+0x4d2>
 8003a40:	4b22      	ldr	r3, [pc, #136]	@ (8003acc <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 8003a42:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8003a46:	f023 6240 	bic.w	r2, r3, #201326592	@ 0xc000000
 8003a4a:	687b      	ldr	r3, [r7, #4]
 8003a4c:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8003a4e:	491f      	ldr	r1, [pc, #124]	@ (8003acc <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 8003a50:	4313      	orrs	r3, r2
 8003a52:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8003a56:	687b      	ldr	r3, [r7, #4]
 8003a58:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8003a5a:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 8003a5e:	d106      	bne.n	8003a6e <HAL_RCCEx_PeriphCLKConfig+0x4ae>
 8003a60:	4b1a      	ldr	r3, [pc, #104]	@ (8003acc <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 8003a62:	68db      	ldr	r3, [r3, #12]
 8003a64:	4a19      	ldr	r2, [pc, #100]	@ (8003acc <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 8003a66:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8003a6a:	60d3      	str	r3, [r2, #12]
 8003a6c:	e011      	b.n	8003a92 <HAL_RCCEx_PeriphCLKConfig+0x4d2>
 8003a6e:	687b      	ldr	r3, [r7, #4]
 8003a70:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8003a72:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 8003a76:	d10c      	bne.n	8003a92 <HAL_RCCEx_PeriphCLKConfig+0x4d2>
 8003a78:	687b      	ldr	r3, [r7, #4]
 8003a7a:	3304      	adds	r3, #4
 8003a7c:	2101      	movs	r1, #1
 8003a7e:	4618      	mov	r0, r3
 8003a80:	f000 f89a 	bl	8003bb8 <RCCEx_PLLSAI1_Config>
 8003a84:	4603      	mov	r3, r0
 8003a86:	74fb      	strb	r3, [r7, #19]
 8003a88:	7cfb      	ldrb	r3, [r7, #19]
 8003a8a:	2b00      	cmp	r3, #0
 8003a8c:	d001      	beq.n	8003a92 <HAL_RCCEx_PeriphCLKConfig+0x4d2>
 8003a8e:	7cfb      	ldrb	r3, [r7, #19]
 8003a90:	74bb      	strb	r3, [r7, #18]
 8003a92:	687b      	ldr	r3, [r7, #4]
 8003a94:	681b      	ldr	r3, [r3, #0]
 8003a96:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8003a9a:	2b00      	cmp	r3, #0
 8003a9c:	d02a      	beq.n	8003af4 <HAL_RCCEx_PeriphCLKConfig+0x534>
 8003a9e:	4b0b      	ldr	r3, [pc, #44]	@ (8003acc <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 8003aa0:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8003aa4:	f023 6240 	bic.w	r2, r3, #201326592	@ 0xc000000
 8003aa8:	687b      	ldr	r3, [r7, #4]
 8003aaa:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 8003aac:	4907      	ldr	r1, [pc, #28]	@ (8003acc <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 8003aae:	4313      	orrs	r3, r2
 8003ab0:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8003ab4:	687b      	ldr	r3, [r7, #4]
 8003ab6:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 8003ab8:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 8003abc:	d108      	bne.n	8003ad0 <HAL_RCCEx_PeriphCLKConfig+0x510>
 8003abe:	4b03      	ldr	r3, [pc, #12]	@ (8003acc <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 8003ac0:	68db      	ldr	r3, [r3, #12]
 8003ac2:	4a02      	ldr	r2, [pc, #8]	@ (8003acc <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 8003ac4:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8003ac8:	60d3      	str	r3, [r2, #12]
 8003aca:	e013      	b.n	8003af4 <HAL_RCCEx_PeriphCLKConfig+0x534>
 8003acc:	40021000 	.word	0x40021000
 8003ad0:	687b      	ldr	r3, [r7, #4]
 8003ad2:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 8003ad4:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 8003ad8:	d10c      	bne.n	8003af4 <HAL_RCCEx_PeriphCLKConfig+0x534>
 8003ada:	687b      	ldr	r3, [r7, #4]
 8003adc:	3304      	adds	r3, #4
 8003ade:	2101      	movs	r1, #1
 8003ae0:	4618      	mov	r0, r3
 8003ae2:	f000 f869 	bl	8003bb8 <RCCEx_PLLSAI1_Config>
 8003ae6:	4603      	mov	r3, r0
 8003ae8:	74fb      	strb	r3, [r7, #19]
 8003aea:	7cfb      	ldrb	r3, [r7, #19]
 8003aec:	2b00      	cmp	r3, #0
 8003aee:	d001      	beq.n	8003af4 <HAL_RCCEx_PeriphCLKConfig+0x534>
 8003af0:	7cfb      	ldrb	r3, [r7, #19]
 8003af2:	74bb      	strb	r3, [r7, #18]
 8003af4:	687b      	ldr	r3, [r7, #4]
 8003af6:	681b      	ldr	r3, [r3, #0]
 8003af8:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8003afc:	2b00      	cmp	r3, #0
 8003afe:	d02f      	beq.n	8003b60 <HAL_RCCEx_PeriphCLKConfig+0x5a0>
 8003b00:	4b2c      	ldr	r3, [pc, #176]	@ (8003bb4 <HAL_RCCEx_PeriphCLKConfig+0x5f4>)
 8003b02:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8003b06:	f023 5240 	bic.w	r2, r3, #805306368	@ 0x30000000
 8003b0a:	687b      	ldr	r3, [r7, #4]
 8003b0c:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8003b0e:	4929      	ldr	r1, [pc, #164]	@ (8003bb4 <HAL_RCCEx_PeriphCLKConfig+0x5f4>)
 8003b10:	4313      	orrs	r3, r2
 8003b12:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8003b16:	687b      	ldr	r3, [r7, #4]
 8003b18:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8003b1a:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8003b1e:	d10d      	bne.n	8003b3c <HAL_RCCEx_PeriphCLKConfig+0x57c>
 8003b20:	687b      	ldr	r3, [r7, #4]
 8003b22:	3304      	adds	r3, #4
 8003b24:	2102      	movs	r1, #2
 8003b26:	4618      	mov	r0, r3
 8003b28:	f000 f846 	bl	8003bb8 <RCCEx_PLLSAI1_Config>
 8003b2c:	4603      	mov	r3, r0
 8003b2e:	74fb      	strb	r3, [r7, #19]
 8003b30:	7cfb      	ldrb	r3, [r7, #19]
 8003b32:	2b00      	cmp	r3, #0
 8003b34:	d014      	beq.n	8003b60 <HAL_RCCEx_PeriphCLKConfig+0x5a0>
 8003b36:	7cfb      	ldrb	r3, [r7, #19]
 8003b38:	74bb      	strb	r3, [r7, #18]
 8003b3a:	e011      	b.n	8003b60 <HAL_RCCEx_PeriphCLKConfig+0x5a0>
 8003b3c:	687b      	ldr	r3, [r7, #4]
 8003b3e:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8003b40:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8003b44:	d10c      	bne.n	8003b60 <HAL_RCCEx_PeriphCLKConfig+0x5a0>
 8003b46:	687b      	ldr	r3, [r7, #4]
 8003b48:	3320      	adds	r3, #32
 8003b4a:	2102      	movs	r1, #2
 8003b4c:	4618      	mov	r0, r3
 8003b4e:	f000 f925 	bl	8003d9c <RCCEx_PLLSAI2_Config>
 8003b52:	4603      	mov	r3, r0
 8003b54:	74fb      	strb	r3, [r7, #19]
 8003b56:	7cfb      	ldrb	r3, [r7, #19]
 8003b58:	2b00      	cmp	r3, #0
 8003b5a:	d001      	beq.n	8003b60 <HAL_RCCEx_PeriphCLKConfig+0x5a0>
 8003b5c:	7cfb      	ldrb	r3, [r7, #19]
 8003b5e:	74bb      	strb	r3, [r7, #18]
 8003b60:	687b      	ldr	r3, [r7, #4]
 8003b62:	681b      	ldr	r3, [r3, #0]
 8003b64:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8003b68:	2b00      	cmp	r3, #0
 8003b6a:	d00b      	beq.n	8003b84 <HAL_RCCEx_PeriphCLKConfig+0x5c4>
 8003b6c:	4b11      	ldr	r3, [pc, #68]	@ (8003bb4 <HAL_RCCEx_PeriphCLKConfig+0x5f4>)
 8003b6e:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8003b72:	f023 4280 	bic.w	r2, r3, #1073741824	@ 0x40000000
 8003b76:	687b      	ldr	r3, [r7, #4]
 8003b78:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8003b7c:	490d      	ldr	r1, [pc, #52]	@ (8003bb4 <HAL_RCCEx_PeriphCLKConfig+0x5f4>)
 8003b7e:	4313      	orrs	r3, r2
 8003b80:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8003b84:	687b      	ldr	r3, [r7, #4]
 8003b86:	681b      	ldr	r3, [r3, #0]
 8003b88:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8003b8c:	2b00      	cmp	r3, #0
 8003b8e:	d00b      	beq.n	8003ba8 <HAL_RCCEx_PeriphCLKConfig+0x5e8>
 8003b90:	4b08      	ldr	r3, [pc, #32]	@ (8003bb4 <HAL_RCCEx_PeriphCLKConfig+0x5f4>)
 8003b92:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8003b96:	f023 4200 	bic.w	r2, r3, #2147483648	@ 0x80000000
 8003b9a:	687b      	ldr	r3, [r7, #4]
 8003b9c:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8003ba0:	4904      	ldr	r1, [pc, #16]	@ (8003bb4 <HAL_RCCEx_PeriphCLKConfig+0x5f4>)
 8003ba2:	4313      	orrs	r3, r2
 8003ba4:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8003ba8:	7cbb      	ldrb	r3, [r7, #18]
 8003baa:	4618      	mov	r0, r3
 8003bac:	3718      	adds	r7, #24
 8003bae:	46bd      	mov	sp, r7
 8003bb0:	bd80      	pop	{r7, pc}
 8003bb2:	bf00      	nop
 8003bb4:	40021000 	.word	0x40021000

08003bb8 <RCCEx_PLLSAI1_Config>:
 8003bb8:	b580      	push	{r7, lr}
 8003bba:	b084      	sub	sp, #16
 8003bbc:	af00      	add	r7, sp, #0
 8003bbe:	6078      	str	r0, [r7, #4]
 8003bc0:	6039      	str	r1, [r7, #0]
 8003bc2:	2300      	movs	r3, #0
 8003bc4:	73fb      	strb	r3, [r7, #15]
 8003bc6:	4b74      	ldr	r3, [pc, #464]	@ (8003d98 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003bc8:	68db      	ldr	r3, [r3, #12]
 8003bca:	f003 0303 	and.w	r3, r3, #3
 8003bce:	2b00      	cmp	r3, #0
 8003bd0:	d018      	beq.n	8003c04 <RCCEx_PLLSAI1_Config+0x4c>
 8003bd2:	4b71      	ldr	r3, [pc, #452]	@ (8003d98 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003bd4:	68db      	ldr	r3, [r3, #12]
 8003bd6:	f003 0203 	and.w	r2, r3, #3
 8003bda:	687b      	ldr	r3, [r7, #4]
 8003bdc:	681b      	ldr	r3, [r3, #0]
 8003bde:	429a      	cmp	r2, r3
 8003be0:	d10d      	bne.n	8003bfe <RCCEx_PLLSAI1_Config+0x46>
 8003be2:	687b      	ldr	r3, [r7, #4]
 8003be4:	681b      	ldr	r3, [r3, #0]
 8003be6:	2b00      	cmp	r3, #0
 8003be8:	d009      	beq.n	8003bfe <RCCEx_PLLSAI1_Config+0x46>
 8003bea:	4b6b      	ldr	r3, [pc, #428]	@ (8003d98 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003bec:	68db      	ldr	r3, [r3, #12]
 8003bee:	091b      	lsrs	r3, r3, #4
 8003bf0:	f003 0307 	and.w	r3, r3, #7
 8003bf4:	1c5a      	adds	r2, r3, #1
 8003bf6:	687b      	ldr	r3, [r7, #4]
 8003bf8:	685b      	ldr	r3, [r3, #4]
 8003bfa:	429a      	cmp	r2, r3
 8003bfc:	d047      	beq.n	8003c8e <RCCEx_PLLSAI1_Config+0xd6>
 8003bfe:	2301      	movs	r3, #1
 8003c00:	73fb      	strb	r3, [r7, #15]
 8003c02:	e044      	b.n	8003c8e <RCCEx_PLLSAI1_Config+0xd6>
 8003c04:	687b      	ldr	r3, [r7, #4]
 8003c06:	681b      	ldr	r3, [r3, #0]
 8003c08:	2b03      	cmp	r3, #3
 8003c0a:	d018      	beq.n	8003c3e <RCCEx_PLLSAI1_Config+0x86>
 8003c0c:	2b03      	cmp	r3, #3
 8003c0e:	d825      	bhi.n	8003c5c <RCCEx_PLLSAI1_Config+0xa4>
 8003c10:	2b01      	cmp	r3, #1
 8003c12:	d002      	beq.n	8003c1a <RCCEx_PLLSAI1_Config+0x62>
 8003c14:	2b02      	cmp	r3, #2
 8003c16:	d009      	beq.n	8003c2c <RCCEx_PLLSAI1_Config+0x74>
 8003c18:	e020      	b.n	8003c5c <RCCEx_PLLSAI1_Config+0xa4>
 8003c1a:	4b5f      	ldr	r3, [pc, #380]	@ (8003d98 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003c1c:	681b      	ldr	r3, [r3, #0]
 8003c1e:	f003 0302 	and.w	r3, r3, #2
 8003c22:	2b00      	cmp	r3, #0
 8003c24:	d11d      	bne.n	8003c62 <RCCEx_PLLSAI1_Config+0xaa>
 8003c26:	2301      	movs	r3, #1
 8003c28:	73fb      	strb	r3, [r7, #15]
 8003c2a:	e01a      	b.n	8003c62 <RCCEx_PLLSAI1_Config+0xaa>
 8003c2c:	4b5a      	ldr	r3, [pc, #360]	@ (8003d98 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003c2e:	681b      	ldr	r3, [r3, #0]
 8003c30:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8003c34:	2b00      	cmp	r3, #0
 8003c36:	d116      	bne.n	8003c66 <RCCEx_PLLSAI1_Config+0xae>
 8003c38:	2301      	movs	r3, #1
 8003c3a:	73fb      	strb	r3, [r7, #15]
 8003c3c:	e013      	b.n	8003c66 <RCCEx_PLLSAI1_Config+0xae>
 8003c3e:	4b56      	ldr	r3, [pc, #344]	@ (8003d98 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003c40:	681b      	ldr	r3, [r3, #0]
 8003c42:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003c46:	2b00      	cmp	r3, #0
 8003c48:	d10f      	bne.n	8003c6a <RCCEx_PLLSAI1_Config+0xb2>
 8003c4a:	4b53      	ldr	r3, [pc, #332]	@ (8003d98 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003c4c:	681b      	ldr	r3, [r3, #0]
 8003c4e:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8003c52:	2b00      	cmp	r3, #0
 8003c54:	d109      	bne.n	8003c6a <RCCEx_PLLSAI1_Config+0xb2>
 8003c56:	2301      	movs	r3, #1
 8003c58:	73fb      	strb	r3, [r7, #15]
 8003c5a:	e006      	b.n	8003c6a <RCCEx_PLLSAI1_Config+0xb2>
 8003c5c:	2301      	movs	r3, #1
 8003c5e:	73fb      	strb	r3, [r7, #15]
 8003c60:	e004      	b.n	8003c6c <RCCEx_PLLSAI1_Config+0xb4>
 8003c62:	bf00      	nop
 8003c64:	e002      	b.n	8003c6c <RCCEx_PLLSAI1_Config+0xb4>
 8003c66:	bf00      	nop
 8003c68:	e000      	b.n	8003c6c <RCCEx_PLLSAI1_Config+0xb4>
 8003c6a:	bf00      	nop
 8003c6c:	7bfb      	ldrb	r3, [r7, #15]
 8003c6e:	2b00      	cmp	r3, #0
 8003c70:	d10d      	bne.n	8003c8e <RCCEx_PLLSAI1_Config+0xd6>
 8003c72:	4b49      	ldr	r3, [pc, #292]	@ (8003d98 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003c74:	68db      	ldr	r3, [r3, #12]
 8003c76:	f023 0273 	bic.w	r2, r3, #115	@ 0x73
 8003c7a:	687b      	ldr	r3, [r7, #4]
 8003c7c:	6819      	ldr	r1, [r3, #0]
 8003c7e:	687b      	ldr	r3, [r7, #4]
 8003c80:	685b      	ldr	r3, [r3, #4]
 8003c82:	3b01      	subs	r3, #1
 8003c84:	011b      	lsls	r3, r3, #4
 8003c86:	430b      	orrs	r3, r1
 8003c88:	4943      	ldr	r1, [pc, #268]	@ (8003d98 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003c8a:	4313      	orrs	r3, r2
 8003c8c:	60cb      	str	r3, [r1, #12]
 8003c8e:	7bfb      	ldrb	r3, [r7, #15]
 8003c90:	2b00      	cmp	r3, #0
 8003c92:	d17c      	bne.n	8003d8e <RCCEx_PLLSAI1_Config+0x1d6>
 8003c94:	4b40      	ldr	r3, [pc, #256]	@ (8003d98 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003c96:	681b      	ldr	r3, [r3, #0]
 8003c98:	4a3f      	ldr	r2, [pc, #252]	@ (8003d98 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003c9a:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 8003c9e:	6013      	str	r3, [r2, #0]
 8003ca0:	f7fd fd46 	bl	8001730 <HAL_GetTick>
 8003ca4:	60b8      	str	r0, [r7, #8]
 8003ca6:	e009      	b.n	8003cbc <RCCEx_PLLSAI1_Config+0x104>
 8003ca8:	f7fd fd42 	bl	8001730 <HAL_GetTick>
 8003cac:	4602      	mov	r2, r0
 8003cae:	68bb      	ldr	r3, [r7, #8]
 8003cb0:	1ad3      	subs	r3, r2, r3
 8003cb2:	2b02      	cmp	r3, #2
 8003cb4:	d902      	bls.n	8003cbc <RCCEx_PLLSAI1_Config+0x104>
 8003cb6:	2303      	movs	r3, #3
 8003cb8:	73fb      	strb	r3, [r7, #15]
 8003cba:	e005      	b.n	8003cc8 <RCCEx_PLLSAI1_Config+0x110>
 8003cbc:	4b36      	ldr	r3, [pc, #216]	@ (8003d98 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003cbe:	681b      	ldr	r3, [r3, #0]
 8003cc0:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 8003cc4:	2b00      	cmp	r3, #0
 8003cc6:	d1ef      	bne.n	8003ca8 <RCCEx_PLLSAI1_Config+0xf0>
 8003cc8:	7bfb      	ldrb	r3, [r7, #15]
 8003cca:	2b00      	cmp	r3, #0
 8003ccc:	d15f      	bne.n	8003d8e <RCCEx_PLLSAI1_Config+0x1d6>
 8003cce:	683b      	ldr	r3, [r7, #0]
 8003cd0:	2b00      	cmp	r3, #0
 8003cd2:	d110      	bne.n	8003cf6 <RCCEx_PLLSAI1_Config+0x13e>
 8003cd4:	4b30      	ldr	r3, [pc, #192]	@ (8003d98 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003cd6:	691b      	ldr	r3, [r3, #16]
 8003cd8:	f023 4378 	bic.w	r3, r3, #4160749568	@ 0xf8000000
 8003cdc:	f423 43fe 	bic.w	r3, r3, #32512	@ 0x7f00
 8003ce0:	687a      	ldr	r2, [r7, #4]
 8003ce2:	6892      	ldr	r2, [r2, #8]
 8003ce4:	0211      	lsls	r1, r2, #8
 8003ce6:	687a      	ldr	r2, [r7, #4]
 8003ce8:	68d2      	ldr	r2, [r2, #12]
 8003cea:	06d2      	lsls	r2, r2, #27
 8003cec:	430a      	orrs	r2, r1
 8003cee:	492a      	ldr	r1, [pc, #168]	@ (8003d98 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003cf0:	4313      	orrs	r3, r2
 8003cf2:	610b      	str	r3, [r1, #16]
 8003cf4:	e027      	b.n	8003d46 <RCCEx_PLLSAI1_Config+0x18e>
 8003cf6:	683b      	ldr	r3, [r7, #0]
 8003cf8:	2b01      	cmp	r3, #1
 8003cfa:	d112      	bne.n	8003d22 <RCCEx_PLLSAI1_Config+0x16a>
 8003cfc:	4b26      	ldr	r3, [pc, #152]	@ (8003d98 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003cfe:	691b      	ldr	r3, [r3, #16]
 8003d00:	f423 03c0 	bic.w	r3, r3, #6291456	@ 0x600000
 8003d04:	f423 43fe 	bic.w	r3, r3, #32512	@ 0x7f00
 8003d08:	687a      	ldr	r2, [r7, #4]
 8003d0a:	6892      	ldr	r2, [r2, #8]
 8003d0c:	0211      	lsls	r1, r2, #8
 8003d0e:	687a      	ldr	r2, [r7, #4]
 8003d10:	6912      	ldr	r2, [r2, #16]
 8003d12:	0852      	lsrs	r2, r2, #1
 8003d14:	3a01      	subs	r2, #1
 8003d16:	0552      	lsls	r2, r2, #21
 8003d18:	430a      	orrs	r2, r1
 8003d1a:	491f      	ldr	r1, [pc, #124]	@ (8003d98 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003d1c:	4313      	orrs	r3, r2
 8003d1e:	610b      	str	r3, [r1, #16]
 8003d20:	e011      	b.n	8003d46 <RCCEx_PLLSAI1_Config+0x18e>
 8003d22:	4b1d      	ldr	r3, [pc, #116]	@ (8003d98 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003d24:	691b      	ldr	r3, [r3, #16]
 8003d26:	f023 63c0 	bic.w	r3, r3, #100663296	@ 0x6000000
 8003d2a:	f423 43fe 	bic.w	r3, r3, #32512	@ 0x7f00
 8003d2e:	687a      	ldr	r2, [r7, #4]
 8003d30:	6892      	ldr	r2, [r2, #8]
 8003d32:	0211      	lsls	r1, r2, #8
 8003d34:	687a      	ldr	r2, [r7, #4]
 8003d36:	6952      	ldr	r2, [r2, #20]
 8003d38:	0852      	lsrs	r2, r2, #1
 8003d3a:	3a01      	subs	r2, #1
 8003d3c:	0652      	lsls	r2, r2, #25
 8003d3e:	430a      	orrs	r2, r1
 8003d40:	4915      	ldr	r1, [pc, #84]	@ (8003d98 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003d42:	4313      	orrs	r3, r2
 8003d44:	610b      	str	r3, [r1, #16]
 8003d46:	4b14      	ldr	r3, [pc, #80]	@ (8003d98 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003d48:	681b      	ldr	r3, [r3, #0]
 8003d4a:	4a13      	ldr	r2, [pc, #76]	@ (8003d98 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003d4c:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 8003d50:	6013      	str	r3, [r2, #0]
 8003d52:	f7fd fced 	bl	8001730 <HAL_GetTick>
 8003d56:	60b8      	str	r0, [r7, #8]
 8003d58:	e009      	b.n	8003d6e <RCCEx_PLLSAI1_Config+0x1b6>
 8003d5a:	f7fd fce9 	bl	8001730 <HAL_GetTick>
 8003d5e:	4602      	mov	r2, r0
 8003d60:	68bb      	ldr	r3, [r7, #8]
 8003d62:	1ad3      	subs	r3, r2, r3
 8003d64:	2b02      	cmp	r3, #2
 8003d66:	d902      	bls.n	8003d6e <RCCEx_PLLSAI1_Config+0x1b6>
 8003d68:	2303      	movs	r3, #3
 8003d6a:	73fb      	strb	r3, [r7, #15]
 8003d6c:	e005      	b.n	8003d7a <RCCEx_PLLSAI1_Config+0x1c2>
 8003d6e:	4b0a      	ldr	r3, [pc, #40]	@ (8003d98 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003d70:	681b      	ldr	r3, [r3, #0]
 8003d72:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 8003d76:	2b00      	cmp	r3, #0
 8003d78:	d0ef      	beq.n	8003d5a <RCCEx_PLLSAI1_Config+0x1a2>
 8003d7a:	7bfb      	ldrb	r3, [r7, #15]
 8003d7c:	2b00      	cmp	r3, #0
 8003d7e:	d106      	bne.n	8003d8e <RCCEx_PLLSAI1_Config+0x1d6>
 8003d80:	4b05      	ldr	r3, [pc, #20]	@ (8003d98 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003d82:	691a      	ldr	r2, [r3, #16]
 8003d84:	687b      	ldr	r3, [r7, #4]
 8003d86:	699b      	ldr	r3, [r3, #24]
 8003d88:	4903      	ldr	r1, [pc, #12]	@ (8003d98 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003d8a:	4313      	orrs	r3, r2
 8003d8c:	610b      	str	r3, [r1, #16]
 8003d8e:	7bfb      	ldrb	r3, [r7, #15]
 8003d90:	4618      	mov	r0, r3
 8003d92:	3710      	adds	r7, #16
 8003d94:	46bd      	mov	sp, r7
 8003d96:	bd80      	pop	{r7, pc}
 8003d98:	40021000 	.word	0x40021000

08003d9c <RCCEx_PLLSAI2_Config>:
 8003d9c:	b580      	push	{r7, lr}
 8003d9e:	b084      	sub	sp, #16
 8003da0:	af00      	add	r7, sp, #0
 8003da2:	6078      	str	r0, [r7, #4]
 8003da4:	6039      	str	r1, [r7, #0]
 8003da6:	2300      	movs	r3, #0
 8003da8:	73fb      	strb	r3, [r7, #15]
 8003daa:	4b69      	ldr	r3, [pc, #420]	@ (8003f50 <RCCEx_PLLSAI2_Config+0x1b4>)
 8003dac:	68db      	ldr	r3, [r3, #12]
 8003dae:	f003 0303 	and.w	r3, r3, #3
 8003db2:	2b00      	cmp	r3, #0
 8003db4:	d018      	beq.n	8003de8 <RCCEx_PLLSAI2_Config+0x4c>
 8003db6:	4b66      	ldr	r3, [pc, #408]	@ (8003f50 <RCCEx_PLLSAI2_Config+0x1b4>)
 8003db8:	68db      	ldr	r3, [r3, #12]
 8003dba:	f003 0203 	and.w	r2, r3, #3
 8003dbe:	687b      	ldr	r3, [r7, #4]
 8003dc0:	681b      	ldr	r3, [r3, #0]
 8003dc2:	429a      	cmp	r2, r3
 8003dc4:	d10d      	bne.n	8003de2 <RCCEx_PLLSAI2_Config+0x46>
 8003dc6:	687b      	ldr	r3, [r7, #4]
 8003dc8:	681b      	ldr	r3, [r3, #0]
 8003dca:	2b00      	cmp	r3, #0
 8003dcc:	d009      	beq.n	8003de2 <RCCEx_PLLSAI2_Config+0x46>
 8003dce:	4b60      	ldr	r3, [pc, #384]	@ (8003f50 <RCCEx_PLLSAI2_Config+0x1b4>)
 8003dd0:	68db      	ldr	r3, [r3, #12]
 8003dd2:	091b      	lsrs	r3, r3, #4
 8003dd4:	f003 0307 	and.w	r3, r3, #7
 8003dd8:	1c5a      	adds	r2, r3, #1
 8003dda:	687b      	ldr	r3, [r7, #4]
 8003ddc:	685b      	ldr	r3, [r3, #4]
 8003dde:	429a      	cmp	r2, r3
 8003de0:	d047      	beq.n	8003e72 <RCCEx_PLLSAI2_Config+0xd6>
 8003de2:	2301      	movs	r3, #1
 8003de4:	73fb      	strb	r3, [r7, #15]
 8003de6:	e044      	b.n	8003e72 <RCCEx_PLLSAI2_Config+0xd6>
 8003de8:	687b      	ldr	r3, [r7, #4]
 8003dea:	681b      	ldr	r3, [r3, #0]
 8003dec:	2b03      	cmp	r3, #3
 8003dee:	d018      	beq.n	8003e22 <RCCEx_PLLSAI2_Config+0x86>
 8003df0:	2b03      	cmp	r3, #3
 8003df2:	d825      	bhi.n	8003e40 <RCCEx_PLLSAI2_Config+0xa4>
 8003df4:	2b01      	cmp	r3, #1
 8003df6:	d002      	beq.n	8003dfe <RCCEx_PLLSAI2_Config+0x62>
 8003df8:	2b02      	cmp	r3, #2
 8003dfa:	d009      	beq.n	8003e10 <RCCEx_PLLSAI2_Config+0x74>
 8003dfc:	e020      	b.n	8003e40 <RCCEx_PLLSAI2_Config+0xa4>
 8003dfe:	4b54      	ldr	r3, [pc, #336]	@ (8003f50 <RCCEx_PLLSAI2_Config+0x1b4>)
 8003e00:	681b      	ldr	r3, [r3, #0]
 8003e02:	f003 0302 	and.w	r3, r3, #2
 8003e06:	2b00      	cmp	r3, #0
 8003e08:	d11d      	bne.n	8003e46 <RCCEx_PLLSAI2_Config+0xaa>
 8003e0a:	2301      	movs	r3, #1
 8003e0c:	73fb      	strb	r3, [r7, #15]
 8003e0e:	e01a      	b.n	8003e46 <RCCEx_PLLSAI2_Config+0xaa>
 8003e10:	4b4f      	ldr	r3, [pc, #316]	@ (8003f50 <RCCEx_PLLSAI2_Config+0x1b4>)
 8003e12:	681b      	ldr	r3, [r3, #0]
 8003e14:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8003e18:	2b00      	cmp	r3, #0
 8003e1a:	d116      	bne.n	8003e4a <RCCEx_PLLSAI2_Config+0xae>
 8003e1c:	2301      	movs	r3, #1
 8003e1e:	73fb      	strb	r3, [r7, #15]
 8003e20:	e013      	b.n	8003e4a <RCCEx_PLLSAI2_Config+0xae>
 8003e22:	4b4b      	ldr	r3, [pc, #300]	@ (8003f50 <RCCEx_PLLSAI2_Config+0x1b4>)
 8003e24:	681b      	ldr	r3, [r3, #0]
 8003e26:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003e2a:	2b00      	cmp	r3, #0
 8003e2c:	d10f      	bne.n	8003e4e <RCCEx_PLLSAI2_Config+0xb2>
 8003e2e:	4b48      	ldr	r3, [pc, #288]	@ (8003f50 <RCCEx_PLLSAI2_Config+0x1b4>)
 8003e30:	681b      	ldr	r3, [r3, #0]
 8003e32:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8003e36:	2b00      	cmp	r3, #0
 8003e38:	d109      	bne.n	8003e4e <RCCEx_PLLSAI2_Config+0xb2>
 8003e3a:	2301      	movs	r3, #1
 8003e3c:	73fb      	strb	r3, [r7, #15]
 8003e3e:	e006      	b.n	8003e4e <RCCEx_PLLSAI2_Config+0xb2>
 8003e40:	2301      	movs	r3, #1
 8003e42:	73fb      	strb	r3, [r7, #15]
 8003e44:	e004      	b.n	8003e50 <RCCEx_PLLSAI2_Config+0xb4>
 8003e46:	bf00      	nop
 8003e48:	e002      	b.n	8003e50 <RCCEx_PLLSAI2_Config+0xb4>
 8003e4a:	bf00      	nop
 8003e4c:	e000      	b.n	8003e50 <RCCEx_PLLSAI2_Config+0xb4>
 8003e4e:	bf00      	nop
 8003e50:	7bfb      	ldrb	r3, [r7, #15]
 8003e52:	2b00      	cmp	r3, #0
 8003e54:	d10d      	bne.n	8003e72 <RCCEx_PLLSAI2_Config+0xd6>
 8003e56:	4b3e      	ldr	r3, [pc, #248]	@ (8003f50 <RCCEx_PLLSAI2_Config+0x1b4>)
 8003e58:	68db      	ldr	r3, [r3, #12]
 8003e5a:	f023 0273 	bic.w	r2, r3, #115	@ 0x73
 8003e5e:	687b      	ldr	r3, [r7, #4]
 8003e60:	6819      	ldr	r1, [r3, #0]
 8003e62:	687b      	ldr	r3, [r7, #4]
 8003e64:	685b      	ldr	r3, [r3, #4]
 8003e66:	3b01      	subs	r3, #1
 8003e68:	011b      	lsls	r3, r3, #4
 8003e6a:	430b      	orrs	r3, r1
 8003e6c:	4938      	ldr	r1, [pc, #224]	@ (8003f50 <RCCEx_PLLSAI2_Config+0x1b4>)
 8003e6e:	4313      	orrs	r3, r2
 8003e70:	60cb      	str	r3, [r1, #12]
 8003e72:	7bfb      	ldrb	r3, [r7, #15]
 8003e74:	2b00      	cmp	r3, #0
 8003e76:	d166      	bne.n	8003f46 <RCCEx_PLLSAI2_Config+0x1aa>
 8003e78:	4b35      	ldr	r3, [pc, #212]	@ (8003f50 <RCCEx_PLLSAI2_Config+0x1b4>)
 8003e7a:	681b      	ldr	r3, [r3, #0]
 8003e7c:	4a34      	ldr	r2, [pc, #208]	@ (8003f50 <RCCEx_PLLSAI2_Config+0x1b4>)
 8003e7e:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8003e82:	6013      	str	r3, [r2, #0]
 8003e84:	f7fd fc54 	bl	8001730 <HAL_GetTick>
 8003e88:	60b8      	str	r0, [r7, #8]
 8003e8a:	e009      	b.n	8003ea0 <RCCEx_PLLSAI2_Config+0x104>
 8003e8c:	f7fd fc50 	bl	8001730 <HAL_GetTick>
 8003e90:	4602      	mov	r2, r0
 8003e92:	68bb      	ldr	r3, [r7, #8]
 8003e94:	1ad3      	subs	r3, r2, r3
 8003e96:	2b02      	cmp	r3, #2
 8003e98:	d902      	bls.n	8003ea0 <RCCEx_PLLSAI2_Config+0x104>
 8003e9a:	2303      	movs	r3, #3
 8003e9c:	73fb      	strb	r3, [r7, #15]
 8003e9e:	e005      	b.n	8003eac <RCCEx_PLLSAI2_Config+0x110>
 8003ea0:	4b2b      	ldr	r3, [pc, #172]	@ (8003f50 <RCCEx_PLLSAI2_Config+0x1b4>)
 8003ea2:	681b      	ldr	r3, [r3, #0]
 8003ea4:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 8003ea8:	2b00      	cmp	r3, #0
 8003eaa:	d1ef      	bne.n	8003e8c <RCCEx_PLLSAI2_Config+0xf0>
 8003eac:	7bfb      	ldrb	r3, [r7, #15]
 8003eae:	2b00      	cmp	r3, #0
 8003eb0:	d149      	bne.n	8003f46 <RCCEx_PLLSAI2_Config+0x1aa>
 8003eb2:	683b      	ldr	r3, [r7, #0]
 8003eb4:	2b00      	cmp	r3, #0
 8003eb6:	d110      	bne.n	8003eda <RCCEx_PLLSAI2_Config+0x13e>
 8003eb8:	4b25      	ldr	r3, [pc, #148]	@ (8003f50 <RCCEx_PLLSAI2_Config+0x1b4>)
 8003eba:	695b      	ldr	r3, [r3, #20]
 8003ebc:	f023 4378 	bic.w	r3, r3, #4160749568	@ 0xf8000000
 8003ec0:	f423 43fe 	bic.w	r3, r3, #32512	@ 0x7f00
 8003ec4:	687a      	ldr	r2, [r7, #4]
 8003ec6:	6892      	ldr	r2, [r2, #8]
 8003ec8:	0211      	lsls	r1, r2, #8
 8003eca:	687a      	ldr	r2, [r7, #4]
 8003ecc:	68d2      	ldr	r2, [r2, #12]
 8003ece:	06d2      	lsls	r2, r2, #27
 8003ed0:	430a      	orrs	r2, r1
 8003ed2:	491f      	ldr	r1, [pc, #124]	@ (8003f50 <RCCEx_PLLSAI2_Config+0x1b4>)
 8003ed4:	4313      	orrs	r3, r2
 8003ed6:	614b      	str	r3, [r1, #20]
 8003ed8:	e011      	b.n	8003efe <RCCEx_PLLSAI2_Config+0x162>
 8003eda:	4b1d      	ldr	r3, [pc, #116]	@ (8003f50 <RCCEx_PLLSAI2_Config+0x1b4>)
 8003edc:	695b      	ldr	r3, [r3, #20]
 8003ede:	f023 63c0 	bic.w	r3, r3, #100663296	@ 0x6000000
 8003ee2:	f423 43fe 	bic.w	r3, r3, #32512	@ 0x7f00
 8003ee6:	687a      	ldr	r2, [r7, #4]
 8003ee8:	6892      	ldr	r2, [r2, #8]
 8003eea:	0211      	lsls	r1, r2, #8
 8003eec:	687a      	ldr	r2, [r7, #4]
 8003eee:	6912      	ldr	r2, [r2, #16]
 8003ef0:	0852      	lsrs	r2, r2, #1
 8003ef2:	3a01      	subs	r2, #1
 8003ef4:	0652      	lsls	r2, r2, #25
 8003ef6:	430a      	orrs	r2, r1
 8003ef8:	4915      	ldr	r1, [pc, #84]	@ (8003f50 <RCCEx_PLLSAI2_Config+0x1b4>)
 8003efa:	4313      	orrs	r3, r2
 8003efc:	614b      	str	r3, [r1, #20]
 8003efe:	4b14      	ldr	r3, [pc, #80]	@ (8003f50 <RCCEx_PLLSAI2_Config+0x1b4>)
 8003f00:	681b      	ldr	r3, [r3, #0]
 8003f02:	4a13      	ldr	r2, [pc, #76]	@ (8003f50 <RCCEx_PLLSAI2_Config+0x1b4>)
 8003f04:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8003f08:	6013      	str	r3, [r2, #0]
 8003f0a:	f7fd fc11 	bl	8001730 <HAL_GetTick>
 8003f0e:	60b8      	str	r0, [r7, #8]
 8003f10:	e009      	b.n	8003f26 <RCCEx_PLLSAI2_Config+0x18a>
 8003f12:	f7fd fc0d 	bl	8001730 <HAL_GetTick>
 8003f16:	4602      	mov	r2, r0
 8003f18:	68bb      	ldr	r3, [r7, #8]
 8003f1a:	1ad3      	subs	r3, r2, r3
 8003f1c:	2b02      	cmp	r3, #2
 8003f1e:	d902      	bls.n	8003f26 <RCCEx_PLLSAI2_Config+0x18a>
 8003f20:	2303      	movs	r3, #3
 8003f22:	73fb      	strb	r3, [r7, #15]
 8003f24:	e005      	b.n	8003f32 <RCCEx_PLLSAI2_Config+0x196>
 8003f26:	4b0a      	ldr	r3, [pc, #40]	@ (8003f50 <RCCEx_PLLSAI2_Config+0x1b4>)
 8003f28:	681b      	ldr	r3, [r3, #0]
 8003f2a:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 8003f2e:	2b00      	cmp	r3, #0
 8003f30:	d0ef      	beq.n	8003f12 <RCCEx_PLLSAI2_Config+0x176>
 8003f32:	7bfb      	ldrb	r3, [r7, #15]
 8003f34:	2b00      	cmp	r3, #0
 8003f36:	d106      	bne.n	8003f46 <RCCEx_PLLSAI2_Config+0x1aa>
 8003f38:	4b05      	ldr	r3, [pc, #20]	@ (8003f50 <RCCEx_PLLSAI2_Config+0x1b4>)
 8003f3a:	695a      	ldr	r2, [r3, #20]
 8003f3c:	687b      	ldr	r3, [r7, #4]
 8003f3e:	695b      	ldr	r3, [r3, #20]
 8003f40:	4903      	ldr	r1, [pc, #12]	@ (8003f50 <RCCEx_PLLSAI2_Config+0x1b4>)
 8003f42:	4313      	orrs	r3, r2
 8003f44:	614b      	str	r3, [r1, #20]
 8003f46:	7bfb      	ldrb	r3, [r7, #15]
 8003f48:	4618      	mov	r0, r3
 8003f4a:	3710      	adds	r7, #16
 8003f4c:	46bd      	mov	sp, r7
 8003f4e:	bd80      	pop	{r7, pc}
 8003f50:	40021000 	.word	0x40021000

08003f54 <HAL_UART_Init>:
 8003f54:	b580      	push	{r7, lr}
 8003f56:	b082      	sub	sp, #8
 8003f58:	af00      	add	r7, sp, #0
 8003f5a:	6078      	str	r0, [r7, #4]
 8003f5c:	687b      	ldr	r3, [r7, #4]
 8003f5e:	2b00      	cmp	r3, #0
 8003f60:	d101      	bne.n	8003f66 <HAL_UART_Init+0x12>
 8003f62:	2301      	movs	r3, #1
 8003f64:	e040      	b.n	8003fe8 <HAL_UART_Init+0x94>
 8003f66:	687b      	ldr	r3, [r7, #4]
 8003f68:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8003f6a:	2b00      	cmp	r3, #0
 8003f6c:	d106      	bne.n	8003f7c <HAL_UART_Init+0x28>
 8003f6e:	687b      	ldr	r3, [r7, #4]
 8003f70:	2200      	movs	r2, #0
 8003f72:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 8003f76:	6878      	ldr	r0, [r7, #4]
 8003f78:	f7fd fa2c 	bl	80013d4 <HAL_UART_MspInit>
 8003f7c:	687b      	ldr	r3, [r7, #4]
 8003f7e:	2224      	movs	r2, #36	@ 0x24
 8003f80:	67da      	str	r2, [r3, #124]	@ 0x7c
 8003f82:	687b      	ldr	r3, [r7, #4]
 8003f84:	681b      	ldr	r3, [r3, #0]
 8003f86:	681a      	ldr	r2, [r3, #0]
 8003f88:	687b      	ldr	r3, [r7, #4]
 8003f8a:	681b      	ldr	r3, [r3, #0]
 8003f8c:	f022 0201 	bic.w	r2, r2, #1
 8003f90:	601a      	str	r2, [r3, #0]
 8003f92:	687b      	ldr	r3, [r7, #4]
 8003f94:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003f96:	2b00      	cmp	r3, #0
 8003f98:	d002      	beq.n	8003fa0 <HAL_UART_Init+0x4c>
 8003f9a:	6878      	ldr	r0, [r7, #4]
 8003f9c:	f000 fc32 	bl	8004804 <UART_AdvFeatureConfig>
 8003fa0:	6878      	ldr	r0, [r7, #4]
 8003fa2:	f000 f977 	bl	8004294 <UART_SetConfig>
 8003fa6:	4603      	mov	r3, r0
 8003fa8:	2b01      	cmp	r3, #1
 8003faa:	d101      	bne.n	8003fb0 <HAL_UART_Init+0x5c>
 8003fac:	2301      	movs	r3, #1
 8003fae:	e01b      	b.n	8003fe8 <HAL_UART_Init+0x94>
 8003fb0:	687b      	ldr	r3, [r7, #4]
 8003fb2:	681b      	ldr	r3, [r3, #0]
 8003fb4:	685a      	ldr	r2, [r3, #4]
 8003fb6:	687b      	ldr	r3, [r7, #4]
 8003fb8:	681b      	ldr	r3, [r3, #0]
 8003fba:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8003fbe:	605a      	str	r2, [r3, #4]
 8003fc0:	687b      	ldr	r3, [r7, #4]
 8003fc2:	681b      	ldr	r3, [r3, #0]
 8003fc4:	689a      	ldr	r2, [r3, #8]
 8003fc6:	687b      	ldr	r3, [r7, #4]
 8003fc8:	681b      	ldr	r3, [r3, #0]
 8003fca:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8003fce:	609a      	str	r2, [r3, #8]
 8003fd0:	687b      	ldr	r3, [r7, #4]
 8003fd2:	681b      	ldr	r3, [r3, #0]
 8003fd4:	681a      	ldr	r2, [r3, #0]
 8003fd6:	687b      	ldr	r3, [r7, #4]
 8003fd8:	681b      	ldr	r3, [r3, #0]
 8003fda:	f042 0201 	orr.w	r2, r2, #1
 8003fde:	601a      	str	r2, [r3, #0]
 8003fe0:	6878      	ldr	r0, [r7, #4]
 8003fe2:	f000 fcb1 	bl	8004948 <UART_CheckIdleState>
 8003fe6:	4603      	mov	r3, r0
 8003fe8:	4618      	mov	r0, r3
 8003fea:	3708      	adds	r7, #8
 8003fec:	46bd      	mov	sp, r7
 8003fee:	bd80      	pop	{r7, pc}

08003ff0 <HAL_UART_Transmit>:
 8003ff0:	b580      	push	{r7, lr}
 8003ff2:	b08a      	sub	sp, #40	@ 0x28
 8003ff4:	af02      	add	r7, sp, #8
 8003ff6:	60f8      	str	r0, [r7, #12]
 8003ff8:	60b9      	str	r1, [r7, #8]
 8003ffa:	603b      	str	r3, [r7, #0]
 8003ffc:	4613      	mov	r3, r2
 8003ffe:	80fb      	strh	r3, [r7, #6]
 8004000:	68fb      	ldr	r3, [r7, #12]
 8004002:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8004004:	2b20      	cmp	r3, #32
 8004006:	d177      	bne.n	80040f8 <HAL_UART_Transmit+0x108>
 8004008:	68bb      	ldr	r3, [r7, #8]
 800400a:	2b00      	cmp	r3, #0
 800400c:	d002      	beq.n	8004014 <HAL_UART_Transmit+0x24>
 800400e:	88fb      	ldrh	r3, [r7, #6]
 8004010:	2b00      	cmp	r3, #0
 8004012:	d101      	bne.n	8004018 <HAL_UART_Transmit+0x28>
 8004014:	2301      	movs	r3, #1
 8004016:	e070      	b.n	80040fa <HAL_UART_Transmit+0x10a>
 8004018:	68fb      	ldr	r3, [r7, #12]
 800401a:	2200      	movs	r2, #0
 800401c:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 8004020:	68fb      	ldr	r3, [r7, #12]
 8004022:	2221      	movs	r2, #33	@ 0x21
 8004024:	67da      	str	r2, [r3, #124]	@ 0x7c
 8004026:	f7fd fb83 	bl	8001730 <HAL_GetTick>
 800402a:	6178      	str	r0, [r7, #20]
 800402c:	68fb      	ldr	r3, [r7, #12]
 800402e:	88fa      	ldrh	r2, [r7, #6]
 8004030:	f8a3 2050 	strh.w	r2, [r3, #80]	@ 0x50
 8004034:	68fb      	ldr	r3, [r7, #12]
 8004036:	88fa      	ldrh	r2, [r7, #6]
 8004038:	f8a3 2052 	strh.w	r2, [r3, #82]	@ 0x52
 800403c:	68fb      	ldr	r3, [r7, #12]
 800403e:	689b      	ldr	r3, [r3, #8]
 8004040:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8004044:	d108      	bne.n	8004058 <HAL_UART_Transmit+0x68>
 8004046:	68fb      	ldr	r3, [r7, #12]
 8004048:	691b      	ldr	r3, [r3, #16]
 800404a:	2b00      	cmp	r3, #0
 800404c:	d104      	bne.n	8004058 <HAL_UART_Transmit+0x68>
 800404e:	2300      	movs	r3, #0
 8004050:	61fb      	str	r3, [r7, #28]
 8004052:	68bb      	ldr	r3, [r7, #8]
 8004054:	61bb      	str	r3, [r7, #24]
 8004056:	e003      	b.n	8004060 <HAL_UART_Transmit+0x70>
 8004058:	68bb      	ldr	r3, [r7, #8]
 800405a:	61fb      	str	r3, [r7, #28]
 800405c:	2300      	movs	r3, #0
 800405e:	61bb      	str	r3, [r7, #24]
 8004060:	e02f      	b.n	80040c2 <HAL_UART_Transmit+0xd2>
 8004062:	683b      	ldr	r3, [r7, #0]
 8004064:	9300      	str	r3, [sp, #0]
 8004066:	697b      	ldr	r3, [r7, #20]
 8004068:	2200      	movs	r2, #0
 800406a:	2180      	movs	r1, #128	@ 0x80
 800406c:	68f8      	ldr	r0, [r7, #12]
 800406e:	f000 fd13 	bl	8004a98 <UART_WaitOnFlagUntilTimeout>
 8004072:	4603      	mov	r3, r0
 8004074:	2b00      	cmp	r3, #0
 8004076:	d004      	beq.n	8004082 <HAL_UART_Transmit+0x92>
 8004078:	68fb      	ldr	r3, [r7, #12]
 800407a:	2220      	movs	r2, #32
 800407c:	67da      	str	r2, [r3, #124]	@ 0x7c
 800407e:	2303      	movs	r3, #3
 8004080:	e03b      	b.n	80040fa <HAL_UART_Transmit+0x10a>
 8004082:	69fb      	ldr	r3, [r7, #28]
 8004084:	2b00      	cmp	r3, #0
 8004086:	d10b      	bne.n	80040a0 <HAL_UART_Transmit+0xb0>
 8004088:	69bb      	ldr	r3, [r7, #24]
 800408a:	881a      	ldrh	r2, [r3, #0]
 800408c:	68fb      	ldr	r3, [r7, #12]
 800408e:	681b      	ldr	r3, [r3, #0]
 8004090:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8004094:	b292      	uxth	r2, r2
 8004096:	851a      	strh	r2, [r3, #40]	@ 0x28
 8004098:	69bb      	ldr	r3, [r7, #24]
 800409a:	3302      	adds	r3, #2
 800409c:	61bb      	str	r3, [r7, #24]
 800409e:	e007      	b.n	80040b0 <HAL_UART_Transmit+0xc0>
 80040a0:	69fb      	ldr	r3, [r7, #28]
 80040a2:	781a      	ldrb	r2, [r3, #0]
 80040a4:	68fb      	ldr	r3, [r7, #12]
 80040a6:	681b      	ldr	r3, [r3, #0]
 80040a8:	851a      	strh	r2, [r3, #40]	@ 0x28
 80040aa:	69fb      	ldr	r3, [r7, #28]
 80040ac:	3301      	adds	r3, #1
 80040ae:	61fb      	str	r3, [r7, #28]
 80040b0:	68fb      	ldr	r3, [r7, #12]
 80040b2:	f8b3 3052 	ldrh.w	r3, [r3, #82]	@ 0x52
 80040b6:	b29b      	uxth	r3, r3
 80040b8:	3b01      	subs	r3, #1
 80040ba:	b29a      	uxth	r2, r3
 80040bc:	68fb      	ldr	r3, [r7, #12]
 80040be:	f8a3 2052 	strh.w	r2, [r3, #82]	@ 0x52
 80040c2:	68fb      	ldr	r3, [r7, #12]
 80040c4:	f8b3 3052 	ldrh.w	r3, [r3, #82]	@ 0x52
 80040c8:	b29b      	uxth	r3, r3
 80040ca:	2b00      	cmp	r3, #0
 80040cc:	d1c9      	bne.n	8004062 <HAL_UART_Transmit+0x72>
 80040ce:	683b      	ldr	r3, [r7, #0]
 80040d0:	9300      	str	r3, [sp, #0]
 80040d2:	697b      	ldr	r3, [r7, #20]
 80040d4:	2200      	movs	r2, #0
 80040d6:	2140      	movs	r1, #64	@ 0x40
 80040d8:	68f8      	ldr	r0, [r7, #12]
 80040da:	f000 fcdd 	bl	8004a98 <UART_WaitOnFlagUntilTimeout>
 80040de:	4603      	mov	r3, r0
 80040e0:	2b00      	cmp	r3, #0
 80040e2:	d004      	beq.n	80040ee <HAL_UART_Transmit+0xfe>
 80040e4:	68fb      	ldr	r3, [r7, #12]
 80040e6:	2220      	movs	r2, #32
 80040e8:	67da      	str	r2, [r3, #124]	@ 0x7c
 80040ea:	2303      	movs	r3, #3
 80040ec:	e005      	b.n	80040fa <HAL_UART_Transmit+0x10a>
 80040ee:	68fb      	ldr	r3, [r7, #12]
 80040f0:	2220      	movs	r2, #32
 80040f2:	67da      	str	r2, [r3, #124]	@ 0x7c
 80040f4:	2300      	movs	r3, #0
 80040f6:	e000      	b.n	80040fa <HAL_UART_Transmit+0x10a>
 80040f8:	2302      	movs	r3, #2
 80040fa:	4618      	mov	r0, r3
 80040fc:	3720      	adds	r7, #32
 80040fe:	46bd      	mov	sp, r7
 8004100:	bd80      	pop	{r7, pc}

08004102 <HAL_UART_Receive>:
 8004102:	b580      	push	{r7, lr}
 8004104:	b08a      	sub	sp, #40	@ 0x28
 8004106:	af02      	add	r7, sp, #8
 8004108:	60f8      	str	r0, [r7, #12]
 800410a:	60b9      	str	r1, [r7, #8]
 800410c:	603b      	str	r3, [r7, #0]
 800410e:	4613      	mov	r3, r2
 8004110:	80fb      	strh	r3, [r7, #6]
 8004112:	68fb      	ldr	r3, [r7, #12]
 8004114:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8004118:	2b20      	cmp	r3, #32
 800411a:	f040 80b6 	bne.w	800428a <HAL_UART_Receive+0x188>
 800411e:	68bb      	ldr	r3, [r7, #8]
 8004120:	2b00      	cmp	r3, #0
 8004122:	d002      	beq.n	800412a <HAL_UART_Receive+0x28>
 8004124:	88fb      	ldrh	r3, [r7, #6]
 8004126:	2b00      	cmp	r3, #0
 8004128:	d101      	bne.n	800412e <HAL_UART_Receive+0x2c>
 800412a:	2301      	movs	r3, #1
 800412c:	e0ae      	b.n	800428c <HAL_UART_Receive+0x18a>
 800412e:	68fb      	ldr	r3, [r7, #12]
 8004130:	2200      	movs	r2, #0
 8004132:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 8004136:	68fb      	ldr	r3, [r7, #12]
 8004138:	2222      	movs	r2, #34	@ 0x22
 800413a:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 800413e:	68fb      	ldr	r3, [r7, #12]
 8004140:	2200      	movs	r2, #0
 8004142:	661a      	str	r2, [r3, #96]	@ 0x60
 8004144:	f7fd faf4 	bl	8001730 <HAL_GetTick>
 8004148:	6178      	str	r0, [r7, #20]
 800414a:	68fb      	ldr	r3, [r7, #12]
 800414c:	88fa      	ldrh	r2, [r7, #6]
 800414e:	f8a3 2058 	strh.w	r2, [r3, #88]	@ 0x58
 8004152:	68fb      	ldr	r3, [r7, #12]
 8004154:	88fa      	ldrh	r2, [r7, #6]
 8004156:	f8a3 205a 	strh.w	r2, [r3, #90]	@ 0x5a
 800415a:	68fb      	ldr	r3, [r7, #12]
 800415c:	689b      	ldr	r3, [r3, #8]
 800415e:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8004162:	d10e      	bne.n	8004182 <HAL_UART_Receive+0x80>
 8004164:	68fb      	ldr	r3, [r7, #12]
 8004166:	691b      	ldr	r3, [r3, #16]
 8004168:	2b00      	cmp	r3, #0
 800416a:	d105      	bne.n	8004178 <HAL_UART_Receive+0x76>
 800416c:	68fb      	ldr	r3, [r7, #12]
 800416e:	f240 12ff 	movw	r2, #511	@ 0x1ff
 8004172:	f8a3 205c 	strh.w	r2, [r3, #92]	@ 0x5c
 8004176:	e02d      	b.n	80041d4 <HAL_UART_Receive+0xd2>
 8004178:	68fb      	ldr	r3, [r7, #12]
 800417a:	22ff      	movs	r2, #255	@ 0xff
 800417c:	f8a3 205c 	strh.w	r2, [r3, #92]	@ 0x5c
 8004180:	e028      	b.n	80041d4 <HAL_UART_Receive+0xd2>
 8004182:	68fb      	ldr	r3, [r7, #12]
 8004184:	689b      	ldr	r3, [r3, #8]
 8004186:	2b00      	cmp	r3, #0
 8004188:	d10d      	bne.n	80041a6 <HAL_UART_Receive+0xa4>
 800418a:	68fb      	ldr	r3, [r7, #12]
 800418c:	691b      	ldr	r3, [r3, #16]
 800418e:	2b00      	cmp	r3, #0
 8004190:	d104      	bne.n	800419c <HAL_UART_Receive+0x9a>
 8004192:	68fb      	ldr	r3, [r7, #12]
 8004194:	22ff      	movs	r2, #255	@ 0xff
 8004196:	f8a3 205c 	strh.w	r2, [r3, #92]	@ 0x5c
 800419a:	e01b      	b.n	80041d4 <HAL_UART_Receive+0xd2>
 800419c:	68fb      	ldr	r3, [r7, #12]
 800419e:	227f      	movs	r2, #127	@ 0x7f
 80041a0:	f8a3 205c 	strh.w	r2, [r3, #92]	@ 0x5c
 80041a4:	e016      	b.n	80041d4 <HAL_UART_Receive+0xd2>
 80041a6:	68fb      	ldr	r3, [r7, #12]
 80041a8:	689b      	ldr	r3, [r3, #8]
 80041aa:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 80041ae:	d10d      	bne.n	80041cc <HAL_UART_Receive+0xca>
 80041b0:	68fb      	ldr	r3, [r7, #12]
 80041b2:	691b      	ldr	r3, [r3, #16]
 80041b4:	2b00      	cmp	r3, #0
 80041b6:	d104      	bne.n	80041c2 <HAL_UART_Receive+0xc0>
 80041b8:	68fb      	ldr	r3, [r7, #12]
 80041ba:	227f      	movs	r2, #127	@ 0x7f
 80041bc:	f8a3 205c 	strh.w	r2, [r3, #92]	@ 0x5c
 80041c0:	e008      	b.n	80041d4 <HAL_UART_Receive+0xd2>
 80041c2:	68fb      	ldr	r3, [r7, #12]
 80041c4:	223f      	movs	r2, #63	@ 0x3f
 80041c6:	f8a3 205c 	strh.w	r2, [r3, #92]	@ 0x5c
 80041ca:	e003      	b.n	80041d4 <HAL_UART_Receive+0xd2>
 80041cc:	68fb      	ldr	r3, [r7, #12]
 80041ce:	2200      	movs	r2, #0
 80041d0:	f8a3 205c 	strh.w	r2, [r3, #92]	@ 0x5c
 80041d4:	68fb      	ldr	r3, [r7, #12]
 80041d6:	f8b3 305c 	ldrh.w	r3, [r3, #92]	@ 0x5c
 80041da:	827b      	strh	r3, [r7, #18]
 80041dc:	68fb      	ldr	r3, [r7, #12]
 80041de:	689b      	ldr	r3, [r3, #8]
 80041e0:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80041e4:	d108      	bne.n	80041f8 <HAL_UART_Receive+0xf6>
 80041e6:	68fb      	ldr	r3, [r7, #12]
 80041e8:	691b      	ldr	r3, [r3, #16]
 80041ea:	2b00      	cmp	r3, #0
 80041ec:	d104      	bne.n	80041f8 <HAL_UART_Receive+0xf6>
 80041ee:	2300      	movs	r3, #0
 80041f0:	61fb      	str	r3, [r7, #28]
 80041f2:	68bb      	ldr	r3, [r7, #8]
 80041f4:	61bb      	str	r3, [r7, #24]
 80041f6:	e003      	b.n	8004200 <HAL_UART_Receive+0xfe>
 80041f8:	68bb      	ldr	r3, [r7, #8]
 80041fa:	61fb      	str	r3, [r7, #28]
 80041fc:	2300      	movs	r3, #0
 80041fe:	61bb      	str	r3, [r7, #24]
 8004200:	e037      	b.n	8004272 <HAL_UART_Receive+0x170>
 8004202:	683b      	ldr	r3, [r7, #0]
 8004204:	9300      	str	r3, [sp, #0]
 8004206:	697b      	ldr	r3, [r7, #20]
 8004208:	2200      	movs	r2, #0
 800420a:	2120      	movs	r1, #32
 800420c:	68f8      	ldr	r0, [r7, #12]
 800420e:	f000 fc43 	bl	8004a98 <UART_WaitOnFlagUntilTimeout>
 8004212:	4603      	mov	r3, r0
 8004214:	2b00      	cmp	r3, #0
 8004216:	d005      	beq.n	8004224 <HAL_UART_Receive+0x122>
 8004218:	68fb      	ldr	r3, [r7, #12]
 800421a:	2220      	movs	r2, #32
 800421c:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 8004220:	2303      	movs	r3, #3
 8004222:	e033      	b.n	800428c <HAL_UART_Receive+0x18a>
 8004224:	69fb      	ldr	r3, [r7, #28]
 8004226:	2b00      	cmp	r3, #0
 8004228:	d10c      	bne.n	8004244 <HAL_UART_Receive+0x142>
 800422a:	68fb      	ldr	r3, [r7, #12]
 800422c:	681b      	ldr	r3, [r3, #0]
 800422e:	8c9b      	ldrh	r3, [r3, #36]	@ 0x24
 8004230:	b29a      	uxth	r2, r3
 8004232:	8a7b      	ldrh	r3, [r7, #18]
 8004234:	4013      	ands	r3, r2
 8004236:	b29a      	uxth	r2, r3
 8004238:	69bb      	ldr	r3, [r7, #24]
 800423a:	801a      	strh	r2, [r3, #0]
 800423c:	69bb      	ldr	r3, [r7, #24]
 800423e:	3302      	adds	r3, #2
 8004240:	61bb      	str	r3, [r7, #24]
 8004242:	e00d      	b.n	8004260 <HAL_UART_Receive+0x15e>
 8004244:	68fb      	ldr	r3, [r7, #12]
 8004246:	681b      	ldr	r3, [r3, #0]
 8004248:	8c9b      	ldrh	r3, [r3, #36]	@ 0x24
 800424a:	b29b      	uxth	r3, r3
 800424c:	b2da      	uxtb	r2, r3
 800424e:	8a7b      	ldrh	r3, [r7, #18]
 8004250:	b2db      	uxtb	r3, r3
 8004252:	4013      	ands	r3, r2
 8004254:	b2da      	uxtb	r2, r3
 8004256:	69fb      	ldr	r3, [r7, #28]
 8004258:	701a      	strb	r2, [r3, #0]
 800425a:	69fb      	ldr	r3, [r7, #28]
 800425c:	3301      	adds	r3, #1
 800425e:	61fb      	str	r3, [r7, #28]
 8004260:	68fb      	ldr	r3, [r7, #12]
 8004262:	f8b3 305a 	ldrh.w	r3, [r3, #90]	@ 0x5a
 8004266:	b29b      	uxth	r3, r3
 8004268:	3b01      	subs	r3, #1
 800426a:	b29a      	uxth	r2, r3
 800426c:	68fb      	ldr	r3, [r7, #12]
 800426e:	f8a3 205a 	strh.w	r2, [r3, #90]	@ 0x5a
 8004272:	68fb      	ldr	r3, [r7, #12]
 8004274:	f8b3 305a 	ldrh.w	r3, [r3, #90]	@ 0x5a
 8004278:	b29b      	uxth	r3, r3
 800427a:	2b00      	cmp	r3, #0
 800427c:	d1c1      	bne.n	8004202 <HAL_UART_Receive+0x100>
 800427e:	68fb      	ldr	r3, [r7, #12]
 8004280:	2220      	movs	r2, #32
 8004282:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 8004286:	2300      	movs	r3, #0
 8004288:	e000      	b.n	800428c <HAL_UART_Receive+0x18a>
 800428a:	2302      	movs	r3, #2
 800428c:	4618      	mov	r0, r3
 800428e:	3720      	adds	r7, #32
 8004290:	46bd      	mov	sp, r7
 8004292:	bd80      	pop	{r7, pc}

08004294 <UART_SetConfig>:
 8004294:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8004298:	b08a      	sub	sp, #40	@ 0x28
 800429a:	af00      	add	r7, sp, #0
 800429c:	60f8      	str	r0, [r7, #12]
 800429e:	2300      	movs	r3, #0
 80042a0:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 80042a4:	68fb      	ldr	r3, [r7, #12]
 80042a6:	689a      	ldr	r2, [r3, #8]
 80042a8:	68fb      	ldr	r3, [r7, #12]
 80042aa:	691b      	ldr	r3, [r3, #16]
 80042ac:	431a      	orrs	r2, r3
 80042ae:	68fb      	ldr	r3, [r7, #12]
 80042b0:	695b      	ldr	r3, [r3, #20]
 80042b2:	431a      	orrs	r2, r3
 80042b4:	68fb      	ldr	r3, [r7, #12]
 80042b6:	69db      	ldr	r3, [r3, #28]
 80042b8:	4313      	orrs	r3, r2
 80042ba:	627b      	str	r3, [r7, #36]	@ 0x24
 80042bc:	68fb      	ldr	r3, [r7, #12]
 80042be:	681b      	ldr	r3, [r3, #0]
 80042c0:	681a      	ldr	r2, [r3, #0]
 80042c2:	4ba4      	ldr	r3, [pc, #656]	@ (8004554 <UART_SetConfig+0x2c0>)
 80042c4:	4013      	ands	r3, r2
 80042c6:	68fa      	ldr	r2, [r7, #12]
 80042c8:	6812      	ldr	r2, [r2, #0]
 80042ca:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 80042cc:	430b      	orrs	r3, r1
 80042ce:	6013      	str	r3, [r2, #0]
 80042d0:	68fb      	ldr	r3, [r7, #12]
 80042d2:	681b      	ldr	r3, [r3, #0]
 80042d4:	685b      	ldr	r3, [r3, #4]
 80042d6:	f423 5140 	bic.w	r1, r3, #12288	@ 0x3000
 80042da:	68fb      	ldr	r3, [r7, #12]
 80042dc:	68da      	ldr	r2, [r3, #12]
 80042de:	68fb      	ldr	r3, [r7, #12]
 80042e0:	681b      	ldr	r3, [r3, #0]
 80042e2:	430a      	orrs	r2, r1
 80042e4:	605a      	str	r2, [r3, #4]
 80042e6:	68fb      	ldr	r3, [r7, #12]
 80042e8:	699b      	ldr	r3, [r3, #24]
 80042ea:	627b      	str	r3, [r7, #36]	@ 0x24
 80042ec:	68fb      	ldr	r3, [r7, #12]
 80042ee:	681b      	ldr	r3, [r3, #0]
 80042f0:	4a99      	ldr	r2, [pc, #612]	@ (8004558 <UART_SetConfig+0x2c4>)
 80042f2:	4293      	cmp	r3, r2
 80042f4:	d004      	beq.n	8004300 <UART_SetConfig+0x6c>
 80042f6:	68fb      	ldr	r3, [r7, #12]
 80042f8:	6a1b      	ldr	r3, [r3, #32]
 80042fa:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80042fc:	4313      	orrs	r3, r2
 80042fe:	627b      	str	r3, [r7, #36]	@ 0x24
 8004300:	68fb      	ldr	r3, [r7, #12]
 8004302:	681b      	ldr	r3, [r3, #0]
 8004304:	689b      	ldr	r3, [r3, #8]
 8004306:	f423 6130 	bic.w	r1, r3, #2816	@ 0xb00
 800430a:	68fb      	ldr	r3, [r7, #12]
 800430c:	681b      	ldr	r3, [r3, #0]
 800430e:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8004310:	430a      	orrs	r2, r1
 8004312:	609a      	str	r2, [r3, #8]
 8004314:	68fb      	ldr	r3, [r7, #12]
 8004316:	681b      	ldr	r3, [r3, #0]
 8004318:	4a90      	ldr	r2, [pc, #576]	@ (800455c <UART_SetConfig+0x2c8>)
 800431a:	4293      	cmp	r3, r2
 800431c:	d126      	bne.n	800436c <UART_SetConfig+0xd8>
 800431e:	4b90      	ldr	r3, [pc, #576]	@ (8004560 <UART_SetConfig+0x2cc>)
 8004320:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8004324:	f003 0303 	and.w	r3, r3, #3
 8004328:	2b03      	cmp	r3, #3
 800432a:	d81b      	bhi.n	8004364 <UART_SetConfig+0xd0>
 800432c:	a201      	add	r2, pc, #4	@ (adr r2, 8004334 <UART_SetConfig+0xa0>)
 800432e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004332:	bf00      	nop
 8004334:	08004345 	.word	0x08004345
 8004338:	08004355 	.word	0x08004355
 800433c:	0800434d 	.word	0x0800434d
 8004340:	0800435d 	.word	0x0800435d
 8004344:	2301      	movs	r3, #1
 8004346:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800434a:	e116      	b.n	800457a <UART_SetConfig+0x2e6>
 800434c:	2302      	movs	r3, #2
 800434e:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8004352:	e112      	b.n	800457a <UART_SetConfig+0x2e6>
 8004354:	2304      	movs	r3, #4
 8004356:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800435a:	e10e      	b.n	800457a <UART_SetConfig+0x2e6>
 800435c:	2308      	movs	r3, #8
 800435e:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8004362:	e10a      	b.n	800457a <UART_SetConfig+0x2e6>
 8004364:	2310      	movs	r3, #16
 8004366:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800436a:	e106      	b.n	800457a <UART_SetConfig+0x2e6>
 800436c:	68fb      	ldr	r3, [r7, #12]
 800436e:	681b      	ldr	r3, [r3, #0]
 8004370:	4a7c      	ldr	r2, [pc, #496]	@ (8004564 <UART_SetConfig+0x2d0>)
 8004372:	4293      	cmp	r3, r2
 8004374:	d138      	bne.n	80043e8 <UART_SetConfig+0x154>
 8004376:	4b7a      	ldr	r3, [pc, #488]	@ (8004560 <UART_SetConfig+0x2cc>)
 8004378:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800437c:	f003 030c 	and.w	r3, r3, #12
 8004380:	2b0c      	cmp	r3, #12
 8004382:	d82d      	bhi.n	80043e0 <UART_SetConfig+0x14c>
 8004384:	a201      	add	r2, pc, #4	@ (adr r2, 800438c <UART_SetConfig+0xf8>)
 8004386:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800438a:	bf00      	nop
 800438c:	080043c1 	.word	0x080043c1
 8004390:	080043e1 	.word	0x080043e1
 8004394:	080043e1 	.word	0x080043e1
 8004398:	080043e1 	.word	0x080043e1
 800439c:	080043d1 	.word	0x080043d1
 80043a0:	080043e1 	.word	0x080043e1
 80043a4:	080043e1 	.word	0x080043e1
 80043a8:	080043e1 	.word	0x080043e1
 80043ac:	080043c9 	.word	0x080043c9
 80043b0:	080043e1 	.word	0x080043e1
 80043b4:	080043e1 	.word	0x080043e1
 80043b8:	080043e1 	.word	0x080043e1
 80043bc:	080043d9 	.word	0x080043d9
 80043c0:	2300      	movs	r3, #0
 80043c2:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80043c6:	e0d8      	b.n	800457a <UART_SetConfig+0x2e6>
 80043c8:	2302      	movs	r3, #2
 80043ca:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80043ce:	e0d4      	b.n	800457a <UART_SetConfig+0x2e6>
 80043d0:	2304      	movs	r3, #4
 80043d2:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80043d6:	e0d0      	b.n	800457a <UART_SetConfig+0x2e6>
 80043d8:	2308      	movs	r3, #8
 80043da:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80043de:	e0cc      	b.n	800457a <UART_SetConfig+0x2e6>
 80043e0:	2310      	movs	r3, #16
 80043e2:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80043e6:	e0c8      	b.n	800457a <UART_SetConfig+0x2e6>
 80043e8:	68fb      	ldr	r3, [r7, #12]
 80043ea:	681b      	ldr	r3, [r3, #0]
 80043ec:	4a5e      	ldr	r2, [pc, #376]	@ (8004568 <UART_SetConfig+0x2d4>)
 80043ee:	4293      	cmp	r3, r2
 80043f0:	d125      	bne.n	800443e <UART_SetConfig+0x1aa>
 80043f2:	4b5b      	ldr	r3, [pc, #364]	@ (8004560 <UART_SetConfig+0x2cc>)
 80043f4:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80043f8:	f003 0330 	and.w	r3, r3, #48	@ 0x30
 80043fc:	2b30      	cmp	r3, #48	@ 0x30
 80043fe:	d016      	beq.n	800442e <UART_SetConfig+0x19a>
 8004400:	2b30      	cmp	r3, #48	@ 0x30
 8004402:	d818      	bhi.n	8004436 <UART_SetConfig+0x1a2>
 8004404:	2b20      	cmp	r3, #32
 8004406:	d00a      	beq.n	800441e <UART_SetConfig+0x18a>
 8004408:	2b20      	cmp	r3, #32
 800440a:	d814      	bhi.n	8004436 <UART_SetConfig+0x1a2>
 800440c:	2b00      	cmp	r3, #0
 800440e:	d002      	beq.n	8004416 <UART_SetConfig+0x182>
 8004410:	2b10      	cmp	r3, #16
 8004412:	d008      	beq.n	8004426 <UART_SetConfig+0x192>
 8004414:	e00f      	b.n	8004436 <UART_SetConfig+0x1a2>
 8004416:	2300      	movs	r3, #0
 8004418:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800441c:	e0ad      	b.n	800457a <UART_SetConfig+0x2e6>
 800441e:	2302      	movs	r3, #2
 8004420:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8004424:	e0a9      	b.n	800457a <UART_SetConfig+0x2e6>
 8004426:	2304      	movs	r3, #4
 8004428:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800442c:	e0a5      	b.n	800457a <UART_SetConfig+0x2e6>
 800442e:	2308      	movs	r3, #8
 8004430:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8004434:	e0a1      	b.n	800457a <UART_SetConfig+0x2e6>
 8004436:	2310      	movs	r3, #16
 8004438:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800443c:	e09d      	b.n	800457a <UART_SetConfig+0x2e6>
 800443e:	68fb      	ldr	r3, [r7, #12]
 8004440:	681b      	ldr	r3, [r3, #0]
 8004442:	4a4a      	ldr	r2, [pc, #296]	@ (800456c <UART_SetConfig+0x2d8>)
 8004444:	4293      	cmp	r3, r2
 8004446:	d125      	bne.n	8004494 <UART_SetConfig+0x200>
 8004448:	4b45      	ldr	r3, [pc, #276]	@ (8004560 <UART_SetConfig+0x2cc>)
 800444a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800444e:	f003 03c0 	and.w	r3, r3, #192	@ 0xc0
 8004452:	2bc0      	cmp	r3, #192	@ 0xc0
 8004454:	d016      	beq.n	8004484 <UART_SetConfig+0x1f0>
 8004456:	2bc0      	cmp	r3, #192	@ 0xc0
 8004458:	d818      	bhi.n	800448c <UART_SetConfig+0x1f8>
 800445a:	2b80      	cmp	r3, #128	@ 0x80
 800445c:	d00a      	beq.n	8004474 <UART_SetConfig+0x1e0>
 800445e:	2b80      	cmp	r3, #128	@ 0x80
 8004460:	d814      	bhi.n	800448c <UART_SetConfig+0x1f8>
 8004462:	2b00      	cmp	r3, #0
 8004464:	d002      	beq.n	800446c <UART_SetConfig+0x1d8>
 8004466:	2b40      	cmp	r3, #64	@ 0x40
 8004468:	d008      	beq.n	800447c <UART_SetConfig+0x1e8>
 800446a:	e00f      	b.n	800448c <UART_SetConfig+0x1f8>
 800446c:	2300      	movs	r3, #0
 800446e:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8004472:	e082      	b.n	800457a <UART_SetConfig+0x2e6>
 8004474:	2302      	movs	r3, #2
 8004476:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800447a:	e07e      	b.n	800457a <UART_SetConfig+0x2e6>
 800447c:	2304      	movs	r3, #4
 800447e:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8004482:	e07a      	b.n	800457a <UART_SetConfig+0x2e6>
 8004484:	2308      	movs	r3, #8
 8004486:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800448a:	e076      	b.n	800457a <UART_SetConfig+0x2e6>
 800448c:	2310      	movs	r3, #16
 800448e:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8004492:	e072      	b.n	800457a <UART_SetConfig+0x2e6>
 8004494:	68fb      	ldr	r3, [r7, #12]
 8004496:	681b      	ldr	r3, [r3, #0]
 8004498:	4a35      	ldr	r2, [pc, #212]	@ (8004570 <UART_SetConfig+0x2dc>)
 800449a:	4293      	cmp	r3, r2
 800449c:	d12a      	bne.n	80044f4 <UART_SetConfig+0x260>
 800449e:	4b30      	ldr	r3, [pc, #192]	@ (8004560 <UART_SetConfig+0x2cc>)
 80044a0:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80044a4:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80044a8:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 80044ac:	d01a      	beq.n	80044e4 <UART_SetConfig+0x250>
 80044ae:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 80044b2:	d81b      	bhi.n	80044ec <UART_SetConfig+0x258>
 80044b4:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80044b8:	d00c      	beq.n	80044d4 <UART_SetConfig+0x240>
 80044ba:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80044be:	d815      	bhi.n	80044ec <UART_SetConfig+0x258>
 80044c0:	2b00      	cmp	r3, #0
 80044c2:	d003      	beq.n	80044cc <UART_SetConfig+0x238>
 80044c4:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80044c8:	d008      	beq.n	80044dc <UART_SetConfig+0x248>
 80044ca:	e00f      	b.n	80044ec <UART_SetConfig+0x258>
 80044cc:	2300      	movs	r3, #0
 80044ce:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80044d2:	e052      	b.n	800457a <UART_SetConfig+0x2e6>
 80044d4:	2302      	movs	r3, #2
 80044d6:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80044da:	e04e      	b.n	800457a <UART_SetConfig+0x2e6>
 80044dc:	2304      	movs	r3, #4
 80044de:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80044e2:	e04a      	b.n	800457a <UART_SetConfig+0x2e6>
 80044e4:	2308      	movs	r3, #8
 80044e6:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80044ea:	e046      	b.n	800457a <UART_SetConfig+0x2e6>
 80044ec:	2310      	movs	r3, #16
 80044ee:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80044f2:	e042      	b.n	800457a <UART_SetConfig+0x2e6>
 80044f4:	68fb      	ldr	r3, [r7, #12]
 80044f6:	681b      	ldr	r3, [r3, #0]
 80044f8:	4a17      	ldr	r2, [pc, #92]	@ (8004558 <UART_SetConfig+0x2c4>)
 80044fa:	4293      	cmp	r3, r2
 80044fc:	d13a      	bne.n	8004574 <UART_SetConfig+0x2e0>
 80044fe:	4b18      	ldr	r3, [pc, #96]	@ (8004560 <UART_SetConfig+0x2cc>)
 8004500:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8004504:	f403 6340 	and.w	r3, r3, #3072	@ 0xc00
 8004508:	f5b3 6f40 	cmp.w	r3, #3072	@ 0xc00
 800450c:	d01a      	beq.n	8004544 <UART_SetConfig+0x2b0>
 800450e:	f5b3 6f40 	cmp.w	r3, #3072	@ 0xc00
 8004512:	d81b      	bhi.n	800454c <UART_SetConfig+0x2b8>
 8004514:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8004518:	d00c      	beq.n	8004534 <UART_SetConfig+0x2a0>
 800451a:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800451e:	d815      	bhi.n	800454c <UART_SetConfig+0x2b8>
 8004520:	2b00      	cmp	r3, #0
 8004522:	d003      	beq.n	800452c <UART_SetConfig+0x298>
 8004524:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8004528:	d008      	beq.n	800453c <UART_SetConfig+0x2a8>
 800452a:	e00f      	b.n	800454c <UART_SetConfig+0x2b8>
 800452c:	2300      	movs	r3, #0
 800452e:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8004532:	e022      	b.n	800457a <UART_SetConfig+0x2e6>
 8004534:	2302      	movs	r3, #2
 8004536:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800453a:	e01e      	b.n	800457a <UART_SetConfig+0x2e6>
 800453c:	2304      	movs	r3, #4
 800453e:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8004542:	e01a      	b.n	800457a <UART_SetConfig+0x2e6>
 8004544:	2308      	movs	r3, #8
 8004546:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800454a:	e016      	b.n	800457a <UART_SetConfig+0x2e6>
 800454c:	2310      	movs	r3, #16
 800454e:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8004552:	e012      	b.n	800457a <UART_SetConfig+0x2e6>
 8004554:	efff69f3 	.word	0xefff69f3
 8004558:	40008000 	.word	0x40008000
 800455c:	40013800 	.word	0x40013800
 8004560:	40021000 	.word	0x40021000
 8004564:	40004400 	.word	0x40004400
 8004568:	40004800 	.word	0x40004800
 800456c:	40004c00 	.word	0x40004c00
 8004570:	40005000 	.word	0x40005000
 8004574:	2310      	movs	r3, #16
 8004576:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800457a:	68fb      	ldr	r3, [r7, #12]
 800457c:	681b      	ldr	r3, [r3, #0]
 800457e:	4a9f      	ldr	r2, [pc, #636]	@ (80047fc <UART_SetConfig+0x568>)
 8004580:	4293      	cmp	r3, r2
 8004582:	d17a      	bne.n	800467a <UART_SetConfig+0x3e6>
 8004584:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 8004588:	2b08      	cmp	r3, #8
 800458a:	d824      	bhi.n	80045d6 <UART_SetConfig+0x342>
 800458c:	a201      	add	r2, pc, #4	@ (adr r2, 8004594 <UART_SetConfig+0x300>)
 800458e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004592:	bf00      	nop
 8004594:	080045b9 	.word	0x080045b9
 8004598:	080045d7 	.word	0x080045d7
 800459c:	080045c1 	.word	0x080045c1
 80045a0:	080045d7 	.word	0x080045d7
 80045a4:	080045c7 	.word	0x080045c7
 80045a8:	080045d7 	.word	0x080045d7
 80045ac:	080045d7 	.word	0x080045d7
 80045b0:	080045d7 	.word	0x080045d7
 80045b4:	080045cf 	.word	0x080045cf
 80045b8:	f7fe ff76 	bl	80034a8 <HAL_RCC_GetPCLK1Freq>
 80045bc:	61f8      	str	r0, [r7, #28]
 80045be:	e010      	b.n	80045e2 <UART_SetConfig+0x34e>
 80045c0:	4b8f      	ldr	r3, [pc, #572]	@ (8004800 <UART_SetConfig+0x56c>)
 80045c2:	61fb      	str	r3, [r7, #28]
 80045c4:	e00d      	b.n	80045e2 <UART_SetConfig+0x34e>
 80045c6:	f7fe fed7 	bl	8003378 <HAL_RCC_GetSysClockFreq>
 80045ca:	61f8      	str	r0, [r7, #28]
 80045cc:	e009      	b.n	80045e2 <UART_SetConfig+0x34e>
 80045ce:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80045d2:	61fb      	str	r3, [r7, #28]
 80045d4:	e005      	b.n	80045e2 <UART_SetConfig+0x34e>
 80045d6:	2300      	movs	r3, #0
 80045d8:	61fb      	str	r3, [r7, #28]
 80045da:	2301      	movs	r3, #1
 80045dc:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 80045e0:	bf00      	nop
 80045e2:	69fb      	ldr	r3, [r7, #28]
 80045e4:	2b00      	cmp	r3, #0
 80045e6:	f000 80fb 	beq.w	80047e0 <UART_SetConfig+0x54c>
 80045ea:	68fb      	ldr	r3, [r7, #12]
 80045ec:	685a      	ldr	r2, [r3, #4]
 80045ee:	4613      	mov	r3, r2
 80045f0:	005b      	lsls	r3, r3, #1
 80045f2:	4413      	add	r3, r2
 80045f4:	69fa      	ldr	r2, [r7, #28]
 80045f6:	429a      	cmp	r2, r3
 80045f8:	d305      	bcc.n	8004606 <UART_SetConfig+0x372>
 80045fa:	68fb      	ldr	r3, [r7, #12]
 80045fc:	685b      	ldr	r3, [r3, #4]
 80045fe:	031b      	lsls	r3, r3, #12
 8004600:	69fa      	ldr	r2, [r7, #28]
 8004602:	429a      	cmp	r2, r3
 8004604:	d903      	bls.n	800460e <UART_SetConfig+0x37a>
 8004606:	2301      	movs	r3, #1
 8004608:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 800460c:	e0e8      	b.n	80047e0 <UART_SetConfig+0x54c>
 800460e:	69fb      	ldr	r3, [r7, #28]
 8004610:	2200      	movs	r2, #0
 8004612:	461c      	mov	r4, r3
 8004614:	4615      	mov	r5, r2
 8004616:	f04f 0200 	mov.w	r2, #0
 800461a:	f04f 0300 	mov.w	r3, #0
 800461e:	022b      	lsls	r3, r5, #8
 8004620:	ea43 6314 	orr.w	r3, r3, r4, lsr #24
 8004624:	0222      	lsls	r2, r4, #8
 8004626:	68f9      	ldr	r1, [r7, #12]
 8004628:	6849      	ldr	r1, [r1, #4]
 800462a:	0849      	lsrs	r1, r1, #1
 800462c:	2000      	movs	r0, #0
 800462e:	4688      	mov	r8, r1
 8004630:	4681      	mov	r9, r0
 8004632:	eb12 0a08 	adds.w	sl, r2, r8
 8004636:	eb43 0b09 	adc.w	fp, r3, r9
 800463a:	68fb      	ldr	r3, [r7, #12]
 800463c:	685b      	ldr	r3, [r3, #4]
 800463e:	2200      	movs	r2, #0
 8004640:	603b      	str	r3, [r7, #0]
 8004642:	607a      	str	r2, [r7, #4]
 8004644:	e9d7 2300 	ldrd	r2, r3, [r7]
 8004648:	4650      	mov	r0, sl
 800464a:	4659      	mov	r1, fp
 800464c:	f7fb fe28 	bl	80002a0 <__aeabi_uldivmod>
 8004650:	4602      	mov	r2, r0
 8004652:	460b      	mov	r3, r1
 8004654:	4613      	mov	r3, r2
 8004656:	61bb      	str	r3, [r7, #24]
 8004658:	69bb      	ldr	r3, [r7, #24]
 800465a:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 800465e:	d308      	bcc.n	8004672 <UART_SetConfig+0x3de>
 8004660:	69bb      	ldr	r3, [r7, #24]
 8004662:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 8004666:	d204      	bcs.n	8004672 <UART_SetConfig+0x3de>
 8004668:	68fb      	ldr	r3, [r7, #12]
 800466a:	681b      	ldr	r3, [r3, #0]
 800466c:	69ba      	ldr	r2, [r7, #24]
 800466e:	60da      	str	r2, [r3, #12]
 8004670:	e0b6      	b.n	80047e0 <UART_SetConfig+0x54c>
 8004672:	2301      	movs	r3, #1
 8004674:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 8004678:	e0b2      	b.n	80047e0 <UART_SetConfig+0x54c>
 800467a:	68fb      	ldr	r3, [r7, #12]
 800467c:	69db      	ldr	r3, [r3, #28]
 800467e:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8004682:	d15e      	bne.n	8004742 <UART_SetConfig+0x4ae>
 8004684:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 8004688:	2b08      	cmp	r3, #8
 800468a:	d828      	bhi.n	80046de <UART_SetConfig+0x44a>
 800468c:	a201      	add	r2, pc, #4	@ (adr r2, 8004694 <UART_SetConfig+0x400>)
 800468e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004692:	bf00      	nop
 8004694:	080046b9 	.word	0x080046b9
 8004698:	080046c1 	.word	0x080046c1
 800469c:	080046c9 	.word	0x080046c9
 80046a0:	080046df 	.word	0x080046df
 80046a4:	080046cf 	.word	0x080046cf
 80046a8:	080046df 	.word	0x080046df
 80046ac:	080046df 	.word	0x080046df
 80046b0:	080046df 	.word	0x080046df
 80046b4:	080046d7 	.word	0x080046d7
 80046b8:	f7fe fef6 	bl	80034a8 <HAL_RCC_GetPCLK1Freq>
 80046bc:	61f8      	str	r0, [r7, #28]
 80046be:	e014      	b.n	80046ea <UART_SetConfig+0x456>
 80046c0:	f7fe ff08 	bl	80034d4 <HAL_RCC_GetPCLK2Freq>
 80046c4:	61f8      	str	r0, [r7, #28]
 80046c6:	e010      	b.n	80046ea <UART_SetConfig+0x456>
 80046c8:	4b4d      	ldr	r3, [pc, #308]	@ (8004800 <UART_SetConfig+0x56c>)
 80046ca:	61fb      	str	r3, [r7, #28]
 80046cc:	e00d      	b.n	80046ea <UART_SetConfig+0x456>
 80046ce:	f7fe fe53 	bl	8003378 <HAL_RCC_GetSysClockFreq>
 80046d2:	61f8      	str	r0, [r7, #28]
 80046d4:	e009      	b.n	80046ea <UART_SetConfig+0x456>
 80046d6:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80046da:	61fb      	str	r3, [r7, #28]
 80046dc:	e005      	b.n	80046ea <UART_SetConfig+0x456>
 80046de:	2300      	movs	r3, #0
 80046e0:	61fb      	str	r3, [r7, #28]
 80046e2:	2301      	movs	r3, #1
 80046e4:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 80046e8:	bf00      	nop
 80046ea:	69fb      	ldr	r3, [r7, #28]
 80046ec:	2b00      	cmp	r3, #0
 80046ee:	d077      	beq.n	80047e0 <UART_SetConfig+0x54c>
 80046f0:	69fb      	ldr	r3, [r7, #28]
 80046f2:	005a      	lsls	r2, r3, #1
 80046f4:	68fb      	ldr	r3, [r7, #12]
 80046f6:	685b      	ldr	r3, [r3, #4]
 80046f8:	085b      	lsrs	r3, r3, #1
 80046fa:	441a      	add	r2, r3
 80046fc:	68fb      	ldr	r3, [r7, #12]
 80046fe:	685b      	ldr	r3, [r3, #4]
 8004700:	fbb2 f3f3 	udiv	r3, r2, r3
 8004704:	61bb      	str	r3, [r7, #24]
 8004706:	69bb      	ldr	r3, [r7, #24]
 8004708:	2b0f      	cmp	r3, #15
 800470a:	d916      	bls.n	800473a <UART_SetConfig+0x4a6>
 800470c:	69bb      	ldr	r3, [r7, #24]
 800470e:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8004712:	d212      	bcs.n	800473a <UART_SetConfig+0x4a6>
 8004714:	69bb      	ldr	r3, [r7, #24]
 8004716:	b29b      	uxth	r3, r3
 8004718:	f023 030f 	bic.w	r3, r3, #15
 800471c:	82fb      	strh	r3, [r7, #22]
 800471e:	69bb      	ldr	r3, [r7, #24]
 8004720:	085b      	lsrs	r3, r3, #1
 8004722:	b29b      	uxth	r3, r3
 8004724:	f003 0307 	and.w	r3, r3, #7
 8004728:	b29a      	uxth	r2, r3
 800472a:	8afb      	ldrh	r3, [r7, #22]
 800472c:	4313      	orrs	r3, r2
 800472e:	82fb      	strh	r3, [r7, #22]
 8004730:	68fb      	ldr	r3, [r7, #12]
 8004732:	681b      	ldr	r3, [r3, #0]
 8004734:	8afa      	ldrh	r2, [r7, #22]
 8004736:	60da      	str	r2, [r3, #12]
 8004738:	e052      	b.n	80047e0 <UART_SetConfig+0x54c>
 800473a:	2301      	movs	r3, #1
 800473c:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 8004740:	e04e      	b.n	80047e0 <UART_SetConfig+0x54c>
 8004742:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 8004746:	2b08      	cmp	r3, #8
 8004748:	d827      	bhi.n	800479a <UART_SetConfig+0x506>
 800474a:	a201      	add	r2, pc, #4	@ (adr r2, 8004750 <UART_SetConfig+0x4bc>)
 800474c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004750:	08004775 	.word	0x08004775
 8004754:	0800477d 	.word	0x0800477d
 8004758:	08004785 	.word	0x08004785
 800475c:	0800479b 	.word	0x0800479b
 8004760:	0800478b 	.word	0x0800478b
 8004764:	0800479b 	.word	0x0800479b
 8004768:	0800479b 	.word	0x0800479b
 800476c:	0800479b 	.word	0x0800479b
 8004770:	08004793 	.word	0x08004793
 8004774:	f7fe fe98 	bl	80034a8 <HAL_RCC_GetPCLK1Freq>
 8004778:	61f8      	str	r0, [r7, #28]
 800477a:	e014      	b.n	80047a6 <UART_SetConfig+0x512>
 800477c:	f7fe feaa 	bl	80034d4 <HAL_RCC_GetPCLK2Freq>
 8004780:	61f8      	str	r0, [r7, #28]
 8004782:	e010      	b.n	80047a6 <UART_SetConfig+0x512>
 8004784:	4b1e      	ldr	r3, [pc, #120]	@ (8004800 <UART_SetConfig+0x56c>)
 8004786:	61fb      	str	r3, [r7, #28]
 8004788:	e00d      	b.n	80047a6 <UART_SetConfig+0x512>
 800478a:	f7fe fdf5 	bl	8003378 <HAL_RCC_GetSysClockFreq>
 800478e:	61f8      	str	r0, [r7, #28]
 8004790:	e009      	b.n	80047a6 <UART_SetConfig+0x512>
 8004792:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8004796:	61fb      	str	r3, [r7, #28]
 8004798:	e005      	b.n	80047a6 <UART_SetConfig+0x512>
 800479a:	2300      	movs	r3, #0
 800479c:	61fb      	str	r3, [r7, #28]
 800479e:	2301      	movs	r3, #1
 80047a0:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 80047a4:	bf00      	nop
 80047a6:	69fb      	ldr	r3, [r7, #28]
 80047a8:	2b00      	cmp	r3, #0
 80047aa:	d019      	beq.n	80047e0 <UART_SetConfig+0x54c>
 80047ac:	68fb      	ldr	r3, [r7, #12]
 80047ae:	685b      	ldr	r3, [r3, #4]
 80047b0:	085a      	lsrs	r2, r3, #1
 80047b2:	69fb      	ldr	r3, [r7, #28]
 80047b4:	441a      	add	r2, r3
 80047b6:	68fb      	ldr	r3, [r7, #12]
 80047b8:	685b      	ldr	r3, [r3, #4]
 80047ba:	fbb2 f3f3 	udiv	r3, r2, r3
 80047be:	61bb      	str	r3, [r7, #24]
 80047c0:	69bb      	ldr	r3, [r7, #24]
 80047c2:	2b0f      	cmp	r3, #15
 80047c4:	d909      	bls.n	80047da <UART_SetConfig+0x546>
 80047c6:	69bb      	ldr	r3, [r7, #24]
 80047c8:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80047cc:	d205      	bcs.n	80047da <UART_SetConfig+0x546>
 80047ce:	69bb      	ldr	r3, [r7, #24]
 80047d0:	b29a      	uxth	r2, r3
 80047d2:	68fb      	ldr	r3, [r7, #12]
 80047d4:	681b      	ldr	r3, [r3, #0]
 80047d6:	60da      	str	r2, [r3, #12]
 80047d8:	e002      	b.n	80047e0 <UART_SetConfig+0x54c>
 80047da:	2301      	movs	r3, #1
 80047dc:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 80047e0:	68fb      	ldr	r3, [r7, #12]
 80047e2:	2200      	movs	r2, #0
 80047e4:	669a      	str	r2, [r3, #104]	@ 0x68
 80047e6:	68fb      	ldr	r3, [r7, #12]
 80047e8:	2200      	movs	r2, #0
 80047ea:	66da      	str	r2, [r3, #108]	@ 0x6c
 80047ec:	f897 3022 	ldrb.w	r3, [r7, #34]	@ 0x22
 80047f0:	4618      	mov	r0, r3
 80047f2:	3728      	adds	r7, #40	@ 0x28
 80047f4:	46bd      	mov	sp, r7
 80047f6:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80047fa:	bf00      	nop
 80047fc:	40008000 	.word	0x40008000
 8004800:	00f42400 	.word	0x00f42400

08004804 <UART_AdvFeatureConfig>:
 8004804:	b480      	push	{r7}
 8004806:	b083      	sub	sp, #12
 8004808:	af00      	add	r7, sp, #0
 800480a:	6078      	str	r0, [r7, #4]
 800480c:	687b      	ldr	r3, [r7, #4]
 800480e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004810:	f003 0308 	and.w	r3, r3, #8
 8004814:	2b00      	cmp	r3, #0
 8004816:	d00a      	beq.n	800482e <UART_AdvFeatureConfig+0x2a>
 8004818:	687b      	ldr	r3, [r7, #4]
 800481a:	681b      	ldr	r3, [r3, #0]
 800481c:	685b      	ldr	r3, [r3, #4]
 800481e:	f423 4100 	bic.w	r1, r3, #32768	@ 0x8000
 8004822:	687b      	ldr	r3, [r7, #4]
 8004824:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8004826:	687b      	ldr	r3, [r7, #4]
 8004828:	681b      	ldr	r3, [r3, #0]
 800482a:	430a      	orrs	r2, r1
 800482c:	605a      	str	r2, [r3, #4]
 800482e:	687b      	ldr	r3, [r7, #4]
 8004830:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004832:	f003 0301 	and.w	r3, r3, #1
 8004836:	2b00      	cmp	r3, #0
 8004838:	d00a      	beq.n	8004850 <UART_AdvFeatureConfig+0x4c>
 800483a:	687b      	ldr	r3, [r7, #4]
 800483c:	681b      	ldr	r3, [r3, #0]
 800483e:	685b      	ldr	r3, [r3, #4]
 8004840:	f423 3100 	bic.w	r1, r3, #131072	@ 0x20000
 8004844:	687b      	ldr	r3, [r7, #4]
 8004846:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8004848:	687b      	ldr	r3, [r7, #4]
 800484a:	681b      	ldr	r3, [r3, #0]
 800484c:	430a      	orrs	r2, r1
 800484e:	605a      	str	r2, [r3, #4]
 8004850:	687b      	ldr	r3, [r7, #4]
 8004852:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004854:	f003 0302 	and.w	r3, r3, #2
 8004858:	2b00      	cmp	r3, #0
 800485a:	d00a      	beq.n	8004872 <UART_AdvFeatureConfig+0x6e>
 800485c:	687b      	ldr	r3, [r7, #4]
 800485e:	681b      	ldr	r3, [r3, #0]
 8004860:	685b      	ldr	r3, [r3, #4]
 8004862:	f423 3180 	bic.w	r1, r3, #65536	@ 0x10000
 8004866:	687b      	ldr	r3, [r7, #4]
 8004868:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800486a:	687b      	ldr	r3, [r7, #4]
 800486c:	681b      	ldr	r3, [r3, #0]
 800486e:	430a      	orrs	r2, r1
 8004870:	605a      	str	r2, [r3, #4]
 8004872:	687b      	ldr	r3, [r7, #4]
 8004874:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004876:	f003 0304 	and.w	r3, r3, #4
 800487a:	2b00      	cmp	r3, #0
 800487c:	d00a      	beq.n	8004894 <UART_AdvFeatureConfig+0x90>
 800487e:	687b      	ldr	r3, [r7, #4]
 8004880:	681b      	ldr	r3, [r3, #0]
 8004882:	685b      	ldr	r3, [r3, #4]
 8004884:	f423 2180 	bic.w	r1, r3, #262144	@ 0x40000
 8004888:	687b      	ldr	r3, [r7, #4]
 800488a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800488c:	687b      	ldr	r3, [r7, #4]
 800488e:	681b      	ldr	r3, [r3, #0]
 8004890:	430a      	orrs	r2, r1
 8004892:	605a      	str	r2, [r3, #4]
 8004894:	687b      	ldr	r3, [r7, #4]
 8004896:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004898:	f003 0310 	and.w	r3, r3, #16
 800489c:	2b00      	cmp	r3, #0
 800489e:	d00a      	beq.n	80048b6 <UART_AdvFeatureConfig+0xb2>
 80048a0:	687b      	ldr	r3, [r7, #4]
 80048a2:	681b      	ldr	r3, [r3, #0]
 80048a4:	689b      	ldr	r3, [r3, #8]
 80048a6:	f423 5180 	bic.w	r1, r3, #4096	@ 0x1000
 80048aa:	687b      	ldr	r3, [r7, #4]
 80048ac:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 80048ae:	687b      	ldr	r3, [r7, #4]
 80048b0:	681b      	ldr	r3, [r3, #0]
 80048b2:	430a      	orrs	r2, r1
 80048b4:	609a      	str	r2, [r3, #8]
 80048b6:	687b      	ldr	r3, [r7, #4]
 80048b8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80048ba:	f003 0320 	and.w	r3, r3, #32
 80048be:	2b00      	cmp	r3, #0
 80048c0:	d00a      	beq.n	80048d8 <UART_AdvFeatureConfig+0xd4>
 80048c2:	687b      	ldr	r3, [r7, #4]
 80048c4:	681b      	ldr	r3, [r3, #0]
 80048c6:	689b      	ldr	r3, [r3, #8]
 80048c8:	f423 5100 	bic.w	r1, r3, #8192	@ 0x2000
 80048cc:	687b      	ldr	r3, [r7, #4]
 80048ce:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 80048d0:	687b      	ldr	r3, [r7, #4]
 80048d2:	681b      	ldr	r3, [r3, #0]
 80048d4:	430a      	orrs	r2, r1
 80048d6:	609a      	str	r2, [r3, #8]
 80048d8:	687b      	ldr	r3, [r7, #4]
 80048da:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80048dc:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80048e0:	2b00      	cmp	r3, #0
 80048e2:	d01a      	beq.n	800491a <UART_AdvFeatureConfig+0x116>
 80048e4:	687b      	ldr	r3, [r7, #4]
 80048e6:	681b      	ldr	r3, [r3, #0]
 80048e8:	685b      	ldr	r3, [r3, #4]
 80048ea:	f423 1180 	bic.w	r1, r3, #1048576	@ 0x100000
 80048ee:	687b      	ldr	r3, [r7, #4]
 80048f0:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80048f2:	687b      	ldr	r3, [r7, #4]
 80048f4:	681b      	ldr	r3, [r3, #0]
 80048f6:	430a      	orrs	r2, r1
 80048f8:	605a      	str	r2, [r3, #4]
 80048fa:	687b      	ldr	r3, [r7, #4]
 80048fc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80048fe:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 8004902:	d10a      	bne.n	800491a <UART_AdvFeatureConfig+0x116>
 8004904:	687b      	ldr	r3, [r7, #4]
 8004906:	681b      	ldr	r3, [r3, #0]
 8004908:	685b      	ldr	r3, [r3, #4]
 800490a:	f423 01c0 	bic.w	r1, r3, #6291456	@ 0x600000
 800490e:	687b      	ldr	r3, [r7, #4]
 8004910:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8004912:	687b      	ldr	r3, [r7, #4]
 8004914:	681b      	ldr	r3, [r3, #0]
 8004916:	430a      	orrs	r2, r1
 8004918:	605a      	str	r2, [r3, #4]
 800491a:	687b      	ldr	r3, [r7, #4]
 800491c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800491e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8004922:	2b00      	cmp	r3, #0
 8004924:	d00a      	beq.n	800493c <UART_AdvFeatureConfig+0x138>
 8004926:	687b      	ldr	r3, [r7, #4]
 8004928:	681b      	ldr	r3, [r3, #0]
 800492a:	685b      	ldr	r3, [r3, #4]
 800492c:	f423 2100 	bic.w	r1, r3, #524288	@ 0x80000
 8004930:	687b      	ldr	r3, [r7, #4]
 8004932:	6c9a      	ldr	r2, [r3, #72]	@ 0x48
 8004934:	687b      	ldr	r3, [r7, #4]
 8004936:	681b      	ldr	r3, [r3, #0]
 8004938:	430a      	orrs	r2, r1
 800493a:	605a      	str	r2, [r3, #4]
 800493c:	bf00      	nop
 800493e:	370c      	adds	r7, #12
 8004940:	46bd      	mov	sp, r7
 8004942:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004946:	4770      	bx	lr

08004948 <UART_CheckIdleState>:
 8004948:	b580      	push	{r7, lr}
 800494a:	b098      	sub	sp, #96	@ 0x60
 800494c:	af02      	add	r7, sp, #8
 800494e:	6078      	str	r0, [r7, #4]
 8004950:	687b      	ldr	r3, [r7, #4]
 8004952:	2200      	movs	r2, #0
 8004954:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 8004958:	f7fc feea 	bl	8001730 <HAL_GetTick>
 800495c:	6578      	str	r0, [r7, #84]	@ 0x54
 800495e:	687b      	ldr	r3, [r7, #4]
 8004960:	681b      	ldr	r3, [r3, #0]
 8004962:	681b      	ldr	r3, [r3, #0]
 8004964:	f003 0308 	and.w	r3, r3, #8
 8004968:	2b08      	cmp	r3, #8
 800496a:	d12e      	bne.n	80049ca <UART_CheckIdleState+0x82>
 800496c:	f06f 437e 	mvn.w	r3, #4261412864	@ 0xfe000000
 8004970:	9300      	str	r3, [sp, #0]
 8004972:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8004974:	2200      	movs	r2, #0
 8004976:	f44f 1100 	mov.w	r1, #2097152	@ 0x200000
 800497a:	6878      	ldr	r0, [r7, #4]
 800497c:	f000 f88c 	bl	8004a98 <UART_WaitOnFlagUntilTimeout>
 8004980:	4603      	mov	r3, r0
 8004982:	2b00      	cmp	r3, #0
 8004984:	d021      	beq.n	80049ca <UART_CheckIdleState+0x82>
 8004986:	687b      	ldr	r3, [r7, #4]
 8004988:	681b      	ldr	r3, [r3, #0]
 800498a:	63bb      	str	r3, [r7, #56]	@ 0x38
 800498c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800498e:	e853 3f00 	ldrex	r3, [r3]
 8004992:	637b      	str	r3, [r7, #52]	@ 0x34
 8004994:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8004996:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800499a:	653b      	str	r3, [r7, #80]	@ 0x50
 800499c:	687b      	ldr	r3, [r7, #4]
 800499e:	681b      	ldr	r3, [r3, #0]
 80049a0:	461a      	mov	r2, r3
 80049a2:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 80049a4:	647b      	str	r3, [r7, #68]	@ 0x44
 80049a6:	643a      	str	r2, [r7, #64]	@ 0x40
 80049a8:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 80049aa:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 80049ac:	e841 2300 	strex	r3, r2, [r1]
 80049b0:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80049b2:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80049b4:	2b00      	cmp	r3, #0
 80049b6:	d1e6      	bne.n	8004986 <UART_CheckIdleState+0x3e>
 80049b8:	687b      	ldr	r3, [r7, #4]
 80049ba:	2220      	movs	r2, #32
 80049bc:	67da      	str	r2, [r3, #124]	@ 0x7c
 80049be:	687b      	ldr	r3, [r7, #4]
 80049c0:	2200      	movs	r2, #0
 80049c2:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 80049c6:	2303      	movs	r3, #3
 80049c8:	e062      	b.n	8004a90 <UART_CheckIdleState+0x148>
 80049ca:	687b      	ldr	r3, [r7, #4]
 80049cc:	681b      	ldr	r3, [r3, #0]
 80049ce:	681b      	ldr	r3, [r3, #0]
 80049d0:	f003 0304 	and.w	r3, r3, #4
 80049d4:	2b04      	cmp	r3, #4
 80049d6:	d149      	bne.n	8004a6c <UART_CheckIdleState+0x124>
 80049d8:	f06f 437e 	mvn.w	r3, #4261412864	@ 0xfe000000
 80049dc:	9300      	str	r3, [sp, #0]
 80049de:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80049e0:	2200      	movs	r2, #0
 80049e2:	f44f 0180 	mov.w	r1, #4194304	@ 0x400000
 80049e6:	6878      	ldr	r0, [r7, #4]
 80049e8:	f000 f856 	bl	8004a98 <UART_WaitOnFlagUntilTimeout>
 80049ec:	4603      	mov	r3, r0
 80049ee:	2b00      	cmp	r3, #0
 80049f0:	d03c      	beq.n	8004a6c <UART_CheckIdleState+0x124>
 80049f2:	687b      	ldr	r3, [r7, #4]
 80049f4:	681b      	ldr	r3, [r3, #0]
 80049f6:	627b      	str	r3, [r7, #36]	@ 0x24
 80049f8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80049fa:	e853 3f00 	ldrex	r3, [r3]
 80049fe:	623b      	str	r3, [r7, #32]
 8004a00:	6a3b      	ldr	r3, [r7, #32]
 8004a02:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8004a06:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8004a08:	687b      	ldr	r3, [r7, #4]
 8004a0a:	681b      	ldr	r3, [r3, #0]
 8004a0c:	461a      	mov	r2, r3
 8004a0e:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8004a10:	633b      	str	r3, [r7, #48]	@ 0x30
 8004a12:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8004a14:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8004a16:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8004a18:	e841 2300 	strex	r3, r2, [r1]
 8004a1c:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004a1e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004a20:	2b00      	cmp	r3, #0
 8004a22:	d1e6      	bne.n	80049f2 <UART_CheckIdleState+0xaa>
 8004a24:	687b      	ldr	r3, [r7, #4]
 8004a26:	681b      	ldr	r3, [r3, #0]
 8004a28:	3308      	adds	r3, #8
 8004a2a:	613b      	str	r3, [r7, #16]
 8004a2c:	693b      	ldr	r3, [r7, #16]
 8004a2e:	e853 3f00 	ldrex	r3, [r3]
 8004a32:	60fb      	str	r3, [r7, #12]
 8004a34:	68fb      	ldr	r3, [r7, #12]
 8004a36:	f023 0301 	bic.w	r3, r3, #1
 8004a3a:	64bb      	str	r3, [r7, #72]	@ 0x48
 8004a3c:	687b      	ldr	r3, [r7, #4]
 8004a3e:	681b      	ldr	r3, [r3, #0]
 8004a40:	3308      	adds	r3, #8
 8004a42:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8004a44:	61fa      	str	r2, [r7, #28]
 8004a46:	61bb      	str	r3, [r7, #24]
 8004a48:	69b9      	ldr	r1, [r7, #24]
 8004a4a:	69fa      	ldr	r2, [r7, #28]
 8004a4c:	e841 2300 	strex	r3, r2, [r1]
 8004a50:	617b      	str	r3, [r7, #20]
 8004a52:	697b      	ldr	r3, [r7, #20]
 8004a54:	2b00      	cmp	r3, #0
 8004a56:	d1e5      	bne.n	8004a24 <UART_CheckIdleState+0xdc>
 8004a58:	687b      	ldr	r3, [r7, #4]
 8004a5a:	2220      	movs	r2, #32
 8004a5c:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 8004a60:	687b      	ldr	r3, [r7, #4]
 8004a62:	2200      	movs	r2, #0
 8004a64:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 8004a68:	2303      	movs	r3, #3
 8004a6a:	e011      	b.n	8004a90 <UART_CheckIdleState+0x148>
 8004a6c:	687b      	ldr	r3, [r7, #4]
 8004a6e:	2220      	movs	r2, #32
 8004a70:	67da      	str	r2, [r3, #124]	@ 0x7c
 8004a72:	687b      	ldr	r3, [r7, #4]
 8004a74:	2220      	movs	r2, #32
 8004a76:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 8004a7a:	687b      	ldr	r3, [r7, #4]
 8004a7c:	2200      	movs	r2, #0
 8004a7e:	661a      	str	r2, [r3, #96]	@ 0x60
 8004a80:	687b      	ldr	r3, [r7, #4]
 8004a82:	2200      	movs	r2, #0
 8004a84:	665a      	str	r2, [r3, #100]	@ 0x64
 8004a86:	687b      	ldr	r3, [r7, #4]
 8004a88:	2200      	movs	r2, #0
 8004a8a:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 8004a8e:	2300      	movs	r3, #0
 8004a90:	4618      	mov	r0, r3
 8004a92:	3758      	adds	r7, #88	@ 0x58
 8004a94:	46bd      	mov	sp, r7
 8004a96:	bd80      	pop	{r7, pc}

08004a98 <UART_WaitOnFlagUntilTimeout>:
 8004a98:	b580      	push	{r7, lr}
 8004a9a:	b084      	sub	sp, #16
 8004a9c:	af00      	add	r7, sp, #0
 8004a9e:	60f8      	str	r0, [r7, #12]
 8004aa0:	60b9      	str	r1, [r7, #8]
 8004aa2:	603b      	str	r3, [r7, #0]
 8004aa4:	4613      	mov	r3, r2
 8004aa6:	71fb      	strb	r3, [r7, #7]
 8004aa8:	e04f      	b.n	8004b4a <UART_WaitOnFlagUntilTimeout+0xb2>
 8004aaa:	69bb      	ldr	r3, [r7, #24]
 8004aac:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004ab0:	d04b      	beq.n	8004b4a <UART_WaitOnFlagUntilTimeout+0xb2>
 8004ab2:	f7fc fe3d 	bl	8001730 <HAL_GetTick>
 8004ab6:	4602      	mov	r2, r0
 8004ab8:	683b      	ldr	r3, [r7, #0]
 8004aba:	1ad3      	subs	r3, r2, r3
 8004abc:	69ba      	ldr	r2, [r7, #24]
 8004abe:	429a      	cmp	r2, r3
 8004ac0:	d302      	bcc.n	8004ac8 <UART_WaitOnFlagUntilTimeout+0x30>
 8004ac2:	69bb      	ldr	r3, [r7, #24]
 8004ac4:	2b00      	cmp	r3, #0
 8004ac6:	d101      	bne.n	8004acc <UART_WaitOnFlagUntilTimeout+0x34>
 8004ac8:	2303      	movs	r3, #3
 8004aca:	e04e      	b.n	8004b6a <UART_WaitOnFlagUntilTimeout+0xd2>
 8004acc:	68fb      	ldr	r3, [r7, #12]
 8004ace:	681b      	ldr	r3, [r3, #0]
 8004ad0:	681b      	ldr	r3, [r3, #0]
 8004ad2:	f003 0304 	and.w	r3, r3, #4
 8004ad6:	2b00      	cmp	r3, #0
 8004ad8:	d037      	beq.n	8004b4a <UART_WaitOnFlagUntilTimeout+0xb2>
 8004ada:	68bb      	ldr	r3, [r7, #8]
 8004adc:	2b80      	cmp	r3, #128	@ 0x80
 8004ade:	d034      	beq.n	8004b4a <UART_WaitOnFlagUntilTimeout+0xb2>
 8004ae0:	68bb      	ldr	r3, [r7, #8]
 8004ae2:	2b40      	cmp	r3, #64	@ 0x40
 8004ae4:	d031      	beq.n	8004b4a <UART_WaitOnFlagUntilTimeout+0xb2>
 8004ae6:	68fb      	ldr	r3, [r7, #12]
 8004ae8:	681b      	ldr	r3, [r3, #0]
 8004aea:	69db      	ldr	r3, [r3, #28]
 8004aec:	f003 0308 	and.w	r3, r3, #8
 8004af0:	2b08      	cmp	r3, #8
 8004af2:	d110      	bne.n	8004b16 <UART_WaitOnFlagUntilTimeout+0x7e>
 8004af4:	68fb      	ldr	r3, [r7, #12]
 8004af6:	681b      	ldr	r3, [r3, #0]
 8004af8:	2208      	movs	r2, #8
 8004afa:	621a      	str	r2, [r3, #32]
 8004afc:	68f8      	ldr	r0, [r7, #12]
 8004afe:	f000 f838 	bl	8004b72 <UART_EndRxTransfer>
 8004b02:	68fb      	ldr	r3, [r7, #12]
 8004b04:	2208      	movs	r2, #8
 8004b06:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 8004b0a:	68fb      	ldr	r3, [r7, #12]
 8004b0c:	2200      	movs	r2, #0
 8004b0e:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 8004b12:	2301      	movs	r3, #1
 8004b14:	e029      	b.n	8004b6a <UART_WaitOnFlagUntilTimeout+0xd2>
 8004b16:	68fb      	ldr	r3, [r7, #12]
 8004b18:	681b      	ldr	r3, [r3, #0]
 8004b1a:	69db      	ldr	r3, [r3, #28]
 8004b1c:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8004b20:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8004b24:	d111      	bne.n	8004b4a <UART_WaitOnFlagUntilTimeout+0xb2>
 8004b26:	68fb      	ldr	r3, [r7, #12]
 8004b28:	681b      	ldr	r3, [r3, #0]
 8004b2a:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 8004b2e:	621a      	str	r2, [r3, #32]
 8004b30:	68f8      	ldr	r0, [r7, #12]
 8004b32:	f000 f81e 	bl	8004b72 <UART_EndRxTransfer>
 8004b36:	68fb      	ldr	r3, [r7, #12]
 8004b38:	2220      	movs	r2, #32
 8004b3a:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 8004b3e:	68fb      	ldr	r3, [r7, #12]
 8004b40:	2200      	movs	r2, #0
 8004b42:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 8004b46:	2303      	movs	r3, #3
 8004b48:	e00f      	b.n	8004b6a <UART_WaitOnFlagUntilTimeout+0xd2>
 8004b4a:	68fb      	ldr	r3, [r7, #12]
 8004b4c:	681b      	ldr	r3, [r3, #0]
 8004b4e:	69da      	ldr	r2, [r3, #28]
 8004b50:	68bb      	ldr	r3, [r7, #8]
 8004b52:	4013      	ands	r3, r2
 8004b54:	68ba      	ldr	r2, [r7, #8]
 8004b56:	429a      	cmp	r2, r3
 8004b58:	bf0c      	ite	eq
 8004b5a:	2301      	moveq	r3, #1
 8004b5c:	2300      	movne	r3, #0
 8004b5e:	b2db      	uxtb	r3, r3
 8004b60:	461a      	mov	r2, r3
 8004b62:	79fb      	ldrb	r3, [r7, #7]
 8004b64:	429a      	cmp	r2, r3
 8004b66:	d0a0      	beq.n	8004aaa <UART_WaitOnFlagUntilTimeout+0x12>
 8004b68:	2300      	movs	r3, #0
 8004b6a:	4618      	mov	r0, r3
 8004b6c:	3710      	adds	r7, #16
 8004b6e:	46bd      	mov	sp, r7
 8004b70:	bd80      	pop	{r7, pc}

08004b72 <UART_EndRxTransfer>:
 8004b72:	b480      	push	{r7}
 8004b74:	b095      	sub	sp, #84	@ 0x54
 8004b76:	af00      	add	r7, sp, #0
 8004b78:	6078      	str	r0, [r7, #4]
 8004b7a:	687b      	ldr	r3, [r7, #4]
 8004b7c:	681b      	ldr	r3, [r3, #0]
 8004b7e:	637b      	str	r3, [r7, #52]	@ 0x34
 8004b80:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8004b82:	e853 3f00 	ldrex	r3, [r3]
 8004b86:	633b      	str	r3, [r7, #48]	@ 0x30
 8004b88:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004b8a:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8004b8e:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8004b90:	687b      	ldr	r3, [r7, #4]
 8004b92:	681b      	ldr	r3, [r3, #0]
 8004b94:	461a      	mov	r2, r3
 8004b96:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8004b98:	643b      	str	r3, [r7, #64]	@ 0x40
 8004b9a:	63fa      	str	r2, [r7, #60]	@ 0x3c
 8004b9c:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 8004b9e:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 8004ba0:	e841 2300 	strex	r3, r2, [r1]
 8004ba4:	63bb      	str	r3, [r7, #56]	@ 0x38
 8004ba6:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004ba8:	2b00      	cmp	r3, #0
 8004baa:	d1e6      	bne.n	8004b7a <UART_EndRxTransfer+0x8>
 8004bac:	687b      	ldr	r3, [r7, #4]
 8004bae:	681b      	ldr	r3, [r3, #0]
 8004bb0:	3308      	adds	r3, #8
 8004bb2:	623b      	str	r3, [r7, #32]
 8004bb4:	6a3b      	ldr	r3, [r7, #32]
 8004bb6:	e853 3f00 	ldrex	r3, [r3]
 8004bba:	61fb      	str	r3, [r7, #28]
 8004bbc:	69fb      	ldr	r3, [r7, #28]
 8004bbe:	f023 0301 	bic.w	r3, r3, #1
 8004bc2:	64bb      	str	r3, [r7, #72]	@ 0x48
 8004bc4:	687b      	ldr	r3, [r7, #4]
 8004bc6:	681b      	ldr	r3, [r3, #0]
 8004bc8:	3308      	adds	r3, #8
 8004bca:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8004bcc:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8004bce:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004bd0:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8004bd2:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8004bd4:	e841 2300 	strex	r3, r2, [r1]
 8004bd8:	627b      	str	r3, [r7, #36]	@ 0x24
 8004bda:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004bdc:	2b00      	cmp	r3, #0
 8004bde:	d1e5      	bne.n	8004bac <UART_EndRxTransfer+0x3a>
 8004be0:	687b      	ldr	r3, [r7, #4]
 8004be2:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8004be4:	2b01      	cmp	r3, #1
 8004be6:	d118      	bne.n	8004c1a <UART_EndRxTransfer+0xa8>
 8004be8:	687b      	ldr	r3, [r7, #4]
 8004bea:	681b      	ldr	r3, [r3, #0]
 8004bec:	60fb      	str	r3, [r7, #12]
 8004bee:	68fb      	ldr	r3, [r7, #12]
 8004bf0:	e853 3f00 	ldrex	r3, [r3]
 8004bf4:	60bb      	str	r3, [r7, #8]
 8004bf6:	68bb      	ldr	r3, [r7, #8]
 8004bf8:	f023 0310 	bic.w	r3, r3, #16
 8004bfc:	647b      	str	r3, [r7, #68]	@ 0x44
 8004bfe:	687b      	ldr	r3, [r7, #4]
 8004c00:	681b      	ldr	r3, [r3, #0]
 8004c02:	461a      	mov	r2, r3
 8004c04:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8004c06:	61bb      	str	r3, [r7, #24]
 8004c08:	617a      	str	r2, [r7, #20]
 8004c0a:	6979      	ldr	r1, [r7, #20]
 8004c0c:	69ba      	ldr	r2, [r7, #24]
 8004c0e:	e841 2300 	strex	r3, r2, [r1]
 8004c12:	613b      	str	r3, [r7, #16]
 8004c14:	693b      	ldr	r3, [r7, #16]
 8004c16:	2b00      	cmp	r3, #0
 8004c18:	d1e6      	bne.n	8004be8 <UART_EndRxTransfer+0x76>
 8004c1a:	687b      	ldr	r3, [r7, #4]
 8004c1c:	2220      	movs	r2, #32
 8004c1e:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 8004c22:	687b      	ldr	r3, [r7, #4]
 8004c24:	2200      	movs	r2, #0
 8004c26:	661a      	str	r2, [r3, #96]	@ 0x60
 8004c28:	687b      	ldr	r3, [r7, #4]
 8004c2a:	2200      	movs	r2, #0
 8004c2c:	669a      	str	r2, [r3, #104]	@ 0x68
 8004c2e:	bf00      	nop
 8004c30:	3754      	adds	r7, #84	@ 0x54
 8004c32:	46bd      	mov	sp, r7
 8004c34:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004c38:	4770      	bx	lr
	...

08004c3c <_vsiprintf_r>:
 8004c3c:	b510      	push	{r4, lr}
 8004c3e:	b09a      	sub	sp, #104	@ 0x68
 8004c40:	2400      	movs	r4, #0
 8004c42:	9100      	str	r1, [sp, #0]
 8004c44:	9104      	str	r1, [sp, #16]
 8004c46:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 8004c4a:	9105      	str	r1, [sp, #20]
 8004c4c:	9102      	str	r1, [sp, #8]
 8004c4e:	4905      	ldr	r1, [pc, #20]	@ (8004c64 <_vsiprintf_r+0x28>)
 8004c50:	9103      	str	r1, [sp, #12]
 8004c52:	4669      	mov	r1, sp
 8004c54:	9419      	str	r4, [sp, #100]	@ 0x64
 8004c56:	f000 f999 	bl	8004f8c <_svfiprintf_r>
 8004c5a:	9b00      	ldr	r3, [sp, #0]
 8004c5c:	701c      	strb	r4, [r3, #0]
 8004c5e:	b01a      	add	sp, #104	@ 0x68
 8004c60:	bd10      	pop	{r4, pc}
 8004c62:	bf00      	nop
 8004c64:	ffff0208 	.word	0xffff0208

08004c68 <vsiprintf>:
 8004c68:	4613      	mov	r3, r2
 8004c6a:	460a      	mov	r2, r1
 8004c6c:	4601      	mov	r1, r0
 8004c6e:	4802      	ldr	r0, [pc, #8]	@ (8004c78 <vsiprintf+0x10>)
 8004c70:	6800      	ldr	r0, [r0, #0]
 8004c72:	f7ff bfe3 	b.w	8004c3c <_vsiprintf_r>
 8004c76:	bf00      	nop
 8004c78:	20000038 	.word	0x20000038

08004c7c <memset>:
 8004c7c:	4402      	add	r2, r0
 8004c7e:	4603      	mov	r3, r0
 8004c80:	4293      	cmp	r3, r2
 8004c82:	d100      	bne.n	8004c86 <memset+0xa>
 8004c84:	4770      	bx	lr
 8004c86:	f803 1b01 	strb.w	r1, [r3], #1
 8004c8a:	e7f9      	b.n	8004c80 <memset+0x4>

08004c8c <__errno>:
 8004c8c:	4b01      	ldr	r3, [pc, #4]	@ (8004c94 <__errno+0x8>)
 8004c8e:	6818      	ldr	r0, [r3, #0]
 8004c90:	4770      	bx	lr
 8004c92:	bf00      	nop
 8004c94:	20000038 	.word	0x20000038

08004c98 <__libc_init_array>:
 8004c98:	b570      	push	{r4, r5, r6, lr}
 8004c9a:	4d0d      	ldr	r5, [pc, #52]	@ (8004cd0 <__libc_init_array+0x38>)
 8004c9c:	4c0d      	ldr	r4, [pc, #52]	@ (8004cd4 <__libc_init_array+0x3c>)
 8004c9e:	1b64      	subs	r4, r4, r5
 8004ca0:	10a4      	asrs	r4, r4, #2
 8004ca2:	2600      	movs	r6, #0
 8004ca4:	42a6      	cmp	r6, r4
 8004ca6:	d109      	bne.n	8004cbc <__libc_init_array+0x24>
 8004ca8:	4d0b      	ldr	r5, [pc, #44]	@ (8004cd8 <__libc_init_array+0x40>)
 8004caa:	4c0c      	ldr	r4, [pc, #48]	@ (8004cdc <__libc_init_array+0x44>)
 8004cac:	f000 fc64 	bl	8005578 <_init>
 8004cb0:	1b64      	subs	r4, r4, r5
 8004cb2:	10a4      	asrs	r4, r4, #2
 8004cb4:	2600      	movs	r6, #0
 8004cb6:	42a6      	cmp	r6, r4
 8004cb8:	d105      	bne.n	8004cc6 <__libc_init_array+0x2e>
 8004cba:	bd70      	pop	{r4, r5, r6, pc}
 8004cbc:	f855 3b04 	ldr.w	r3, [r5], #4
 8004cc0:	4798      	blx	r3
 8004cc2:	3601      	adds	r6, #1
 8004cc4:	e7ee      	b.n	8004ca4 <__libc_init_array+0xc>
 8004cc6:	f855 3b04 	ldr.w	r3, [r5], #4
 8004cca:	4798      	blx	r3
 8004ccc:	3601      	adds	r6, #1
 8004cce:	e7f2      	b.n	8004cb6 <__libc_init_array+0x1e>
 8004cd0:	08005b14 	.word	0x08005b14
 8004cd4:	08005b14 	.word	0x08005b14
 8004cd8:	08005b14 	.word	0x08005b14
 8004cdc:	08005b18 	.word	0x08005b18

08004ce0 <__retarget_lock_acquire_recursive>:
 8004ce0:	4770      	bx	lr

08004ce2 <__retarget_lock_release_recursive>:
 8004ce2:	4770      	bx	lr

08004ce4 <_free_r>:
 8004ce4:	b538      	push	{r3, r4, r5, lr}
 8004ce6:	4605      	mov	r5, r0
 8004ce8:	2900      	cmp	r1, #0
 8004cea:	d041      	beq.n	8004d70 <_free_r+0x8c>
 8004cec:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8004cf0:	1f0c      	subs	r4, r1, #4
 8004cf2:	2b00      	cmp	r3, #0
 8004cf4:	bfb8      	it	lt
 8004cf6:	18e4      	addlt	r4, r4, r3
 8004cf8:	f000 f8e0 	bl	8004ebc <__malloc_lock>
 8004cfc:	4a1d      	ldr	r2, [pc, #116]	@ (8004d74 <_free_r+0x90>)
 8004cfe:	6813      	ldr	r3, [r2, #0]
 8004d00:	b933      	cbnz	r3, 8004d10 <_free_r+0x2c>
 8004d02:	6063      	str	r3, [r4, #4]
 8004d04:	6014      	str	r4, [r2, #0]
 8004d06:	4628      	mov	r0, r5
 8004d08:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004d0c:	f000 b8dc 	b.w	8004ec8 <__malloc_unlock>
 8004d10:	42a3      	cmp	r3, r4
 8004d12:	d908      	bls.n	8004d26 <_free_r+0x42>
 8004d14:	6820      	ldr	r0, [r4, #0]
 8004d16:	1821      	adds	r1, r4, r0
 8004d18:	428b      	cmp	r3, r1
 8004d1a:	bf01      	itttt	eq
 8004d1c:	6819      	ldreq	r1, [r3, #0]
 8004d1e:	685b      	ldreq	r3, [r3, #4]
 8004d20:	1809      	addeq	r1, r1, r0
 8004d22:	6021      	streq	r1, [r4, #0]
 8004d24:	e7ed      	b.n	8004d02 <_free_r+0x1e>
 8004d26:	461a      	mov	r2, r3
 8004d28:	685b      	ldr	r3, [r3, #4]
 8004d2a:	b10b      	cbz	r3, 8004d30 <_free_r+0x4c>
 8004d2c:	42a3      	cmp	r3, r4
 8004d2e:	d9fa      	bls.n	8004d26 <_free_r+0x42>
 8004d30:	6811      	ldr	r1, [r2, #0]
 8004d32:	1850      	adds	r0, r2, r1
 8004d34:	42a0      	cmp	r0, r4
 8004d36:	d10b      	bne.n	8004d50 <_free_r+0x6c>
 8004d38:	6820      	ldr	r0, [r4, #0]
 8004d3a:	4401      	add	r1, r0
 8004d3c:	1850      	adds	r0, r2, r1
 8004d3e:	4283      	cmp	r3, r0
 8004d40:	6011      	str	r1, [r2, #0]
 8004d42:	d1e0      	bne.n	8004d06 <_free_r+0x22>
 8004d44:	6818      	ldr	r0, [r3, #0]
 8004d46:	685b      	ldr	r3, [r3, #4]
 8004d48:	6053      	str	r3, [r2, #4]
 8004d4a:	4408      	add	r0, r1
 8004d4c:	6010      	str	r0, [r2, #0]
 8004d4e:	e7da      	b.n	8004d06 <_free_r+0x22>
 8004d50:	d902      	bls.n	8004d58 <_free_r+0x74>
 8004d52:	230c      	movs	r3, #12
 8004d54:	602b      	str	r3, [r5, #0]
 8004d56:	e7d6      	b.n	8004d06 <_free_r+0x22>
 8004d58:	6820      	ldr	r0, [r4, #0]
 8004d5a:	1821      	adds	r1, r4, r0
 8004d5c:	428b      	cmp	r3, r1
 8004d5e:	bf04      	itt	eq
 8004d60:	6819      	ldreq	r1, [r3, #0]
 8004d62:	685b      	ldreq	r3, [r3, #4]
 8004d64:	6063      	str	r3, [r4, #4]
 8004d66:	bf04      	itt	eq
 8004d68:	1809      	addeq	r1, r1, r0
 8004d6a:	6021      	streq	r1, [r4, #0]
 8004d6c:	6054      	str	r4, [r2, #4]
 8004d6e:	e7ca      	b.n	8004d06 <_free_r+0x22>
 8004d70:	bd38      	pop	{r3, r4, r5, pc}
 8004d72:	bf00      	nop
 8004d74:	200003f0 	.word	0x200003f0

08004d78 <sbrk_aligned>:
 8004d78:	b570      	push	{r4, r5, r6, lr}
 8004d7a:	4e0f      	ldr	r6, [pc, #60]	@ (8004db8 <sbrk_aligned+0x40>)
 8004d7c:	460c      	mov	r4, r1
 8004d7e:	6831      	ldr	r1, [r6, #0]
 8004d80:	4605      	mov	r5, r0
 8004d82:	b911      	cbnz	r1, 8004d8a <sbrk_aligned+0x12>
 8004d84:	f000 fba4 	bl	80054d0 <_sbrk_r>
 8004d88:	6030      	str	r0, [r6, #0]
 8004d8a:	4621      	mov	r1, r4
 8004d8c:	4628      	mov	r0, r5
 8004d8e:	f000 fb9f 	bl	80054d0 <_sbrk_r>
 8004d92:	1c43      	adds	r3, r0, #1
 8004d94:	d103      	bne.n	8004d9e <sbrk_aligned+0x26>
 8004d96:	f04f 34ff 	mov.w	r4, #4294967295
 8004d9a:	4620      	mov	r0, r4
 8004d9c:	bd70      	pop	{r4, r5, r6, pc}
 8004d9e:	1cc4      	adds	r4, r0, #3
 8004da0:	f024 0403 	bic.w	r4, r4, #3
 8004da4:	42a0      	cmp	r0, r4
 8004da6:	d0f8      	beq.n	8004d9a <sbrk_aligned+0x22>
 8004da8:	1a21      	subs	r1, r4, r0
 8004daa:	4628      	mov	r0, r5
 8004dac:	f000 fb90 	bl	80054d0 <_sbrk_r>
 8004db0:	3001      	adds	r0, #1
 8004db2:	d1f2      	bne.n	8004d9a <sbrk_aligned+0x22>
 8004db4:	e7ef      	b.n	8004d96 <sbrk_aligned+0x1e>
 8004db6:	bf00      	nop
 8004db8:	200003ec 	.word	0x200003ec

08004dbc <_malloc_r>:
 8004dbc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004dc0:	1ccd      	adds	r5, r1, #3
 8004dc2:	f025 0503 	bic.w	r5, r5, #3
 8004dc6:	3508      	adds	r5, #8
 8004dc8:	2d0c      	cmp	r5, #12
 8004dca:	bf38      	it	cc
 8004dcc:	250c      	movcc	r5, #12
 8004dce:	2d00      	cmp	r5, #0
 8004dd0:	4606      	mov	r6, r0
 8004dd2:	db01      	blt.n	8004dd8 <_malloc_r+0x1c>
 8004dd4:	42a9      	cmp	r1, r5
 8004dd6:	d904      	bls.n	8004de2 <_malloc_r+0x26>
 8004dd8:	230c      	movs	r3, #12
 8004dda:	6033      	str	r3, [r6, #0]
 8004ddc:	2000      	movs	r0, #0
 8004dde:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004de2:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8004eb8 <_malloc_r+0xfc>
 8004de6:	f000 f869 	bl	8004ebc <__malloc_lock>
 8004dea:	f8d8 3000 	ldr.w	r3, [r8]
 8004dee:	461c      	mov	r4, r3
 8004df0:	bb44      	cbnz	r4, 8004e44 <_malloc_r+0x88>
 8004df2:	4629      	mov	r1, r5
 8004df4:	4630      	mov	r0, r6
 8004df6:	f7ff ffbf 	bl	8004d78 <sbrk_aligned>
 8004dfa:	1c43      	adds	r3, r0, #1
 8004dfc:	4604      	mov	r4, r0
 8004dfe:	d158      	bne.n	8004eb2 <_malloc_r+0xf6>
 8004e00:	f8d8 4000 	ldr.w	r4, [r8]
 8004e04:	4627      	mov	r7, r4
 8004e06:	2f00      	cmp	r7, #0
 8004e08:	d143      	bne.n	8004e92 <_malloc_r+0xd6>
 8004e0a:	2c00      	cmp	r4, #0
 8004e0c:	d04b      	beq.n	8004ea6 <_malloc_r+0xea>
 8004e0e:	6823      	ldr	r3, [r4, #0]
 8004e10:	4639      	mov	r1, r7
 8004e12:	4630      	mov	r0, r6
 8004e14:	eb04 0903 	add.w	r9, r4, r3
 8004e18:	f000 fb5a 	bl	80054d0 <_sbrk_r>
 8004e1c:	4581      	cmp	r9, r0
 8004e1e:	d142      	bne.n	8004ea6 <_malloc_r+0xea>
 8004e20:	6821      	ldr	r1, [r4, #0]
 8004e22:	1a6d      	subs	r5, r5, r1
 8004e24:	4629      	mov	r1, r5
 8004e26:	4630      	mov	r0, r6
 8004e28:	f7ff ffa6 	bl	8004d78 <sbrk_aligned>
 8004e2c:	3001      	adds	r0, #1
 8004e2e:	d03a      	beq.n	8004ea6 <_malloc_r+0xea>
 8004e30:	6823      	ldr	r3, [r4, #0]
 8004e32:	442b      	add	r3, r5
 8004e34:	6023      	str	r3, [r4, #0]
 8004e36:	f8d8 3000 	ldr.w	r3, [r8]
 8004e3a:	685a      	ldr	r2, [r3, #4]
 8004e3c:	bb62      	cbnz	r2, 8004e98 <_malloc_r+0xdc>
 8004e3e:	f8c8 7000 	str.w	r7, [r8]
 8004e42:	e00f      	b.n	8004e64 <_malloc_r+0xa8>
 8004e44:	6822      	ldr	r2, [r4, #0]
 8004e46:	1b52      	subs	r2, r2, r5
 8004e48:	d420      	bmi.n	8004e8c <_malloc_r+0xd0>
 8004e4a:	2a0b      	cmp	r2, #11
 8004e4c:	d917      	bls.n	8004e7e <_malloc_r+0xc2>
 8004e4e:	1961      	adds	r1, r4, r5
 8004e50:	42a3      	cmp	r3, r4
 8004e52:	6025      	str	r5, [r4, #0]
 8004e54:	bf18      	it	ne
 8004e56:	6059      	strne	r1, [r3, #4]
 8004e58:	6863      	ldr	r3, [r4, #4]
 8004e5a:	bf08      	it	eq
 8004e5c:	f8c8 1000 	streq.w	r1, [r8]
 8004e60:	5162      	str	r2, [r4, r5]
 8004e62:	604b      	str	r3, [r1, #4]
 8004e64:	4630      	mov	r0, r6
 8004e66:	f000 f82f 	bl	8004ec8 <__malloc_unlock>
 8004e6a:	f104 000b 	add.w	r0, r4, #11
 8004e6e:	1d23      	adds	r3, r4, #4
 8004e70:	f020 0007 	bic.w	r0, r0, #7
 8004e74:	1ac2      	subs	r2, r0, r3
 8004e76:	bf1c      	itt	ne
 8004e78:	1a1b      	subne	r3, r3, r0
 8004e7a:	50a3      	strne	r3, [r4, r2]
 8004e7c:	e7af      	b.n	8004dde <_malloc_r+0x22>
 8004e7e:	6862      	ldr	r2, [r4, #4]
 8004e80:	42a3      	cmp	r3, r4
 8004e82:	bf0c      	ite	eq
 8004e84:	f8c8 2000 	streq.w	r2, [r8]
 8004e88:	605a      	strne	r2, [r3, #4]
 8004e8a:	e7eb      	b.n	8004e64 <_malloc_r+0xa8>
 8004e8c:	4623      	mov	r3, r4
 8004e8e:	6864      	ldr	r4, [r4, #4]
 8004e90:	e7ae      	b.n	8004df0 <_malloc_r+0x34>
 8004e92:	463c      	mov	r4, r7
 8004e94:	687f      	ldr	r7, [r7, #4]
 8004e96:	e7b6      	b.n	8004e06 <_malloc_r+0x4a>
 8004e98:	461a      	mov	r2, r3
 8004e9a:	685b      	ldr	r3, [r3, #4]
 8004e9c:	42a3      	cmp	r3, r4
 8004e9e:	d1fb      	bne.n	8004e98 <_malloc_r+0xdc>
 8004ea0:	2300      	movs	r3, #0
 8004ea2:	6053      	str	r3, [r2, #4]
 8004ea4:	e7de      	b.n	8004e64 <_malloc_r+0xa8>
 8004ea6:	230c      	movs	r3, #12
 8004ea8:	6033      	str	r3, [r6, #0]
 8004eaa:	4630      	mov	r0, r6
 8004eac:	f000 f80c 	bl	8004ec8 <__malloc_unlock>
 8004eb0:	e794      	b.n	8004ddc <_malloc_r+0x20>
 8004eb2:	6005      	str	r5, [r0, #0]
 8004eb4:	e7d6      	b.n	8004e64 <_malloc_r+0xa8>
 8004eb6:	bf00      	nop
 8004eb8:	200003f0 	.word	0x200003f0

08004ebc <__malloc_lock>:
 8004ebc:	4801      	ldr	r0, [pc, #4]	@ (8004ec4 <__malloc_lock+0x8>)
 8004ebe:	f7ff bf0f 	b.w	8004ce0 <__retarget_lock_acquire_recursive>
 8004ec2:	bf00      	nop
 8004ec4:	200003e8 	.word	0x200003e8

08004ec8 <__malloc_unlock>:
 8004ec8:	4801      	ldr	r0, [pc, #4]	@ (8004ed0 <__malloc_unlock+0x8>)
 8004eca:	f7ff bf0a 	b.w	8004ce2 <__retarget_lock_release_recursive>
 8004ece:	bf00      	nop
 8004ed0:	200003e8 	.word	0x200003e8

08004ed4 <__ssputs_r>:
 8004ed4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004ed8:	688e      	ldr	r6, [r1, #8]
 8004eda:	461f      	mov	r7, r3
 8004edc:	42be      	cmp	r6, r7
 8004ede:	680b      	ldr	r3, [r1, #0]
 8004ee0:	4682      	mov	sl, r0
 8004ee2:	460c      	mov	r4, r1
 8004ee4:	4690      	mov	r8, r2
 8004ee6:	d82d      	bhi.n	8004f44 <__ssputs_r+0x70>
 8004ee8:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8004eec:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 8004ef0:	d026      	beq.n	8004f40 <__ssputs_r+0x6c>
 8004ef2:	6965      	ldr	r5, [r4, #20]
 8004ef4:	6909      	ldr	r1, [r1, #16]
 8004ef6:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8004efa:	eba3 0901 	sub.w	r9, r3, r1
 8004efe:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8004f02:	1c7b      	adds	r3, r7, #1
 8004f04:	444b      	add	r3, r9
 8004f06:	106d      	asrs	r5, r5, #1
 8004f08:	429d      	cmp	r5, r3
 8004f0a:	bf38      	it	cc
 8004f0c:	461d      	movcc	r5, r3
 8004f0e:	0553      	lsls	r3, r2, #21
 8004f10:	d527      	bpl.n	8004f62 <__ssputs_r+0x8e>
 8004f12:	4629      	mov	r1, r5
 8004f14:	f7ff ff52 	bl	8004dbc <_malloc_r>
 8004f18:	4606      	mov	r6, r0
 8004f1a:	b360      	cbz	r0, 8004f76 <__ssputs_r+0xa2>
 8004f1c:	6921      	ldr	r1, [r4, #16]
 8004f1e:	464a      	mov	r2, r9
 8004f20:	f000 fae6 	bl	80054f0 <memcpy>
 8004f24:	89a3      	ldrh	r3, [r4, #12]
 8004f26:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 8004f2a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8004f2e:	81a3      	strh	r3, [r4, #12]
 8004f30:	6126      	str	r6, [r4, #16]
 8004f32:	6165      	str	r5, [r4, #20]
 8004f34:	444e      	add	r6, r9
 8004f36:	eba5 0509 	sub.w	r5, r5, r9
 8004f3a:	6026      	str	r6, [r4, #0]
 8004f3c:	60a5      	str	r5, [r4, #8]
 8004f3e:	463e      	mov	r6, r7
 8004f40:	42be      	cmp	r6, r7
 8004f42:	d900      	bls.n	8004f46 <__ssputs_r+0x72>
 8004f44:	463e      	mov	r6, r7
 8004f46:	6820      	ldr	r0, [r4, #0]
 8004f48:	4632      	mov	r2, r6
 8004f4a:	4641      	mov	r1, r8
 8004f4c:	f000 faa6 	bl	800549c <memmove>
 8004f50:	68a3      	ldr	r3, [r4, #8]
 8004f52:	1b9b      	subs	r3, r3, r6
 8004f54:	60a3      	str	r3, [r4, #8]
 8004f56:	6823      	ldr	r3, [r4, #0]
 8004f58:	4433      	add	r3, r6
 8004f5a:	6023      	str	r3, [r4, #0]
 8004f5c:	2000      	movs	r0, #0
 8004f5e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004f62:	462a      	mov	r2, r5
 8004f64:	f000 fad2 	bl	800550c <_realloc_r>
 8004f68:	4606      	mov	r6, r0
 8004f6a:	2800      	cmp	r0, #0
 8004f6c:	d1e0      	bne.n	8004f30 <__ssputs_r+0x5c>
 8004f6e:	6921      	ldr	r1, [r4, #16]
 8004f70:	4650      	mov	r0, sl
 8004f72:	f7ff feb7 	bl	8004ce4 <_free_r>
 8004f76:	230c      	movs	r3, #12
 8004f78:	f8ca 3000 	str.w	r3, [sl]
 8004f7c:	89a3      	ldrh	r3, [r4, #12]
 8004f7e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8004f82:	81a3      	strh	r3, [r4, #12]
 8004f84:	f04f 30ff 	mov.w	r0, #4294967295
 8004f88:	e7e9      	b.n	8004f5e <__ssputs_r+0x8a>
	...

08004f8c <_svfiprintf_r>:
 8004f8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004f90:	4698      	mov	r8, r3
 8004f92:	898b      	ldrh	r3, [r1, #12]
 8004f94:	061b      	lsls	r3, r3, #24
 8004f96:	b09d      	sub	sp, #116	@ 0x74
 8004f98:	4607      	mov	r7, r0
 8004f9a:	460d      	mov	r5, r1
 8004f9c:	4614      	mov	r4, r2
 8004f9e:	d510      	bpl.n	8004fc2 <_svfiprintf_r+0x36>
 8004fa0:	690b      	ldr	r3, [r1, #16]
 8004fa2:	b973      	cbnz	r3, 8004fc2 <_svfiprintf_r+0x36>
 8004fa4:	2140      	movs	r1, #64	@ 0x40
 8004fa6:	f7ff ff09 	bl	8004dbc <_malloc_r>
 8004faa:	6028      	str	r0, [r5, #0]
 8004fac:	6128      	str	r0, [r5, #16]
 8004fae:	b930      	cbnz	r0, 8004fbe <_svfiprintf_r+0x32>
 8004fb0:	230c      	movs	r3, #12
 8004fb2:	603b      	str	r3, [r7, #0]
 8004fb4:	f04f 30ff 	mov.w	r0, #4294967295
 8004fb8:	b01d      	add	sp, #116	@ 0x74
 8004fba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004fbe:	2340      	movs	r3, #64	@ 0x40
 8004fc0:	616b      	str	r3, [r5, #20]
 8004fc2:	2300      	movs	r3, #0
 8004fc4:	9309      	str	r3, [sp, #36]	@ 0x24
 8004fc6:	2320      	movs	r3, #32
 8004fc8:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8004fcc:	f8cd 800c 	str.w	r8, [sp, #12]
 8004fd0:	2330      	movs	r3, #48	@ 0x30
 8004fd2:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 8005170 <_svfiprintf_r+0x1e4>
 8004fd6:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8004fda:	f04f 0901 	mov.w	r9, #1
 8004fde:	4623      	mov	r3, r4
 8004fe0:	469a      	mov	sl, r3
 8004fe2:	f813 2b01 	ldrb.w	r2, [r3], #1
 8004fe6:	b10a      	cbz	r2, 8004fec <_svfiprintf_r+0x60>
 8004fe8:	2a25      	cmp	r2, #37	@ 0x25
 8004fea:	d1f9      	bne.n	8004fe0 <_svfiprintf_r+0x54>
 8004fec:	ebba 0b04 	subs.w	fp, sl, r4
 8004ff0:	d00b      	beq.n	800500a <_svfiprintf_r+0x7e>
 8004ff2:	465b      	mov	r3, fp
 8004ff4:	4622      	mov	r2, r4
 8004ff6:	4629      	mov	r1, r5
 8004ff8:	4638      	mov	r0, r7
 8004ffa:	f7ff ff6b 	bl	8004ed4 <__ssputs_r>
 8004ffe:	3001      	adds	r0, #1
 8005000:	f000 80a7 	beq.w	8005152 <_svfiprintf_r+0x1c6>
 8005004:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8005006:	445a      	add	r2, fp
 8005008:	9209      	str	r2, [sp, #36]	@ 0x24
 800500a:	f89a 3000 	ldrb.w	r3, [sl]
 800500e:	2b00      	cmp	r3, #0
 8005010:	f000 809f 	beq.w	8005152 <_svfiprintf_r+0x1c6>
 8005014:	2300      	movs	r3, #0
 8005016:	f04f 32ff 	mov.w	r2, #4294967295
 800501a:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800501e:	f10a 0a01 	add.w	sl, sl, #1
 8005022:	9304      	str	r3, [sp, #16]
 8005024:	9307      	str	r3, [sp, #28]
 8005026:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 800502a:	931a      	str	r3, [sp, #104]	@ 0x68
 800502c:	4654      	mov	r4, sl
 800502e:	2205      	movs	r2, #5
 8005030:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005034:	484e      	ldr	r0, [pc, #312]	@ (8005170 <_svfiprintf_r+0x1e4>)
 8005036:	f7fb f8e3 	bl	8000200 <memchr>
 800503a:	9a04      	ldr	r2, [sp, #16]
 800503c:	b9d8      	cbnz	r0, 8005076 <_svfiprintf_r+0xea>
 800503e:	06d0      	lsls	r0, r2, #27
 8005040:	bf44      	itt	mi
 8005042:	2320      	movmi	r3, #32
 8005044:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8005048:	0711      	lsls	r1, r2, #28
 800504a:	bf44      	itt	mi
 800504c:	232b      	movmi	r3, #43	@ 0x2b
 800504e:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8005052:	f89a 3000 	ldrb.w	r3, [sl]
 8005056:	2b2a      	cmp	r3, #42	@ 0x2a
 8005058:	d015      	beq.n	8005086 <_svfiprintf_r+0xfa>
 800505a:	9a07      	ldr	r2, [sp, #28]
 800505c:	4654      	mov	r4, sl
 800505e:	2000      	movs	r0, #0
 8005060:	f04f 0c0a 	mov.w	ip, #10
 8005064:	4621      	mov	r1, r4
 8005066:	f811 3b01 	ldrb.w	r3, [r1], #1
 800506a:	3b30      	subs	r3, #48	@ 0x30
 800506c:	2b09      	cmp	r3, #9
 800506e:	d94b      	bls.n	8005108 <_svfiprintf_r+0x17c>
 8005070:	b1b0      	cbz	r0, 80050a0 <_svfiprintf_r+0x114>
 8005072:	9207      	str	r2, [sp, #28]
 8005074:	e014      	b.n	80050a0 <_svfiprintf_r+0x114>
 8005076:	eba0 0308 	sub.w	r3, r0, r8
 800507a:	fa09 f303 	lsl.w	r3, r9, r3
 800507e:	4313      	orrs	r3, r2
 8005080:	9304      	str	r3, [sp, #16]
 8005082:	46a2      	mov	sl, r4
 8005084:	e7d2      	b.n	800502c <_svfiprintf_r+0xa0>
 8005086:	9b03      	ldr	r3, [sp, #12]
 8005088:	1d19      	adds	r1, r3, #4
 800508a:	681b      	ldr	r3, [r3, #0]
 800508c:	9103      	str	r1, [sp, #12]
 800508e:	2b00      	cmp	r3, #0
 8005090:	bfbb      	ittet	lt
 8005092:	425b      	neglt	r3, r3
 8005094:	f042 0202 	orrlt.w	r2, r2, #2
 8005098:	9307      	strge	r3, [sp, #28]
 800509a:	9307      	strlt	r3, [sp, #28]
 800509c:	bfb8      	it	lt
 800509e:	9204      	strlt	r2, [sp, #16]
 80050a0:	7823      	ldrb	r3, [r4, #0]
 80050a2:	2b2e      	cmp	r3, #46	@ 0x2e
 80050a4:	d10a      	bne.n	80050bc <_svfiprintf_r+0x130>
 80050a6:	7863      	ldrb	r3, [r4, #1]
 80050a8:	2b2a      	cmp	r3, #42	@ 0x2a
 80050aa:	d132      	bne.n	8005112 <_svfiprintf_r+0x186>
 80050ac:	9b03      	ldr	r3, [sp, #12]
 80050ae:	1d1a      	adds	r2, r3, #4
 80050b0:	681b      	ldr	r3, [r3, #0]
 80050b2:	9203      	str	r2, [sp, #12]
 80050b4:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 80050b8:	3402      	adds	r4, #2
 80050ba:	9305      	str	r3, [sp, #20]
 80050bc:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 8005180 <_svfiprintf_r+0x1f4>
 80050c0:	7821      	ldrb	r1, [r4, #0]
 80050c2:	2203      	movs	r2, #3
 80050c4:	4650      	mov	r0, sl
 80050c6:	f7fb f89b 	bl	8000200 <memchr>
 80050ca:	b138      	cbz	r0, 80050dc <_svfiprintf_r+0x150>
 80050cc:	9b04      	ldr	r3, [sp, #16]
 80050ce:	eba0 000a 	sub.w	r0, r0, sl
 80050d2:	2240      	movs	r2, #64	@ 0x40
 80050d4:	4082      	lsls	r2, r0
 80050d6:	4313      	orrs	r3, r2
 80050d8:	3401      	adds	r4, #1
 80050da:	9304      	str	r3, [sp, #16]
 80050dc:	f814 1b01 	ldrb.w	r1, [r4], #1
 80050e0:	4824      	ldr	r0, [pc, #144]	@ (8005174 <_svfiprintf_r+0x1e8>)
 80050e2:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 80050e6:	2206      	movs	r2, #6
 80050e8:	f7fb f88a 	bl	8000200 <memchr>
 80050ec:	2800      	cmp	r0, #0
 80050ee:	d036      	beq.n	800515e <_svfiprintf_r+0x1d2>
 80050f0:	4b21      	ldr	r3, [pc, #132]	@ (8005178 <_svfiprintf_r+0x1ec>)
 80050f2:	bb1b      	cbnz	r3, 800513c <_svfiprintf_r+0x1b0>
 80050f4:	9b03      	ldr	r3, [sp, #12]
 80050f6:	3307      	adds	r3, #7
 80050f8:	f023 0307 	bic.w	r3, r3, #7
 80050fc:	3308      	adds	r3, #8
 80050fe:	9303      	str	r3, [sp, #12]
 8005100:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8005102:	4433      	add	r3, r6
 8005104:	9309      	str	r3, [sp, #36]	@ 0x24
 8005106:	e76a      	b.n	8004fde <_svfiprintf_r+0x52>
 8005108:	fb0c 3202 	mla	r2, ip, r2, r3
 800510c:	460c      	mov	r4, r1
 800510e:	2001      	movs	r0, #1
 8005110:	e7a8      	b.n	8005064 <_svfiprintf_r+0xd8>
 8005112:	2300      	movs	r3, #0
 8005114:	3401      	adds	r4, #1
 8005116:	9305      	str	r3, [sp, #20]
 8005118:	4619      	mov	r1, r3
 800511a:	f04f 0c0a 	mov.w	ip, #10
 800511e:	4620      	mov	r0, r4
 8005120:	f810 2b01 	ldrb.w	r2, [r0], #1
 8005124:	3a30      	subs	r2, #48	@ 0x30
 8005126:	2a09      	cmp	r2, #9
 8005128:	d903      	bls.n	8005132 <_svfiprintf_r+0x1a6>
 800512a:	2b00      	cmp	r3, #0
 800512c:	d0c6      	beq.n	80050bc <_svfiprintf_r+0x130>
 800512e:	9105      	str	r1, [sp, #20]
 8005130:	e7c4      	b.n	80050bc <_svfiprintf_r+0x130>
 8005132:	fb0c 2101 	mla	r1, ip, r1, r2
 8005136:	4604      	mov	r4, r0
 8005138:	2301      	movs	r3, #1
 800513a:	e7f0      	b.n	800511e <_svfiprintf_r+0x192>
 800513c:	ab03      	add	r3, sp, #12
 800513e:	9300      	str	r3, [sp, #0]
 8005140:	462a      	mov	r2, r5
 8005142:	4b0e      	ldr	r3, [pc, #56]	@ (800517c <_svfiprintf_r+0x1f0>)
 8005144:	a904      	add	r1, sp, #16
 8005146:	4638      	mov	r0, r7
 8005148:	f3af 8000 	nop.w
 800514c:	1c42      	adds	r2, r0, #1
 800514e:	4606      	mov	r6, r0
 8005150:	d1d6      	bne.n	8005100 <_svfiprintf_r+0x174>
 8005152:	89ab      	ldrh	r3, [r5, #12]
 8005154:	065b      	lsls	r3, r3, #25
 8005156:	f53f af2d 	bmi.w	8004fb4 <_svfiprintf_r+0x28>
 800515a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800515c:	e72c      	b.n	8004fb8 <_svfiprintf_r+0x2c>
 800515e:	ab03      	add	r3, sp, #12
 8005160:	9300      	str	r3, [sp, #0]
 8005162:	462a      	mov	r2, r5
 8005164:	4b05      	ldr	r3, [pc, #20]	@ (800517c <_svfiprintf_r+0x1f0>)
 8005166:	a904      	add	r1, sp, #16
 8005168:	4638      	mov	r0, r7
 800516a:	f000 f879 	bl	8005260 <_printf_i>
 800516e:	e7ed      	b.n	800514c <_svfiprintf_r+0x1c0>
 8005170:	08005ad8 	.word	0x08005ad8
 8005174:	08005ae2 	.word	0x08005ae2
 8005178:	00000000 	.word	0x00000000
 800517c:	08004ed5 	.word	0x08004ed5
 8005180:	08005ade 	.word	0x08005ade

08005184 <_printf_common>:
 8005184:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005188:	4616      	mov	r6, r2
 800518a:	4698      	mov	r8, r3
 800518c:	688a      	ldr	r2, [r1, #8]
 800518e:	690b      	ldr	r3, [r1, #16]
 8005190:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8005194:	4293      	cmp	r3, r2
 8005196:	bfb8      	it	lt
 8005198:	4613      	movlt	r3, r2
 800519a:	6033      	str	r3, [r6, #0]
 800519c:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 80051a0:	4607      	mov	r7, r0
 80051a2:	460c      	mov	r4, r1
 80051a4:	b10a      	cbz	r2, 80051aa <_printf_common+0x26>
 80051a6:	3301      	adds	r3, #1
 80051a8:	6033      	str	r3, [r6, #0]
 80051aa:	6823      	ldr	r3, [r4, #0]
 80051ac:	0699      	lsls	r1, r3, #26
 80051ae:	bf42      	ittt	mi
 80051b0:	6833      	ldrmi	r3, [r6, #0]
 80051b2:	3302      	addmi	r3, #2
 80051b4:	6033      	strmi	r3, [r6, #0]
 80051b6:	6825      	ldr	r5, [r4, #0]
 80051b8:	f015 0506 	ands.w	r5, r5, #6
 80051bc:	d106      	bne.n	80051cc <_printf_common+0x48>
 80051be:	f104 0a19 	add.w	sl, r4, #25
 80051c2:	68e3      	ldr	r3, [r4, #12]
 80051c4:	6832      	ldr	r2, [r6, #0]
 80051c6:	1a9b      	subs	r3, r3, r2
 80051c8:	42ab      	cmp	r3, r5
 80051ca:	dc26      	bgt.n	800521a <_printf_common+0x96>
 80051cc:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 80051d0:	6822      	ldr	r2, [r4, #0]
 80051d2:	3b00      	subs	r3, #0
 80051d4:	bf18      	it	ne
 80051d6:	2301      	movne	r3, #1
 80051d8:	0692      	lsls	r2, r2, #26
 80051da:	d42b      	bmi.n	8005234 <_printf_common+0xb0>
 80051dc:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 80051e0:	4641      	mov	r1, r8
 80051e2:	4638      	mov	r0, r7
 80051e4:	47c8      	blx	r9
 80051e6:	3001      	adds	r0, #1
 80051e8:	d01e      	beq.n	8005228 <_printf_common+0xa4>
 80051ea:	6823      	ldr	r3, [r4, #0]
 80051ec:	6922      	ldr	r2, [r4, #16]
 80051ee:	f003 0306 	and.w	r3, r3, #6
 80051f2:	2b04      	cmp	r3, #4
 80051f4:	bf02      	ittt	eq
 80051f6:	68e5      	ldreq	r5, [r4, #12]
 80051f8:	6833      	ldreq	r3, [r6, #0]
 80051fa:	1aed      	subeq	r5, r5, r3
 80051fc:	68a3      	ldr	r3, [r4, #8]
 80051fe:	bf0c      	ite	eq
 8005200:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8005204:	2500      	movne	r5, #0
 8005206:	4293      	cmp	r3, r2
 8005208:	bfc4      	itt	gt
 800520a:	1a9b      	subgt	r3, r3, r2
 800520c:	18ed      	addgt	r5, r5, r3
 800520e:	2600      	movs	r6, #0
 8005210:	341a      	adds	r4, #26
 8005212:	42b5      	cmp	r5, r6
 8005214:	d11a      	bne.n	800524c <_printf_common+0xc8>
 8005216:	2000      	movs	r0, #0
 8005218:	e008      	b.n	800522c <_printf_common+0xa8>
 800521a:	2301      	movs	r3, #1
 800521c:	4652      	mov	r2, sl
 800521e:	4641      	mov	r1, r8
 8005220:	4638      	mov	r0, r7
 8005222:	47c8      	blx	r9
 8005224:	3001      	adds	r0, #1
 8005226:	d103      	bne.n	8005230 <_printf_common+0xac>
 8005228:	f04f 30ff 	mov.w	r0, #4294967295
 800522c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005230:	3501      	adds	r5, #1
 8005232:	e7c6      	b.n	80051c2 <_printf_common+0x3e>
 8005234:	18e1      	adds	r1, r4, r3
 8005236:	1c5a      	adds	r2, r3, #1
 8005238:	2030      	movs	r0, #48	@ 0x30
 800523a:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 800523e:	4422      	add	r2, r4
 8005240:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8005244:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8005248:	3302      	adds	r3, #2
 800524a:	e7c7      	b.n	80051dc <_printf_common+0x58>
 800524c:	2301      	movs	r3, #1
 800524e:	4622      	mov	r2, r4
 8005250:	4641      	mov	r1, r8
 8005252:	4638      	mov	r0, r7
 8005254:	47c8      	blx	r9
 8005256:	3001      	adds	r0, #1
 8005258:	d0e6      	beq.n	8005228 <_printf_common+0xa4>
 800525a:	3601      	adds	r6, #1
 800525c:	e7d9      	b.n	8005212 <_printf_common+0x8e>
	...

08005260 <_printf_i>:
 8005260:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8005264:	7e0f      	ldrb	r7, [r1, #24]
 8005266:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8005268:	2f78      	cmp	r7, #120	@ 0x78
 800526a:	4691      	mov	r9, r2
 800526c:	4680      	mov	r8, r0
 800526e:	460c      	mov	r4, r1
 8005270:	469a      	mov	sl, r3
 8005272:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8005276:	d807      	bhi.n	8005288 <_printf_i+0x28>
 8005278:	2f62      	cmp	r7, #98	@ 0x62
 800527a:	d80a      	bhi.n	8005292 <_printf_i+0x32>
 800527c:	2f00      	cmp	r7, #0
 800527e:	f000 80d1 	beq.w	8005424 <_printf_i+0x1c4>
 8005282:	2f58      	cmp	r7, #88	@ 0x58
 8005284:	f000 80b8 	beq.w	80053f8 <_printf_i+0x198>
 8005288:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 800528c:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8005290:	e03a      	b.n	8005308 <_printf_i+0xa8>
 8005292:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8005296:	2b15      	cmp	r3, #21
 8005298:	d8f6      	bhi.n	8005288 <_printf_i+0x28>
 800529a:	a101      	add	r1, pc, #4	@ (adr r1, 80052a0 <_printf_i+0x40>)
 800529c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80052a0:	080052f9 	.word	0x080052f9
 80052a4:	0800530d 	.word	0x0800530d
 80052a8:	08005289 	.word	0x08005289
 80052ac:	08005289 	.word	0x08005289
 80052b0:	08005289 	.word	0x08005289
 80052b4:	08005289 	.word	0x08005289
 80052b8:	0800530d 	.word	0x0800530d
 80052bc:	08005289 	.word	0x08005289
 80052c0:	08005289 	.word	0x08005289
 80052c4:	08005289 	.word	0x08005289
 80052c8:	08005289 	.word	0x08005289
 80052cc:	0800540b 	.word	0x0800540b
 80052d0:	08005337 	.word	0x08005337
 80052d4:	080053c5 	.word	0x080053c5
 80052d8:	08005289 	.word	0x08005289
 80052dc:	08005289 	.word	0x08005289
 80052e0:	0800542d 	.word	0x0800542d
 80052e4:	08005289 	.word	0x08005289
 80052e8:	08005337 	.word	0x08005337
 80052ec:	08005289 	.word	0x08005289
 80052f0:	08005289 	.word	0x08005289
 80052f4:	080053cd 	.word	0x080053cd
 80052f8:	6833      	ldr	r3, [r6, #0]
 80052fa:	1d1a      	adds	r2, r3, #4
 80052fc:	681b      	ldr	r3, [r3, #0]
 80052fe:	6032      	str	r2, [r6, #0]
 8005300:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8005304:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8005308:	2301      	movs	r3, #1
 800530a:	e09c      	b.n	8005446 <_printf_i+0x1e6>
 800530c:	6833      	ldr	r3, [r6, #0]
 800530e:	6820      	ldr	r0, [r4, #0]
 8005310:	1d19      	adds	r1, r3, #4
 8005312:	6031      	str	r1, [r6, #0]
 8005314:	0606      	lsls	r6, r0, #24
 8005316:	d501      	bpl.n	800531c <_printf_i+0xbc>
 8005318:	681d      	ldr	r5, [r3, #0]
 800531a:	e003      	b.n	8005324 <_printf_i+0xc4>
 800531c:	0645      	lsls	r5, r0, #25
 800531e:	d5fb      	bpl.n	8005318 <_printf_i+0xb8>
 8005320:	f9b3 5000 	ldrsh.w	r5, [r3]
 8005324:	2d00      	cmp	r5, #0
 8005326:	da03      	bge.n	8005330 <_printf_i+0xd0>
 8005328:	232d      	movs	r3, #45	@ 0x2d
 800532a:	426d      	negs	r5, r5
 800532c:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8005330:	4858      	ldr	r0, [pc, #352]	@ (8005494 <_printf_i+0x234>)
 8005332:	230a      	movs	r3, #10
 8005334:	e011      	b.n	800535a <_printf_i+0xfa>
 8005336:	6821      	ldr	r1, [r4, #0]
 8005338:	6833      	ldr	r3, [r6, #0]
 800533a:	0608      	lsls	r0, r1, #24
 800533c:	f853 5b04 	ldr.w	r5, [r3], #4
 8005340:	d402      	bmi.n	8005348 <_printf_i+0xe8>
 8005342:	0649      	lsls	r1, r1, #25
 8005344:	bf48      	it	mi
 8005346:	b2ad      	uxthmi	r5, r5
 8005348:	2f6f      	cmp	r7, #111	@ 0x6f
 800534a:	4852      	ldr	r0, [pc, #328]	@ (8005494 <_printf_i+0x234>)
 800534c:	6033      	str	r3, [r6, #0]
 800534e:	bf14      	ite	ne
 8005350:	230a      	movne	r3, #10
 8005352:	2308      	moveq	r3, #8
 8005354:	2100      	movs	r1, #0
 8005356:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 800535a:	6866      	ldr	r6, [r4, #4]
 800535c:	60a6      	str	r6, [r4, #8]
 800535e:	2e00      	cmp	r6, #0
 8005360:	db05      	blt.n	800536e <_printf_i+0x10e>
 8005362:	6821      	ldr	r1, [r4, #0]
 8005364:	432e      	orrs	r6, r5
 8005366:	f021 0104 	bic.w	r1, r1, #4
 800536a:	6021      	str	r1, [r4, #0]
 800536c:	d04b      	beq.n	8005406 <_printf_i+0x1a6>
 800536e:	4616      	mov	r6, r2
 8005370:	fbb5 f1f3 	udiv	r1, r5, r3
 8005374:	fb03 5711 	mls	r7, r3, r1, r5
 8005378:	5dc7      	ldrb	r7, [r0, r7]
 800537a:	f806 7d01 	strb.w	r7, [r6, #-1]!
 800537e:	462f      	mov	r7, r5
 8005380:	42bb      	cmp	r3, r7
 8005382:	460d      	mov	r5, r1
 8005384:	d9f4      	bls.n	8005370 <_printf_i+0x110>
 8005386:	2b08      	cmp	r3, #8
 8005388:	d10b      	bne.n	80053a2 <_printf_i+0x142>
 800538a:	6823      	ldr	r3, [r4, #0]
 800538c:	07df      	lsls	r7, r3, #31
 800538e:	d508      	bpl.n	80053a2 <_printf_i+0x142>
 8005390:	6923      	ldr	r3, [r4, #16]
 8005392:	6861      	ldr	r1, [r4, #4]
 8005394:	4299      	cmp	r1, r3
 8005396:	bfde      	ittt	le
 8005398:	2330      	movle	r3, #48	@ 0x30
 800539a:	f806 3c01 	strble.w	r3, [r6, #-1]
 800539e:	f106 36ff 	addle.w	r6, r6, #4294967295
 80053a2:	1b92      	subs	r2, r2, r6
 80053a4:	6122      	str	r2, [r4, #16]
 80053a6:	f8cd a000 	str.w	sl, [sp]
 80053aa:	464b      	mov	r3, r9
 80053ac:	aa03      	add	r2, sp, #12
 80053ae:	4621      	mov	r1, r4
 80053b0:	4640      	mov	r0, r8
 80053b2:	f7ff fee7 	bl	8005184 <_printf_common>
 80053b6:	3001      	adds	r0, #1
 80053b8:	d14a      	bne.n	8005450 <_printf_i+0x1f0>
 80053ba:	f04f 30ff 	mov.w	r0, #4294967295
 80053be:	b004      	add	sp, #16
 80053c0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80053c4:	6823      	ldr	r3, [r4, #0]
 80053c6:	f043 0320 	orr.w	r3, r3, #32
 80053ca:	6023      	str	r3, [r4, #0]
 80053cc:	4832      	ldr	r0, [pc, #200]	@ (8005498 <_printf_i+0x238>)
 80053ce:	2778      	movs	r7, #120	@ 0x78
 80053d0:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 80053d4:	6823      	ldr	r3, [r4, #0]
 80053d6:	6831      	ldr	r1, [r6, #0]
 80053d8:	061f      	lsls	r7, r3, #24
 80053da:	f851 5b04 	ldr.w	r5, [r1], #4
 80053de:	d402      	bmi.n	80053e6 <_printf_i+0x186>
 80053e0:	065f      	lsls	r7, r3, #25
 80053e2:	bf48      	it	mi
 80053e4:	b2ad      	uxthmi	r5, r5
 80053e6:	6031      	str	r1, [r6, #0]
 80053e8:	07d9      	lsls	r1, r3, #31
 80053ea:	bf44      	itt	mi
 80053ec:	f043 0320 	orrmi.w	r3, r3, #32
 80053f0:	6023      	strmi	r3, [r4, #0]
 80053f2:	b11d      	cbz	r5, 80053fc <_printf_i+0x19c>
 80053f4:	2310      	movs	r3, #16
 80053f6:	e7ad      	b.n	8005354 <_printf_i+0xf4>
 80053f8:	4826      	ldr	r0, [pc, #152]	@ (8005494 <_printf_i+0x234>)
 80053fa:	e7e9      	b.n	80053d0 <_printf_i+0x170>
 80053fc:	6823      	ldr	r3, [r4, #0]
 80053fe:	f023 0320 	bic.w	r3, r3, #32
 8005402:	6023      	str	r3, [r4, #0]
 8005404:	e7f6      	b.n	80053f4 <_printf_i+0x194>
 8005406:	4616      	mov	r6, r2
 8005408:	e7bd      	b.n	8005386 <_printf_i+0x126>
 800540a:	6833      	ldr	r3, [r6, #0]
 800540c:	6825      	ldr	r5, [r4, #0]
 800540e:	6961      	ldr	r1, [r4, #20]
 8005410:	1d18      	adds	r0, r3, #4
 8005412:	6030      	str	r0, [r6, #0]
 8005414:	062e      	lsls	r6, r5, #24
 8005416:	681b      	ldr	r3, [r3, #0]
 8005418:	d501      	bpl.n	800541e <_printf_i+0x1be>
 800541a:	6019      	str	r1, [r3, #0]
 800541c:	e002      	b.n	8005424 <_printf_i+0x1c4>
 800541e:	0668      	lsls	r0, r5, #25
 8005420:	d5fb      	bpl.n	800541a <_printf_i+0x1ba>
 8005422:	8019      	strh	r1, [r3, #0]
 8005424:	2300      	movs	r3, #0
 8005426:	6123      	str	r3, [r4, #16]
 8005428:	4616      	mov	r6, r2
 800542a:	e7bc      	b.n	80053a6 <_printf_i+0x146>
 800542c:	6833      	ldr	r3, [r6, #0]
 800542e:	1d1a      	adds	r2, r3, #4
 8005430:	6032      	str	r2, [r6, #0]
 8005432:	681e      	ldr	r6, [r3, #0]
 8005434:	6862      	ldr	r2, [r4, #4]
 8005436:	2100      	movs	r1, #0
 8005438:	4630      	mov	r0, r6
 800543a:	f7fa fee1 	bl	8000200 <memchr>
 800543e:	b108      	cbz	r0, 8005444 <_printf_i+0x1e4>
 8005440:	1b80      	subs	r0, r0, r6
 8005442:	6060      	str	r0, [r4, #4]
 8005444:	6863      	ldr	r3, [r4, #4]
 8005446:	6123      	str	r3, [r4, #16]
 8005448:	2300      	movs	r3, #0
 800544a:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800544e:	e7aa      	b.n	80053a6 <_printf_i+0x146>
 8005450:	6923      	ldr	r3, [r4, #16]
 8005452:	4632      	mov	r2, r6
 8005454:	4649      	mov	r1, r9
 8005456:	4640      	mov	r0, r8
 8005458:	47d0      	blx	sl
 800545a:	3001      	adds	r0, #1
 800545c:	d0ad      	beq.n	80053ba <_printf_i+0x15a>
 800545e:	6823      	ldr	r3, [r4, #0]
 8005460:	079b      	lsls	r3, r3, #30
 8005462:	d413      	bmi.n	800548c <_printf_i+0x22c>
 8005464:	68e0      	ldr	r0, [r4, #12]
 8005466:	9b03      	ldr	r3, [sp, #12]
 8005468:	4298      	cmp	r0, r3
 800546a:	bfb8      	it	lt
 800546c:	4618      	movlt	r0, r3
 800546e:	e7a6      	b.n	80053be <_printf_i+0x15e>
 8005470:	2301      	movs	r3, #1
 8005472:	4632      	mov	r2, r6
 8005474:	4649      	mov	r1, r9
 8005476:	4640      	mov	r0, r8
 8005478:	47d0      	blx	sl
 800547a:	3001      	adds	r0, #1
 800547c:	d09d      	beq.n	80053ba <_printf_i+0x15a>
 800547e:	3501      	adds	r5, #1
 8005480:	68e3      	ldr	r3, [r4, #12]
 8005482:	9903      	ldr	r1, [sp, #12]
 8005484:	1a5b      	subs	r3, r3, r1
 8005486:	42ab      	cmp	r3, r5
 8005488:	dcf2      	bgt.n	8005470 <_printf_i+0x210>
 800548a:	e7eb      	b.n	8005464 <_printf_i+0x204>
 800548c:	2500      	movs	r5, #0
 800548e:	f104 0619 	add.w	r6, r4, #25
 8005492:	e7f5      	b.n	8005480 <_printf_i+0x220>
 8005494:	08005ae9 	.word	0x08005ae9
 8005498:	08005afa 	.word	0x08005afa

0800549c <memmove>:
 800549c:	4288      	cmp	r0, r1
 800549e:	b510      	push	{r4, lr}
 80054a0:	eb01 0402 	add.w	r4, r1, r2
 80054a4:	d902      	bls.n	80054ac <memmove+0x10>
 80054a6:	4284      	cmp	r4, r0
 80054a8:	4623      	mov	r3, r4
 80054aa:	d807      	bhi.n	80054bc <memmove+0x20>
 80054ac:	1e43      	subs	r3, r0, #1
 80054ae:	42a1      	cmp	r1, r4
 80054b0:	d008      	beq.n	80054c4 <memmove+0x28>
 80054b2:	f811 2b01 	ldrb.w	r2, [r1], #1
 80054b6:	f803 2f01 	strb.w	r2, [r3, #1]!
 80054ba:	e7f8      	b.n	80054ae <memmove+0x12>
 80054bc:	4402      	add	r2, r0
 80054be:	4601      	mov	r1, r0
 80054c0:	428a      	cmp	r2, r1
 80054c2:	d100      	bne.n	80054c6 <memmove+0x2a>
 80054c4:	bd10      	pop	{r4, pc}
 80054c6:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80054ca:	f802 4d01 	strb.w	r4, [r2, #-1]!
 80054ce:	e7f7      	b.n	80054c0 <memmove+0x24>

080054d0 <_sbrk_r>:
 80054d0:	b538      	push	{r3, r4, r5, lr}
 80054d2:	4d06      	ldr	r5, [pc, #24]	@ (80054ec <_sbrk_r+0x1c>)
 80054d4:	2300      	movs	r3, #0
 80054d6:	4604      	mov	r4, r0
 80054d8:	4608      	mov	r0, r1
 80054da:	602b      	str	r3, [r5, #0]
 80054dc:	f7fc f84e 	bl	800157c <_sbrk>
 80054e0:	1c43      	adds	r3, r0, #1
 80054e2:	d102      	bne.n	80054ea <_sbrk_r+0x1a>
 80054e4:	682b      	ldr	r3, [r5, #0]
 80054e6:	b103      	cbz	r3, 80054ea <_sbrk_r+0x1a>
 80054e8:	6023      	str	r3, [r4, #0]
 80054ea:	bd38      	pop	{r3, r4, r5, pc}
 80054ec:	200003e4 	.word	0x200003e4

080054f0 <memcpy>:
 80054f0:	440a      	add	r2, r1
 80054f2:	4291      	cmp	r1, r2
 80054f4:	f100 33ff 	add.w	r3, r0, #4294967295
 80054f8:	d100      	bne.n	80054fc <memcpy+0xc>
 80054fa:	4770      	bx	lr
 80054fc:	b510      	push	{r4, lr}
 80054fe:	f811 4b01 	ldrb.w	r4, [r1], #1
 8005502:	f803 4f01 	strb.w	r4, [r3, #1]!
 8005506:	4291      	cmp	r1, r2
 8005508:	d1f9      	bne.n	80054fe <memcpy+0xe>
 800550a:	bd10      	pop	{r4, pc}

0800550c <_realloc_r>:
 800550c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005510:	4607      	mov	r7, r0
 8005512:	4614      	mov	r4, r2
 8005514:	460d      	mov	r5, r1
 8005516:	b921      	cbnz	r1, 8005522 <_realloc_r+0x16>
 8005518:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800551c:	4611      	mov	r1, r2
 800551e:	f7ff bc4d 	b.w	8004dbc <_malloc_r>
 8005522:	b92a      	cbnz	r2, 8005530 <_realloc_r+0x24>
 8005524:	f7ff fbde 	bl	8004ce4 <_free_r>
 8005528:	4625      	mov	r5, r4
 800552a:	4628      	mov	r0, r5
 800552c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005530:	f000 f81a 	bl	8005568 <_malloc_usable_size_r>
 8005534:	4284      	cmp	r4, r0
 8005536:	4606      	mov	r6, r0
 8005538:	d802      	bhi.n	8005540 <_realloc_r+0x34>
 800553a:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 800553e:	d8f4      	bhi.n	800552a <_realloc_r+0x1e>
 8005540:	4621      	mov	r1, r4
 8005542:	4638      	mov	r0, r7
 8005544:	f7ff fc3a 	bl	8004dbc <_malloc_r>
 8005548:	4680      	mov	r8, r0
 800554a:	b908      	cbnz	r0, 8005550 <_realloc_r+0x44>
 800554c:	4645      	mov	r5, r8
 800554e:	e7ec      	b.n	800552a <_realloc_r+0x1e>
 8005550:	42b4      	cmp	r4, r6
 8005552:	4622      	mov	r2, r4
 8005554:	4629      	mov	r1, r5
 8005556:	bf28      	it	cs
 8005558:	4632      	movcs	r2, r6
 800555a:	f7ff ffc9 	bl	80054f0 <memcpy>
 800555e:	4629      	mov	r1, r5
 8005560:	4638      	mov	r0, r7
 8005562:	f7ff fbbf 	bl	8004ce4 <_free_r>
 8005566:	e7f1      	b.n	800554c <_realloc_r+0x40>

08005568 <_malloc_usable_size_r>:
 8005568:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800556c:	1f18      	subs	r0, r3, #4
 800556e:	2b00      	cmp	r3, #0
 8005570:	bfbc      	itt	lt
 8005572:	580b      	ldrlt	r3, [r1, r0]
 8005574:	18c0      	addlt	r0, r0, r3
 8005576:	4770      	bx	lr

08005578 <_init>:
 8005578:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800557a:	bf00      	nop
 800557c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800557e:	bc08      	pop	{r3}
 8005580:	469e      	mov	lr, r3
 8005582:	4770      	bx	lr

08005584 <_fini>:
 8005584:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005586:	bf00      	nop
 8005588:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800558a:	bc08      	pop	{r3}
 800558c:	469e      	mov	lr, r3
 800558e:	4770      	bx	lr
