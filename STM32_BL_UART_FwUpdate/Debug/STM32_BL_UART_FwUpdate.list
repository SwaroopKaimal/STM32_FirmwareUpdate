
STM32_BL_UART_FwUpdate.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000052cc  080001b0  080001b0  000011b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000048c  0800547c  0800547c  0000647c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08005908  08005908  00007088  2**0
                  CONTENTS, READONLY
  4 .ARM          00000008  08005908  08005908  00006908  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08005910  08005910  00007088  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08005910  08005910  00006910  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08005914  08005914  00006914  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000088  20000000  08005918  00007000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000368  20000088  080059a0  00007088  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200003f0  080059a0  000073f0  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00007088  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000cd2b  00000000  00000000  000070b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00002256  00000000  00000000  00013de3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000b88  00000000  00000000  00016040  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000008dd  00000000  00000000  00016bc8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00028dfd  00000000  00000000  000174a5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000e57e  00000000  00000000  000402a2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000f7ad9  00000000  00000000  0004e820  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  001462f9  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00003324  00000000  00000000  0014633c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000074  00000000  00000000  00149660  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	@ (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	@ (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	@ (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000088 	.word	0x20000088
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08005464 	.word	0x08005464

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	@ (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	@ (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	@ (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	2000008c 	.word	0x2000008c
 80001ec:	08005464 	.word	0x08005464

080001f0 <strlen>:
 80001f0:	4603      	mov	r3, r0
 80001f2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001f6:	2a00      	cmp	r2, #0
 80001f8:	d1fb      	bne.n	80001f2 <strlen+0x2>
 80001fa:	1a18      	subs	r0, r3, r0
 80001fc:	3801      	subs	r0, #1
 80001fe:	4770      	bx	lr

08000200 <memchr>:
 8000200:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000204:	2a10      	cmp	r2, #16
 8000206:	db2b      	blt.n	8000260 <memchr+0x60>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	d008      	beq.n	8000220 <memchr+0x20>
 800020e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000212:	3a01      	subs	r2, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d02d      	beq.n	8000274 <memchr+0x74>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	b342      	cbz	r2, 8000270 <memchr+0x70>
 800021e:	d1f6      	bne.n	800020e <memchr+0xe>
 8000220:	b4f0      	push	{r4, r5, r6, r7}
 8000222:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000226:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800022a:	f022 0407 	bic.w	r4, r2, #7
 800022e:	f07f 0700 	mvns.w	r7, #0
 8000232:	2300      	movs	r3, #0
 8000234:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000238:	3c08      	subs	r4, #8
 800023a:	ea85 0501 	eor.w	r5, r5, r1
 800023e:	ea86 0601 	eor.w	r6, r6, r1
 8000242:	fa85 f547 	uadd8	r5, r5, r7
 8000246:	faa3 f587 	sel	r5, r3, r7
 800024a:	fa86 f647 	uadd8	r6, r6, r7
 800024e:	faa5 f687 	sel	r6, r5, r7
 8000252:	b98e      	cbnz	r6, 8000278 <memchr+0x78>
 8000254:	d1ee      	bne.n	8000234 <memchr+0x34>
 8000256:	bcf0      	pop	{r4, r5, r6, r7}
 8000258:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800025c:	f002 0207 	and.w	r2, r2, #7
 8000260:	b132      	cbz	r2, 8000270 <memchr+0x70>
 8000262:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000266:	3a01      	subs	r2, #1
 8000268:	ea83 0301 	eor.w	r3, r3, r1
 800026c:	b113      	cbz	r3, 8000274 <memchr+0x74>
 800026e:	d1f8      	bne.n	8000262 <memchr+0x62>
 8000270:	2000      	movs	r0, #0
 8000272:	4770      	bx	lr
 8000274:	3801      	subs	r0, #1
 8000276:	4770      	bx	lr
 8000278:	2d00      	cmp	r5, #0
 800027a:	bf06      	itte	eq
 800027c:	4635      	moveq	r5, r6
 800027e:	3803      	subeq	r0, #3
 8000280:	3807      	subne	r0, #7
 8000282:	f015 0f01 	tst.w	r5, #1
 8000286:	d107      	bne.n	8000298 <memchr+0x98>
 8000288:	3001      	adds	r0, #1
 800028a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800028e:	bf02      	ittt	eq
 8000290:	3001      	addeq	r0, #1
 8000292:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000296:	3001      	addeq	r0, #1
 8000298:	bcf0      	pop	{r4, r5, r6, r7}
 800029a:	3801      	subs	r0, #1
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop

080002a0 <__aeabi_uldivmod>:
 80002a0:	b953      	cbnz	r3, 80002b8 <__aeabi_uldivmod+0x18>
 80002a2:	b94a      	cbnz	r2, 80002b8 <__aeabi_uldivmod+0x18>
 80002a4:	2900      	cmp	r1, #0
 80002a6:	bf08      	it	eq
 80002a8:	2800      	cmpeq	r0, #0
 80002aa:	bf1c      	itt	ne
 80002ac:	f04f 31ff 	movne.w	r1, #4294967295
 80002b0:	f04f 30ff 	movne.w	r0, #4294967295
 80002b4:	f000 b988 	b.w	80005c8 <__aeabi_idiv0>
 80002b8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002bc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002c0:	f000 f806 	bl	80002d0 <__udivmoddi4>
 80002c4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002c8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002cc:	b004      	add	sp, #16
 80002ce:	4770      	bx	lr

080002d0 <__udivmoddi4>:
 80002d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002d4:	9d08      	ldr	r5, [sp, #32]
 80002d6:	468e      	mov	lr, r1
 80002d8:	4604      	mov	r4, r0
 80002da:	4688      	mov	r8, r1
 80002dc:	2b00      	cmp	r3, #0
 80002de:	d14a      	bne.n	8000376 <__udivmoddi4+0xa6>
 80002e0:	428a      	cmp	r2, r1
 80002e2:	4617      	mov	r7, r2
 80002e4:	d962      	bls.n	80003ac <__udivmoddi4+0xdc>
 80002e6:	fab2 f682 	clz	r6, r2
 80002ea:	b14e      	cbz	r6, 8000300 <__udivmoddi4+0x30>
 80002ec:	f1c6 0320 	rsb	r3, r6, #32
 80002f0:	fa01 f806 	lsl.w	r8, r1, r6
 80002f4:	fa20 f303 	lsr.w	r3, r0, r3
 80002f8:	40b7      	lsls	r7, r6
 80002fa:	ea43 0808 	orr.w	r8, r3, r8
 80002fe:	40b4      	lsls	r4, r6
 8000300:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000304:	fa1f fc87 	uxth.w	ip, r7
 8000308:	fbb8 f1fe 	udiv	r1, r8, lr
 800030c:	0c23      	lsrs	r3, r4, #16
 800030e:	fb0e 8811 	mls	r8, lr, r1, r8
 8000312:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000316:	fb01 f20c 	mul.w	r2, r1, ip
 800031a:	429a      	cmp	r2, r3
 800031c:	d909      	bls.n	8000332 <__udivmoddi4+0x62>
 800031e:	18fb      	adds	r3, r7, r3
 8000320:	f101 30ff 	add.w	r0, r1, #4294967295
 8000324:	f080 80ea 	bcs.w	80004fc <__udivmoddi4+0x22c>
 8000328:	429a      	cmp	r2, r3
 800032a:	f240 80e7 	bls.w	80004fc <__udivmoddi4+0x22c>
 800032e:	3902      	subs	r1, #2
 8000330:	443b      	add	r3, r7
 8000332:	1a9a      	subs	r2, r3, r2
 8000334:	b2a3      	uxth	r3, r4
 8000336:	fbb2 f0fe 	udiv	r0, r2, lr
 800033a:	fb0e 2210 	mls	r2, lr, r0, r2
 800033e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000342:	fb00 fc0c 	mul.w	ip, r0, ip
 8000346:	459c      	cmp	ip, r3
 8000348:	d909      	bls.n	800035e <__udivmoddi4+0x8e>
 800034a:	18fb      	adds	r3, r7, r3
 800034c:	f100 32ff 	add.w	r2, r0, #4294967295
 8000350:	f080 80d6 	bcs.w	8000500 <__udivmoddi4+0x230>
 8000354:	459c      	cmp	ip, r3
 8000356:	f240 80d3 	bls.w	8000500 <__udivmoddi4+0x230>
 800035a:	443b      	add	r3, r7
 800035c:	3802      	subs	r0, #2
 800035e:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000362:	eba3 030c 	sub.w	r3, r3, ip
 8000366:	2100      	movs	r1, #0
 8000368:	b11d      	cbz	r5, 8000372 <__udivmoddi4+0xa2>
 800036a:	40f3      	lsrs	r3, r6
 800036c:	2200      	movs	r2, #0
 800036e:	e9c5 3200 	strd	r3, r2, [r5]
 8000372:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000376:	428b      	cmp	r3, r1
 8000378:	d905      	bls.n	8000386 <__udivmoddi4+0xb6>
 800037a:	b10d      	cbz	r5, 8000380 <__udivmoddi4+0xb0>
 800037c:	e9c5 0100 	strd	r0, r1, [r5]
 8000380:	2100      	movs	r1, #0
 8000382:	4608      	mov	r0, r1
 8000384:	e7f5      	b.n	8000372 <__udivmoddi4+0xa2>
 8000386:	fab3 f183 	clz	r1, r3
 800038a:	2900      	cmp	r1, #0
 800038c:	d146      	bne.n	800041c <__udivmoddi4+0x14c>
 800038e:	4573      	cmp	r3, lr
 8000390:	d302      	bcc.n	8000398 <__udivmoddi4+0xc8>
 8000392:	4282      	cmp	r2, r0
 8000394:	f200 8105 	bhi.w	80005a2 <__udivmoddi4+0x2d2>
 8000398:	1a84      	subs	r4, r0, r2
 800039a:	eb6e 0203 	sbc.w	r2, lr, r3
 800039e:	2001      	movs	r0, #1
 80003a0:	4690      	mov	r8, r2
 80003a2:	2d00      	cmp	r5, #0
 80003a4:	d0e5      	beq.n	8000372 <__udivmoddi4+0xa2>
 80003a6:	e9c5 4800 	strd	r4, r8, [r5]
 80003aa:	e7e2      	b.n	8000372 <__udivmoddi4+0xa2>
 80003ac:	2a00      	cmp	r2, #0
 80003ae:	f000 8090 	beq.w	80004d2 <__udivmoddi4+0x202>
 80003b2:	fab2 f682 	clz	r6, r2
 80003b6:	2e00      	cmp	r6, #0
 80003b8:	f040 80a4 	bne.w	8000504 <__udivmoddi4+0x234>
 80003bc:	1a8a      	subs	r2, r1, r2
 80003be:	0c03      	lsrs	r3, r0, #16
 80003c0:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 80003c4:	b280      	uxth	r0, r0
 80003c6:	b2bc      	uxth	r4, r7
 80003c8:	2101      	movs	r1, #1
 80003ca:	fbb2 fcfe 	udiv	ip, r2, lr
 80003ce:	fb0e 221c 	mls	r2, lr, ip, r2
 80003d2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80003d6:	fb04 f20c 	mul.w	r2, r4, ip
 80003da:	429a      	cmp	r2, r3
 80003dc:	d907      	bls.n	80003ee <__udivmoddi4+0x11e>
 80003de:	18fb      	adds	r3, r7, r3
 80003e0:	f10c 38ff 	add.w	r8, ip, #4294967295
 80003e4:	d202      	bcs.n	80003ec <__udivmoddi4+0x11c>
 80003e6:	429a      	cmp	r2, r3
 80003e8:	f200 80e0 	bhi.w	80005ac <__udivmoddi4+0x2dc>
 80003ec:	46c4      	mov	ip, r8
 80003ee:	1a9b      	subs	r3, r3, r2
 80003f0:	fbb3 f2fe 	udiv	r2, r3, lr
 80003f4:	fb0e 3312 	mls	r3, lr, r2, r3
 80003f8:	ea40 4303 	orr.w	r3, r0, r3, lsl #16
 80003fc:	fb02 f404 	mul.w	r4, r2, r4
 8000400:	429c      	cmp	r4, r3
 8000402:	d907      	bls.n	8000414 <__udivmoddi4+0x144>
 8000404:	18fb      	adds	r3, r7, r3
 8000406:	f102 30ff 	add.w	r0, r2, #4294967295
 800040a:	d202      	bcs.n	8000412 <__udivmoddi4+0x142>
 800040c:	429c      	cmp	r4, r3
 800040e:	f200 80ca 	bhi.w	80005a6 <__udivmoddi4+0x2d6>
 8000412:	4602      	mov	r2, r0
 8000414:	1b1b      	subs	r3, r3, r4
 8000416:	ea42 400c 	orr.w	r0, r2, ip, lsl #16
 800041a:	e7a5      	b.n	8000368 <__udivmoddi4+0x98>
 800041c:	f1c1 0620 	rsb	r6, r1, #32
 8000420:	408b      	lsls	r3, r1
 8000422:	fa22 f706 	lsr.w	r7, r2, r6
 8000426:	431f      	orrs	r7, r3
 8000428:	fa0e f401 	lsl.w	r4, lr, r1
 800042c:	fa20 f306 	lsr.w	r3, r0, r6
 8000430:	fa2e fe06 	lsr.w	lr, lr, r6
 8000434:	ea4f 4917 	mov.w	r9, r7, lsr #16
 8000438:	4323      	orrs	r3, r4
 800043a:	fa00 f801 	lsl.w	r8, r0, r1
 800043e:	fa1f fc87 	uxth.w	ip, r7
 8000442:	fbbe f0f9 	udiv	r0, lr, r9
 8000446:	0c1c      	lsrs	r4, r3, #16
 8000448:	fb09 ee10 	mls	lr, r9, r0, lr
 800044c:	ea44 440e 	orr.w	r4, r4, lr, lsl #16
 8000450:	fb00 fe0c 	mul.w	lr, r0, ip
 8000454:	45a6      	cmp	lr, r4
 8000456:	fa02 f201 	lsl.w	r2, r2, r1
 800045a:	d909      	bls.n	8000470 <__udivmoddi4+0x1a0>
 800045c:	193c      	adds	r4, r7, r4
 800045e:	f100 3aff 	add.w	sl, r0, #4294967295
 8000462:	f080 809c 	bcs.w	800059e <__udivmoddi4+0x2ce>
 8000466:	45a6      	cmp	lr, r4
 8000468:	f240 8099 	bls.w	800059e <__udivmoddi4+0x2ce>
 800046c:	3802      	subs	r0, #2
 800046e:	443c      	add	r4, r7
 8000470:	eba4 040e 	sub.w	r4, r4, lr
 8000474:	fa1f fe83 	uxth.w	lr, r3
 8000478:	fbb4 f3f9 	udiv	r3, r4, r9
 800047c:	fb09 4413 	mls	r4, r9, r3, r4
 8000480:	ea4e 4404 	orr.w	r4, lr, r4, lsl #16
 8000484:	fb03 fc0c 	mul.w	ip, r3, ip
 8000488:	45a4      	cmp	ip, r4
 800048a:	d908      	bls.n	800049e <__udivmoddi4+0x1ce>
 800048c:	193c      	adds	r4, r7, r4
 800048e:	f103 3eff 	add.w	lr, r3, #4294967295
 8000492:	f080 8082 	bcs.w	800059a <__udivmoddi4+0x2ca>
 8000496:	45a4      	cmp	ip, r4
 8000498:	d97f      	bls.n	800059a <__udivmoddi4+0x2ca>
 800049a:	3b02      	subs	r3, #2
 800049c:	443c      	add	r4, r7
 800049e:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 80004a2:	eba4 040c 	sub.w	r4, r4, ip
 80004a6:	fba0 ec02 	umull	lr, ip, r0, r2
 80004aa:	4564      	cmp	r4, ip
 80004ac:	4673      	mov	r3, lr
 80004ae:	46e1      	mov	r9, ip
 80004b0:	d362      	bcc.n	8000578 <__udivmoddi4+0x2a8>
 80004b2:	d05f      	beq.n	8000574 <__udivmoddi4+0x2a4>
 80004b4:	b15d      	cbz	r5, 80004ce <__udivmoddi4+0x1fe>
 80004b6:	ebb8 0203 	subs.w	r2, r8, r3
 80004ba:	eb64 0409 	sbc.w	r4, r4, r9
 80004be:	fa04 f606 	lsl.w	r6, r4, r6
 80004c2:	fa22 f301 	lsr.w	r3, r2, r1
 80004c6:	431e      	orrs	r6, r3
 80004c8:	40cc      	lsrs	r4, r1
 80004ca:	e9c5 6400 	strd	r6, r4, [r5]
 80004ce:	2100      	movs	r1, #0
 80004d0:	e74f      	b.n	8000372 <__udivmoddi4+0xa2>
 80004d2:	fbb1 fcf2 	udiv	ip, r1, r2
 80004d6:	0c01      	lsrs	r1, r0, #16
 80004d8:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
 80004dc:	b280      	uxth	r0, r0
 80004de:	ea40 4201 	orr.w	r2, r0, r1, lsl #16
 80004e2:	463b      	mov	r3, r7
 80004e4:	4638      	mov	r0, r7
 80004e6:	463c      	mov	r4, r7
 80004e8:	46b8      	mov	r8, r7
 80004ea:	46be      	mov	lr, r7
 80004ec:	2620      	movs	r6, #32
 80004ee:	fbb1 f1f7 	udiv	r1, r1, r7
 80004f2:	eba2 0208 	sub.w	r2, r2, r8
 80004f6:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
 80004fa:	e766      	b.n	80003ca <__udivmoddi4+0xfa>
 80004fc:	4601      	mov	r1, r0
 80004fe:	e718      	b.n	8000332 <__udivmoddi4+0x62>
 8000500:	4610      	mov	r0, r2
 8000502:	e72c      	b.n	800035e <__udivmoddi4+0x8e>
 8000504:	f1c6 0220 	rsb	r2, r6, #32
 8000508:	fa2e f302 	lsr.w	r3, lr, r2
 800050c:	40b7      	lsls	r7, r6
 800050e:	40b1      	lsls	r1, r6
 8000510:	fa20 f202 	lsr.w	r2, r0, r2
 8000514:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000518:	430a      	orrs	r2, r1
 800051a:	fbb3 f8fe 	udiv	r8, r3, lr
 800051e:	b2bc      	uxth	r4, r7
 8000520:	fb0e 3318 	mls	r3, lr, r8, r3
 8000524:	0c11      	lsrs	r1, r2, #16
 8000526:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 800052a:	fb08 f904 	mul.w	r9, r8, r4
 800052e:	40b0      	lsls	r0, r6
 8000530:	4589      	cmp	r9, r1
 8000532:	ea4f 4310 	mov.w	r3, r0, lsr #16
 8000536:	b280      	uxth	r0, r0
 8000538:	d93e      	bls.n	80005b8 <__udivmoddi4+0x2e8>
 800053a:	1879      	adds	r1, r7, r1
 800053c:	f108 3cff 	add.w	ip, r8, #4294967295
 8000540:	d201      	bcs.n	8000546 <__udivmoddi4+0x276>
 8000542:	4589      	cmp	r9, r1
 8000544:	d81f      	bhi.n	8000586 <__udivmoddi4+0x2b6>
 8000546:	eba1 0109 	sub.w	r1, r1, r9
 800054a:	fbb1 f9fe 	udiv	r9, r1, lr
 800054e:	fb09 f804 	mul.w	r8, r9, r4
 8000552:	fb0e 1119 	mls	r1, lr, r9, r1
 8000556:	b292      	uxth	r2, r2
 8000558:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800055c:	4542      	cmp	r2, r8
 800055e:	d229      	bcs.n	80005b4 <__udivmoddi4+0x2e4>
 8000560:	18ba      	adds	r2, r7, r2
 8000562:	f109 31ff 	add.w	r1, r9, #4294967295
 8000566:	d2c4      	bcs.n	80004f2 <__udivmoddi4+0x222>
 8000568:	4542      	cmp	r2, r8
 800056a:	d2c2      	bcs.n	80004f2 <__udivmoddi4+0x222>
 800056c:	f1a9 0102 	sub.w	r1, r9, #2
 8000570:	443a      	add	r2, r7
 8000572:	e7be      	b.n	80004f2 <__udivmoddi4+0x222>
 8000574:	45f0      	cmp	r8, lr
 8000576:	d29d      	bcs.n	80004b4 <__udivmoddi4+0x1e4>
 8000578:	ebbe 0302 	subs.w	r3, lr, r2
 800057c:	eb6c 0c07 	sbc.w	ip, ip, r7
 8000580:	3801      	subs	r0, #1
 8000582:	46e1      	mov	r9, ip
 8000584:	e796      	b.n	80004b4 <__udivmoddi4+0x1e4>
 8000586:	eba7 0909 	sub.w	r9, r7, r9
 800058a:	4449      	add	r1, r9
 800058c:	f1a8 0c02 	sub.w	ip, r8, #2
 8000590:	fbb1 f9fe 	udiv	r9, r1, lr
 8000594:	fb09 f804 	mul.w	r8, r9, r4
 8000598:	e7db      	b.n	8000552 <__udivmoddi4+0x282>
 800059a:	4673      	mov	r3, lr
 800059c:	e77f      	b.n	800049e <__udivmoddi4+0x1ce>
 800059e:	4650      	mov	r0, sl
 80005a0:	e766      	b.n	8000470 <__udivmoddi4+0x1a0>
 80005a2:	4608      	mov	r0, r1
 80005a4:	e6fd      	b.n	80003a2 <__udivmoddi4+0xd2>
 80005a6:	443b      	add	r3, r7
 80005a8:	3a02      	subs	r2, #2
 80005aa:	e733      	b.n	8000414 <__udivmoddi4+0x144>
 80005ac:	f1ac 0c02 	sub.w	ip, ip, #2
 80005b0:	443b      	add	r3, r7
 80005b2:	e71c      	b.n	80003ee <__udivmoddi4+0x11e>
 80005b4:	4649      	mov	r1, r9
 80005b6:	e79c      	b.n	80004f2 <__udivmoddi4+0x222>
 80005b8:	eba1 0109 	sub.w	r1, r1, r9
 80005bc:	46c4      	mov	ip, r8
 80005be:	fbb1 f9fe 	udiv	r9, r1, lr
 80005c2:	fb09 f804 	mul.w	r8, r9, r4
 80005c6:	e7c4      	b.n	8000552 <__udivmoddi4+0x282>

080005c8 <__aeabi_idiv0>:
 80005c8:	4770      	bx	lr
 80005ca:	bf00      	nop

080005cc <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80005cc:	b580      	push	{r7, lr}
 80005ce:	b082      	sub	sp, #8
 80005d0:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80005d2:	f000 ffba 	bl	800154a <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80005d6:	f000 f83d 	bl	8000654 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80005da:	f000 f90d 	bl	80007f8 <MX_GPIO_Init>
  MX_LPUART1_UART_Init();
 80005de:	f000 f8af 	bl	8000740 <MX_LPUART1_UART_Init>
  MX_USART2_UART_Init();
 80005e2:	f000 f8d9 	bl	8000798 <MX_USART2_UART_Init>
  MX_CRC_Init();
 80005e6:	f000 f889 	bl	80006fc <MX_CRC_Init>
  /* USER CODE BEGIN 2 */

  /*If button is pressed, go to boot loader mode*/
  if(HAL_GPIO_ReadPin(B1_GPIO_Port, B1_Pin) == GPIO_PIN_SET)
 80005ea:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 80005ee:	4813      	ldr	r0, [pc, #76]	@ (800063c <main+0x70>)
 80005f0:	f002 f87a 	bl	80026e8 <HAL_GPIO_ReadPin>
 80005f4:	4603      	mov	r3, r0
 80005f6:	2b01      	cmp	r3, #1
 80005f8:	d118      	bne.n	800062c <main+0x60>
  {
	  printmsg("BL_DEBUG_MSG: Button pressed. Checking for firmware updates.\n\r");
 80005fa:	4811      	ldr	r0, [pc, #68]	@ (8000640 <main+0x74>)
 80005fc:	f000 f9a8 	bl	8000950 <printmsg>

	  /* Function to return the version available on the host application */
	  uint8_t available_version = fetch_available_firmware_version();
 8000600:	f000 fdfc 	bl	80011fc <fetch_available_firmware_version>
 8000604:	4603      	mov	r3, r0
 8000606:	71fb      	strb	r3, [r7, #7]
	  printmsg("BL_DEBUG_MSG: Fetched version: %d \n\r", available_version);
 8000608:	79fb      	ldrb	r3, [r7, #7]
 800060a:	4619      	mov	r1, r3
 800060c:	480d      	ldr	r0, [pc, #52]	@ (8000644 <main+0x78>)
 800060e:	f000 f99f 	bl	8000950 <printmsg>

	  /* Check if the user needs to update firmware, get input via Debug UART */
	  printmsg("BL_DEBUG_MSG: Update Firmware? Y/n \n\r");
 8000612:	480d      	ldr	r0, [pc, #52]	@ (8000648 <main+0x7c>)
 8000614:	f000 f99c 	bl	8000950 <printmsg>
	  uint8_t update_option;
	  HAL_UART_Receive(D_UART, &update_option, 1, HAL_MAX_DELAY);
 8000618:	1db9      	adds	r1, r7, #6
 800061a:	f04f 33ff 	mov.w	r3, #4294967295
 800061e:	2201      	movs	r2, #1
 8000620:	480a      	ldr	r0, [pc, #40]	@ (800064c <main+0x80>)
 8000622:	f003 fce4 	bl	8003fee <HAL_UART_Receive>


	  //printmsg("BL_DEBUG_MSG: Button pressed.. entering BL mode\n\r");

	  /*Continuously check for user inputs to the boot loader*/
	  bootloader_uart_read_data();
 8000626:	f000 f9df 	bl	80009e8 <bootloader_uart_read_data>
 800062a:	e005      	b.n	8000638 <main+0x6c>
  }else{

	  printmsg("BL_DEBUG_MSG: Button not pressed.. executing user application\n\r");
 800062c:	4808      	ldr	r0, [pc, #32]	@ (8000650 <main+0x84>)
 800062e:	f000 f98f 	bl	8000950 <printmsg>

	  bootloader_jump_to_user_app();
 8000632:	f000 f9b3 	bl	800099c <bootloader_jump_to_user_app>

  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 8000636:	bf00      	nop
 8000638:	bf00      	nop
 800063a:	e7fd      	b.n	8000638 <main+0x6c>
 800063c:	48000800 	.word	0x48000800
 8000640:	0800547c 	.word	0x0800547c
 8000644:	080054bc 	.word	0x080054bc
 8000648:	080054e4 	.word	0x080054e4
 800064c:	200000c8 	.word	0x200000c8
 8000650:	0800550c 	.word	0x0800550c

08000654 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000654:	b580      	push	{r7, lr}
 8000656:	b096      	sub	sp, #88	@ 0x58
 8000658:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800065a:	f107 0314 	add.w	r3, r7, #20
 800065e:	2244      	movs	r2, #68	@ 0x44
 8000660:	2100      	movs	r1, #0
 8000662:	4618      	mov	r0, r3
 8000664:	f004 fa80 	bl	8004b68 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000668:	463b      	mov	r3, r7
 800066a:	2200      	movs	r2, #0
 800066c:	601a      	str	r2, [r3, #0]
 800066e:	605a      	str	r2, [r3, #4]
 8000670:	609a      	str	r2, [r3, #8]
 8000672:	60da      	str	r2, [r3, #12]
 8000674:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 8000676:	f44f 7000 	mov.w	r0, #512	@ 0x200
 800067a:	f002 f873 	bl	8002764 <HAL_PWREx_ControlVoltageScaling>
 800067e:	4603      	mov	r3, r0
 8000680:	2b00      	cmp	r3, #0
 8000682:	d001      	beq.n	8000688 <SystemClock_Config+0x34>
  {
    Error_Handler();
 8000684:	f000 fdd2 	bl	800122c <Error_Handler>
  }

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_MSI;
 8000688:	2310      	movs	r3, #16
 800068a:	617b      	str	r3, [r7, #20]
  RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 800068c:	2301      	movs	r3, #1
 800068e:	62fb      	str	r3, [r7, #44]	@ 0x2c
  RCC_OscInitStruct.MSICalibrationValue = 0;
 8000690:	2300      	movs	r3, #0
 8000692:	633b      	str	r3, [r7, #48]	@ 0x30
  RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 8000694:	2360      	movs	r3, #96	@ 0x60
 8000696:	637b      	str	r3, [r7, #52]	@ 0x34
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000698:	2302      	movs	r3, #2
 800069a:	63fb      	str	r3, [r7, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 800069c:	2301      	movs	r3, #1
 800069e:	643b      	str	r3, [r7, #64]	@ 0x40
  RCC_OscInitStruct.PLL.PLLM = 1;
 80006a0:	2301      	movs	r3, #1
 80006a2:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLN = 40;
 80006a4:	2328      	movs	r3, #40	@ 0x28
 80006a6:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80006a8:	2302      	movs	r3, #2
 80006aa:	64fb      	str	r3, [r7, #76]	@ 0x4c
  RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 80006ac:	2302      	movs	r3, #2
 80006ae:	653b      	str	r3, [r7, #80]	@ 0x50
  RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 80006b0:	2302      	movs	r3, #2
 80006b2:	657b      	str	r3, [r7, #84]	@ 0x54
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80006b4:	f107 0314 	add.w	r3, r7, #20
 80006b8:	4618      	mov	r0, r3
 80006ba:	f002 f8b9 	bl	8002830 <HAL_RCC_OscConfig>
 80006be:	4603      	mov	r3, r0
 80006c0:	2b00      	cmp	r3, #0
 80006c2:	d001      	beq.n	80006c8 <SystemClock_Config+0x74>
  {
    Error_Handler();
 80006c4:	f000 fdb2 	bl	800122c <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80006c8:	230f      	movs	r3, #15
 80006ca:	603b      	str	r3, [r7, #0]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80006cc:	2303      	movs	r3, #3
 80006ce:	607b      	str	r3, [r7, #4]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80006d0:	2300      	movs	r3, #0
 80006d2:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 80006d4:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80006d8:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80006da:	2300      	movs	r3, #0
 80006dc:	613b      	str	r3, [r7, #16]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 80006de:	463b      	mov	r3, r7
 80006e0:	2104      	movs	r1, #4
 80006e2:	4618      	mov	r0, r3
 80006e4:	f002 fcbe 	bl	8003064 <HAL_RCC_ClockConfig>
 80006e8:	4603      	mov	r3, r0
 80006ea:	2b00      	cmp	r3, #0
 80006ec:	d001      	beq.n	80006f2 <SystemClock_Config+0x9e>
  {
    Error_Handler();
 80006ee:	f000 fd9d 	bl	800122c <Error_Handler>
  }
}
 80006f2:	bf00      	nop
 80006f4:	3758      	adds	r7, #88	@ 0x58
 80006f6:	46bd      	mov	sp, r7
 80006f8:	bd80      	pop	{r7, pc}
	...

080006fc <MX_CRC_Init>:
  * @brief CRC Initialization Function
  * @param None
  * @retval None
  */
static void MX_CRC_Init(void)
{
 80006fc:	b580      	push	{r7, lr}
 80006fe:	af00      	add	r7, sp, #0
  /* USER CODE END CRC_Init 0 */

  /* USER CODE BEGIN CRC_Init 1 */

  /* USER CODE END CRC_Init 1 */
  hcrc.Instance = CRC;
 8000700:	4b0d      	ldr	r3, [pc, #52]	@ (8000738 <MX_CRC_Init+0x3c>)
 8000702:	4a0e      	ldr	r2, [pc, #56]	@ (800073c <MX_CRC_Init+0x40>)
 8000704:	601a      	str	r2, [r3, #0]
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 8000706:	4b0c      	ldr	r3, [pc, #48]	@ (8000738 <MX_CRC_Init+0x3c>)
 8000708:	2200      	movs	r2, #0
 800070a:	711a      	strb	r2, [r3, #4]
  hcrc.Init.DefaultInitValueUse = DEFAULT_INIT_VALUE_ENABLE;
 800070c:	4b0a      	ldr	r3, [pc, #40]	@ (8000738 <MX_CRC_Init+0x3c>)
 800070e:	2200      	movs	r2, #0
 8000710:	715a      	strb	r2, [r3, #5]
  hcrc.Init.InputDataInversionMode = CRC_INPUTDATA_INVERSION_NONE;
 8000712:	4b09      	ldr	r3, [pc, #36]	@ (8000738 <MX_CRC_Init+0x3c>)
 8000714:	2200      	movs	r2, #0
 8000716:	615a      	str	r2, [r3, #20]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 8000718:	4b07      	ldr	r3, [pc, #28]	@ (8000738 <MX_CRC_Init+0x3c>)
 800071a:	2200      	movs	r2, #0
 800071c:	619a      	str	r2, [r3, #24]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_WORDS;
 800071e:	4b06      	ldr	r3, [pc, #24]	@ (8000738 <MX_CRC_Init+0x3c>)
 8000720:	2203      	movs	r2, #3
 8000722:	621a      	str	r2, [r3, #32]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8000724:	4804      	ldr	r0, [pc, #16]	@ (8000738 <MX_CRC_Init+0x3c>)
 8000726:	f001 f86b 	bl	8001800 <HAL_CRC_Init>
 800072a:	4603      	mov	r3, r0
 800072c:	2b00      	cmp	r3, #0
 800072e:	d001      	beq.n	8000734 <MX_CRC_Init+0x38>
  {
    Error_Handler();
 8000730:	f000 fd7c 	bl	800122c <Error_Handler>
  }
  /* USER CODE BEGIN CRC_Init 2 */

  /* USER CODE END CRC_Init 2 */

}
 8000734:	bf00      	nop
 8000736:	bd80      	pop	{r7, pc}
 8000738:	200000a4 	.word	0x200000a4
 800073c:	40023000 	.word	0x40023000

08000740 <MX_LPUART1_UART_Init>:
  * @brief LPUART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_LPUART1_UART_Init(void)
{
 8000740:	b580      	push	{r7, lr}
 8000742:	af00      	add	r7, sp, #0
  /* USER CODE END LPUART1_Init 0 */

  /* USER CODE BEGIN LPUART1_Init 1 */

  /* USER CODE END LPUART1_Init 1 */
  hlpuart1.Instance = LPUART1;
 8000744:	4b12      	ldr	r3, [pc, #72]	@ (8000790 <MX_LPUART1_UART_Init+0x50>)
 8000746:	4a13      	ldr	r2, [pc, #76]	@ (8000794 <MX_LPUART1_UART_Init+0x54>)
 8000748:	601a      	str	r2, [r3, #0]
  hlpuart1.Init.BaudRate = 115200;
 800074a:	4b11      	ldr	r3, [pc, #68]	@ (8000790 <MX_LPUART1_UART_Init+0x50>)
 800074c:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8000750:	605a      	str	r2, [r3, #4]
  hlpuart1.Init.WordLength = UART_WORDLENGTH_8B;
 8000752:	4b0f      	ldr	r3, [pc, #60]	@ (8000790 <MX_LPUART1_UART_Init+0x50>)
 8000754:	2200      	movs	r2, #0
 8000756:	609a      	str	r2, [r3, #8]
  hlpuart1.Init.StopBits = UART_STOPBITS_1;
 8000758:	4b0d      	ldr	r3, [pc, #52]	@ (8000790 <MX_LPUART1_UART_Init+0x50>)
 800075a:	2200      	movs	r2, #0
 800075c:	60da      	str	r2, [r3, #12]
  hlpuart1.Init.Parity = UART_PARITY_NONE;
 800075e:	4b0c      	ldr	r3, [pc, #48]	@ (8000790 <MX_LPUART1_UART_Init+0x50>)
 8000760:	2200      	movs	r2, #0
 8000762:	611a      	str	r2, [r3, #16]
  hlpuart1.Init.Mode = UART_MODE_TX_RX;
 8000764:	4b0a      	ldr	r3, [pc, #40]	@ (8000790 <MX_LPUART1_UART_Init+0x50>)
 8000766:	220c      	movs	r2, #12
 8000768:	615a      	str	r2, [r3, #20]
  hlpuart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800076a:	4b09      	ldr	r3, [pc, #36]	@ (8000790 <MX_LPUART1_UART_Init+0x50>)
 800076c:	2200      	movs	r2, #0
 800076e:	619a      	str	r2, [r3, #24]
  hlpuart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8000770:	4b07      	ldr	r3, [pc, #28]	@ (8000790 <MX_LPUART1_UART_Init+0x50>)
 8000772:	2200      	movs	r2, #0
 8000774:	621a      	str	r2, [r3, #32]
  hlpuart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8000776:	4b06      	ldr	r3, [pc, #24]	@ (8000790 <MX_LPUART1_UART_Init+0x50>)
 8000778:	2200      	movs	r2, #0
 800077a:	625a      	str	r2, [r3, #36]	@ 0x24
  if (HAL_UART_Init(&hlpuart1) != HAL_OK)
 800077c:	4804      	ldr	r0, [pc, #16]	@ (8000790 <MX_LPUART1_UART_Init+0x50>)
 800077e:	f003 fb5f 	bl	8003e40 <HAL_UART_Init>
 8000782:	4603      	mov	r3, r0
 8000784:	2b00      	cmp	r3, #0
 8000786:	d001      	beq.n	800078c <MX_LPUART1_UART_Init+0x4c>
  {
    Error_Handler();
 8000788:	f000 fd50 	bl	800122c <Error_Handler>
  }
  /* USER CODE BEGIN LPUART1_Init 2 */

  /* USER CODE END LPUART1_Init 2 */

}
 800078c:	bf00      	nop
 800078e:	bd80      	pop	{r7, pc}
 8000790:	200000c8 	.word	0x200000c8
 8000794:	40008000 	.word	0x40008000

08000798 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8000798:	b580      	push	{r7, lr}
 800079a:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 800079c:	4b14      	ldr	r3, [pc, #80]	@ (80007f0 <MX_USART2_UART_Init+0x58>)
 800079e:	4a15      	ldr	r2, [pc, #84]	@ (80007f4 <MX_USART2_UART_Init+0x5c>)
 80007a0:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 80007a2:	4b13      	ldr	r3, [pc, #76]	@ (80007f0 <MX_USART2_UART_Init+0x58>)
 80007a4:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 80007a8:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 80007aa:	4b11      	ldr	r3, [pc, #68]	@ (80007f0 <MX_USART2_UART_Init+0x58>)
 80007ac:	2200      	movs	r2, #0
 80007ae:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 80007b0:	4b0f      	ldr	r3, [pc, #60]	@ (80007f0 <MX_USART2_UART_Init+0x58>)
 80007b2:	2200      	movs	r2, #0
 80007b4:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 80007b6:	4b0e      	ldr	r3, [pc, #56]	@ (80007f0 <MX_USART2_UART_Init+0x58>)
 80007b8:	2200      	movs	r2, #0
 80007ba:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 80007bc:	4b0c      	ldr	r3, [pc, #48]	@ (80007f0 <MX_USART2_UART_Init+0x58>)
 80007be:	220c      	movs	r2, #12
 80007c0:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80007c2:	4b0b      	ldr	r3, [pc, #44]	@ (80007f0 <MX_USART2_UART_Init+0x58>)
 80007c4:	2200      	movs	r2, #0
 80007c6:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 80007c8:	4b09      	ldr	r3, [pc, #36]	@ (80007f0 <MX_USART2_UART_Init+0x58>)
 80007ca:	2200      	movs	r2, #0
 80007cc:	61da      	str	r2, [r3, #28]
  huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 80007ce:	4b08      	ldr	r3, [pc, #32]	@ (80007f0 <MX_USART2_UART_Init+0x58>)
 80007d0:	2200      	movs	r2, #0
 80007d2:	621a      	str	r2, [r3, #32]
  huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 80007d4:	4b06      	ldr	r3, [pc, #24]	@ (80007f0 <MX_USART2_UART_Init+0x58>)
 80007d6:	2200      	movs	r2, #0
 80007d8:	625a      	str	r2, [r3, #36]	@ 0x24
  if (HAL_UART_Init(&huart2) != HAL_OK)
 80007da:	4805      	ldr	r0, [pc, #20]	@ (80007f0 <MX_USART2_UART_Init+0x58>)
 80007dc:	f003 fb30 	bl	8003e40 <HAL_UART_Init>
 80007e0:	4603      	mov	r3, r0
 80007e2:	2b00      	cmp	r3, #0
 80007e4:	d001      	beq.n	80007ea <MX_USART2_UART_Init+0x52>
  {
    Error_Handler();
 80007e6:	f000 fd21 	bl	800122c <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 80007ea:	bf00      	nop
 80007ec:	bd80      	pop	{r7, pc}
 80007ee:	bf00      	nop
 80007f0:	20000150 	.word	0x20000150
 80007f4:	40004400 	.word	0x40004400

080007f8 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 80007f8:	b580      	push	{r7, lr}
 80007fa:	b08a      	sub	sp, #40	@ 0x28
 80007fc:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80007fe:	f107 0314 	add.w	r3, r7, #20
 8000802:	2200      	movs	r2, #0
 8000804:	601a      	str	r2, [r3, #0]
 8000806:	605a      	str	r2, [r3, #4]
 8000808:	609a      	str	r2, [r3, #8]
 800080a:	60da      	str	r2, [r3, #12]
 800080c:	611a      	str	r2, [r3, #16]
  /* USER CODE BEGIN MX_GPIO_Init_1 */

  /* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800080e:	4b4c      	ldr	r3, [pc, #304]	@ (8000940 <MX_GPIO_Init+0x148>)
 8000810:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000812:	4a4b      	ldr	r2, [pc, #300]	@ (8000940 <MX_GPIO_Init+0x148>)
 8000814:	f043 0304 	orr.w	r3, r3, #4
 8000818:	64d3      	str	r3, [r2, #76]	@ 0x4c
 800081a:	4b49      	ldr	r3, [pc, #292]	@ (8000940 <MX_GPIO_Init+0x148>)
 800081c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800081e:	f003 0304 	and.w	r3, r3, #4
 8000822:	613b      	str	r3, [r7, #16]
 8000824:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000826:	4b46      	ldr	r3, [pc, #280]	@ (8000940 <MX_GPIO_Init+0x148>)
 8000828:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800082a:	4a45      	ldr	r2, [pc, #276]	@ (8000940 <MX_GPIO_Init+0x148>)
 800082c:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000830:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8000832:	4b43      	ldr	r3, [pc, #268]	@ (8000940 <MX_GPIO_Init+0x148>)
 8000834:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000836:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800083a:	60fb      	str	r3, [r7, #12]
 800083c:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800083e:	4b40      	ldr	r3, [pc, #256]	@ (8000940 <MX_GPIO_Init+0x148>)
 8000840:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000842:	4a3f      	ldr	r2, [pc, #252]	@ (8000940 <MX_GPIO_Init+0x148>)
 8000844:	f043 0301 	orr.w	r3, r3, #1
 8000848:	64d3      	str	r3, [r2, #76]	@ 0x4c
 800084a:	4b3d      	ldr	r3, [pc, #244]	@ (8000940 <MX_GPIO_Init+0x148>)
 800084c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800084e:	f003 0301 	and.w	r3, r3, #1
 8000852:	60bb      	str	r3, [r7, #8]
 8000854:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000856:	4b3a      	ldr	r3, [pc, #232]	@ (8000940 <MX_GPIO_Init+0x148>)
 8000858:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800085a:	4a39      	ldr	r2, [pc, #228]	@ (8000940 <MX_GPIO_Init+0x148>)
 800085c:	f043 0302 	orr.w	r3, r3, #2
 8000860:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8000862:	4b37      	ldr	r3, [pc, #220]	@ (8000940 <MX_GPIO_Init+0x148>)
 8000864:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000866:	f003 0302 	and.w	r3, r3, #2
 800086a:	607b      	str	r3, [r7, #4]
 800086c:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 800086e:	4b34      	ldr	r3, [pc, #208]	@ (8000940 <MX_GPIO_Init+0x148>)
 8000870:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000872:	4a33      	ldr	r2, [pc, #204]	@ (8000940 <MX_GPIO_Init+0x148>)
 8000874:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000878:	64d3      	str	r3, [r2, #76]	@ 0x4c
 800087a:	4b31      	ldr	r3, [pc, #196]	@ (8000940 <MX_GPIO_Init+0x148>)
 800087c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800087e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8000882:	603b      	str	r3, [r7, #0]
 8000884:	683b      	ldr	r3, [r7, #0]
  HAL_PWREx_EnableVddIO2();
 8000886:	f001 ffc3 	bl	8002810 <HAL_PWREx_EnableVddIO2>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, LD3_Pin|LD2_Pin, GPIO_PIN_RESET);
 800088a:	2200      	movs	r2, #0
 800088c:	f44f 4181 	mov.w	r1, #16512	@ 0x4080
 8000890:	482c      	ldr	r0, [pc, #176]	@ (8000944 <MX_GPIO_Init+0x14c>)
 8000892:	f001 ff41 	bl	8002718 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOG, USB_PowerSwitchOn_Pin|SMPS_V1_Pin|SMPS_EN_Pin|SMPS_SW_Pin, GPIO_PIN_RESET);
 8000896:	2200      	movs	r2, #0
 8000898:	f44f 5131 	mov.w	r1, #11328	@ 0x2c40
 800089c:	482a      	ldr	r0, [pc, #168]	@ (8000948 <MX_GPIO_Init+0x150>)
 800089e:	f001 ff3b 	bl	8002718 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : B1_Pin */
  GPIO_InitStruct.Pin = B1_Pin;
 80008a2:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 80008a6:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 80008a8:	f44f 1388 	mov.w	r3, #1114112	@ 0x110000
 80008ac:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80008ae:	2300      	movs	r3, #0
 80008b0:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 80008b2:	f107 0314 	add.w	r3, r7, #20
 80008b6:	4619      	mov	r1, r3
 80008b8:	4824      	ldr	r0, [pc, #144]	@ (800094c <MX_GPIO_Init+0x154>)
 80008ba:	f001 fd83 	bl	80023c4 <HAL_GPIO_Init>

  /*Configure GPIO pins : LD3_Pin LD2_Pin */
  GPIO_InitStruct.Pin = LD3_Pin|LD2_Pin;
 80008be:	f44f 4381 	mov.w	r3, #16512	@ 0x4080
 80008c2:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80008c4:	2301      	movs	r3, #1
 80008c6:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80008c8:	2300      	movs	r3, #0
 80008ca:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80008cc:	2300      	movs	r3, #0
 80008ce:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80008d0:	f107 0314 	add.w	r3, r7, #20
 80008d4:	4619      	mov	r1, r3
 80008d6:	481b      	ldr	r0, [pc, #108]	@ (8000944 <MX_GPIO_Init+0x14c>)
 80008d8:	f001 fd74 	bl	80023c4 <HAL_GPIO_Init>

  /*Configure GPIO pins : USB_OverCurrent_Pin SMPS_PG_Pin */
  GPIO_InitStruct.Pin = USB_OverCurrent_Pin|SMPS_PG_Pin;
 80008dc:	f44f 5381 	mov.w	r3, #4128	@ 0x1020
 80008e0:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80008e2:	2300      	movs	r3, #0
 80008e4:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80008e6:	2300      	movs	r3, #0
 80008e8:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80008ea:	f107 0314 	add.w	r3, r7, #20
 80008ee:	4619      	mov	r1, r3
 80008f0:	4815      	ldr	r0, [pc, #84]	@ (8000948 <MX_GPIO_Init+0x150>)
 80008f2:	f001 fd67 	bl	80023c4 <HAL_GPIO_Init>

  /*Configure GPIO pins : USB_PowerSwitchOn_Pin SMPS_V1_Pin SMPS_EN_Pin SMPS_SW_Pin */
  GPIO_InitStruct.Pin = USB_PowerSwitchOn_Pin|SMPS_V1_Pin|SMPS_EN_Pin|SMPS_SW_Pin;
 80008f6:	f44f 5331 	mov.w	r3, #11328	@ 0x2c40
 80008fa:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80008fc:	2301      	movs	r3, #1
 80008fe:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000900:	2300      	movs	r3, #0
 8000902:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000904:	2300      	movs	r3, #0
 8000906:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000908:	f107 0314 	add.w	r3, r7, #20
 800090c:	4619      	mov	r1, r3
 800090e:	480e      	ldr	r0, [pc, #56]	@ (8000948 <MX_GPIO_Init+0x150>)
 8000910:	f001 fd58 	bl	80023c4 <HAL_GPIO_Init>

  /*Configure GPIO pins : USB_SOF_Pin USB_ID_Pin USB_DM_Pin USB_DP_Pin */
  GPIO_InitStruct.Pin = USB_SOF_Pin|USB_ID_Pin|USB_DM_Pin|USB_DP_Pin;
 8000914:	f44f 53e8 	mov.w	r3, #7424	@ 0x1d00
 8000918:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800091a:	2302      	movs	r3, #2
 800091c:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800091e:	2300      	movs	r3, #0
 8000920:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000922:	2303      	movs	r3, #3
 8000924:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Alternate = GPIO_AF10_OTG_FS;
 8000926:	230a      	movs	r3, #10
 8000928:	627b      	str	r3, [r7, #36]	@ 0x24
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800092a:	f107 0314 	add.w	r3, r7, #20
 800092e:	4619      	mov	r1, r3
 8000930:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8000934:	f001 fd46 	bl	80023c4 <HAL_GPIO_Init>

  /* USER CODE BEGIN MX_GPIO_Init_2 */

  /* USER CODE END MX_GPIO_Init_2 */
}
 8000938:	bf00      	nop
 800093a:	3728      	adds	r7, #40	@ 0x28
 800093c:	46bd      	mov	sp, r7
 800093e:	bd80      	pop	{r7, pc}
 8000940:	40021000 	.word	0x40021000
 8000944:	48000400 	.word	0x48000400
 8000948:	48001800 	.word	0x48001800
 800094c:	48000800 	.word	0x48000800

08000950 <printmsg>:

/* USER CODE BEGIN 4 */

void printmsg(char *format, ...){/* The ... (ellipsis) means that more arguments can follow */
 8000950:	b40f      	push	{r0, r1, r2, r3}
 8000952:	b580      	push	{r7, lr}
 8000954:	b096      	sub	sp, #88	@ 0x58
 8000956:	af00      	add	r7, sp, #0
#ifdef BL_DEBUG_MSG_EN

	char str[80];
	/*Extract the argument list using C VA APIs*/
	va_list args;
	va_start(args, format);
 8000958:	f107 0364 	add.w	r3, r7, #100	@ 0x64
 800095c:	607b      	str	r3, [r7, #4]
	vsprintf(str, format, args);
 800095e:	f107 0308 	add.w	r3, r7, #8
 8000962:	687a      	ldr	r2, [r7, #4]
 8000964:	6e39      	ldr	r1, [r7, #96]	@ 0x60
 8000966:	4618      	mov	r0, r3
 8000968:	f004 f8f4 	bl	8004b54 <vsiprintf>
	HAL_UART_Transmit(D_UART, (uint8_t*)str, strlen(str), HAL_MAX_DELAY);
 800096c:	f107 0308 	add.w	r3, r7, #8
 8000970:	4618      	mov	r0, r3
 8000972:	f7ff fc3d 	bl	80001f0 <strlen>
 8000976:	4603      	mov	r3, r0
 8000978:	b29a      	uxth	r2, r3
 800097a:	f107 0108 	add.w	r1, r7, #8
 800097e:	f04f 33ff 	mov.w	r3, #4294967295
 8000982:	4805      	ldr	r0, [pc, #20]	@ (8000998 <printmsg+0x48>)
 8000984:	f003 faaa 	bl	8003edc <HAL_UART_Transmit>
	va_end(args);
#endif
}
 8000988:	bf00      	nop
 800098a:	3758      	adds	r7, #88	@ 0x58
 800098c:	46bd      	mov	sp, r7
 800098e:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8000992:	b004      	add	sp, #16
 8000994:	4770      	bx	lr
 8000996:	bf00      	nop
 8000998:	200000c8 	.word	0x200000c8

0800099c <bootloader_jump_to_user_app>:

void bootloader_jump_to_user_app()
{
 800099c:	b580      	push	{r7, lr}
 800099e:	b084      	sub	sp, #16
 80009a0:	af00      	add	r7, sp, #0
	 * 2. Redirects interrupts by re-mapping VTOR.
	 * 3. Fetches the application’s Reset_Handler address.
	 * 4. Calls it, effectively jumping to the user application.
	 */

	printmsg("BL_DEBUG_MSG:bootloader_jump_to_user_app\n");
 80009a2:	480d      	ldr	r0, [pc, #52]	@ (80009d8 <bootloader_jump_to_user_app+0x3c>)
 80009a4:	f7ff ffd4 	bl	8000950 <printmsg>

	/*The first byte at address of the FLASH area holds the value of MSP and next byte holds the Reset Handler
	 * according to ARM-Cortex Architecture */

	/*1. Configure the Main Stack Pointer (MSP) by reading the value form the flash base address of desired sector*/
	uint32_t msp_value = *(volatile uint32_t*)FLASH_FIRMWARE1;
 80009a8:	4b0c      	ldr	r3, [pc, #48]	@ (80009dc <bootloader_jump_to_user_app+0x40>)
 80009aa:	681b      	ldr	r3, [r3, #0]
 80009ac:	60fb      	str	r3, [r7, #12]
 80009ae:	68fb      	ldr	r3, [r7, #12]
 80009b0:	603b      	str	r3, [r7, #0]
  \details Assigns the given value to the Main Stack Pointer (MSP).
  \param [in]    topOfMainStack  Main Stack Pointer value to set
 */
__STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
{
  __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 80009b2:	683b      	ldr	r3, [r7, #0]
 80009b4:	f383 8808 	msr	MSP, r3
}
 80009b8:	bf00      	nop

	/* Set MSP function from CMSIS*/
	__set_MSP(msp_value);

	/* Re-map vector table to user application base address */
	SCB->VTOR = FLASH_FIRMWARE1; /* System Control Block - Vector Table Offset Register */
 80009ba:	4b09      	ldr	r3, [pc, #36]	@ (80009e0 <bootloader_jump_to_user_app+0x44>)
 80009bc:	4a07      	ldr	r2, [pc, #28]	@ (80009dc <bootloader_jump_to_user_app+0x40>)
 80009be:	609a      	str	r2, [r3, #8]

	/* 2. Now fetch the reset handler address of the user application
	 * from the location FLASH_SECTOR2_BASE_ADDRESS + 4 (32bits)*/
	void (*app_reset_handler)(void); /*A function pointer to hold the address of reset handler*/
	uint32_t resethandler_address = *(volatile uint32_t*)(FLASH_FIRMWARE1 + 4);
 80009c0:	4b08      	ldr	r3, [pc, #32]	@ (80009e4 <bootloader_jump_to_user_app+0x48>)
 80009c2:	681b      	ldr	r3, [r3, #0]
 80009c4:	60bb      	str	r3, [r7, #8]
	app_reset_handler = (void*) resethandler_address;
 80009c6:	68bb      	ldr	r3, [r7, #8]
 80009c8:	607b      	str	r3, [r7, #4]

	/*3. Jumping to the reset handler of user application - Now this address will be loaded into the Program Counter*/
	app_reset_handler();
 80009ca:	687b      	ldr	r3, [r7, #4]
 80009cc:	4798      	blx	r3

}
 80009ce:	bf00      	nop
 80009d0:	3710      	adds	r7, #16
 80009d2:	46bd      	mov	sp, r7
 80009d4:	bd80      	pop	{r7, pc}
 80009d6:	bf00      	nop
 80009d8:	0800554c 	.word	0x0800554c
 80009dc:	08008000 	.word	0x08008000
 80009e0:	e000ed00 	.word	0xe000ed00
 80009e4:	08008004 	.word	0x08008004

080009e8 <bootloader_uart_read_data>:

void bootloader_uart_read_data()
{
 80009e8:	b580      	push	{r7, lr}
 80009ea:	b082      	sub	sp, #8
 80009ec:	af00      	add	r7, sp, #0
	uint8_t rcv_len = 0;
 80009ee:	2300      	movs	r3, #0
 80009f0:	71fb      	strb	r3, [r7, #7]

	while(1)
	{
		memset(bl_rx_buffer, 0, BL_RX_LEN);
 80009f2:	22c8      	movs	r2, #200	@ 0xc8
 80009f4:	2100      	movs	r1, #0
 80009f6:	482d      	ldr	r0, [pc, #180]	@ (8000aac <bootloader_uart_read_data+0xc4>)
 80009f8:	f004 f8b6 	bl	8004b68 <memset>

		/*First read only one byte, which is the length. Then read the other bytes from UART */
		HAL_UART_Receive(C_UART, (uint8_t*)&bl_rx_buffer, 1, HAL_MAX_DELAY);
 80009fc:	f04f 33ff 	mov.w	r3, #4294967295
 8000a00:	2201      	movs	r2, #1
 8000a02:	492a      	ldr	r1, [pc, #168]	@ (8000aac <bootloader_uart_read_data+0xc4>)
 8000a04:	482a      	ldr	r0, [pc, #168]	@ (8000ab0 <bootloader_uart_read_data+0xc8>)
 8000a06:	f003 faf2 	bl	8003fee <HAL_UART_Receive>
		rcv_len = bl_rx_buffer[0];
 8000a0a:	4b28      	ldr	r3, [pc, #160]	@ (8000aac <bootloader_uart_read_data+0xc4>)
 8000a0c:	781b      	ldrb	r3, [r3, #0]
 8000a0e:	71fb      	strb	r3, [r7, #7]
		/*Receive the command*/
		HAL_UART_Receive(C_UART, (uint8_t*)&bl_rx_buffer[1], rcv_len, HAL_MAX_DELAY);
 8000a10:	79fb      	ldrb	r3, [r7, #7]
 8000a12:	b29a      	uxth	r2, r3
 8000a14:	f04f 33ff 	mov.w	r3, #4294967295
 8000a18:	4926      	ldr	r1, [pc, #152]	@ (8000ab4 <bootloader_uart_read_data+0xcc>)
 8000a1a:	4825      	ldr	r0, [pc, #148]	@ (8000ab0 <bootloader_uart_read_data+0xc8>)
 8000a1c:	f003 fae7 	bl	8003fee <HAL_UART_Receive>

		switch(bl_rx_buffer[1]) /* To check for command codes */
 8000a20:	4b22      	ldr	r3, [pc, #136]	@ (8000aac <bootloader_uart_read_data+0xc4>)
 8000a22:	785b      	ldrb	r3, [r3, #1]
 8000a24:	3b51      	subs	r3, #81	@ 0x51
 8000a26:	2b0b      	cmp	r3, #11
 8000a28:	d83a      	bhi.n	8000aa0 <bootloader_uart_read_data+0xb8>
 8000a2a:	a201      	add	r2, pc, #4	@ (adr r2, 8000a30 <bootloader_uart_read_data+0x48>)
 8000a2c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000a30:	08000a61 	.word	0x08000a61
 8000a34:	08000a69 	.word	0x08000a69
 8000a38:	08000a71 	.word	0x08000a71
 8000a3c:	08000a79 	.word	0x08000a79
 8000a40:	08000aa1 	.word	0x08000aa1
 8000a44:	08000a81 	.word	0x08000a81
 8000a48:	08000a89 	.word	0x08000a89
 8000a4c:	08000a91 	.word	0x08000a91
 8000a50:	08000aa1 	.word	0x08000aa1
 8000a54:	08000aa1 	.word	0x08000aa1
 8000a58:	08000aa1 	.word	0x08000aa1
 8000a5c:	08000a99 	.word	0x08000a99
		{
		case BL_GET_VER:
			bootloader_handle_getver_cmd(bl_rx_buffer);
 8000a60:	4812      	ldr	r0, [pc, #72]	@ (8000aac <bootloader_uart_read_data+0xc4>)
 8000a62:	f000 f82b 	bl	8000abc <bootloader_handle_getver_cmd>
			break;
 8000a66:	e01f      	b.n	8000aa8 <bootloader_uart_read_data+0xc0>
		case BL_GET_HELP:
			bootloader_handle_gethelp_cmd(bl_rx_buffer);
 8000a68:	4810      	ldr	r0, [pc, #64]	@ (8000aac <bootloader_uart_read_data+0xc4>)
 8000a6a:	f000 f86b 	bl	8000b44 <bootloader_handle_gethelp_cmd>
			break;
 8000a6e:	e01b      	b.n	8000aa8 <bootloader_uart_read_data+0xc0>
		case BL_GET_CID:
			bootloader_handle_getcid_cmd(bl_rx_buffer);
 8000a70:	480e      	ldr	r0, [pc, #56]	@ (8000aac <bootloader_uart_read_data+0xc4>)
 8000a72:	f000 f89f 	bl	8000bb4 <bootloader_handle_getcid_cmd>
			break;
 8000a76:	e017      	b.n	8000aa8 <bootloader_uart_read_data+0xc0>
		case BL_GET_RDP_STATUS:
			bootloader_handle_getrdp_cmd(bl_rx_buffer);
 8000a78:	480c      	ldr	r0, [pc, #48]	@ (8000aac <bootloader_uart_read_data+0xc4>)
 8000a7a:	f000 f8e1 	bl	8000c40 <bootloader_handle_getrdp_cmd>
			break;
 8000a7e:	e013      	b.n	8000aa8 <bootloader_uart_read_data+0xc0>
		case BL_FLASH_ERASE:
			bootloader_handle_flash_erase_cmd(bl_rx_buffer);
 8000a80:	480a      	ldr	r0, [pc, #40]	@ (8000aac <bootloader_uart_read_data+0xc4>)
 8000a82:	f000 f923 	bl	8000ccc <bootloader_handle_flash_erase_cmd>
			break;
 8000a86:	e00f      	b.n	8000aa8 <bootloader_uart_read_data+0xc0>
		case BL_MEM_WRITE:
			bootloader_handle_mem_write_cmd(bl_rx_buffer);
 8000a88:	4808      	ldr	r0, [pc, #32]	@ (8000aac <bootloader_uart_read_data+0xc4>)
 8000a8a:	f000 f989 	bl	8000da0 <bootloader_handle_mem_write_cmd>
			break;
 8000a8e:	e00b      	b.n	8000aa8 <bootloader_uart_read_data+0xc0>
		case BL_EN_RW_PROTECT:
			bootloader_handle_en_rw_protect(bl_rx_buffer);
 8000a90:	4806      	ldr	r0, [pc, #24]	@ (8000aac <bootloader_uart_read_data+0xc4>)
 8000a92:	f000 f9fb 	bl	8000e8c <bootloader_handle_en_rw_protect>
			break;
 8000a96:	e007      	b.n	8000aa8 <bootloader_uart_read_data+0xc0>
		case BL_DIS_R_W_PROTECT:
			bootloader_handle_dis_rw_protect(bl_rx_buffer);
 8000a98:	4804      	ldr	r0, [pc, #16]	@ (8000aac <bootloader_uart_read_data+0xc4>)
 8000a9a:	f000 fa01 	bl	8000ea0 <bootloader_handle_dis_rw_protect>
			break;
 8000a9e:	e003      	b.n	8000aa8 <bootloader_uart_read_data+0xc0>
		default:
			printmsg("BL_DEBUG_MSG:Invalid command code received from host \n");
 8000aa0:	4805      	ldr	r0, [pc, #20]	@ (8000ab8 <bootloader_uart_read_data+0xd0>)
 8000aa2:	f7ff ff55 	bl	8000950 <printmsg>
			break;
 8000aa6:	bf00      	nop
		memset(bl_rx_buffer, 0, BL_RX_LEN);
 8000aa8:	e7a3      	b.n	80009f2 <bootloader_uart_read_data+0xa>
 8000aaa:	bf00      	nop
 8000aac:	200001d8 	.word	0x200001d8
 8000ab0:	20000150 	.word	0x20000150
 8000ab4:	200001d9 	.word	0x200001d9
 8000ab8:	08005578 	.word	0x08005578

08000abc <bootloader_handle_getver_cmd>:
}

/******************* Boot loader handler functions *******************/

void bootloader_handle_getver_cmd(uint8_t *bl_rx_buffer)
{
 8000abc:	b580      	push	{r7, lr}
 8000abe:	b086      	sub	sp, #24
 8000ac0:	af00      	add	r7, sp, #0
 8000ac2:	6078      	str	r0, [r7, #4]
    /* Handle "Get Version" command */
	uint8_t bl_version;

	uint32_t command_packet_len = bl_rx_buffer[0] + 1; /*Length to follow + First byte*/
 8000ac4:	687b      	ldr	r3, [r7, #4]
 8000ac6:	781b      	ldrb	r3, [r3, #0]
 8000ac8:	3301      	adds	r3, #1
 8000aca:	617b      	str	r3, [r7, #20]

	/*Extract the 4 bytes of CRC32 sent by the host*/
	uint32_t host_crc = *((uint32_t*)(bl_rx_buffer + command_packet_len - 4)); /* CRC is always 32 bits (4 bytes) here */
 8000acc:	697b      	ldr	r3, [r7, #20]
 8000ace:	3b04      	subs	r3, #4
 8000ad0:	687a      	ldr	r2, [r7, #4]
 8000ad2:	4413      	add	r3, r2
 8000ad4:	681b      	ldr	r3, [r3, #0]
 8000ad6:	613b      	str	r3, [r7, #16]

	/*Verify checksum*/
	printmsg("BL_DEBUG_MSG: bootloader_handle_getver_cmd\n\r");
 8000ad8:	4816      	ldr	r0, [pc, #88]	@ (8000b34 <bootloader_handle_getver_cmd+0x78>)
 8000ada:	f7ff ff39 	bl	8000950 <printmsg>
	if(! bootloader_verify_crc(&bl_rx_buffer[0], command_packet_len - 4, host_crc))
 8000ade:	697b      	ldr	r3, [r7, #20]
 8000ae0:	3b04      	subs	r3, #4
 8000ae2:	693a      	ldr	r2, [r7, #16]
 8000ae4:	4619      	mov	r1, r3
 8000ae6:	6878      	ldr	r0, [r7, #4]
 8000ae8:	f000 fa0e 	bl	8000f08 <bootloader_verify_crc>
 8000aec:	4603      	mov	r3, r0
 8000aee:	2b00      	cmp	r3, #0
 8000af0:	d117      	bne.n	8000b22 <bootloader_handle_getver_cmd+0x66>
	{
		/*Checksum is correct*/
		printmsg("BL_DEBUG_MSG: Checksum success...!\n");
 8000af2:	4811      	ldr	r0, [pc, #68]	@ (8000b38 <bootloader_handle_getver_cmd+0x7c>)
 8000af4:	f7ff ff2c 	bl	8000950 <printmsg>
		bootloader_send_ack(1);
 8000af8:	2001      	movs	r0, #1
 8000afa:	f000 f9ed 	bl	8000ed8 <bootloader_send_ack>
		bl_version = get_bootloader_version();
 8000afe:	f000 fa4b 	bl	8000f98 <get_bootloader_version>
 8000b02:	4603      	mov	r3, r0
 8000b04:	73fb      	strb	r3, [r7, #15]
		printmsg("BL_DEBUG_MSG: BL_VER: %d &#x\n", bl_version, bl_version);
 8000b06:	7bfb      	ldrb	r3, [r7, #15]
 8000b08:	4619      	mov	r1, r3
 8000b0a:	7bfb      	ldrb	r3, [r7, #15]
 8000b0c:	461a      	mov	r2, r3
 8000b0e:	480b      	ldr	r0, [pc, #44]	@ (8000b3c <bootloader_handle_getver_cmd+0x80>)
 8000b10:	f7ff ff1e 	bl	8000950 <printmsg>
		bootloader_uart_write_data(&bl_version, 1); /* Sends data back to the HOST */
 8000b14:	f107 030f 	add.w	r3, r7, #15
 8000b18:	2101      	movs	r1, #1
 8000b1a:	4618      	mov	r0, r3
 8000b1c:	f000 fa28 	bl	8000f70 <bootloader_uart_write_data>
		printmsg("BL_DEBUG_MSG: Checksum failed...!\n");
		bootloader_send_nack();

	}

}
 8000b20:	e004      	b.n	8000b2c <bootloader_handle_getver_cmd+0x70>
		printmsg("BL_DEBUG_MSG: Checksum failed...!\n");
 8000b22:	4807      	ldr	r0, [pc, #28]	@ (8000b40 <bootloader_handle_getver_cmd+0x84>)
 8000b24:	f7ff ff14 	bl	8000950 <printmsg>
		bootloader_send_nack();
 8000b28:	f000 f9c4 	bl	8000eb4 <bootloader_send_nack>
}
 8000b2c:	bf00      	nop
 8000b2e:	3718      	adds	r7, #24
 8000b30:	46bd      	mov	sp, r7
 8000b32:	bd80      	pop	{r7, pc}
 8000b34:	080055b0 	.word	0x080055b0
 8000b38:	080055e0 	.word	0x080055e0
 8000b3c:	08005604 	.word	0x08005604
 8000b40:	08005624 	.word	0x08005624

08000b44 <bootloader_handle_gethelp_cmd>:

void bootloader_handle_gethelp_cmd(uint8_t *bl_rx_buffer)
{
 8000b44:	b580      	push	{r7, lr}
 8000b46:	b084      	sub	sp, #16
 8000b48:	af00      	add	r7, sp, #0
 8000b4a:	6078      	str	r0, [r7, #4]
    /* Handle "Get Help" command */
	printmsg("BL_DEBUG_MSG:bootloader_handle_gethelp_cmd\n");
 8000b4c:	4815      	ldr	r0, [pc, #84]	@ (8000ba4 <bootloader_handle_gethelp_cmd+0x60>)
 8000b4e:	f7ff feff 	bl	8000950 <printmsg>

	uint32_t command_packet_len = bl_rx_buffer[0] + 1;
 8000b52:	687b      	ldr	r3, [r7, #4]
 8000b54:	781b      	ldrb	r3, [r3, #0]
 8000b56:	3301      	adds	r3, #1
 8000b58:	60fb      	str	r3, [r7, #12]

	uint32_t host_crc = *((uint32_t*)(bl_rx_buffer + command_packet_len - 4));
 8000b5a:	68fb      	ldr	r3, [r7, #12]
 8000b5c:	3b04      	subs	r3, #4
 8000b5e:	687a      	ldr	r2, [r7, #4]
 8000b60:	4413      	add	r3, r2
 8000b62:	681b      	ldr	r3, [r3, #0]
 8000b64:	60bb      	str	r3, [r7, #8]

	if(! bootloader_verify_crc(&bl_rx_buffer[0], command_packet_len - 4, host_crc))
 8000b66:	68fb      	ldr	r3, [r7, #12]
 8000b68:	3b04      	subs	r3, #4
 8000b6a:	68ba      	ldr	r2, [r7, #8]
 8000b6c:	4619      	mov	r1, r3
 8000b6e:	6878      	ldr	r0, [r7, #4]
 8000b70:	f000 f9ca 	bl	8000f08 <bootloader_verify_crc>
 8000b74:	4603      	mov	r3, r0
 8000b76:	2b00      	cmp	r3, #0
 8000b78:	d10a      	bne.n	8000b90 <bootloader_handle_gethelp_cmd+0x4c>
	{
		printmsg("BL_DEBUG_MSG:checksum success !!\n");
 8000b7a:	480b      	ldr	r0, [pc, #44]	@ (8000ba8 <bootloader_handle_gethelp_cmd+0x64>)
 8000b7c:	f7ff fee8 	bl	8000950 <printmsg>
		bootloader_send_ack(sizeof(supported_commands));
 8000b80:	200a      	movs	r0, #10
 8000b82:	f000 f9a9 	bl	8000ed8 <bootloader_send_ack>
		bootloader_uart_write_data(supported_commands, sizeof(supported_commands));
 8000b86:	210a      	movs	r1, #10
 8000b88:	4808      	ldr	r0, [pc, #32]	@ (8000bac <bootloader_handle_gethelp_cmd+0x68>)
 8000b8a:	f000 f9f1 	bl	8000f70 <bootloader_uart_write_data>

	}else{
		printmsg("BL_DEBUG_MSG:checksum fail !!\n");
		bootloader_send_nack();
	}
}
 8000b8e:	e004      	b.n	8000b9a <bootloader_handle_gethelp_cmd+0x56>
		printmsg("BL_DEBUG_MSG:checksum fail !!\n");
 8000b90:	4807      	ldr	r0, [pc, #28]	@ (8000bb0 <bootloader_handle_gethelp_cmd+0x6c>)
 8000b92:	f7ff fedd 	bl	8000950 <printmsg>
		bootloader_send_nack();
 8000b96:	f000 f98d 	bl	8000eb4 <bootloader_send_nack>
}
 8000b9a:	bf00      	nop
 8000b9c:	3710      	adds	r7, #16
 8000b9e:	46bd      	mov	sp, r7
 8000ba0:	bd80      	pop	{r7, pc}
 8000ba2:	bf00      	nop
 8000ba4:	08005648 	.word	0x08005648
 8000ba8:	08005674 	.word	0x08005674
 8000bac:	20000000 	.word	0x20000000
 8000bb0:	08005698 	.word	0x08005698

08000bb4 <bootloader_handle_getcid_cmd>:

void bootloader_handle_getcid_cmd(uint8_t *bl_rx_buffer)
{
 8000bb4:	b580      	push	{r7, lr}
 8000bb6:	b086      	sub	sp, #24
 8000bb8:	af00      	add	r7, sp, #0
 8000bba:	6078      	str	r0, [r7, #4]
    /* Handle "Get Chip ID" command */
	printmsg("BL_DEBUG_MSG:bootloader_handle_getcid_cmd\n");
 8000bbc:	481c      	ldr	r0, [pc, #112]	@ (8000c30 <bootloader_handle_getcid_cmd+0x7c>)
 8000bbe:	f7ff fec7 	bl	8000950 <printmsg>

	uint16_t bl_cid_num = 0;
 8000bc2:	2300      	movs	r3, #0
 8000bc4:	81fb      	strh	r3, [r7, #14]

	uint32_t command_packet_len = bl_rx_buffer[0] + 1;
 8000bc6:	687b      	ldr	r3, [r7, #4]
 8000bc8:	781b      	ldrb	r3, [r3, #0]
 8000bca:	3301      	adds	r3, #1
 8000bcc:	617b      	str	r3, [r7, #20]

	uint32_t host_crc = *((uint32_t*)(bl_rx_buffer + command_packet_len - 4));
 8000bce:	697b      	ldr	r3, [r7, #20]
 8000bd0:	3b04      	subs	r3, #4
 8000bd2:	687a      	ldr	r2, [r7, #4]
 8000bd4:	4413      	add	r3, r2
 8000bd6:	681b      	ldr	r3, [r3, #0]
 8000bd8:	613b      	str	r3, [r7, #16]

	if(! bootloader_verify_crc(&bl_rx_buffer[0], command_packet_len - 4, host_crc))
 8000bda:	697b      	ldr	r3, [r7, #20]
 8000bdc:	3b04      	subs	r3, #4
 8000bde:	693a      	ldr	r2, [r7, #16]
 8000be0:	4619      	mov	r1, r3
 8000be2:	6878      	ldr	r0, [r7, #4]
 8000be4:	f000 f990 	bl	8000f08 <bootloader_verify_crc>
 8000be8:	4603      	mov	r3, r0
 8000bea:	2b00      	cmp	r3, #0
 8000bec:	d117      	bne.n	8000c1e <bootloader_handle_getcid_cmd+0x6a>
	{
		printmsg("BL_DEBUG_MSG:checksum success !!\n");
 8000bee:	4811      	ldr	r0, [pc, #68]	@ (8000c34 <bootloader_handle_getcid_cmd+0x80>)
 8000bf0:	f7ff feae 	bl	8000950 <printmsg>
		bootloader_send_ack(2);
 8000bf4:	2002      	movs	r0, #2
 8000bf6:	f000 f96f 	bl	8000ed8 <bootloader_send_ack>
		bl_cid_num = get_mcu_chip_id();
 8000bfa:	f000 f9d5 	bl	8000fa8 <get_mcu_chip_id>
 8000bfe:	4603      	mov	r3, r0
 8000c00:	81fb      	strh	r3, [r7, #14]
		printmsg("BL_DEBUG_MSG:MCU id : %d %#x !!\n",bl_cid_num, bl_cid_num);
 8000c02:	89fb      	ldrh	r3, [r7, #14]
 8000c04:	4619      	mov	r1, r3
 8000c06:	89fb      	ldrh	r3, [r7, #14]
 8000c08:	461a      	mov	r2, r3
 8000c0a:	480b      	ldr	r0, [pc, #44]	@ (8000c38 <bootloader_handle_getcid_cmd+0x84>)
 8000c0c:	f7ff fea0 	bl	8000950 <printmsg>
		bootloader_uart_write_data((uint8_t*)&bl_cid_num, 2);
 8000c10:	f107 030e 	add.w	r3, r7, #14
 8000c14:	2102      	movs	r1, #2
 8000c16:	4618      	mov	r0, r3
 8000c18:	f000 f9aa 	bl	8000f70 <bootloader_uart_write_data>
	}else{
		printmsg("BL_DEBUG_MSG:checksum fail !!\n");
		bootloader_send_nack();
	}
}
 8000c1c:	e004      	b.n	8000c28 <bootloader_handle_getcid_cmd+0x74>
		printmsg("BL_DEBUG_MSG:checksum fail !!\n");
 8000c1e:	4807      	ldr	r0, [pc, #28]	@ (8000c3c <bootloader_handle_getcid_cmd+0x88>)
 8000c20:	f7ff fe96 	bl	8000950 <printmsg>
		bootloader_send_nack();
 8000c24:	f000 f946 	bl	8000eb4 <bootloader_send_nack>
}
 8000c28:	bf00      	nop
 8000c2a:	3718      	adds	r7, #24
 8000c2c:	46bd      	mov	sp, r7
 8000c2e:	bd80      	pop	{r7, pc}
 8000c30:	080056b8 	.word	0x080056b8
 8000c34:	08005674 	.word	0x08005674
 8000c38:	080056e4 	.word	0x080056e4
 8000c3c:	08005698 	.word	0x08005698

08000c40 <bootloader_handle_getrdp_cmd>:

void bootloader_handle_getrdp_cmd(uint8_t *bl_rx_buffer)
{
 8000c40:	b580      	push	{r7, lr}
 8000c42:	b086      	sub	sp, #24
 8000c44:	af00      	add	r7, sp, #0
 8000c46:	6078      	str	r0, [r7, #4]
    /* Handle "Get Read Protection Level" command */
	printmsg("BL_DEBUG_MSG:bootloader_handle_getrdp_cmd\n");
 8000c48:	481c      	ldr	r0, [pc, #112]	@ (8000cbc <bootloader_handle_getrdp_cmd+0x7c>)
 8000c4a:	f7ff fe81 	bl	8000950 <printmsg>

	uint8_t rdp_level = 0x00;
 8000c4e:	2300      	movs	r3, #0
 8000c50:	73fb      	strb	r3, [r7, #15]

	//Total length of the command packet
	uint32_t command_packet_len = bl_rx_buffer[0]+1 ;
 8000c52:	687b      	ldr	r3, [r7, #4]
 8000c54:	781b      	ldrb	r3, [r3, #0]
 8000c56:	3301      	adds	r3, #1
 8000c58:	617b      	str	r3, [r7, #20]

	//extract the CRC32 sent by the Host
	uint32_t host_crc = *((uint32_t * ) (bl_rx_buffer+command_packet_len - 4) ) ;
 8000c5a:	697b      	ldr	r3, [r7, #20]
 8000c5c:	3b04      	subs	r3, #4
 8000c5e:	687a      	ldr	r2, [r7, #4]
 8000c60:	4413      	add	r3, r2
 8000c62:	681b      	ldr	r3, [r3, #0]
 8000c64:	613b      	str	r3, [r7, #16]

	if (! bootloader_verify_crc(&bl_rx_buffer[0],command_packet_len-4,host_crc))
 8000c66:	697b      	ldr	r3, [r7, #20]
 8000c68:	3b04      	subs	r3, #4
 8000c6a:	693a      	ldr	r2, [r7, #16]
 8000c6c:	4619      	mov	r1, r3
 8000c6e:	6878      	ldr	r0, [r7, #4]
 8000c70:	f000 f94a 	bl	8000f08 <bootloader_verify_crc>
 8000c74:	4603      	mov	r3, r0
 8000c76:	2b00      	cmp	r3, #0
 8000c78:	d117      	bne.n	8000caa <bootloader_handle_getrdp_cmd+0x6a>
	{
		printmsg("BL_DEBUG_MSG:checksum success !!\n");
 8000c7a:	4811      	ldr	r0, [pc, #68]	@ (8000cc0 <bootloader_handle_getrdp_cmd+0x80>)
 8000c7c:	f7ff fe68 	bl	8000950 <printmsg>
		bootloader_send_ack(1);
 8000c80:	2001      	movs	r0, #1
 8000c82:	f000 f929 	bl	8000ed8 <bootloader_send_ack>
		rdp_level = get_flash_rdp_level();
 8000c86:	f000 f9a1 	bl	8000fcc <get_flash_rdp_level>
 8000c8a:	4603      	mov	r3, r0
 8000c8c:	73fb      	strb	r3, [r7, #15]
		printmsg("BL_DEBUG_MSG:RDP level: %d %#x\n",rdp_level, rdp_level);
 8000c8e:	7bfb      	ldrb	r3, [r7, #15]
 8000c90:	4619      	mov	r1, r3
 8000c92:	7bfb      	ldrb	r3, [r7, #15]
 8000c94:	461a      	mov	r2, r3
 8000c96:	480b      	ldr	r0, [pc, #44]	@ (8000cc4 <bootloader_handle_getrdp_cmd+0x84>)
 8000c98:	f7ff fe5a 	bl	8000950 <printmsg>
		bootloader_uart_write_data(&rdp_level, 1);
 8000c9c:	f107 030f 	add.w	r3, r7, #15
 8000ca0:	2101      	movs	r1, #1
 8000ca2:	4618      	mov	r0, r3
 8000ca4:	f000 f964 	bl	8000f70 <bootloader_uart_write_data>

	}else{
		printmsg("BL_DEBUG_MSG:checksum fail !!\n");
		bootloader_send_nack();
	}
}
 8000ca8:	e004      	b.n	8000cb4 <bootloader_handle_getrdp_cmd+0x74>
		printmsg("BL_DEBUG_MSG:checksum fail !!\n");
 8000caa:	4807      	ldr	r0, [pc, #28]	@ (8000cc8 <bootloader_handle_getrdp_cmd+0x88>)
 8000cac:	f7ff fe50 	bl	8000950 <printmsg>
		bootloader_send_nack();
 8000cb0:	f000 f900 	bl	8000eb4 <bootloader_send_nack>
}
 8000cb4:	bf00      	nop
 8000cb6:	3718      	adds	r7, #24
 8000cb8:	46bd      	mov	sp, r7
 8000cba:	bd80      	pop	{r7, pc}
 8000cbc:	08005708 	.word	0x08005708
 8000cc0:	08005674 	.word	0x08005674
 8000cc4:	08005734 	.word	0x08005734
 8000cc8:	08005698 	.word	0x08005698

08000ccc <bootloader_handle_flash_erase_cmd>:

void bootloader_handle_flash_erase_cmd(uint8_t *pBuffer) {
 8000ccc:	b580      	push	{r7, lr}
 8000cce:	b086      	sub	sp, #24
 8000cd0:	af00      	add	r7, sp, #0
 8000cd2:	6078      	str	r0, [r7, #4]

  uint8_t erase_status = 0x00;
 8000cd4:	2300      	movs	r3, #0
 8000cd6:	73fb      	strb	r3, [r7, #15]
  printmsg("BL_DEBUG_MSG:bootloader_handle_flash_erase_cmd\n");
 8000cd8:	482a      	ldr	r0, [pc, #168]	@ (8000d84 <bootloader_handle_flash_erase_cmd+0xb8>)
 8000cda:	f7ff fe39 	bl	8000950 <printmsg>

  //Total length of the command packet
  uint32_t command_packet_len = bl_rx_buffer[0]+1 ;
 8000cde:	4b2a      	ldr	r3, [pc, #168]	@ (8000d88 <bootloader_handle_flash_erase_cmd+0xbc>)
 8000ce0:	781b      	ldrb	r3, [r3, #0]
 8000ce2:	3301      	adds	r3, #1
 8000ce4:	617b      	str	r3, [r7, #20]

  //extract the CRC32 sent by the Host
  uint32_t host_crc = *((uint32_t * ) (bl_rx_buffer+command_packet_len - 4) ) ;
 8000ce6:	697b      	ldr	r3, [r7, #20]
 8000ce8:	3b04      	subs	r3, #4
 8000cea:	4a27      	ldr	r2, [pc, #156]	@ (8000d88 <bootloader_handle_flash_erase_cmd+0xbc>)
 8000cec:	4413      	add	r3, r2
 8000cee:	681b      	ldr	r3, [r3, #0]
 8000cf0:	613b      	str	r3, [r7, #16]

  if (! bootloader_verify_crc(&bl_rx_buffer[0],command_packet_len-4,host_crc)) {
 8000cf2:	697b      	ldr	r3, [r7, #20]
 8000cf4:	3b04      	subs	r3, #4
 8000cf6:	693a      	ldr	r2, [r7, #16]
 8000cf8:	4619      	mov	r1, r3
 8000cfa:	4823      	ldr	r0, [pc, #140]	@ (8000d88 <bootloader_handle_flash_erase_cmd+0xbc>)
 8000cfc:	f000 f904 	bl	8000f08 <bootloader_verify_crc>
 8000d00:	4603      	mov	r3, r0
 8000d02:	2b00      	cmp	r3, #0
 8000d04:	d134      	bne.n	8000d70 <bootloader_handle_flash_erase_cmd+0xa4>

    printmsg("BL_DEBUG_MSG:checksum success !!\n");
 8000d06:	4821      	ldr	r0, [pc, #132]	@ (8000d8c <bootloader_handle_flash_erase_cmd+0xc0>)
 8000d08:	f7ff fe22 	bl	8000950 <printmsg>
    bootloader_send_ack(1);
 8000d0c:	2001      	movs	r0, #1
 8000d0e:	f000 f8e3 	bl	8000ed8 <bootloader_send_ack>
    printmsg("BL_DEBUG_MSG:initial_sector : %d  no_ofsectors: %d\n",pBuffer[2],pBuffer[3]);
 8000d12:	687b      	ldr	r3, [r7, #4]
 8000d14:	3302      	adds	r3, #2
 8000d16:	781b      	ldrb	r3, [r3, #0]
 8000d18:	4619      	mov	r1, r3
 8000d1a:	687b      	ldr	r3, [r7, #4]
 8000d1c:	3303      	adds	r3, #3
 8000d1e:	781b      	ldrb	r3, [r3, #0]
 8000d20:	461a      	mov	r2, r3
 8000d22:	481b      	ldr	r0, [pc, #108]	@ (8000d90 <bootloader_handle_flash_erase_cmd+0xc4>)
 8000d24:	f7ff fe14 	bl	8000950 <printmsg>

    HAL_GPIO_WritePin(GPIOB, GPIO_PIN_14,1);
 8000d28:	2201      	movs	r2, #1
 8000d2a:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8000d2e:	4819      	ldr	r0, [pc, #100]	@ (8000d94 <bootloader_handle_flash_erase_cmd+0xc8>)
 8000d30:	f001 fcf2 	bl	8002718 <HAL_GPIO_WritePin>
    erase_status = execute_flash_erase(pBuffer[2] , pBuffer[3]);
 8000d34:	687b      	ldr	r3, [r7, #4]
 8000d36:	3302      	adds	r3, #2
 8000d38:	781a      	ldrb	r2, [r3, #0]
 8000d3a:	687b      	ldr	r3, [r7, #4]
 8000d3c:	3303      	adds	r3, #3
 8000d3e:	781b      	ldrb	r3, [r3, #0]
 8000d40:	4619      	mov	r1, r3
 8000d42:	4610      	mov	r0, r2
 8000d44:	f000 f984 	bl	8001050 <execute_flash_erase>
 8000d48:	4603      	mov	r3, r0
 8000d4a:	73fb      	strb	r3, [r7, #15]
    HAL_GPIO_WritePin(GPIOB, GPIO_PIN_14,0);
 8000d4c:	2200      	movs	r2, #0
 8000d4e:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8000d52:	4810      	ldr	r0, [pc, #64]	@ (8000d94 <bootloader_handle_flash_erase_cmd+0xc8>)
 8000d54:	f001 fce0 	bl	8002718 <HAL_GPIO_WritePin>

    printmsg("BL_DEBUG_MSG: flash erase status: %#x\n",erase_status);
 8000d58:	7bfb      	ldrb	r3, [r7, #15]
 8000d5a:	4619      	mov	r1, r3
 8000d5c:	480e      	ldr	r0, [pc, #56]	@ (8000d98 <bootloader_handle_flash_erase_cmd+0xcc>)
 8000d5e:	f7ff fdf7 	bl	8000950 <printmsg>

    bootloader_uart_write_data(&erase_status,1);
 8000d62:	f107 030f 	add.w	r3, r7, #15
 8000d66:	2101      	movs	r1, #1
 8000d68:	4618      	mov	r0, r3
 8000d6a:	f000 f901 	bl	8000f70 <bootloader_uart_write_data>
  } else {

    printmsg("BL_DEBUG_MSG:checksum fail !!\n");
    bootloader_send_nack();
  }
}
 8000d6e:	e004      	b.n	8000d7a <bootloader_handle_flash_erase_cmd+0xae>
    printmsg("BL_DEBUG_MSG:checksum fail !!\n");
 8000d70:	480a      	ldr	r0, [pc, #40]	@ (8000d9c <bootloader_handle_flash_erase_cmd+0xd0>)
 8000d72:	f7ff fded 	bl	8000950 <printmsg>
    bootloader_send_nack();
 8000d76:	f000 f89d 	bl	8000eb4 <bootloader_send_nack>
}
 8000d7a:	bf00      	nop
 8000d7c:	3718      	adds	r7, #24
 8000d7e:	46bd      	mov	sp, r7
 8000d80:	bd80      	pop	{r7, pc}
 8000d82:	bf00      	nop
 8000d84:	08005754 	.word	0x08005754
 8000d88:	200001d8 	.word	0x200001d8
 8000d8c:	08005674 	.word	0x08005674
 8000d90:	08005784 	.word	0x08005784
 8000d94:	48000400 	.word	0x48000400
 8000d98:	080057b8 	.word	0x080057b8
 8000d9c:	08005698 	.word	0x08005698

08000da0 <bootloader_handle_mem_write_cmd>:


void bootloader_handle_mem_write_cmd(uint8_t *bl_rx_buffer)
{
 8000da0:	b580      	push	{r7, lr}
 8000da2:	b088      	sub	sp, #32
 8000da4:	af00      	add	r7, sp, #0
 8000da6:	6078      	str	r0, [r7, #4]
	/* Handle "Memory Write" command */

	printmsg("BL_DEBUG_MSG:bootloader_handle_mem_write_cmd\n");
 8000da8:	4831      	ldr	r0, [pc, #196]	@ (8000e70 <bootloader_handle_mem_write_cmd+0xd0>)
 8000daa:	f7ff fdd1 	bl	8000950 <printmsg>

	uint8_t write_status = 0x00;
 8000dae:	2300      	movs	r3, #0
 8000db0:	73fb      	strb	r3, [r7, #15]
	uint8_t payload_len = bl_rx_buffer[6];
 8000db2:	687b      	ldr	r3, [r7, #4]
 8000db4:	799b      	ldrb	r3, [r3, #6]
 8000db6:	77fb      	strb	r3, [r7, #31]

	uint32_t mem_addr = *((uint32_t*)(&bl_rx_buffer[2]));
 8000db8:	687b      	ldr	r3, [r7, #4]
 8000dba:	f8d3 3002 	ldr.w	r3, [r3, #2]
 8000dbe:	61bb      	str	r3, [r7, #24]

	uint32_t command_packet_len = bl_rx_buffer[0] + 1 ;
 8000dc0:	687b      	ldr	r3, [r7, #4]
 8000dc2:	781b      	ldrb	r3, [r3, #0]
 8000dc4:	3301      	adds	r3, #1
 8000dc6:	617b      	str	r3, [r7, #20]
	uint32_t host_crc = *((uint32_t * ) (bl_rx_buffer + command_packet_len - 4));
 8000dc8:	697b      	ldr	r3, [r7, #20]
 8000dca:	3b04      	subs	r3, #4
 8000dcc:	687a      	ldr	r2, [r7, #4]
 8000dce:	4413      	add	r3, r2
 8000dd0:	681b      	ldr	r3, [r3, #0]
 8000dd2:	613b      	str	r3, [r7, #16]

	if(! bootloader_verify_crc(&bl_rx_buffer[0], command_packet_len -4, host_crc))
 8000dd4:	697b      	ldr	r3, [r7, #20]
 8000dd6:	3b04      	subs	r3, #4
 8000dd8:	693a      	ldr	r2, [r7, #16]
 8000dda:	4619      	mov	r1, r3
 8000ddc:	6878      	ldr	r0, [r7, #4]
 8000dde:	f000 f893 	bl	8000f08 <bootloader_verify_crc>
 8000de2:	4603      	mov	r3, r0
 8000de4:	2b00      	cmp	r3, #0
 8000de6:	d13a      	bne.n	8000e5e <bootloader_handle_mem_write_cmd+0xbe>
	{
		printmsg("BL_DEBUG_MSG:checksum success !!\n");
 8000de8:	4822      	ldr	r0, [pc, #136]	@ (8000e74 <bootloader_handle_mem_write_cmd+0xd4>)
 8000dea:	f7ff fdb1 	bl	8000950 <printmsg>
		bootloader_send_ack(1);
 8000dee:	2001      	movs	r0, #1
 8000df0:	f000 f872 	bl	8000ed8 <bootloader_send_ack>
		printmsg("BL_DEBUG_MSG: mem write address : %#x\n",mem_addr);
 8000df4:	69b9      	ldr	r1, [r7, #24]
 8000df6:	4820      	ldr	r0, [pc, #128]	@ (8000e78 <bootloader_handle_mem_write_cmd+0xd8>)
 8000df8:	f7ff fdaa 	bl	8000950 <printmsg>

		if( verify_address(mem_addr) == ADDR_VALID ) {
 8000dfc:	69b8      	ldr	r0, [r7, #24]
 8000dfe:	f000 f8f9 	bl	8000ff4 <verify_address>
 8000e02:	4603      	mov	r3, r0
 8000e04:	2b00      	cmp	r3, #0
 8000e06:	d11e      	bne.n	8000e46 <bootloader_handle_mem_write_cmd+0xa6>


			printmsg("BL_DEBUG_MSG: valid mem write address\n");
 8000e08:	481c      	ldr	r0, [pc, #112]	@ (8000e7c <bootloader_handle_mem_write_cmd+0xdc>)
 8000e0a:	f7ff fda1 	bl	8000950 <printmsg>

			//glow the led to indicate bootloader is currently writing to memory
			HAL_GPIO_WritePin(GPIOB, GPIO_PIN_14,1);
 8000e0e:	2201      	movs	r2, #1
 8000e10:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8000e14:	481a      	ldr	r0, [pc, #104]	@ (8000e80 <bootloader_handle_mem_write_cmd+0xe0>)
 8000e16:	f001 fc7f 	bl	8002718 <HAL_GPIO_WritePin>

			/* Execute memory write*/
			write_status = execute_mem_write(&bl_rx_buffer[7], mem_addr, payload_len);
 8000e1a:	687b      	ldr	r3, [r7, #4]
 8000e1c:	3307      	adds	r3, #7
 8000e1e:	7ffa      	ldrb	r2, [r7, #31]
 8000e20:	69b9      	ldr	r1, [r7, #24]
 8000e22:	4618      	mov	r0, r3
 8000e24:	f000 f946 	bl	80010b4 <execute_mem_write>
 8000e28:	4603      	mov	r3, r0
 8000e2a:	73fb      	strb	r3, [r7, #15]

			HAL_GPIO_WritePin(GPIOB, GPIO_PIN_14,0);
 8000e2c:	2200      	movs	r2, #0
 8000e2e:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8000e32:	4813      	ldr	r0, [pc, #76]	@ (8000e80 <bootloader_handle_mem_write_cmd+0xe0>)
 8000e34:	f001 fc70 	bl	8002718 <HAL_GPIO_WritePin>

			//inform host about the status
			bootloader_uart_write_data(&write_status,1);
 8000e38:	f107 030f 	add.w	r3, r7, #15
 8000e3c:	2101      	movs	r1, #1
 8000e3e:	4618      	mov	r0, r3
 8000e40:	f000 f896 	bl	8000f70 <bootloader_uart_write_data>
		}
	}else{
		printmsg("BL_DEBUG_MSG:checksum fail !!\n");
		bootloader_send_nack();
	}
}
 8000e44:	e010      	b.n	8000e68 <bootloader_handle_mem_write_cmd+0xc8>
			printmsg("BL_DEBUG_MSG: invalid mem write address\n");
 8000e46:	480f      	ldr	r0, [pc, #60]	@ (8000e84 <bootloader_handle_mem_write_cmd+0xe4>)
 8000e48:	f7ff fd82 	bl	8000950 <printmsg>
			write_status = ADDR_INVALID;
 8000e4c:	2301      	movs	r3, #1
 8000e4e:	73fb      	strb	r3, [r7, #15]
			bootloader_uart_write_data(&write_status,1);
 8000e50:	f107 030f 	add.w	r3, r7, #15
 8000e54:	2101      	movs	r1, #1
 8000e56:	4618      	mov	r0, r3
 8000e58:	f000 f88a 	bl	8000f70 <bootloader_uart_write_data>
}
 8000e5c:	e004      	b.n	8000e68 <bootloader_handle_mem_write_cmd+0xc8>
		printmsg("BL_DEBUG_MSG:checksum fail !!\n");
 8000e5e:	480a      	ldr	r0, [pc, #40]	@ (8000e88 <bootloader_handle_mem_write_cmd+0xe8>)
 8000e60:	f7ff fd76 	bl	8000950 <printmsg>
		bootloader_send_nack();
 8000e64:	f000 f826 	bl	8000eb4 <bootloader_send_nack>
}
 8000e68:	bf00      	nop
 8000e6a:	3720      	adds	r7, #32
 8000e6c:	46bd      	mov	sp, r7
 8000e6e:	bd80      	pop	{r7, pc}
 8000e70:	080057e0 	.word	0x080057e0
 8000e74:	08005674 	.word	0x08005674
 8000e78:	08005810 	.word	0x08005810
 8000e7c:	08005838 	.word	0x08005838
 8000e80:	48000400 	.word	0x48000400
 8000e84:	08005860 	.word	0x08005860
 8000e88:	08005698 	.word	0x08005698

08000e8c <bootloader_handle_en_rw_protect>:


void bootloader_handle_en_rw_protect(uint8_t *bl_rx_buffer)
{
 8000e8c:	b480      	push	{r7}
 8000e8e:	b083      	sub	sp, #12
 8000e90:	af00      	add	r7, sp, #0
 8000e92:	6078      	str	r0, [r7, #4]
    /* Handle "Enable Read/Write Protection" command */
}
 8000e94:	bf00      	nop
 8000e96:	370c      	adds	r7, #12
 8000e98:	46bd      	mov	sp, r7
 8000e9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e9e:	4770      	bx	lr

08000ea0 <bootloader_handle_dis_rw_protect>:

void bootloader_handle_dis_rw_protect(uint8_t *bl_rx_buffer)
{
 8000ea0:	b480      	push	{r7}
 8000ea2:	b083      	sub	sp, #12
 8000ea4:	af00      	add	r7, sp, #0
 8000ea6:	6078      	str	r0, [r7, #4]
    /* Handle "Disable Read/Write Protection" command */
}
 8000ea8:	bf00      	nop
 8000eaa:	370c      	adds	r7, #12
 8000eac:	46bd      	mov	sp, r7
 8000eae:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000eb2:	4770      	bx	lr

08000eb4 <bootloader_send_nack>:

void bootloader_send_nack(void)
{
 8000eb4:	b580      	push	{r7, lr}
 8000eb6:	b082      	sub	sp, #8
 8000eb8:	af00      	add	r7, sp, #0
	uint8_t nack = BL_NACK;
 8000eba:	237f      	movs	r3, #127	@ 0x7f
 8000ebc:	71fb      	strb	r3, [r7, #7]
	HAL_UART_Transmit(C_UART, (uint8_t*)&nack, 1, HAL_MAX_DELAY);
 8000ebe:	1df9      	adds	r1, r7, #7
 8000ec0:	f04f 33ff 	mov.w	r3, #4294967295
 8000ec4:	2201      	movs	r2, #1
 8000ec6:	4803      	ldr	r0, [pc, #12]	@ (8000ed4 <bootloader_send_nack+0x20>)
 8000ec8:	f003 f808 	bl	8003edc <HAL_UART_Transmit>
}
 8000ecc:	bf00      	nop
 8000ece:	3708      	adds	r7, #8
 8000ed0:	46bd      	mov	sp, r7
 8000ed2:	bd80      	pop	{r7, pc}
 8000ed4:	20000150 	.word	0x20000150

08000ed8 <bootloader_send_ack>:

void bootloader_send_ack(uint8_t follow_len)
{
 8000ed8:	b580      	push	{r7, lr}
 8000eda:	b084      	sub	sp, #16
 8000edc:	af00      	add	r7, sp, #0
 8000ede:	4603      	mov	r3, r0
 8000ee0:	71fb      	strb	r3, [r7, #7]
	/* 2 Bytes are sent, first byte is ACK and second is the length value */
	uint8_t ack_buf[2];
	ack_buf[0] = BL_ACK;
 8000ee2:	23a5      	movs	r3, #165	@ 0xa5
 8000ee4:	733b      	strb	r3, [r7, #12]
	ack_buf[1] = follow_len;
 8000ee6:	79fb      	ldrb	r3, [r7, #7]
 8000ee8:	737b      	strb	r3, [r7, #13]
	HAL_UART_Transmit(C_UART, (uint8_t*)&ack_buf, 2, HAL_MAX_DELAY);
 8000eea:	f107 010c 	add.w	r1, r7, #12
 8000eee:	f04f 33ff 	mov.w	r3, #4294967295
 8000ef2:	2202      	movs	r2, #2
 8000ef4:	4803      	ldr	r0, [pc, #12]	@ (8000f04 <bootloader_send_ack+0x2c>)
 8000ef6:	f002 fff1 	bl	8003edc <HAL_UART_Transmit>

}
 8000efa:	bf00      	nop
 8000efc:	3710      	adds	r7, #16
 8000efe:	46bd      	mov	sp, r7
 8000f00:	bd80      	pop	{r7, pc}
 8000f02:	bf00      	nop
 8000f04:	20000150 	.word	0x20000150

08000f08 <bootloader_verify_crc>:

uint8_t bootloader_verify_crc(uint8_t *pData, uint32_t len, uint32_t crc_host)
{
 8000f08:	b580      	push	{r7, lr}
 8000f0a:	b088      	sub	sp, #32
 8000f0c:	af00      	add	r7, sp, #0
 8000f0e:	60f8      	str	r0, [r7, #12]
 8000f10:	60b9      	str	r1, [r7, #8]
 8000f12:	607a      	str	r2, [r7, #4]
	uint32_t uwCRCValue = 0xff;
 8000f14:	23ff      	movs	r3, #255	@ 0xff
 8000f16:	61fb      	str	r3, [r7, #28]

	for(int i=0; i<len; i++)
 8000f18:	2300      	movs	r3, #0
 8000f1a:	61bb      	str	r3, [r7, #24]
 8000f1c:	e00f      	b.n	8000f3e <bootloader_verify_crc+0x36>
	{
		uint32_t i_data = pData[i];
 8000f1e:	69bb      	ldr	r3, [r7, #24]
 8000f20:	68fa      	ldr	r2, [r7, #12]
 8000f22:	4413      	add	r3, r2
 8000f24:	781b      	ldrb	r3, [r3, #0]
 8000f26:	617b      	str	r3, [r7, #20]
		uwCRCValue = HAL_CRC_Accumulate(&hcrc, &i_data, 1);
 8000f28:	f107 0314 	add.w	r3, r7, #20
 8000f2c:	2201      	movs	r2, #1
 8000f2e:	4619      	mov	r1, r3
 8000f30:	480e      	ldr	r0, [pc, #56]	@ (8000f6c <bootloader_verify_crc+0x64>)
 8000f32:	f000 fcc9 	bl	80018c8 <HAL_CRC_Accumulate>
 8000f36:	61f8      	str	r0, [r7, #28]
	for(int i=0; i<len; i++)
 8000f38:	69bb      	ldr	r3, [r7, #24]
 8000f3a:	3301      	adds	r3, #1
 8000f3c:	61bb      	str	r3, [r7, #24]
 8000f3e:	69bb      	ldr	r3, [r7, #24]
 8000f40:	68ba      	ldr	r2, [r7, #8]
 8000f42:	429a      	cmp	r2, r3
 8000f44:	d8eb      	bhi.n	8000f1e <bootloader_verify_crc+0x16>
	}

	/* Reset CRC Calculation Unit */
	__HAL_CRC_DR_RESET(&hcrc);
 8000f46:	4b09      	ldr	r3, [pc, #36]	@ (8000f6c <bootloader_verify_crc+0x64>)
 8000f48:	681b      	ldr	r3, [r3, #0]
 8000f4a:	689a      	ldr	r2, [r3, #8]
 8000f4c:	4b07      	ldr	r3, [pc, #28]	@ (8000f6c <bootloader_verify_crc+0x64>)
 8000f4e:	681b      	ldr	r3, [r3, #0]
 8000f50:	f042 0201 	orr.w	r2, r2, #1
 8000f54:	609a      	str	r2, [r3, #8]

	if(uwCRCValue == crc_host)
 8000f56:	69fa      	ldr	r2, [r7, #28]
 8000f58:	687b      	ldr	r3, [r7, #4]
 8000f5a:	429a      	cmp	r2, r3
 8000f5c:	d101      	bne.n	8000f62 <bootloader_verify_crc+0x5a>
		return VERIFY_CRC_SUCCESS;
 8000f5e:	2300      	movs	r3, #0
 8000f60:	e000      	b.n	8000f64 <bootloader_verify_crc+0x5c>
	return VERIFY_CRC_FAIL;
 8000f62:	2301      	movs	r3, #1

}
 8000f64:	4618      	mov	r0, r3
 8000f66:	3720      	adds	r7, #32
 8000f68:	46bd      	mov	sp, r7
 8000f6a:	bd80      	pop	{r7, pc}
 8000f6c:	200000a4 	.word	0x200000a4

08000f70 <bootloader_uart_write_data>:

void bootloader_uart_write_data(uint8_t *pBuffer,uint32_t len)
{
 8000f70:	b580      	push	{r7, lr}
 8000f72:	b082      	sub	sp, #8
 8000f74:	af00      	add	r7, sp, #0
 8000f76:	6078      	str	r0, [r7, #4]
 8000f78:	6039      	str	r1, [r7, #0]
	HAL_UART_Transmit(C_UART, pBuffer, len, HAL_MAX_DELAY);
 8000f7a:	683b      	ldr	r3, [r7, #0]
 8000f7c:	b29a      	uxth	r2, r3
 8000f7e:	f04f 33ff 	mov.w	r3, #4294967295
 8000f82:	6879      	ldr	r1, [r7, #4]
 8000f84:	4803      	ldr	r0, [pc, #12]	@ (8000f94 <bootloader_uart_write_data+0x24>)
 8000f86:	f002 ffa9 	bl	8003edc <HAL_UART_Transmit>
}
 8000f8a:	bf00      	nop
 8000f8c:	3708      	adds	r7, #8
 8000f8e:	46bd      	mov	sp, r7
 8000f90:	bd80      	pop	{r7, pc}
 8000f92:	bf00      	nop
 8000f94:	20000150 	.word	0x20000150

08000f98 <get_bootloader_version>:

uint8_t get_bootloader_version()
{
 8000f98:	b480      	push	{r7}
 8000f9a:	af00      	add	r7, sp, #0
	return (uint8_t)BL_VERSION;
 8000f9c:	2310      	movs	r3, #16
}
 8000f9e:	4618      	mov	r0, r3
 8000fa0:	46bd      	mov	sp, r7
 8000fa2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fa6:	4770      	bx	lr

08000fa8 <get_mcu_chip_id>:

uint16_t get_mcu_chip_id(void)
{
 8000fa8:	b480      	push	{r7}
 8000faa:	b083      	sub	sp, #12
 8000fac:	af00      	add	r7, sp, #0
	   the user software. It is even accessible while the MCU is under system reset.
	 */

	uint16_t cid;
	/* Reading the register and masking the unnecessary bits */
	cid = (uint16_t)(DBGMCU->IDCODE) & 0x0FFF;
 8000fae:	4b06      	ldr	r3, [pc, #24]	@ (8000fc8 <get_mcu_chip_id+0x20>)
 8000fb0:	681b      	ldr	r3, [r3, #0]
 8000fb2:	b29b      	uxth	r3, r3
 8000fb4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8000fb8:	80fb      	strh	r3, [r7, #6]
	return cid;
 8000fba:	88fb      	ldrh	r3, [r7, #6]
}
 8000fbc:	4618      	mov	r0, r3
 8000fbe:	370c      	adds	r7, #12
 8000fc0:	46bd      	mov	sp, r7
 8000fc2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fc6:	4770      	bx	lr
 8000fc8:	e0042000 	.word	0xe0042000

08000fcc <get_flash_rdp_level>:

uint8_t get_flash_rdp_level(void)
{
 8000fcc:	b580      	push	{r7, lr}
 8000fce:	b08c      	sub	sp, #48	@ 0x30
 8000fd0:	af00      	add	r7, sp, #0
	 *
	 * When decreased from 'Level 1 to Level 0', the FLASH goes into MASS ERASE.
	 *
	 * */
	/*HAL Implementation*/
	uint8_t rdp_status = 0;
 8000fd2:	2300      	movs	r3, #0
 8000fd4:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
	FLASH_OBProgramInitTypeDef ob_handle;
	HAL_FLASHEx_OBGetConfig(&ob_handle);
 8000fd8:	1d3b      	adds	r3, r7, #4
 8000fda:	4618      	mov	r0, r3
 8000fdc:	f000 fffc 	bl	8001fd8 <HAL_FLASHEx_OBGetConfig>
	rdp_status = (uint8_t)ob_handle.RDPLevel;
 8000fe0:	697b      	ldr	r3, [r7, #20]
 8000fe2:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
	return rdp_status;
 8000fe6:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
}
 8000fea:	4618      	mov	r0, r3
 8000fec:	3730      	adds	r7, #48	@ 0x30
 8000fee:	46bd      	mov	sp, r7
 8000ff0:	bd80      	pop	{r7, pc}
	...

08000ff4 <verify_address>:


uint8_t verify_address(uint32_t go_address)
{
 8000ff4:	b480      	push	{r7}
 8000ff6:	b083      	sub	sp, #12
 8000ff8:	af00      	add	r7, sp, #0
 8000ffa:	6078      	str	r0, [r7, #4]
	/*Jump to FLASH, System Memory, SRAM1, SRAM2, Backup SRAM allowed,
	 * others such as peripheral memory not allowed*/

	if ( go_address >= SRAM1_BASE && go_address <= SRAM1_END) {
 8000ffc:	687b      	ldr	r3, [r7, #4]
 8000ffe:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8001002:	d305      	bcc.n	8001010 <verify_address+0x1c>
 8001004:	687b      	ldr	r3, [r7, #4]
 8001006:	4a10      	ldr	r2, [pc, #64]	@ (8001048 <verify_address+0x54>)
 8001008:	4293      	cmp	r3, r2
 800100a:	d801      	bhi.n	8001010 <verify_address+0x1c>

		return ADDR_VALID;
 800100c:	2300      	movs	r3, #0
 800100e:	e014      	b.n	800103a <verify_address+0x46>
	} else if ( go_address >= SRAM2_BASE && go_address <= SRAM2_END) {
 8001010:	687b      	ldr	r3, [r7, #4]
 8001012:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8001016:	d305      	bcc.n	8001024 <verify_address+0x30>
 8001018:	687b      	ldr	r3, [r7, #4]
 800101a:	4a0c      	ldr	r2, [pc, #48]	@ (800104c <verify_address+0x58>)
 800101c:	4293      	cmp	r3, r2
 800101e:	d801      	bhi.n	8001024 <verify_address+0x30>

		return ADDR_VALID;
 8001020:	2300      	movs	r3, #0
 8001022:	e00a      	b.n	800103a <verify_address+0x46>
	} else if ( go_address >= FLASH_BASE && go_address <= FLASH_END) {
 8001024:	687b      	ldr	r3, [r7, #4]
 8001026:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 800102a:	d305      	bcc.n	8001038 <verify_address+0x44>
 800102c:	687b      	ldr	r3, [r7, #4]
 800102e:	f1b3 6f01 	cmp.w	r3, #135266304	@ 0x8100000
 8001032:	d201      	bcs.n	8001038 <verify_address+0x44>

		return ADDR_VALID;
 8001034:	2300      	movs	r3, #0
 8001036:	e000      	b.n	800103a <verify_address+0x46>
	}else
	return ADDR_INVALID;
 8001038:	2301      	movs	r3, #1
}
 800103a:	4618      	mov	r0, r3
 800103c:	370c      	adds	r7, #12
 800103e:	46bd      	mov	sp, r7
 8001040:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001044:	4770      	bx	lr
 8001046:	bf00      	nop
 8001048:	20040000 	.word	0x20040000
 800104c:	10010000 	.word	0x10010000

08001050 <execute_flash_erase>:

uint8_t execute_flash_erase(uint8_t page_number , uint8_t number_of_pages) {
 8001050:	b580      	push	{r7, lr}
 8001052:	b088      	sub	sp, #32
 8001054:	af00      	add	r7, sp, #0
 8001056:	4603      	mov	r3, r0
 8001058:	460a      	mov	r2, r1
 800105a:	71fb      	strb	r3, [r7, #7]
 800105c:	4613      	mov	r3, r2
 800105e:	71bb      	strb	r3, [r7, #6]

  if( number_of_pages > 511 )
    return INVALID_SECTOR;

  if( (page_number == 0xff ) || (page_number <= 511) ) {
    if(page_number == (uint8_t) 0xff) {
 8001060:	79fb      	ldrb	r3, [r7, #7]
 8001062:	2bff      	cmp	r3, #255	@ 0xff
 8001064:	d102      	bne.n	800106c <execute_flash_erase+0x1c>
    flashErase_handle.TypeErase = FLASH_TYPEERASE_MASSERASE;
 8001066:	2301      	movs	r3, #1
 8001068:	60fb      	str	r3, [r7, #12]
 800106a:	e00e      	b.n	800108a <execute_flash_erase+0x3a>

    } else {
      /*Here we are just calculating how many sectors needs to erased */
      uint8_t remanining_page = 511 - page_number;
 800106c:	79fb      	ldrb	r3, [r7, #7]
 800106e:	43db      	mvns	r3, r3
 8001070:	77fb      	strb	r3, [r7, #31]
      if( number_of_pages > remanining_page) {
 8001072:	79ba      	ldrb	r2, [r7, #6]
 8001074:	7ffb      	ldrb	r3, [r7, #31]
 8001076:	429a      	cmp	r2, r3
 8001078:	d901      	bls.n	800107e <execute_flash_erase+0x2e>

    	  number_of_pages = remanining_page;
 800107a:	7ffb      	ldrb	r3, [r7, #31]
 800107c:	71bb      	strb	r3, [r7, #6]
      }
      flashErase_handle.TypeErase = FLASH_TYPEERASE_PAGES; /*Macro from HAL*/
 800107e:	2300      	movs	r3, #0
 8001080:	60fb      	str	r3, [r7, #12]
      flashErase_handle.Page = page_number; // This is the initial page
 8001082:	79fb      	ldrb	r3, [r7, #7]
 8001084:	617b      	str	r3, [r7, #20]
      flashErase_handle.NbPages = number_of_pages;
 8001086:	79bb      	ldrb	r3, [r7, #6]
 8001088:	61bb      	str	r3, [r7, #24]
    }
    flashErase_handle.Banks = FLASH_BANK_1;
 800108a:	2301      	movs	r3, #1
 800108c:	613b      	str	r3, [r7, #16]

    /*Get access to the flash registers, unlock them first */
    HAL_FLASH_Unlock();
 800108e:	f000 fe23 	bl	8001cd8 <HAL_FLASH_Unlock>
    status = (uint8_t) HAL_FLASHEx_Erase(&flashErase_handle, &sectorError);
 8001092:	f107 0208 	add.w	r2, r7, #8
 8001096:	f107 030c 	add.w	r3, r7, #12
 800109a:	4611      	mov	r1, r2
 800109c:	4618      	mov	r0, r3
 800109e:	f000 feff 	bl	8001ea0 <HAL_FLASHEx_Erase>
 80010a2:	4603      	mov	r3, r0
 80010a4:	77bb      	strb	r3, [r7, #30]
    HAL_FLASH_Lock();
 80010a6:	f000 fe39 	bl	8001d1c <HAL_FLASH_Lock>

    return status;
 80010aa:	7fbb      	ldrb	r3, [r7, #30]
  }

  return INVALID_SECTOR;
}
 80010ac:	4618      	mov	r0, r3
 80010ae:	3720      	adds	r7, #32
 80010b0:	46bd      	mov	sp, r7
 80010b2:	bd80      	pop	{r7, pc}

080010b4 <execute_mem_write>:

uint8_t execute_mem_write(uint8_t *pBuffer, uint32_t mem_address, uint32_t len)
{
 80010b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80010b8:	b091      	sub	sp, #68	@ 0x44
 80010ba:	af00      	add	r7, sp, #0
 80010bc:	61f8      	str	r0, [r7, #28]
 80010be:	61b9      	str	r1, [r7, #24]
 80010c0:	617a      	str	r2, [r7, #20]
	/* Below code is for FLASH_TYPEPROGRAM_DOUBLEWORD logic - host application sends single word */

    HAL_StatusTypeDef status = HAL_OK;
 80010c2:	2300      	movs	r3, #0
 80010c4:	f887 303f 	strb.w	r3, [r7, #63]	@ 0x3f

    if ((mem_address & 0x7U) != 0U) return (uint8_t)HAL_ERROR; /* must be 8-byte aligned */
 80010c8:	69bb      	ldr	r3, [r7, #24]
 80010ca:	f003 0307 	and.w	r3, r3, #7
 80010ce:	2b00      	cmp	r3, #0
 80010d0:	d001      	beq.n	80010d6 <execute_mem_write+0x22>
 80010d2:	2301      	movs	r3, #1
 80010d4:	e08c      	b.n	80011f0 <execute_mem_write+0x13c>
    if (len == 0U) return (uint8_t)HAL_OK;
 80010d6:	697b      	ldr	r3, [r7, #20]
 80010d8:	2b00      	cmp	r3, #0
 80010da:	d101      	bne.n	80010e0 <execute_mem_write+0x2c>
 80010dc:	2300      	movs	r3, #0
 80010de:	e087      	b.n	80011f0 <execute_mem_write+0x13c>

    HAL_FLASH_Unlock();
 80010e0:	f000 fdfa 	bl	8001cd8 <HAL_FLASH_Unlock>

    for (uint32_t offset = 0; offset < len; offset += 8U) {
 80010e4:	2300      	movs	r3, #0
 80010e6:	63bb      	str	r3, [r7, #56]	@ 0x38
 80010e8:	e078      	b.n	80011dc <execute_mem_write+0x128>
        uint64_t data64 = 0ULL;
 80010ea:	f04f 0200 	mov.w	r2, #0
 80010ee:	f04f 0300 	mov.w	r3, #0
 80010f2:	e9c7 230c 	strd	r2, r3, [r7, #48]	@ 0x30
        uint32_t chunk = ((len - offset) >= 8U) ? 8U : (len - offset);
 80010f6:	697a      	ldr	r2, [r7, #20]
 80010f8:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80010fa:	1ad3      	subs	r3, r2, r3
 80010fc:	2b08      	cmp	r3, #8
 80010fe:	bf28      	it	cs
 8001100:	2308      	movcs	r3, #8
 8001102:	627b      	str	r3, [r7, #36]	@ 0x24

        /* pack available bytes (little-endian) */
        for (uint32_t b = 0U; b < chunk; ++b) {
 8001104:	2300      	movs	r3, #0
 8001106:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8001108:	e027      	b.n	800115a <execute_mem_write+0xa6>
            data64 |= ((uint64_t)pBuffer[offset + b]) << (8U * b);
 800110a:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 800110c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800110e:	4413      	add	r3, r2
 8001110:	69fa      	ldr	r2, [r7, #28]
 8001112:	4413      	add	r3, r2
 8001114:	781b      	ldrb	r3, [r3, #0]
 8001116:	b2db      	uxtb	r3, r3
 8001118:	2200      	movs	r2, #0
 800111a:	469a      	mov	sl, r3
 800111c:	4693      	mov	fp, r2
 800111e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001120:	00db      	lsls	r3, r3, #3
 8001122:	f1a3 0120 	sub.w	r1, r3, #32
 8001126:	f1c3 0220 	rsb	r2, r3, #32
 800112a:	fa0b f503 	lsl.w	r5, fp, r3
 800112e:	fa0a f101 	lsl.w	r1, sl, r1
 8001132:	430d      	orrs	r5, r1
 8001134:	fa2a f202 	lsr.w	r2, sl, r2
 8001138:	4315      	orrs	r5, r2
 800113a:	fa0a f403 	lsl.w	r4, sl, r3
 800113e:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	@ 0x30
 8001142:	ea42 0104 	orr.w	r1, r2, r4
 8001146:	60b9      	str	r1, [r7, #8]
 8001148:	432b      	orrs	r3, r5
 800114a:	60fb      	str	r3, [r7, #12]
 800114c:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8001150:	e9c7 230c 	strd	r2, r3, [r7, #48]	@ 0x30
        for (uint32_t b = 0U; b < chunk; ++b) {
 8001154:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001156:	3301      	adds	r3, #1
 8001158:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800115a:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800115c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800115e:	429a      	cmp	r2, r3
 8001160:	d3d3      	bcc.n	800110a <execute_mem_write+0x56>
        }
        /* pad remaining bytes with 0xFF if needed */
        for (uint32_t b = chunk; b < 8U; ++b) {
 8001162:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001164:	62bb      	str	r3, [r7, #40]	@ 0x28
 8001166:	e024      	b.n	80011b2 <execute_mem_write+0xfe>
            data64 |= ((uint64_t)0xFFU) << (8U * b);
 8001168:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800116a:	00d8      	lsls	r0, r3, #3
 800116c:	f04f 02ff 	mov.w	r2, #255	@ 0xff
 8001170:	f04f 0300 	mov.w	r3, #0
 8001174:	f1a0 0620 	sub.w	r6, r0, #32
 8001178:	f1c0 0120 	rsb	r1, r0, #32
 800117c:	fa03 f900 	lsl.w	r9, r3, r0
 8001180:	fa02 f606 	lsl.w	r6, r2, r6
 8001184:	ea49 0906 	orr.w	r9, r9, r6
 8001188:	fa22 f101 	lsr.w	r1, r2, r1
 800118c:	ea49 0901 	orr.w	r9, r9, r1
 8001190:	fa02 f800 	lsl.w	r8, r2, r0
 8001194:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	@ 0x30
 8001198:	ea42 0108 	orr.w	r1, r2, r8
 800119c:	6039      	str	r1, [r7, #0]
 800119e:	ea43 0309 	orr.w	r3, r3, r9
 80011a2:	607b      	str	r3, [r7, #4]
 80011a4:	e9d7 2300 	ldrd	r2, r3, [r7]
 80011a8:	e9c7 230c 	strd	r2, r3, [r7, #48]	@ 0x30
        for (uint32_t b = chunk; b < 8U; ++b) {
 80011ac:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80011ae:	3301      	adds	r3, #1
 80011b0:	62bb      	str	r3, [r7, #40]	@ 0x28
 80011b2:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80011b4:	2b07      	cmp	r3, #7
 80011b6:	d9d7      	bls.n	8001168 <execute_mem_write+0xb4>
        }

        status = HAL_FLASH_Program(FLASH_TYPEPROGRAM_DOUBLEWORD, mem_address + offset, data64);
 80011b8:	69ba      	ldr	r2, [r7, #24]
 80011ba:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80011bc:	18d1      	adds	r1, r2, r3
 80011be:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	@ 0x30
 80011c2:	2000      	movs	r0, #0
 80011c4:	f000 fd1c 	bl	8001c00 <HAL_FLASH_Program>
 80011c8:	4603      	mov	r3, r0
 80011ca:	f887 303f 	strb.w	r3, [r7, #63]	@ 0x3f
        if (status != HAL_OK) break;
 80011ce:	f897 303f 	ldrb.w	r3, [r7, #63]	@ 0x3f
 80011d2:	2b00      	cmp	r3, #0
 80011d4:	d107      	bne.n	80011e6 <execute_mem_write+0x132>
    for (uint32_t offset = 0; offset < len; offset += 8U) {
 80011d6:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80011d8:	3308      	adds	r3, #8
 80011da:	63bb      	str	r3, [r7, #56]	@ 0x38
 80011dc:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 80011de:	697b      	ldr	r3, [r7, #20]
 80011e0:	429a      	cmp	r2, r3
 80011e2:	d382      	bcc.n	80010ea <execute_mem_write+0x36>
 80011e4:	e000      	b.n	80011e8 <execute_mem_write+0x134>
        if (status != HAL_OK) break;
 80011e6:	bf00      	nop
    }

    HAL_FLASH_Lock();
 80011e8:	f000 fd98 	bl	8001d1c <HAL_FLASH_Lock>
    return (uint8_t)status; /* 0 = HAL_OK */
 80011ec:	f897 303f 	ldrb.w	r3, [r7, #63]	@ 0x3f
}
 80011f0:	4618      	mov	r0, r3
 80011f2:	3744      	adds	r7, #68	@ 0x44
 80011f4:	46bd      	mov	sp, r7
 80011f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080011fc <fetch_available_firmware_version>:

uint8_t fetch_available_firmware_version(void)
{
 80011fc:	b580      	push	{r7, lr}
 80011fe:	b082      	sub	sp, #8
 8001200:	af00      	add	r7, sp, #0
	uint8_t version_request_command = 0x99;
 8001202:	2399      	movs	r3, #153	@ 0x99
 8001204:	71fb      	strb	r3, [r7, #7]
	uint8_t available_version;
	bootloader_uart_write_data(&version_request_command, sizeof(version_request_command));
 8001206:	1dfb      	adds	r3, r7, #7
 8001208:	2101      	movs	r1, #1
 800120a:	4618      	mov	r0, r3
 800120c:	f7ff feb0 	bl	8000f70 <bootloader_uart_write_data>
	HAL_UART_Receive(C_UART, &available_version, 1, HAL_MAX_DELAY);
 8001210:	1db9      	adds	r1, r7, #6
 8001212:	f04f 33ff 	mov.w	r3, #4294967295
 8001216:	2201      	movs	r2, #1
 8001218:	4803      	ldr	r0, [pc, #12]	@ (8001228 <fetch_available_firmware_version+0x2c>)
 800121a:	f002 fee8 	bl	8003fee <HAL_UART_Receive>
	return available_version;
 800121e:	79bb      	ldrb	r3, [r7, #6]
}
 8001220:	4618      	mov	r0, r3
 8001222:	3708      	adds	r7, #8
 8001224:	46bd      	mov	sp, r7
 8001226:	bd80      	pop	{r7, pc}
 8001228:	20000150 	.word	0x20000150

0800122c <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 800122c:	b480      	push	{r7}
 800122e:	af00      	add	r7, sp, #0
  __ASM volatile ("cpsid i" : : : "memory");
 8001230:	b672      	cpsid	i
}
 8001232:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8001234:	bf00      	nop
 8001236:	e7fd      	b.n	8001234 <Error_Handler+0x8>

08001238 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001238:	b480      	push	{r7}
 800123a:	b083      	sub	sp, #12
 800123c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800123e:	4b0f      	ldr	r3, [pc, #60]	@ (800127c <HAL_MspInit+0x44>)
 8001240:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8001242:	4a0e      	ldr	r2, [pc, #56]	@ (800127c <HAL_MspInit+0x44>)
 8001244:	f043 0301 	orr.w	r3, r3, #1
 8001248:	6613      	str	r3, [r2, #96]	@ 0x60
 800124a:	4b0c      	ldr	r3, [pc, #48]	@ (800127c <HAL_MspInit+0x44>)
 800124c:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800124e:	f003 0301 	and.w	r3, r3, #1
 8001252:	607b      	str	r3, [r7, #4]
 8001254:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001256:	4b09      	ldr	r3, [pc, #36]	@ (800127c <HAL_MspInit+0x44>)
 8001258:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800125a:	4a08      	ldr	r2, [pc, #32]	@ (800127c <HAL_MspInit+0x44>)
 800125c:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8001260:	6593      	str	r3, [r2, #88]	@ 0x58
 8001262:	4b06      	ldr	r3, [pc, #24]	@ (800127c <HAL_MspInit+0x44>)
 8001264:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001266:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800126a:	603b      	str	r3, [r7, #0]
 800126c:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800126e:	bf00      	nop
 8001270:	370c      	adds	r7, #12
 8001272:	46bd      	mov	sp, r7
 8001274:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001278:	4770      	bx	lr
 800127a:	bf00      	nop
 800127c:	40021000 	.word	0x40021000

08001280 <HAL_CRC_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hcrc: CRC handle pointer
  * @retval None
  */
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
 8001280:	b480      	push	{r7}
 8001282:	b085      	sub	sp, #20
 8001284:	af00      	add	r7, sp, #0
 8001286:	6078      	str	r0, [r7, #4]
  if(hcrc->Instance==CRC)
 8001288:	687b      	ldr	r3, [r7, #4]
 800128a:	681b      	ldr	r3, [r3, #0]
 800128c:	4a0a      	ldr	r2, [pc, #40]	@ (80012b8 <HAL_CRC_MspInit+0x38>)
 800128e:	4293      	cmp	r3, r2
 8001290:	d10b      	bne.n	80012aa <HAL_CRC_MspInit+0x2a>
  {
    /* USER CODE BEGIN CRC_MspInit 0 */

    /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001292:	4b0a      	ldr	r3, [pc, #40]	@ (80012bc <HAL_CRC_MspInit+0x3c>)
 8001294:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8001296:	4a09      	ldr	r2, [pc, #36]	@ (80012bc <HAL_CRC_MspInit+0x3c>)
 8001298:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 800129c:	6493      	str	r3, [r2, #72]	@ 0x48
 800129e:	4b07      	ldr	r3, [pc, #28]	@ (80012bc <HAL_CRC_MspInit+0x3c>)
 80012a0:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80012a2:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 80012a6:	60fb      	str	r3, [r7, #12]
 80012a8:	68fb      	ldr	r3, [r7, #12]

    /* USER CODE END CRC_MspInit 1 */

  }

}
 80012aa:	bf00      	nop
 80012ac:	3714      	adds	r7, #20
 80012ae:	46bd      	mov	sp, r7
 80012b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80012b4:	4770      	bx	lr
 80012b6:	bf00      	nop
 80012b8:	40023000 	.word	0x40023000
 80012bc:	40021000 	.word	0x40021000

080012c0 <HAL_UART_MspInit>:
  * This function configures the hardware resources used in this example
  * @param huart: UART handle pointer
  * @retval None
  */
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 80012c0:	b580      	push	{r7, lr}
 80012c2:	b0ae      	sub	sp, #184	@ 0xb8
 80012c4:	af00      	add	r7, sp, #0
 80012c6:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80012c8:	f107 03a4 	add.w	r3, r7, #164	@ 0xa4
 80012cc:	2200      	movs	r2, #0
 80012ce:	601a      	str	r2, [r3, #0]
 80012d0:	605a      	str	r2, [r3, #4]
 80012d2:	609a      	str	r2, [r3, #8]
 80012d4:	60da      	str	r2, [r3, #12]
 80012d6:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 80012d8:	f107 0318 	add.w	r3, r7, #24
 80012dc:	228c      	movs	r2, #140	@ 0x8c
 80012de:	2100      	movs	r1, #0
 80012e0:	4618      	mov	r0, r3
 80012e2:	f003 fc41 	bl	8004b68 <memset>
  if(huart->Instance==LPUART1)
 80012e6:	687b      	ldr	r3, [r7, #4]
 80012e8:	681b      	ldr	r3, [r3, #0]
 80012ea:	4a43      	ldr	r2, [pc, #268]	@ (80013f8 <HAL_UART_MspInit+0x138>)
 80012ec:	4293      	cmp	r3, r2
 80012ee:	d13e      	bne.n	800136e <HAL_UART_MspInit+0xae>

    /* USER CODE END LPUART1_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_LPUART1;
 80012f0:	2320      	movs	r3, #32
 80012f2:	61bb      	str	r3, [r7, #24]
    PeriphClkInit.Lpuart1ClockSelection = RCC_LPUART1CLKSOURCE_PCLK1;
 80012f4:	2300      	movs	r3, #0
 80012f6:	667b      	str	r3, [r7, #100]	@ 0x64
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 80012f8:	f107 0318 	add.w	r3, r7, #24
 80012fc:	4618      	mov	r0, r3
 80012fe:	f002 f8d5 	bl	80034ac <HAL_RCCEx_PeriphCLKConfig>
 8001302:	4603      	mov	r3, r0
 8001304:	2b00      	cmp	r3, #0
 8001306:	d001      	beq.n	800130c <HAL_UART_MspInit+0x4c>
    {
      Error_Handler();
 8001308:	f7ff ff90 	bl	800122c <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LPUART1_CLK_ENABLE();
 800130c:	4b3b      	ldr	r3, [pc, #236]	@ (80013fc <HAL_UART_MspInit+0x13c>)
 800130e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8001310:	4a3a      	ldr	r2, [pc, #232]	@ (80013fc <HAL_UART_MspInit+0x13c>)
 8001312:	f043 0301 	orr.w	r3, r3, #1
 8001316:	65d3      	str	r3, [r2, #92]	@ 0x5c
 8001318:	4b38      	ldr	r3, [pc, #224]	@ (80013fc <HAL_UART_MspInit+0x13c>)
 800131a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800131c:	f003 0301 	and.w	r3, r3, #1
 8001320:	617b      	str	r3, [r7, #20]
 8001322:	697b      	ldr	r3, [r7, #20]

    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001324:	4b35      	ldr	r3, [pc, #212]	@ (80013fc <HAL_UART_MspInit+0x13c>)
 8001326:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001328:	4a34      	ldr	r2, [pc, #208]	@ (80013fc <HAL_UART_MspInit+0x13c>)
 800132a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800132e:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8001330:	4b32      	ldr	r3, [pc, #200]	@ (80013fc <HAL_UART_MspInit+0x13c>)
 8001332:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001334:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8001338:	613b      	str	r3, [r7, #16]
 800133a:	693b      	ldr	r3, [r7, #16]
    HAL_PWREx_EnableVddIO2();
 800133c:	f001 fa68 	bl	8002810 <HAL_PWREx_EnableVddIO2>
    /**LPUART1 GPIO Configuration
    PG7     ------> LPUART1_TX
    PG8     ------> LPUART1_RX
    */
    GPIO_InitStruct.Pin = STLK_RX_Pin|STLK_TX_Pin;
 8001340:	f44f 73c0 	mov.w	r3, #384	@ 0x180
 8001344:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001348:	2302      	movs	r3, #2
 800134a:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800134e:	2300      	movs	r3, #0
 8001350:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001354:	2303      	movs	r3, #3
 8001356:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
    GPIO_InitStruct.Alternate = GPIO_AF8_LPUART1;
 800135a:	2308      	movs	r3, #8
 800135c:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001360:	f107 03a4 	add.w	r3, r7, #164	@ 0xa4
 8001364:	4619      	mov	r1, r3
 8001366:	4826      	ldr	r0, [pc, #152]	@ (8001400 <HAL_UART_MspInit+0x140>)
 8001368:	f001 f82c 	bl	80023c4 <HAL_GPIO_Init>
    /* USER CODE BEGIN USART2_MspInit 1 */

    /* USER CODE END USART2_MspInit 1 */
  }

}
 800136c:	e040      	b.n	80013f0 <HAL_UART_MspInit+0x130>
  else if(huart->Instance==USART2)
 800136e:	687b      	ldr	r3, [r7, #4]
 8001370:	681b      	ldr	r3, [r3, #0]
 8001372:	4a24      	ldr	r2, [pc, #144]	@ (8001404 <HAL_UART_MspInit+0x144>)
 8001374:	4293      	cmp	r3, r2
 8001376:	d13b      	bne.n	80013f0 <HAL_UART_MspInit+0x130>
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART2;
 8001378:	2302      	movs	r3, #2
 800137a:	61bb      	str	r3, [r7, #24]
    PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 800137c:	2300      	movs	r3, #0
 800137e:	657b      	str	r3, [r7, #84]	@ 0x54
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8001380:	f107 0318 	add.w	r3, r7, #24
 8001384:	4618      	mov	r0, r3
 8001386:	f002 f891 	bl	80034ac <HAL_RCCEx_PeriphCLKConfig>
 800138a:	4603      	mov	r3, r0
 800138c:	2b00      	cmp	r3, #0
 800138e:	d001      	beq.n	8001394 <HAL_UART_MspInit+0xd4>
      Error_Handler();
 8001390:	f7ff ff4c 	bl	800122c <Error_Handler>
    __HAL_RCC_USART2_CLK_ENABLE();
 8001394:	4b19      	ldr	r3, [pc, #100]	@ (80013fc <HAL_UART_MspInit+0x13c>)
 8001396:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001398:	4a18      	ldr	r2, [pc, #96]	@ (80013fc <HAL_UART_MspInit+0x13c>)
 800139a:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800139e:	6593      	str	r3, [r2, #88]	@ 0x58
 80013a0:	4b16      	ldr	r3, [pc, #88]	@ (80013fc <HAL_UART_MspInit+0x13c>)
 80013a2:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80013a4:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80013a8:	60fb      	str	r3, [r7, #12]
 80013aa:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80013ac:	4b13      	ldr	r3, [pc, #76]	@ (80013fc <HAL_UART_MspInit+0x13c>)
 80013ae:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80013b0:	4a12      	ldr	r2, [pc, #72]	@ (80013fc <HAL_UART_MspInit+0x13c>)
 80013b2:	f043 0301 	orr.w	r3, r3, #1
 80013b6:	64d3      	str	r3, [r2, #76]	@ 0x4c
 80013b8:	4b10      	ldr	r3, [pc, #64]	@ (80013fc <HAL_UART_MspInit+0x13c>)
 80013ba:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80013bc:	f003 0301 	and.w	r3, r3, #1
 80013c0:	60bb      	str	r3, [r7, #8]
 80013c2:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 80013c4:	230c      	movs	r3, #12
 80013c6:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80013ca:	2302      	movs	r3, #2
 80013cc:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80013d0:	2300      	movs	r3, #0
 80013d2:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80013d6:	2303      	movs	r3, #3
 80013d8:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 80013dc:	2307      	movs	r3, #7
 80013de:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80013e2:	f107 03a4 	add.w	r3, r7, #164	@ 0xa4
 80013e6:	4619      	mov	r1, r3
 80013e8:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 80013ec:	f000 ffea 	bl	80023c4 <HAL_GPIO_Init>
}
 80013f0:	bf00      	nop
 80013f2:	37b8      	adds	r7, #184	@ 0xb8
 80013f4:	46bd      	mov	sp, r7
 80013f6:	bd80      	pop	{r7, pc}
 80013f8:	40008000 	.word	0x40008000
 80013fc:	40021000 	.word	0x40021000
 8001400:	48001800 	.word	0x48001800
 8001404:	40004400 	.word	0x40004400

08001408 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001408:	b480      	push	{r7}
 800140a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 800140c:	bf00      	nop
 800140e:	e7fd      	b.n	800140c <NMI_Handler+0x4>

08001410 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001410:	b480      	push	{r7}
 8001412:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001414:	bf00      	nop
 8001416:	e7fd      	b.n	8001414 <HardFault_Handler+0x4>

08001418 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001418:	b480      	push	{r7}
 800141a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 800141c:	bf00      	nop
 800141e:	e7fd      	b.n	800141c <MemManage_Handler+0x4>

08001420 <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8001420:	b480      	push	{r7}
 8001422:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001424:	bf00      	nop
 8001426:	e7fd      	b.n	8001424 <BusFault_Handler+0x4>

08001428 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001428:	b480      	push	{r7}
 800142a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 800142c:	bf00      	nop
 800142e:	e7fd      	b.n	800142c <UsageFault_Handler+0x4>

08001430 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8001430:	b480      	push	{r7}
 8001432:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8001434:	bf00      	nop
 8001436:	46bd      	mov	sp, r7
 8001438:	f85d 7b04 	ldr.w	r7, [sp], #4
 800143c:	4770      	bx	lr

0800143e <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 800143e:	b480      	push	{r7}
 8001440:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8001442:	bf00      	nop
 8001444:	46bd      	mov	sp, r7
 8001446:	f85d 7b04 	ldr.w	r7, [sp], #4
 800144a:	4770      	bx	lr

0800144c <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 800144c:	b480      	push	{r7}
 800144e:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8001450:	bf00      	nop
 8001452:	46bd      	mov	sp, r7
 8001454:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001458:	4770      	bx	lr

0800145a <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 800145a:	b580      	push	{r7, lr}
 800145c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 800145e:	f000 f8c9 	bl	80015f4 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8001462:	bf00      	nop
 8001464:	bd80      	pop	{r7, pc}
	...

08001468 <_sbrk>:
 8001468:	b580      	push	{r7, lr}
 800146a:	b086      	sub	sp, #24
 800146c:	af00      	add	r7, sp, #0
 800146e:	6078      	str	r0, [r7, #4]
 8001470:	4a14      	ldr	r2, [pc, #80]	@ (80014c4 <_sbrk+0x5c>)
 8001472:	4b15      	ldr	r3, [pc, #84]	@ (80014c8 <_sbrk+0x60>)
 8001474:	1ad3      	subs	r3, r2, r3
 8001476:	617b      	str	r3, [r7, #20]
 8001478:	697b      	ldr	r3, [r7, #20]
 800147a:	613b      	str	r3, [r7, #16]
 800147c:	4b13      	ldr	r3, [pc, #76]	@ (80014cc <_sbrk+0x64>)
 800147e:	681b      	ldr	r3, [r3, #0]
 8001480:	2b00      	cmp	r3, #0
 8001482:	d102      	bne.n	800148a <_sbrk+0x22>
 8001484:	4b11      	ldr	r3, [pc, #68]	@ (80014cc <_sbrk+0x64>)
 8001486:	4a12      	ldr	r2, [pc, #72]	@ (80014d0 <_sbrk+0x68>)
 8001488:	601a      	str	r2, [r3, #0]
 800148a:	4b10      	ldr	r3, [pc, #64]	@ (80014cc <_sbrk+0x64>)
 800148c:	681a      	ldr	r2, [r3, #0]
 800148e:	687b      	ldr	r3, [r7, #4]
 8001490:	4413      	add	r3, r2
 8001492:	693a      	ldr	r2, [r7, #16]
 8001494:	429a      	cmp	r2, r3
 8001496:	d207      	bcs.n	80014a8 <_sbrk+0x40>
 8001498:	f003 fb6e 	bl	8004b78 <__errno>
 800149c:	4603      	mov	r3, r0
 800149e:	220c      	movs	r2, #12
 80014a0:	601a      	str	r2, [r3, #0]
 80014a2:	f04f 33ff 	mov.w	r3, #4294967295
 80014a6:	e009      	b.n	80014bc <_sbrk+0x54>
 80014a8:	4b08      	ldr	r3, [pc, #32]	@ (80014cc <_sbrk+0x64>)
 80014aa:	681b      	ldr	r3, [r3, #0]
 80014ac:	60fb      	str	r3, [r7, #12]
 80014ae:	4b07      	ldr	r3, [pc, #28]	@ (80014cc <_sbrk+0x64>)
 80014b0:	681a      	ldr	r2, [r3, #0]
 80014b2:	687b      	ldr	r3, [r7, #4]
 80014b4:	4413      	add	r3, r2
 80014b6:	4a05      	ldr	r2, [pc, #20]	@ (80014cc <_sbrk+0x64>)
 80014b8:	6013      	str	r3, [r2, #0]
 80014ba:	68fb      	ldr	r3, [r7, #12]
 80014bc:	4618      	mov	r0, r3
 80014be:	3718      	adds	r7, #24
 80014c0:	46bd      	mov	sp, r7
 80014c2:	bd80      	pop	{r7, pc}
 80014c4:	20040000 	.word	0x20040000
 80014c8:	00000400 	.word	0x00000400
 80014cc:	200002a0 	.word	0x200002a0
 80014d0:	200003f0 	.word	0x200003f0

080014d4 <SystemInit>:
 80014d4:	b480      	push	{r7}
 80014d6:	af00      	add	r7, sp, #0
 80014d8:	4b06      	ldr	r3, [pc, #24]	@ (80014f4 <SystemInit+0x20>)
 80014da:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80014de:	4a05      	ldr	r2, [pc, #20]	@ (80014f4 <SystemInit+0x20>)
 80014e0:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 80014e4:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 80014e8:	bf00      	nop
 80014ea:	46bd      	mov	sp, r7
 80014ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80014f0:	4770      	bx	lr
 80014f2:	bf00      	nop
 80014f4:	e000ed00 	.word	0xe000ed00

080014f8 <Reset_Handler>:
 80014f8:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8001530 <LoopForever+0x2>
 80014fc:	f7ff ffea 	bl	80014d4 <SystemInit>
 8001500:	480c      	ldr	r0, [pc, #48]	@ (8001534 <LoopForever+0x6>)
 8001502:	490d      	ldr	r1, [pc, #52]	@ (8001538 <LoopForever+0xa>)
 8001504:	4a0d      	ldr	r2, [pc, #52]	@ (800153c <LoopForever+0xe>)
 8001506:	2300      	movs	r3, #0
 8001508:	e002      	b.n	8001510 <LoopCopyDataInit>

0800150a <CopyDataInit>:
 800150a:	58d4      	ldr	r4, [r2, r3]
 800150c:	50c4      	str	r4, [r0, r3]
 800150e:	3304      	adds	r3, #4

08001510 <LoopCopyDataInit>:
 8001510:	18c4      	adds	r4, r0, r3
 8001512:	428c      	cmp	r4, r1
 8001514:	d3f9      	bcc.n	800150a <CopyDataInit>
 8001516:	4a0a      	ldr	r2, [pc, #40]	@ (8001540 <LoopForever+0x12>)
 8001518:	4c0a      	ldr	r4, [pc, #40]	@ (8001544 <LoopForever+0x16>)
 800151a:	2300      	movs	r3, #0
 800151c:	e001      	b.n	8001522 <LoopFillZerobss>

0800151e <FillZerobss>:
 800151e:	6013      	str	r3, [r2, #0]
 8001520:	3204      	adds	r2, #4

08001522 <LoopFillZerobss>:
 8001522:	42a2      	cmp	r2, r4
 8001524:	d3fb      	bcc.n	800151e <FillZerobss>
 8001526:	f003 fb2d 	bl	8004b84 <__libc_init_array>
 800152a:	f7ff f84f 	bl	80005cc <main>

0800152e <LoopForever>:
 800152e:	e7fe      	b.n	800152e <LoopForever>
 8001530:	20040000 	.word	0x20040000
 8001534:	20000000 	.word	0x20000000
 8001538:	20000088 	.word	0x20000088
 800153c:	08005918 	.word	0x08005918
 8001540:	20000088 	.word	0x20000088
 8001544:	200003f0 	.word	0x200003f0

08001548 <ADC1_2_IRQHandler>:
 8001548:	e7fe      	b.n	8001548 <ADC1_2_IRQHandler>

0800154a <HAL_Init>:
 800154a:	b580      	push	{r7, lr}
 800154c:	b082      	sub	sp, #8
 800154e:	af00      	add	r7, sp, #0
 8001550:	2300      	movs	r3, #0
 8001552:	71fb      	strb	r3, [r7, #7]
 8001554:	2003      	movs	r0, #3
 8001556:	f000 f91f 	bl	8001798 <HAL_NVIC_SetPriorityGrouping>
 800155a:	2000      	movs	r0, #0
 800155c:	f000 f80e 	bl	800157c <HAL_InitTick>
 8001560:	4603      	mov	r3, r0
 8001562:	2b00      	cmp	r3, #0
 8001564:	d002      	beq.n	800156c <HAL_Init+0x22>
 8001566:	2301      	movs	r3, #1
 8001568:	71fb      	strb	r3, [r7, #7]
 800156a:	e001      	b.n	8001570 <HAL_Init+0x26>
 800156c:	f7ff fe64 	bl	8001238 <HAL_MspInit>
 8001570:	79fb      	ldrb	r3, [r7, #7]
 8001572:	4618      	mov	r0, r3
 8001574:	3708      	adds	r7, #8
 8001576:	46bd      	mov	sp, r7
 8001578:	bd80      	pop	{r7, pc}
	...

0800157c <HAL_InitTick>:
 800157c:	b580      	push	{r7, lr}
 800157e:	b084      	sub	sp, #16
 8001580:	af00      	add	r7, sp, #0
 8001582:	6078      	str	r0, [r7, #4]
 8001584:	2300      	movs	r3, #0
 8001586:	73fb      	strb	r3, [r7, #15]
 8001588:	4b17      	ldr	r3, [pc, #92]	@ (80015e8 <HAL_InitTick+0x6c>)
 800158a:	781b      	ldrb	r3, [r3, #0]
 800158c:	2b00      	cmp	r3, #0
 800158e:	d023      	beq.n	80015d8 <HAL_InitTick+0x5c>
 8001590:	4b16      	ldr	r3, [pc, #88]	@ (80015ec <HAL_InitTick+0x70>)
 8001592:	681a      	ldr	r2, [r3, #0]
 8001594:	4b14      	ldr	r3, [pc, #80]	@ (80015e8 <HAL_InitTick+0x6c>)
 8001596:	781b      	ldrb	r3, [r3, #0]
 8001598:	4619      	mov	r1, r3
 800159a:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 800159e:	fbb3 f3f1 	udiv	r3, r3, r1
 80015a2:	fbb2 f3f3 	udiv	r3, r2, r3
 80015a6:	4618      	mov	r0, r3
 80015a8:	f000 f91d 	bl	80017e6 <HAL_SYSTICK_Config>
 80015ac:	4603      	mov	r3, r0
 80015ae:	2b00      	cmp	r3, #0
 80015b0:	d10f      	bne.n	80015d2 <HAL_InitTick+0x56>
 80015b2:	687b      	ldr	r3, [r7, #4]
 80015b4:	2b0f      	cmp	r3, #15
 80015b6:	d809      	bhi.n	80015cc <HAL_InitTick+0x50>
 80015b8:	2200      	movs	r2, #0
 80015ba:	6879      	ldr	r1, [r7, #4]
 80015bc:	f04f 30ff 	mov.w	r0, #4294967295
 80015c0:	f000 f8f5 	bl	80017ae <HAL_NVIC_SetPriority>
 80015c4:	4a0a      	ldr	r2, [pc, #40]	@ (80015f0 <HAL_InitTick+0x74>)
 80015c6:	687b      	ldr	r3, [r7, #4]
 80015c8:	6013      	str	r3, [r2, #0]
 80015ca:	e007      	b.n	80015dc <HAL_InitTick+0x60>
 80015cc:	2301      	movs	r3, #1
 80015ce:	73fb      	strb	r3, [r7, #15]
 80015d0:	e004      	b.n	80015dc <HAL_InitTick+0x60>
 80015d2:	2301      	movs	r3, #1
 80015d4:	73fb      	strb	r3, [r7, #15]
 80015d6:	e001      	b.n	80015dc <HAL_InitTick+0x60>
 80015d8:	2301      	movs	r3, #1
 80015da:	73fb      	strb	r3, [r7, #15]
 80015dc:	7bfb      	ldrb	r3, [r7, #15]
 80015de:	4618      	mov	r0, r3
 80015e0:	3710      	adds	r7, #16
 80015e2:	46bd      	mov	sp, r7
 80015e4:	bd80      	pop	{r7, pc}
 80015e6:	bf00      	nop
 80015e8:	20000014 	.word	0x20000014
 80015ec:	2000000c 	.word	0x2000000c
 80015f0:	20000010 	.word	0x20000010

080015f4 <HAL_IncTick>:
 80015f4:	b480      	push	{r7}
 80015f6:	af00      	add	r7, sp, #0
 80015f8:	4b06      	ldr	r3, [pc, #24]	@ (8001614 <HAL_IncTick+0x20>)
 80015fa:	781b      	ldrb	r3, [r3, #0]
 80015fc:	461a      	mov	r2, r3
 80015fe:	4b06      	ldr	r3, [pc, #24]	@ (8001618 <HAL_IncTick+0x24>)
 8001600:	681b      	ldr	r3, [r3, #0]
 8001602:	4413      	add	r3, r2
 8001604:	4a04      	ldr	r2, [pc, #16]	@ (8001618 <HAL_IncTick+0x24>)
 8001606:	6013      	str	r3, [r2, #0]
 8001608:	bf00      	nop
 800160a:	46bd      	mov	sp, r7
 800160c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001610:	4770      	bx	lr
 8001612:	bf00      	nop
 8001614:	20000014 	.word	0x20000014
 8001618:	200002a4 	.word	0x200002a4

0800161c <HAL_GetTick>:
 800161c:	b480      	push	{r7}
 800161e:	af00      	add	r7, sp, #0
 8001620:	4b03      	ldr	r3, [pc, #12]	@ (8001630 <HAL_GetTick+0x14>)
 8001622:	681b      	ldr	r3, [r3, #0]
 8001624:	4618      	mov	r0, r3
 8001626:	46bd      	mov	sp, r7
 8001628:	f85d 7b04 	ldr.w	r7, [sp], #4
 800162c:	4770      	bx	lr
 800162e:	bf00      	nop
 8001630:	200002a4 	.word	0x200002a4

08001634 <__NVIC_SetPriorityGrouping>:
 8001634:	b480      	push	{r7}
 8001636:	b085      	sub	sp, #20
 8001638:	af00      	add	r7, sp, #0
 800163a:	6078      	str	r0, [r7, #4]
 800163c:	687b      	ldr	r3, [r7, #4]
 800163e:	f003 0307 	and.w	r3, r3, #7
 8001642:	60fb      	str	r3, [r7, #12]
 8001644:	4b0c      	ldr	r3, [pc, #48]	@ (8001678 <__NVIC_SetPriorityGrouping+0x44>)
 8001646:	68db      	ldr	r3, [r3, #12]
 8001648:	60bb      	str	r3, [r7, #8]
 800164a:	68ba      	ldr	r2, [r7, #8]
 800164c:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8001650:	4013      	ands	r3, r2
 8001652:	60bb      	str	r3, [r7, #8]
 8001654:	68fb      	ldr	r3, [r7, #12]
 8001656:	021a      	lsls	r2, r3, #8
 8001658:	68bb      	ldr	r3, [r7, #8]
 800165a:	4313      	orrs	r3, r2
 800165c:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8001660:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8001664:	60bb      	str	r3, [r7, #8]
 8001666:	4a04      	ldr	r2, [pc, #16]	@ (8001678 <__NVIC_SetPriorityGrouping+0x44>)
 8001668:	68bb      	ldr	r3, [r7, #8]
 800166a:	60d3      	str	r3, [r2, #12]
 800166c:	bf00      	nop
 800166e:	3714      	adds	r7, #20
 8001670:	46bd      	mov	sp, r7
 8001672:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001676:	4770      	bx	lr
 8001678:	e000ed00 	.word	0xe000ed00

0800167c <__NVIC_GetPriorityGrouping>:
 800167c:	b480      	push	{r7}
 800167e:	af00      	add	r7, sp, #0
 8001680:	4b04      	ldr	r3, [pc, #16]	@ (8001694 <__NVIC_GetPriorityGrouping+0x18>)
 8001682:	68db      	ldr	r3, [r3, #12]
 8001684:	0a1b      	lsrs	r3, r3, #8
 8001686:	f003 0307 	and.w	r3, r3, #7
 800168a:	4618      	mov	r0, r3
 800168c:	46bd      	mov	sp, r7
 800168e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001692:	4770      	bx	lr
 8001694:	e000ed00 	.word	0xe000ed00

08001698 <__NVIC_SetPriority>:
 8001698:	b480      	push	{r7}
 800169a:	b083      	sub	sp, #12
 800169c:	af00      	add	r7, sp, #0
 800169e:	4603      	mov	r3, r0
 80016a0:	6039      	str	r1, [r7, #0]
 80016a2:	71fb      	strb	r3, [r7, #7]
 80016a4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80016a8:	2b00      	cmp	r3, #0
 80016aa:	db0a      	blt.n	80016c2 <__NVIC_SetPriority+0x2a>
 80016ac:	683b      	ldr	r3, [r7, #0]
 80016ae:	b2da      	uxtb	r2, r3
 80016b0:	490c      	ldr	r1, [pc, #48]	@ (80016e4 <__NVIC_SetPriority+0x4c>)
 80016b2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80016b6:	0112      	lsls	r2, r2, #4
 80016b8:	b2d2      	uxtb	r2, r2
 80016ba:	440b      	add	r3, r1
 80016bc:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 80016c0:	e00a      	b.n	80016d8 <__NVIC_SetPriority+0x40>
 80016c2:	683b      	ldr	r3, [r7, #0]
 80016c4:	b2da      	uxtb	r2, r3
 80016c6:	4908      	ldr	r1, [pc, #32]	@ (80016e8 <__NVIC_SetPriority+0x50>)
 80016c8:	79fb      	ldrb	r3, [r7, #7]
 80016ca:	f003 030f 	and.w	r3, r3, #15
 80016ce:	3b04      	subs	r3, #4
 80016d0:	0112      	lsls	r2, r2, #4
 80016d2:	b2d2      	uxtb	r2, r2
 80016d4:	440b      	add	r3, r1
 80016d6:	761a      	strb	r2, [r3, #24]
 80016d8:	bf00      	nop
 80016da:	370c      	adds	r7, #12
 80016dc:	46bd      	mov	sp, r7
 80016de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016e2:	4770      	bx	lr
 80016e4:	e000e100 	.word	0xe000e100
 80016e8:	e000ed00 	.word	0xe000ed00

080016ec <NVIC_EncodePriority>:
 80016ec:	b480      	push	{r7}
 80016ee:	b089      	sub	sp, #36	@ 0x24
 80016f0:	af00      	add	r7, sp, #0
 80016f2:	60f8      	str	r0, [r7, #12]
 80016f4:	60b9      	str	r1, [r7, #8]
 80016f6:	607a      	str	r2, [r7, #4]
 80016f8:	68fb      	ldr	r3, [r7, #12]
 80016fa:	f003 0307 	and.w	r3, r3, #7
 80016fe:	61fb      	str	r3, [r7, #28]
 8001700:	69fb      	ldr	r3, [r7, #28]
 8001702:	f1c3 0307 	rsb	r3, r3, #7
 8001706:	2b04      	cmp	r3, #4
 8001708:	bf28      	it	cs
 800170a:	2304      	movcs	r3, #4
 800170c:	61bb      	str	r3, [r7, #24]
 800170e:	69fb      	ldr	r3, [r7, #28]
 8001710:	3304      	adds	r3, #4
 8001712:	2b06      	cmp	r3, #6
 8001714:	d902      	bls.n	800171c <NVIC_EncodePriority+0x30>
 8001716:	69fb      	ldr	r3, [r7, #28]
 8001718:	3b03      	subs	r3, #3
 800171a:	e000      	b.n	800171e <NVIC_EncodePriority+0x32>
 800171c:	2300      	movs	r3, #0
 800171e:	617b      	str	r3, [r7, #20]
 8001720:	f04f 32ff 	mov.w	r2, #4294967295
 8001724:	69bb      	ldr	r3, [r7, #24]
 8001726:	fa02 f303 	lsl.w	r3, r2, r3
 800172a:	43da      	mvns	r2, r3
 800172c:	68bb      	ldr	r3, [r7, #8]
 800172e:	401a      	ands	r2, r3
 8001730:	697b      	ldr	r3, [r7, #20]
 8001732:	409a      	lsls	r2, r3
 8001734:	f04f 31ff 	mov.w	r1, #4294967295
 8001738:	697b      	ldr	r3, [r7, #20]
 800173a:	fa01 f303 	lsl.w	r3, r1, r3
 800173e:	43d9      	mvns	r1, r3
 8001740:	687b      	ldr	r3, [r7, #4]
 8001742:	400b      	ands	r3, r1
 8001744:	4313      	orrs	r3, r2
 8001746:	4618      	mov	r0, r3
 8001748:	3724      	adds	r7, #36	@ 0x24
 800174a:	46bd      	mov	sp, r7
 800174c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001750:	4770      	bx	lr
	...

08001754 <SysTick_Config>:
 8001754:	b580      	push	{r7, lr}
 8001756:	b082      	sub	sp, #8
 8001758:	af00      	add	r7, sp, #0
 800175a:	6078      	str	r0, [r7, #4]
 800175c:	687b      	ldr	r3, [r7, #4]
 800175e:	3b01      	subs	r3, #1
 8001760:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8001764:	d301      	bcc.n	800176a <SysTick_Config+0x16>
 8001766:	2301      	movs	r3, #1
 8001768:	e00f      	b.n	800178a <SysTick_Config+0x36>
 800176a:	4a0a      	ldr	r2, [pc, #40]	@ (8001794 <SysTick_Config+0x40>)
 800176c:	687b      	ldr	r3, [r7, #4]
 800176e:	3b01      	subs	r3, #1
 8001770:	6053      	str	r3, [r2, #4]
 8001772:	210f      	movs	r1, #15
 8001774:	f04f 30ff 	mov.w	r0, #4294967295
 8001778:	f7ff ff8e 	bl	8001698 <__NVIC_SetPriority>
 800177c:	4b05      	ldr	r3, [pc, #20]	@ (8001794 <SysTick_Config+0x40>)
 800177e:	2200      	movs	r2, #0
 8001780:	609a      	str	r2, [r3, #8]
 8001782:	4b04      	ldr	r3, [pc, #16]	@ (8001794 <SysTick_Config+0x40>)
 8001784:	2207      	movs	r2, #7
 8001786:	601a      	str	r2, [r3, #0]
 8001788:	2300      	movs	r3, #0
 800178a:	4618      	mov	r0, r3
 800178c:	3708      	adds	r7, #8
 800178e:	46bd      	mov	sp, r7
 8001790:	bd80      	pop	{r7, pc}
 8001792:	bf00      	nop
 8001794:	e000e010 	.word	0xe000e010

08001798 <HAL_NVIC_SetPriorityGrouping>:
 8001798:	b580      	push	{r7, lr}
 800179a:	b082      	sub	sp, #8
 800179c:	af00      	add	r7, sp, #0
 800179e:	6078      	str	r0, [r7, #4]
 80017a0:	6878      	ldr	r0, [r7, #4]
 80017a2:	f7ff ff47 	bl	8001634 <__NVIC_SetPriorityGrouping>
 80017a6:	bf00      	nop
 80017a8:	3708      	adds	r7, #8
 80017aa:	46bd      	mov	sp, r7
 80017ac:	bd80      	pop	{r7, pc}

080017ae <HAL_NVIC_SetPriority>:
 80017ae:	b580      	push	{r7, lr}
 80017b0:	b086      	sub	sp, #24
 80017b2:	af00      	add	r7, sp, #0
 80017b4:	4603      	mov	r3, r0
 80017b6:	60b9      	str	r1, [r7, #8]
 80017b8:	607a      	str	r2, [r7, #4]
 80017ba:	73fb      	strb	r3, [r7, #15]
 80017bc:	2300      	movs	r3, #0
 80017be:	617b      	str	r3, [r7, #20]
 80017c0:	f7ff ff5c 	bl	800167c <__NVIC_GetPriorityGrouping>
 80017c4:	6178      	str	r0, [r7, #20]
 80017c6:	687a      	ldr	r2, [r7, #4]
 80017c8:	68b9      	ldr	r1, [r7, #8]
 80017ca:	6978      	ldr	r0, [r7, #20]
 80017cc:	f7ff ff8e 	bl	80016ec <NVIC_EncodePriority>
 80017d0:	4602      	mov	r2, r0
 80017d2:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80017d6:	4611      	mov	r1, r2
 80017d8:	4618      	mov	r0, r3
 80017da:	f7ff ff5d 	bl	8001698 <__NVIC_SetPriority>
 80017de:	bf00      	nop
 80017e0:	3718      	adds	r7, #24
 80017e2:	46bd      	mov	sp, r7
 80017e4:	bd80      	pop	{r7, pc}

080017e6 <HAL_SYSTICK_Config>:
 80017e6:	b580      	push	{r7, lr}
 80017e8:	b082      	sub	sp, #8
 80017ea:	af00      	add	r7, sp, #0
 80017ec:	6078      	str	r0, [r7, #4]
 80017ee:	6878      	ldr	r0, [r7, #4]
 80017f0:	f7ff ffb0 	bl	8001754 <SysTick_Config>
 80017f4:	4603      	mov	r3, r0
 80017f6:	4618      	mov	r0, r3
 80017f8:	3708      	adds	r7, #8
 80017fa:	46bd      	mov	sp, r7
 80017fc:	bd80      	pop	{r7, pc}
	...

08001800 <HAL_CRC_Init>:
 8001800:	b580      	push	{r7, lr}
 8001802:	b082      	sub	sp, #8
 8001804:	af00      	add	r7, sp, #0
 8001806:	6078      	str	r0, [r7, #4]
 8001808:	687b      	ldr	r3, [r7, #4]
 800180a:	2b00      	cmp	r3, #0
 800180c:	d101      	bne.n	8001812 <HAL_CRC_Init+0x12>
 800180e:	2301      	movs	r3, #1
 8001810:	e054      	b.n	80018bc <HAL_CRC_Init+0xbc>
 8001812:	687b      	ldr	r3, [r7, #4]
 8001814:	7f5b      	ldrb	r3, [r3, #29]
 8001816:	b2db      	uxtb	r3, r3
 8001818:	2b00      	cmp	r3, #0
 800181a:	d105      	bne.n	8001828 <HAL_CRC_Init+0x28>
 800181c:	687b      	ldr	r3, [r7, #4]
 800181e:	2200      	movs	r2, #0
 8001820:	771a      	strb	r2, [r3, #28]
 8001822:	6878      	ldr	r0, [r7, #4]
 8001824:	f7ff fd2c 	bl	8001280 <HAL_CRC_MspInit>
 8001828:	687b      	ldr	r3, [r7, #4]
 800182a:	2202      	movs	r2, #2
 800182c:	775a      	strb	r2, [r3, #29]
 800182e:	687b      	ldr	r3, [r7, #4]
 8001830:	791b      	ldrb	r3, [r3, #4]
 8001832:	2b00      	cmp	r3, #0
 8001834:	d10c      	bne.n	8001850 <HAL_CRC_Init+0x50>
 8001836:	687b      	ldr	r3, [r7, #4]
 8001838:	681b      	ldr	r3, [r3, #0]
 800183a:	4a22      	ldr	r2, [pc, #136]	@ (80018c4 <HAL_CRC_Init+0xc4>)
 800183c:	615a      	str	r2, [r3, #20]
 800183e:	687b      	ldr	r3, [r7, #4]
 8001840:	681b      	ldr	r3, [r3, #0]
 8001842:	689a      	ldr	r2, [r3, #8]
 8001844:	687b      	ldr	r3, [r7, #4]
 8001846:	681b      	ldr	r3, [r3, #0]
 8001848:	f022 0218 	bic.w	r2, r2, #24
 800184c:	609a      	str	r2, [r3, #8]
 800184e:	e00c      	b.n	800186a <HAL_CRC_Init+0x6a>
 8001850:	687b      	ldr	r3, [r7, #4]
 8001852:	6899      	ldr	r1, [r3, #8]
 8001854:	687b      	ldr	r3, [r7, #4]
 8001856:	68db      	ldr	r3, [r3, #12]
 8001858:	461a      	mov	r2, r3
 800185a:	6878      	ldr	r0, [r7, #4]
 800185c:	f000 f942 	bl	8001ae4 <HAL_CRCEx_Polynomial_Set>
 8001860:	4603      	mov	r3, r0
 8001862:	2b00      	cmp	r3, #0
 8001864:	d001      	beq.n	800186a <HAL_CRC_Init+0x6a>
 8001866:	2301      	movs	r3, #1
 8001868:	e028      	b.n	80018bc <HAL_CRC_Init+0xbc>
 800186a:	687b      	ldr	r3, [r7, #4]
 800186c:	795b      	ldrb	r3, [r3, #5]
 800186e:	2b00      	cmp	r3, #0
 8001870:	d105      	bne.n	800187e <HAL_CRC_Init+0x7e>
 8001872:	687b      	ldr	r3, [r7, #4]
 8001874:	681b      	ldr	r3, [r3, #0]
 8001876:	f04f 32ff 	mov.w	r2, #4294967295
 800187a:	611a      	str	r2, [r3, #16]
 800187c:	e004      	b.n	8001888 <HAL_CRC_Init+0x88>
 800187e:	687b      	ldr	r3, [r7, #4]
 8001880:	681b      	ldr	r3, [r3, #0]
 8001882:	687a      	ldr	r2, [r7, #4]
 8001884:	6912      	ldr	r2, [r2, #16]
 8001886:	611a      	str	r2, [r3, #16]
 8001888:	687b      	ldr	r3, [r7, #4]
 800188a:	681b      	ldr	r3, [r3, #0]
 800188c:	689b      	ldr	r3, [r3, #8]
 800188e:	f023 0160 	bic.w	r1, r3, #96	@ 0x60
 8001892:	687b      	ldr	r3, [r7, #4]
 8001894:	695a      	ldr	r2, [r3, #20]
 8001896:	687b      	ldr	r3, [r7, #4]
 8001898:	681b      	ldr	r3, [r3, #0]
 800189a:	430a      	orrs	r2, r1
 800189c:	609a      	str	r2, [r3, #8]
 800189e:	687b      	ldr	r3, [r7, #4]
 80018a0:	681b      	ldr	r3, [r3, #0]
 80018a2:	689b      	ldr	r3, [r3, #8]
 80018a4:	f023 0180 	bic.w	r1, r3, #128	@ 0x80
 80018a8:	687b      	ldr	r3, [r7, #4]
 80018aa:	699a      	ldr	r2, [r3, #24]
 80018ac:	687b      	ldr	r3, [r7, #4]
 80018ae:	681b      	ldr	r3, [r3, #0]
 80018b0:	430a      	orrs	r2, r1
 80018b2:	609a      	str	r2, [r3, #8]
 80018b4:	687b      	ldr	r3, [r7, #4]
 80018b6:	2201      	movs	r2, #1
 80018b8:	775a      	strb	r2, [r3, #29]
 80018ba:	2300      	movs	r3, #0
 80018bc:	4618      	mov	r0, r3
 80018be:	3708      	adds	r7, #8
 80018c0:	46bd      	mov	sp, r7
 80018c2:	bd80      	pop	{r7, pc}
 80018c4:	04c11db7 	.word	0x04c11db7

080018c8 <HAL_CRC_Accumulate>:
 80018c8:	b580      	push	{r7, lr}
 80018ca:	b086      	sub	sp, #24
 80018cc:	af00      	add	r7, sp, #0
 80018ce:	60f8      	str	r0, [r7, #12]
 80018d0:	60b9      	str	r1, [r7, #8]
 80018d2:	607a      	str	r2, [r7, #4]
 80018d4:	2300      	movs	r3, #0
 80018d6:	613b      	str	r3, [r7, #16]
 80018d8:	68fb      	ldr	r3, [r7, #12]
 80018da:	2202      	movs	r2, #2
 80018dc:	775a      	strb	r2, [r3, #29]
 80018de:	68fb      	ldr	r3, [r7, #12]
 80018e0:	6a1b      	ldr	r3, [r3, #32]
 80018e2:	2b03      	cmp	r3, #3
 80018e4:	d006      	beq.n	80018f4 <HAL_CRC_Accumulate+0x2c>
 80018e6:	2b03      	cmp	r3, #3
 80018e8:	d829      	bhi.n	800193e <HAL_CRC_Accumulate+0x76>
 80018ea:	2b01      	cmp	r3, #1
 80018ec:	d019      	beq.n	8001922 <HAL_CRC_Accumulate+0x5a>
 80018ee:	2b02      	cmp	r3, #2
 80018f0:	d01e      	beq.n	8001930 <HAL_CRC_Accumulate+0x68>
 80018f2:	e024      	b.n	800193e <HAL_CRC_Accumulate+0x76>
 80018f4:	2300      	movs	r3, #0
 80018f6:	617b      	str	r3, [r7, #20]
 80018f8:	e00a      	b.n	8001910 <HAL_CRC_Accumulate+0x48>
 80018fa:	697b      	ldr	r3, [r7, #20]
 80018fc:	009b      	lsls	r3, r3, #2
 80018fe:	68ba      	ldr	r2, [r7, #8]
 8001900:	441a      	add	r2, r3
 8001902:	68fb      	ldr	r3, [r7, #12]
 8001904:	681b      	ldr	r3, [r3, #0]
 8001906:	6812      	ldr	r2, [r2, #0]
 8001908:	601a      	str	r2, [r3, #0]
 800190a:	697b      	ldr	r3, [r7, #20]
 800190c:	3301      	adds	r3, #1
 800190e:	617b      	str	r3, [r7, #20]
 8001910:	697a      	ldr	r2, [r7, #20]
 8001912:	687b      	ldr	r3, [r7, #4]
 8001914:	429a      	cmp	r2, r3
 8001916:	d3f0      	bcc.n	80018fa <HAL_CRC_Accumulate+0x32>
 8001918:	68fb      	ldr	r3, [r7, #12]
 800191a:	681b      	ldr	r3, [r3, #0]
 800191c:	681b      	ldr	r3, [r3, #0]
 800191e:	613b      	str	r3, [r7, #16]
 8001920:	e00e      	b.n	8001940 <HAL_CRC_Accumulate+0x78>
 8001922:	687a      	ldr	r2, [r7, #4]
 8001924:	68b9      	ldr	r1, [r7, #8]
 8001926:	68f8      	ldr	r0, [r7, #12]
 8001928:	f000 f812 	bl	8001950 <CRC_Handle_8>
 800192c:	6138      	str	r0, [r7, #16]
 800192e:	e007      	b.n	8001940 <HAL_CRC_Accumulate+0x78>
 8001930:	687a      	ldr	r2, [r7, #4]
 8001932:	68b9      	ldr	r1, [r7, #8]
 8001934:	68f8      	ldr	r0, [r7, #12]
 8001936:	f000 f89b 	bl	8001a70 <CRC_Handle_16>
 800193a:	6138      	str	r0, [r7, #16]
 800193c:	e000      	b.n	8001940 <HAL_CRC_Accumulate+0x78>
 800193e:	bf00      	nop
 8001940:	68fb      	ldr	r3, [r7, #12]
 8001942:	2201      	movs	r2, #1
 8001944:	775a      	strb	r2, [r3, #29]
 8001946:	693b      	ldr	r3, [r7, #16]
 8001948:	4618      	mov	r0, r3
 800194a:	3718      	adds	r7, #24
 800194c:	46bd      	mov	sp, r7
 800194e:	bd80      	pop	{r7, pc}

08001950 <CRC_Handle_8>:
 8001950:	b480      	push	{r7}
 8001952:	b089      	sub	sp, #36	@ 0x24
 8001954:	af00      	add	r7, sp, #0
 8001956:	60f8      	str	r0, [r7, #12]
 8001958:	60b9      	str	r1, [r7, #8]
 800195a:	607a      	str	r2, [r7, #4]
 800195c:	2300      	movs	r3, #0
 800195e:	61fb      	str	r3, [r7, #28]
 8001960:	e023      	b.n	80019aa <CRC_Handle_8+0x5a>
 8001962:	69fb      	ldr	r3, [r7, #28]
 8001964:	009b      	lsls	r3, r3, #2
 8001966:	68ba      	ldr	r2, [r7, #8]
 8001968:	4413      	add	r3, r2
 800196a:	781b      	ldrb	r3, [r3, #0]
 800196c:	061a      	lsls	r2, r3, #24
 800196e:	69fb      	ldr	r3, [r7, #28]
 8001970:	009b      	lsls	r3, r3, #2
 8001972:	3301      	adds	r3, #1
 8001974:	68b9      	ldr	r1, [r7, #8]
 8001976:	440b      	add	r3, r1
 8001978:	781b      	ldrb	r3, [r3, #0]
 800197a:	041b      	lsls	r3, r3, #16
 800197c:	431a      	orrs	r2, r3
 800197e:	69fb      	ldr	r3, [r7, #28]
 8001980:	009b      	lsls	r3, r3, #2
 8001982:	3302      	adds	r3, #2
 8001984:	68b9      	ldr	r1, [r7, #8]
 8001986:	440b      	add	r3, r1
 8001988:	781b      	ldrb	r3, [r3, #0]
 800198a:	021b      	lsls	r3, r3, #8
 800198c:	431a      	orrs	r2, r3
 800198e:	69fb      	ldr	r3, [r7, #28]
 8001990:	009b      	lsls	r3, r3, #2
 8001992:	3303      	adds	r3, #3
 8001994:	68b9      	ldr	r1, [r7, #8]
 8001996:	440b      	add	r3, r1
 8001998:	781b      	ldrb	r3, [r3, #0]
 800199a:	4619      	mov	r1, r3
 800199c:	68fb      	ldr	r3, [r7, #12]
 800199e:	681b      	ldr	r3, [r3, #0]
 80019a0:	430a      	orrs	r2, r1
 80019a2:	601a      	str	r2, [r3, #0]
 80019a4:	69fb      	ldr	r3, [r7, #28]
 80019a6:	3301      	adds	r3, #1
 80019a8:	61fb      	str	r3, [r7, #28]
 80019aa:	687b      	ldr	r3, [r7, #4]
 80019ac:	089b      	lsrs	r3, r3, #2
 80019ae:	69fa      	ldr	r2, [r7, #28]
 80019b0:	429a      	cmp	r2, r3
 80019b2:	d3d6      	bcc.n	8001962 <CRC_Handle_8+0x12>
 80019b4:	687b      	ldr	r3, [r7, #4]
 80019b6:	f003 0303 	and.w	r3, r3, #3
 80019ba:	2b00      	cmp	r3, #0
 80019bc:	d04f      	beq.n	8001a5e <CRC_Handle_8+0x10e>
 80019be:	687b      	ldr	r3, [r7, #4]
 80019c0:	f003 0303 	and.w	r3, r3, #3
 80019c4:	2b01      	cmp	r3, #1
 80019c6:	d107      	bne.n	80019d8 <CRC_Handle_8+0x88>
 80019c8:	69fb      	ldr	r3, [r7, #28]
 80019ca:	009b      	lsls	r3, r3, #2
 80019cc:	68ba      	ldr	r2, [r7, #8]
 80019ce:	4413      	add	r3, r2
 80019d0:	68fa      	ldr	r2, [r7, #12]
 80019d2:	6812      	ldr	r2, [r2, #0]
 80019d4:	781b      	ldrb	r3, [r3, #0]
 80019d6:	7013      	strb	r3, [r2, #0]
 80019d8:	687b      	ldr	r3, [r7, #4]
 80019da:	f003 0303 	and.w	r3, r3, #3
 80019de:	2b02      	cmp	r3, #2
 80019e0:	d117      	bne.n	8001a12 <CRC_Handle_8+0xc2>
 80019e2:	69fb      	ldr	r3, [r7, #28]
 80019e4:	009b      	lsls	r3, r3, #2
 80019e6:	68ba      	ldr	r2, [r7, #8]
 80019e8:	4413      	add	r3, r2
 80019ea:	781b      	ldrb	r3, [r3, #0]
 80019ec:	b21b      	sxth	r3, r3
 80019ee:	021b      	lsls	r3, r3, #8
 80019f0:	b21a      	sxth	r2, r3
 80019f2:	69fb      	ldr	r3, [r7, #28]
 80019f4:	009b      	lsls	r3, r3, #2
 80019f6:	3301      	adds	r3, #1
 80019f8:	68b9      	ldr	r1, [r7, #8]
 80019fa:	440b      	add	r3, r1
 80019fc:	781b      	ldrb	r3, [r3, #0]
 80019fe:	b21b      	sxth	r3, r3
 8001a00:	4313      	orrs	r3, r2
 8001a02:	b21b      	sxth	r3, r3
 8001a04:	837b      	strh	r3, [r7, #26]
 8001a06:	68fb      	ldr	r3, [r7, #12]
 8001a08:	681b      	ldr	r3, [r3, #0]
 8001a0a:	617b      	str	r3, [r7, #20]
 8001a0c:	697b      	ldr	r3, [r7, #20]
 8001a0e:	8b7a      	ldrh	r2, [r7, #26]
 8001a10:	801a      	strh	r2, [r3, #0]
 8001a12:	687b      	ldr	r3, [r7, #4]
 8001a14:	f003 0303 	and.w	r3, r3, #3
 8001a18:	2b03      	cmp	r3, #3
 8001a1a:	d120      	bne.n	8001a5e <CRC_Handle_8+0x10e>
 8001a1c:	69fb      	ldr	r3, [r7, #28]
 8001a1e:	009b      	lsls	r3, r3, #2
 8001a20:	68ba      	ldr	r2, [r7, #8]
 8001a22:	4413      	add	r3, r2
 8001a24:	781b      	ldrb	r3, [r3, #0]
 8001a26:	b21b      	sxth	r3, r3
 8001a28:	021b      	lsls	r3, r3, #8
 8001a2a:	b21a      	sxth	r2, r3
 8001a2c:	69fb      	ldr	r3, [r7, #28]
 8001a2e:	009b      	lsls	r3, r3, #2
 8001a30:	3301      	adds	r3, #1
 8001a32:	68b9      	ldr	r1, [r7, #8]
 8001a34:	440b      	add	r3, r1
 8001a36:	781b      	ldrb	r3, [r3, #0]
 8001a38:	b21b      	sxth	r3, r3
 8001a3a:	4313      	orrs	r3, r2
 8001a3c:	b21b      	sxth	r3, r3
 8001a3e:	837b      	strh	r3, [r7, #26]
 8001a40:	68fb      	ldr	r3, [r7, #12]
 8001a42:	681b      	ldr	r3, [r3, #0]
 8001a44:	617b      	str	r3, [r7, #20]
 8001a46:	697b      	ldr	r3, [r7, #20]
 8001a48:	8b7a      	ldrh	r2, [r7, #26]
 8001a4a:	801a      	strh	r2, [r3, #0]
 8001a4c:	69fb      	ldr	r3, [r7, #28]
 8001a4e:	009b      	lsls	r3, r3, #2
 8001a50:	3302      	adds	r3, #2
 8001a52:	68ba      	ldr	r2, [r7, #8]
 8001a54:	4413      	add	r3, r2
 8001a56:	68fa      	ldr	r2, [r7, #12]
 8001a58:	6812      	ldr	r2, [r2, #0]
 8001a5a:	781b      	ldrb	r3, [r3, #0]
 8001a5c:	7013      	strb	r3, [r2, #0]
 8001a5e:	68fb      	ldr	r3, [r7, #12]
 8001a60:	681b      	ldr	r3, [r3, #0]
 8001a62:	681b      	ldr	r3, [r3, #0]
 8001a64:	4618      	mov	r0, r3
 8001a66:	3724      	adds	r7, #36	@ 0x24
 8001a68:	46bd      	mov	sp, r7
 8001a6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a6e:	4770      	bx	lr

08001a70 <CRC_Handle_16>:
 8001a70:	b480      	push	{r7}
 8001a72:	b087      	sub	sp, #28
 8001a74:	af00      	add	r7, sp, #0
 8001a76:	60f8      	str	r0, [r7, #12]
 8001a78:	60b9      	str	r1, [r7, #8]
 8001a7a:	607a      	str	r2, [r7, #4]
 8001a7c:	2300      	movs	r3, #0
 8001a7e:	617b      	str	r3, [r7, #20]
 8001a80:	e013      	b.n	8001aaa <CRC_Handle_16+0x3a>
 8001a82:	697b      	ldr	r3, [r7, #20]
 8001a84:	009b      	lsls	r3, r3, #2
 8001a86:	68ba      	ldr	r2, [r7, #8]
 8001a88:	4413      	add	r3, r2
 8001a8a:	881b      	ldrh	r3, [r3, #0]
 8001a8c:	041a      	lsls	r2, r3, #16
 8001a8e:	697b      	ldr	r3, [r7, #20]
 8001a90:	009b      	lsls	r3, r3, #2
 8001a92:	3302      	adds	r3, #2
 8001a94:	68b9      	ldr	r1, [r7, #8]
 8001a96:	440b      	add	r3, r1
 8001a98:	881b      	ldrh	r3, [r3, #0]
 8001a9a:	4619      	mov	r1, r3
 8001a9c:	68fb      	ldr	r3, [r7, #12]
 8001a9e:	681b      	ldr	r3, [r3, #0]
 8001aa0:	430a      	orrs	r2, r1
 8001aa2:	601a      	str	r2, [r3, #0]
 8001aa4:	697b      	ldr	r3, [r7, #20]
 8001aa6:	3301      	adds	r3, #1
 8001aa8:	617b      	str	r3, [r7, #20]
 8001aaa:	687b      	ldr	r3, [r7, #4]
 8001aac:	085b      	lsrs	r3, r3, #1
 8001aae:	697a      	ldr	r2, [r7, #20]
 8001ab0:	429a      	cmp	r2, r3
 8001ab2:	d3e6      	bcc.n	8001a82 <CRC_Handle_16+0x12>
 8001ab4:	687b      	ldr	r3, [r7, #4]
 8001ab6:	f003 0301 	and.w	r3, r3, #1
 8001aba:	2b00      	cmp	r3, #0
 8001abc:	d009      	beq.n	8001ad2 <CRC_Handle_16+0x62>
 8001abe:	68fb      	ldr	r3, [r7, #12]
 8001ac0:	681b      	ldr	r3, [r3, #0]
 8001ac2:	613b      	str	r3, [r7, #16]
 8001ac4:	697b      	ldr	r3, [r7, #20]
 8001ac6:	009b      	lsls	r3, r3, #2
 8001ac8:	68ba      	ldr	r2, [r7, #8]
 8001aca:	4413      	add	r3, r2
 8001acc:	881a      	ldrh	r2, [r3, #0]
 8001ace:	693b      	ldr	r3, [r7, #16]
 8001ad0:	801a      	strh	r2, [r3, #0]
 8001ad2:	68fb      	ldr	r3, [r7, #12]
 8001ad4:	681b      	ldr	r3, [r3, #0]
 8001ad6:	681b      	ldr	r3, [r3, #0]
 8001ad8:	4618      	mov	r0, r3
 8001ada:	371c      	adds	r7, #28
 8001adc:	46bd      	mov	sp, r7
 8001ade:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ae2:	4770      	bx	lr

08001ae4 <HAL_CRCEx_Polynomial_Set>:
 8001ae4:	b480      	push	{r7}
 8001ae6:	b087      	sub	sp, #28
 8001ae8:	af00      	add	r7, sp, #0
 8001aea:	60f8      	str	r0, [r7, #12]
 8001aec:	60b9      	str	r1, [r7, #8]
 8001aee:	607a      	str	r2, [r7, #4]
 8001af0:	2300      	movs	r3, #0
 8001af2:	75fb      	strb	r3, [r7, #23]
 8001af4:	231f      	movs	r3, #31
 8001af6:	613b      	str	r3, [r7, #16]
 8001af8:	68bb      	ldr	r3, [r7, #8]
 8001afa:	f003 0301 	and.w	r3, r3, #1
 8001afe:	2b00      	cmp	r3, #0
 8001b00:	d102      	bne.n	8001b08 <HAL_CRCEx_Polynomial_Set+0x24>
 8001b02:	2301      	movs	r3, #1
 8001b04:	75fb      	strb	r3, [r7, #23]
 8001b06:	e063      	b.n	8001bd0 <HAL_CRCEx_Polynomial_Set+0xec>
 8001b08:	bf00      	nop
 8001b0a:	693b      	ldr	r3, [r7, #16]
 8001b0c:	1e5a      	subs	r2, r3, #1
 8001b0e:	613a      	str	r2, [r7, #16]
 8001b10:	2b00      	cmp	r3, #0
 8001b12:	d009      	beq.n	8001b28 <HAL_CRCEx_Polynomial_Set+0x44>
 8001b14:	693b      	ldr	r3, [r7, #16]
 8001b16:	f003 031f 	and.w	r3, r3, #31
 8001b1a:	68ba      	ldr	r2, [r7, #8]
 8001b1c:	fa22 f303 	lsr.w	r3, r2, r3
 8001b20:	f003 0301 	and.w	r3, r3, #1
 8001b24:	2b00      	cmp	r3, #0
 8001b26:	d0f0      	beq.n	8001b0a <HAL_CRCEx_Polynomial_Set+0x26>
 8001b28:	687b      	ldr	r3, [r7, #4]
 8001b2a:	2b18      	cmp	r3, #24
 8001b2c:	d846      	bhi.n	8001bbc <HAL_CRCEx_Polynomial_Set+0xd8>
 8001b2e:	a201      	add	r2, pc, #4	@ (adr r2, 8001b34 <HAL_CRCEx_Polynomial_Set+0x50>)
 8001b30:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001b34:	08001bc3 	.word	0x08001bc3
 8001b38:	08001bbd 	.word	0x08001bbd
 8001b3c:	08001bbd 	.word	0x08001bbd
 8001b40:	08001bbd 	.word	0x08001bbd
 8001b44:	08001bbd 	.word	0x08001bbd
 8001b48:	08001bbd 	.word	0x08001bbd
 8001b4c:	08001bbd 	.word	0x08001bbd
 8001b50:	08001bbd 	.word	0x08001bbd
 8001b54:	08001bb1 	.word	0x08001bb1
 8001b58:	08001bbd 	.word	0x08001bbd
 8001b5c:	08001bbd 	.word	0x08001bbd
 8001b60:	08001bbd 	.word	0x08001bbd
 8001b64:	08001bbd 	.word	0x08001bbd
 8001b68:	08001bbd 	.word	0x08001bbd
 8001b6c:	08001bbd 	.word	0x08001bbd
 8001b70:	08001bbd 	.word	0x08001bbd
 8001b74:	08001ba5 	.word	0x08001ba5
 8001b78:	08001bbd 	.word	0x08001bbd
 8001b7c:	08001bbd 	.word	0x08001bbd
 8001b80:	08001bbd 	.word	0x08001bbd
 8001b84:	08001bbd 	.word	0x08001bbd
 8001b88:	08001bbd 	.word	0x08001bbd
 8001b8c:	08001bbd 	.word	0x08001bbd
 8001b90:	08001bbd 	.word	0x08001bbd
 8001b94:	08001b99 	.word	0x08001b99
 8001b98:	693b      	ldr	r3, [r7, #16]
 8001b9a:	2b06      	cmp	r3, #6
 8001b9c:	d913      	bls.n	8001bc6 <HAL_CRCEx_Polynomial_Set+0xe2>
 8001b9e:	2301      	movs	r3, #1
 8001ba0:	75fb      	strb	r3, [r7, #23]
 8001ba2:	e010      	b.n	8001bc6 <HAL_CRCEx_Polynomial_Set+0xe2>
 8001ba4:	693b      	ldr	r3, [r7, #16]
 8001ba6:	2b07      	cmp	r3, #7
 8001ba8:	d90f      	bls.n	8001bca <HAL_CRCEx_Polynomial_Set+0xe6>
 8001baa:	2301      	movs	r3, #1
 8001bac:	75fb      	strb	r3, [r7, #23]
 8001bae:	e00c      	b.n	8001bca <HAL_CRCEx_Polynomial_Set+0xe6>
 8001bb0:	693b      	ldr	r3, [r7, #16]
 8001bb2:	2b0f      	cmp	r3, #15
 8001bb4:	d90b      	bls.n	8001bce <HAL_CRCEx_Polynomial_Set+0xea>
 8001bb6:	2301      	movs	r3, #1
 8001bb8:	75fb      	strb	r3, [r7, #23]
 8001bba:	e008      	b.n	8001bce <HAL_CRCEx_Polynomial_Set+0xea>
 8001bbc:	2301      	movs	r3, #1
 8001bbe:	75fb      	strb	r3, [r7, #23]
 8001bc0:	e006      	b.n	8001bd0 <HAL_CRCEx_Polynomial_Set+0xec>
 8001bc2:	bf00      	nop
 8001bc4:	e004      	b.n	8001bd0 <HAL_CRCEx_Polynomial_Set+0xec>
 8001bc6:	bf00      	nop
 8001bc8:	e002      	b.n	8001bd0 <HAL_CRCEx_Polynomial_Set+0xec>
 8001bca:	bf00      	nop
 8001bcc:	e000      	b.n	8001bd0 <HAL_CRCEx_Polynomial_Set+0xec>
 8001bce:	bf00      	nop
 8001bd0:	7dfb      	ldrb	r3, [r7, #23]
 8001bd2:	2b00      	cmp	r3, #0
 8001bd4:	d10d      	bne.n	8001bf2 <HAL_CRCEx_Polynomial_Set+0x10e>
 8001bd6:	68fb      	ldr	r3, [r7, #12]
 8001bd8:	681b      	ldr	r3, [r3, #0]
 8001bda:	68ba      	ldr	r2, [r7, #8]
 8001bdc:	615a      	str	r2, [r3, #20]
 8001bde:	68fb      	ldr	r3, [r7, #12]
 8001be0:	681b      	ldr	r3, [r3, #0]
 8001be2:	689b      	ldr	r3, [r3, #8]
 8001be4:	f023 0118 	bic.w	r1, r3, #24
 8001be8:	68fb      	ldr	r3, [r7, #12]
 8001bea:	681b      	ldr	r3, [r3, #0]
 8001bec:	687a      	ldr	r2, [r7, #4]
 8001bee:	430a      	orrs	r2, r1
 8001bf0:	609a      	str	r2, [r3, #8]
 8001bf2:	7dfb      	ldrb	r3, [r7, #23]
 8001bf4:	4618      	mov	r0, r3
 8001bf6:	371c      	adds	r7, #28
 8001bf8:	46bd      	mov	sp, r7
 8001bfa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001bfe:	4770      	bx	lr

08001c00 <HAL_FLASH_Program>:
 8001c00:	b580      	push	{r7, lr}
 8001c02:	b086      	sub	sp, #24
 8001c04:	af00      	add	r7, sp, #0
 8001c06:	60f8      	str	r0, [r7, #12]
 8001c08:	60b9      	str	r1, [r7, #8]
 8001c0a:	e9c7 2300 	strd	r2, r3, [r7]
 8001c0e:	2300      	movs	r3, #0
 8001c10:	613b      	str	r3, [r7, #16]
 8001c12:	4b2f      	ldr	r3, [pc, #188]	@ (8001cd0 <HAL_FLASH_Program+0xd0>)
 8001c14:	781b      	ldrb	r3, [r3, #0]
 8001c16:	2b01      	cmp	r3, #1
 8001c18:	d101      	bne.n	8001c1e <HAL_FLASH_Program+0x1e>
 8001c1a:	2302      	movs	r3, #2
 8001c1c:	e053      	b.n	8001cc6 <HAL_FLASH_Program+0xc6>
 8001c1e:	4b2c      	ldr	r3, [pc, #176]	@ (8001cd0 <HAL_FLASH_Program+0xd0>)
 8001c20:	2201      	movs	r2, #1
 8001c22:	701a      	strb	r2, [r3, #0]
 8001c24:	f24c 3050 	movw	r0, #50000	@ 0xc350
 8001c28:	f000 f888 	bl	8001d3c <FLASH_WaitForLastOperation>
 8001c2c:	4603      	mov	r3, r0
 8001c2e:	75fb      	strb	r3, [r7, #23]
 8001c30:	7dfb      	ldrb	r3, [r7, #23]
 8001c32:	2b00      	cmp	r3, #0
 8001c34:	d143      	bne.n	8001cbe <HAL_FLASH_Program+0xbe>
 8001c36:	4b26      	ldr	r3, [pc, #152]	@ (8001cd0 <HAL_FLASH_Program+0xd0>)
 8001c38:	2200      	movs	r2, #0
 8001c3a:	605a      	str	r2, [r3, #4]
 8001c3c:	4b25      	ldr	r3, [pc, #148]	@ (8001cd4 <HAL_FLASH_Program+0xd4>)
 8001c3e:	681b      	ldr	r3, [r3, #0]
 8001c40:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8001c44:	2b00      	cmp	r3, #0
 8001c46:	d009      	beq.n	8001c5c <HAL_FLASH_Program+0x5c>
 8001c48:	4b22      	ldr	r3, [pc, #136]	@ (8001cd4 <HAL_FLASH_Program+0xd4>)
 8001c4a:	681b      	ldr	r3, [r3, #0]
 8001c4c:	4a21      	ldr	r2, [pc, #132]	@ (8001cd4 <HAL_FLASH_Program+0xd4>)
 8001c4e:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8001c52:	6013      	str	r3, [r2, #0]
 8001c54:	4b1e      	ldr	r3, [pc, #120]	@ (8001cd0 <HAL_FLASH_Program+0xd0>)
 8001c56:	2202      	movs	r2, #2
 8001c58:	771a      	strb	r2, [r3, #28]
 8001c5a:	e002      	b.n	8001c62 <HAL_FLASH_Program+0x62>
 8001c5c:	4b1c      	ldr	r3, [pc, #112]	@ (8001cd0 <HAL_FLASH_Program+0xd0>)
 8001c5e:	2200      	movs	r2, #0
 8001c60:	771a      	strb	r2, [r3, #28]
 8001c62:	68fb      	ldr	r3, [r7, #12]
 8001c64:	2b00      	cmp	r3, #0
 8001c66:	d107      	bne.n	8001c78 <HAL_FLASH_Program+0x78>
 8001c68:	e9d7 2300 	ldrd	r2, r3, [r7]
 8001c6c:	68b8      	ldr	r0, [r7, #8]
 8001c6e:	f000 f8bb 	bl	8001de8 <FLASH_Program_DoubleWord>
 8001c72:	2301      	movs	r3, #1
 8001c74:	613b      	str	r3, [r7, #16]
 8001c76:	e010      	b.n	8001c9a <HAL_FLASH_Program+0x9a>
 8001c78:	68fb      	ldr	r3, [r7, #12]
 8001c7a:	2b01      	cmp	r3, #1
 8001c7c:	d002      	beq.n	8001c84 <HAL_FLASH_Program+0x84>
 8001c7e:	68fb      	ldr	r3, [r7, #12]
 8001c80:	2b02      	cmp	r3, #2
 8001c82:	d10a      	bne.n	8001c9a <HAL_FLASH_Program+0x9a>
 8001c84:	683b      	ldr	r3, [r7, #0]
 8001c86:	4619      	mov	r1, r3
 8001c88:	68b8      	ldr	r0, [r7, #8]
 8001c8a:	f000 f8d3 	bl	8001e34 <FLASH_Program_Fast>
 8001c8e:	68fb      	ldr	r3, [r7, #12]
 8001c90:	2b02      	cmp	r3, #2
 8001c92:	d102      	bne.n	8001c9a <HAL_FLASH_Program+0x9a>
 8001c94:	f44f 2380 	mov.w	r3, #262144	@ 0x40000
 8001c98:	613b      	str	r3, [r7, #16]
 8001c9a:	f24c 3050 	movw	r0, #50000	@ 0xc350
 8001c9e:	f000 f84d 	bl	8001d3c <FLASH_WaitForLastOperation>
 8001ca2:	4603      	mov	r3, r0
 8001ca4:	75fb      	strb	r3, [r7, #23]
 8001ca6:	693b      	ldr	r3, [r7, #16]
 8001ca8:	2b00      	cmp	r3, #0
 8001caa:	d006      	beq.n	8001cba <HAL_FLASH_Program+0xba>
 8001cac:	4b09      	ldr	r3, [pc, #36]	@ (8001cd4 <HAL_FLASH_Program+0xd4>)
 8001cae:	695a      	ldr	r2, [r3, #20]
 8001cb0:	693b      	ldr	r3, [r7, #16]
 8001cb2:	43db      	mvns	r3, r3
 8001cb4:	4907      	ldr	r1, [pc, #28]	@ (8001cd4 <HAL_FLASH_Program+0xd4>)
 8001cb6:	4013      	ands	r3, r2
 8001cb8:	614b      	str	r3, [r1, #20]
 8001cba:	f000 fa39 	bl	8002130 <FLASH_FlushCaches>
 8001cbe:	4b04      	ldr	r3, [pc, #16]	@ (8001cd0 <HAL_FLASH_Program+0xd0>)
 8001cc0:	2200      	movs	r2, #0
 8001cc2:	701a      	strb	r2, [r3, #0]
 8001cc4:	7dfb      	ldrb	r3, [r7, #23]
 8001cc6:	4618      	mov	r0, r3
 8001cc8:	3718      	adds	r7, #24
 8001cca:	46bd      	mov	sp, r7
 8001ccc:	bd80      	pop	{r7, pc}
 8001cce:	bf00      	nop
 8001cd0:	20000018 	.word	0x20000018
 8001cd4:	40022000 	.word	0x40022000

08001cd8 <HAL_FLASH_Unlock>:
 8001cd8:	b480      	push	{r7}
 8001cda:	b083      	sub	sp, #12
 8001cdc:	af00      	add	r7, sp, #0
 8001cde:	2300      	movs	r3, #0
 8001ce0:	71fb      	strb	r3, [r7, #7]
 8001ce2:	4b0b      	ldr	r3, [pc, #44]	@ (8001d10 <HAL_FLASH_Unlock+0x38>)
 8001ce4:	695b      	ldr	r3, [r3, #20]
 8001ce6:	2b00      	cmp	r3, #0
 8001ce8:	da0b      	bge.n	8001d02 <HAL_FLASH_Unlock+0x2a>
 8001cea:	4b09      	ldr	r3, [pc, #36]	@ (8001d10 <HAL_FLASH_Unlock+0x38>)
 8001cec:	4a09      	ldr	r2, [pc, #36]	@ (8001d14 <HAL_FLASH_Unlock+0x3c>)
 8001cee:	609a      	str	r2, [r3, #8]
 8001cf0:	4b07      	ldr	r3, [pc, #28]	@ (8001d10 <HAL_FLASH_Unlock+0x38>)
 8001cf2:	4a09      	ldr	r2, [pc, #36]	@ (8001d18 <HAL_FLASH_Unlock+0x40>)
 8001cf4:	609a      	str	r2, [r3, #8]
 8001cf6:	4b06      	ldr	r3, [pc, #24]	@ (8001d10 <HAL_FLASH_Unlock+0x38>)
 8001cf8:	695b      	ldr	r3, [r3, #20]
 8001cfa:	2b00      	cmp	r3, #0
 8001cfc:	da01      	bge.n	8001d02 <HAL_FLASH_Unlock+0x2a>
 8001cfe:	2301      	movs	r3, #1
 8001d00:	71fb      	strb	r3, [r7, #7]
 8001d02:	79fb      	ldrb	r3, [r7, #7]
 8001d04:	4618      	mov	r0, r3
 8001d06:	370c      	adds	r7, #12
 8001d08:	46bd      	mov	sp, r7
 8001d0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d0e:	4770      	bx	lr
 8001d10:	40022000 	.word	0x40022000
 8001d14:	45670123 	.word	0x45670123
 8001d18:	cdef89ab 	.word	0xcdef89ab

08001d1c <HAL_FLASH_Lock>:
 8001d1c:	b480      	push	{r7}
 8001d1e:	af00      	add	r7, sp, #0
 8001d20:	4b05      	ldr	r3, [pc, #20]	@ (8001d38 <HAL_FLASH_Lock+0x1c>)
 8001d22:	695b      	ldr	r3, [r3, #20]
 8001d24:	4a04      	ldr	r2, [pc, #16]	@ (8001d38 <HAL_FLASH_Lock+0x1c>)
 8001d26:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8001d2a:	6153      	str	r3, [r2, #20]
 8001d2c:	2300      	movs	r3, #0
 8001d2e:	4618      	mov	r0, r3
 8001d30:	46bd      	mov	sp, r7
 8001d32:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d36:	4770      	bx	lr
 8001d38:	40022000 	.word	0x40022000

08001d3c <FLASH_WaitForLastOperation>:
 8001d3c:	b580      	push	{r7, lr}
 8001d3e:	b084      	sub	sp, #16
 8001d40:	af00      	add	r7, sp, #0
 8001d42:	6078      	str	r0, [r7, #4]
 8001d44:	f7ff fc6a 	bl	800161c <HAL_GetTick>
 8001d48:	60f8      	str	r0, [r7, #12]
 8001d4a:	e00d      	b.n	8001d68 <FLASH_WaitForLastOperation+0x2c>
 8001d4c:	687b      	ldr	r3, [r7, #4]
 8001d4e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001d52:	d009      	beq.n	8001d68 <FLASH_WaitForLastOperation+0x2c>
 8001d54:	f7ff fc62 	bl	800161c <HAL_GetTick>
 8001d58:	4602      	mov	r2, r0
 8001d5a:	68fb      	ldr	r3, [r7, #12]
 8001d5c:	1ad3      	subs	r3, r2, r3
 8001d5e:	687a      	ldr	r2, [r7, #4]
 8001d60:	429a      	cmp	r2, r3
 8001d62:	d801      	bhi.n	8001d68 <FLASH_WaitForLastOperation+0x2c>
 8001d64:	2303      	movs	r3, #3
 8001d66:	e036      	b.n	8001dd6 <FLASH_WaitForLastOperation+0x9a>
 8001d68:	4b1d      	ldr	r3, [pc, #116]	@ (8001de0 <FLASH_WaitForLastOperation+0xa4>)
 8001d6a:	691b      	ldr	r3, [r3, #16]
 8001d6c:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8001d70:	2b00      	cmp	r3, #0
 8001d72:	d1eb      	bne.n	8001d4c <FLASH_WaitForLastOperation+0x10>
 8001d74:	4b1a      	ldr	r3, [pc, #104]	@ (8001de0 <FLASH_WaitForLastOperation+0xa4>)
 8001d76:	691a      	ldr	r2, [r3, #16]
 8001d78:	f24c 33fa 	movw	r3, #50170	@ 0xc3fa
 8001d7c:	4013      	ands	r3, r2
 8001d7e:	60bb      	str	r3, [r7, #8]
 8001d80:	68bb      	ldr	r3, [r7, #8]
 8001d82:	2b00      	cmp	r3, #0
 8001d84:	d01d      	beq.n	8001dc2 <FLASH_WaitForLastOperation+0x86>
 8001d86:	4b17      	ldr	r3, [pc, #92]	@ (8001de4 <FLASH_WaitForLastOperation+0xa8>)
 8001d88:	685a      	ldr	r2, [r3, #4]
 8001d8a:	68bb      	ldr	r3, [r7, #8]
 8001d8c:	4313      	orrs	r3, r2
 8001d8e:	4a15      	ldr	r2, [pc, #84]	@ (8001de4 <FLASH_WaitForLastOperation+0xa8>)
 8001d90:	6053      	str	r3, [r2, #4]
 8001d92:	68bb      	ldr	r3, [r7, #8]
 8001d94:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8001d98:	d307      	bcc.n	8001daa <FLASH_WaitForLastOperation+0x6e>
 8001d9a:	4b11      	ldr	r3, [pc, #68]	@ (8001de0 <FLASH_WaitForLastOperation+0xa4>)
 8001d9c:	699a      	ldr	r2, [r3, #24]
 8001d9e:	68bb      	ldr	r3, [r7, #8]
 8001da0:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8001da4:	490e      	ldr	r1, [pc, #56]	@ (8001de0 <FLASH_WaitForLastOperation+0xa4>)
 8001da6:	4313      	orrs	r3, r2
 8001da8:	618b      	str	r3, [r1, #24]
 8001daa:	68bb      	ldr	r3, [r7, #8]
 8001dac:	f023 4340 	bic.w	r3, r3, #3221225472	@ 0xc0000000
 8001db0:	2b00      	cmp	r3, #0
 8001db2:	d004      	beq.n	8001dbe <FLASH_WaitForLastOperation+0x82>
 8001db4:	4a0a      	ldr	r2, [pc, #40]	@ (8001de0 <FLASH_WaitForLastOperation+0xa4>)
 8001db6:	68bb      	ldr	r3, [r7, #8]
 8001db8:	f023 4340 	bic.w	r3, r3, #3221225472	@ 0xc0000000
 8001dbc:	6113      	str	r3, [r2, #16]
 8001dbe:	2301      	movs	r3, #1
 8001dc0:	e009      	b.n	8001dd6 <FLASH_WaitForLastOperation+0x9a>
 8001dc2:	4b07      	ldr	r3, [pc, #28]	@ (8001de0 <FLASH_WaitForLastOperation+0xa4>)
 8001dc4:	691b      	ldr	r3, [r3, #16]
 8001dc6:	f003 0301 	and.w	r3, r3, #1
 8001dca:	2b00      	cmp	r3, #0
 8001dcc:	d002      	beq.n	8001dd4 <FLASH_WaitForLastOperation+0x98>
 8001dce:	4b04      	ldr	r3, [pc, #16]	@ (8001de0 <FLASH_WaitForLastOperation+0xa4>)
 8001dd0:	2201      	movs	r2, #1
 8001dd2:	611a      	str	r2, [r3, #16]
 8001dd4:	2300      	movs	r3, #0
 8001dd6:	4618      	mov	r0, r3
 8001dd8:	3710      	adds	r7, #16
 8001dda:	46bd      	mov	sp, r7
 8001ddc:	bd80      	pop	{r7, pc}
 8001dde:	bf00      	nop
 8001de0:	40022000 	.word	0x40022000
 8001de4:	20000018 	.word	0x20000018

08001de8 <FLASH_Program_DoubleWord>:
 8001de8:	b480      	push	{r7}
 8001dea:	b085      	sub	sp, #20
 8001dec:	af00      	add	r7, sp, #0
 8001dee:	60f8      	str	r0, [r7, #12]
 8001df0:	e9c7 2300 	strd	r2, r3, [r7]
 8001df4:	4b0e      	ldr	r3, [pc, #56]	@ (8001e30 <FLASH_Program_DoubleWord+0x48>)
 8001df6:	695b      	ldr	r3, [r3, #20]
 8001df8:	4a0d      	ldr	r2, [pc, #52]	@ (8001e30 <FLASH_Program_DoubleWord+0x48>)
 8001dfa:	f043 0301 	orr.w	r3, r3, #1
 8001dfe:	6153      	str	r3, [r2, #20]
 8001e00:	68fb      	ldr	r3, [r7, #12]
 8001e02:	683a      	ldr	r2, [r7, #0]
 8001e04:	601a      	str	r2, [r3, #0]
 8001e06:	f3bf 8f6f 	isb	sy
 8001e0a:	bf00      	nop
 8001e0c:	e9d7 0100 	ldrd	r0, r1, [r7]
 8001e10:	f04f 0200 	mov.w	r2, #0
 8001e14:	f04f 0300 	mov.w	r3, #0
 8001e18:	000a      	movs	r2, r1
 8001e1a:	2300      	movs	r3, #0
 8001e1c:	68f9      	ldr	r1, [r7, #12]
 8001e1e:	3104      	adds	r1, #4
 8001e20:	4613      	mov	r3, r2
 8001e22:	600b      	str	r3, [r1, #0]
 8001e24:	bf00      	nop
 8001e26:	3714      	adds	r7, #20
 8001e28:	46bd      	mov	sp, r7
 8001e2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e2e:	4770      	bx	lr
 8001e30:	40022000 	.word	0x40022000

08001e34 <FLASH_Program_Fast>:
 8001e34:	b480      	push	{r7}
 8001e36:	b089      	sub	sp, #36	@ 0x24
 8001e38:	af00      	add	r7, sp, #0
 8001e3a:	6078      	str	r0, [r7, #4]
 8001e3c:	6039      	str	r1, [r7, #0]
 8001e3e:	2340      	movs	r3, #64	@ 0x40
 8001e40:	77fb      	strb	r3, [r7, #31]
 8001e42:	687b      	ldr	r3, [r7, #4]
 8001e44:	61bb      	str	r3, [r7, #24]
 8001e46:	683b      	ldr	r3, [r7, #0]
 8001e48:	617b      	str	r3, [r7, #20]
 8001e4a:	4b14      	ldr	r3, [pc, #80]	@ (8001e9c <FLASH_Program_Fast+0x68>)
 8001e4c:	695b      	ldr	r3, [r3, #20]
 8001e4e:	4a13      	ldr	r2, [pc, #76]	@ (8001e9c <FLASH_Program_Fast+0x68>)
 8001e50:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8001e54:	6153      	str	r3, [r2, #20]
 8001e56:	f3ef 8310 	mrs	r3, PRIMASK
 8001e5a:	60fb      	str	r3, [r7, #12]
 8001e5c:	68fb      	ldr	r3, [r7, #12]
 8001e5e:	613b      	str	r3, [r7, #16]
 8001e60:	b672      	cpsid	i
 8001e62:	bf00      	nop
 8001e64:	697b      	ldr	r3, [r7, #20]
 8001e66:	681a      	ldr	r2, [r3, #0]
 8001e68:	69bb      	ldr	r3, [r7, #24]
 8001e6a:	601a      	str	r2, [r3, #0]
 8001e6c:	69bb      	ldr	r3, [r7, #24]
 8001e6e:	3304      	adds	r3, #4
 8001e70:	61bb      	str	r3, [r7, #24]
 8001e72:	697b      	ldr	r3, [r7, #20]
 8001e74:	3304      	adds	r3, #4
 8001e76:	617b      	str	r3, [r7, #20]
 8001e78:	7ffb      	ldrb	r3, [r7, #31]
 8001e7a:	3b01      	subs	r3, #1
 8001e7c:	77fb      	strb	r3, [r7, #31]
 8001e7e:	7ffb      	ldrb	r3, [r7, #31]
 8001e80:	2b00      	cmp	r3, #0
 8001e82:	d1ef      	bne.n	8001e64 <FLASH_Program_Fast+0x30>
 8001e84:	693b      	ldr	r3, [r7, #16]
 8001e86:	60bb      	str	r3, [r7, #8]
 8001e88:	68bb      	ldr	r3, [r7, #8]
 8001e8a:	f383 8810 	msr	PRIMASK, r3
 8001e8e:	bf00      	nop
 8001e90:	bf00      	nop
 8001e92:	3724      	adds	r7, #36	@ 0x24
 8001e94:	46bd      	mov	sp, r7
 8001e96:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e9a:	4770      	bx	lr
 8001e9c:	40022000 	.word	0x40022000

08001ea0 <HAL_FLASHEx_Erase>:
 8001ea0:	b580      	push	{r7, lr}
 8001ea2:	b084      	sub	sp, #16
 8001ea4:	af00      	add	r7, sp, #0
 8001ea6:	6078      	str	r0, [r7, #4]
 8001ea8:	6039      	str	r1, [r7, #0]
 8001eaa:	4b49      	ldr	r3, [pc, #292]	@ (8001fd0 <HAL_FLASHEx_Erase+0x130>)
 8001eac:	781b      	ldrb	r3, [r3, #0]
 8001eae:	2b01      	cmp	r3, #1
 8001eb0:	d101      	bne.n	8001eb6 <HAL_FLASHEx_Erase+0x16>
 8001eb2:	2302      	movs	r3, #2
 8001eb4:	e087      	b.n	8001fc6 <HAL_FLASHEx_Erase+0x126>
 8001eb6:	4b46      	ldr	r3, [pc, #280]	@ (8001fd0 <HAL_FLASHEx_Erase+0x130>)
 8001eb8:	2201      	movs	r2, #1
 8001eba:	701a      	strb	r2, [r3, #0]
 8001ebc:	f24c 3050 	movw	r0, #50000	@ 0xc350
 8001ec0:	f7ff ff3c 	bl	8001d3c <FLASH_WaitForLastOperation>
 8001ec4:	4603      	mov	r3, r0
 8001ec6:	73fb      	strb	r3, [r7, #15]
 8001ec8:	7bfb      	ldrb	r3, [r7, #15]
 8001eca:	2b00      	cmp	r3, #0
 8001ecc:	d177      	bne.n	8001fbe <HAL_FLASHEx_Erase+0x11e>
 8001ece:	4b40      	ldr	r3, [pc, #256]	@ (8001fd0 <HAL_FLASHEx_Erase+0x130>)
 8001ed0:	2200      	movs	r2, #0
 8001ed2:	605a      	str	r2, [r3, #4]
 8001ed4:	4b3f      	ldr	r3, [pc, #252]	@ (8001fd4 <HAL_FLASHEx_Erase+0x134>)
 8001ed6:	681b      	ldr	r3, [r3, #0]
 8001ed8:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8001edc:	2b00      	cmp	r3, #0
 8001ede:	d013      	beq.n	8001f08 <HAL_FLASHEx_Erase+0x68>
 8001ee0:	4b3c      	ldr	r3, [pc, #240]	@ (8001fd4 <HAL_FLASHEx_Erase+0x134>)
 8001ee2:	681b      	ldr	r3, [r3, #0]
 8001ee4:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8001ee8:	2b00      	cmp	r3, #0
 8001eea:	d009      	beq.n	8001f00 <HAL_FLASHEx_Erase+0x60>
 8001eec:	4b39      	ldr	r3, [pc, #228]	@ (8001fd4 <HAL_FLASHEx_Erase+0x134>)
 8001eee:	681b      	ldr	r3, [r3, #0]
 8001ef0:	4a38      	ldr	r2, [pc, #224]	@ (8001fd4 <HAL_FLASHEx_Erase+0x134>)
 8001ef2:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8001ef6:	6013      	str	r3, [r2, #0]
 8001ef8:	4b35      	ldr	r3, [pc, #212]	@ (8001fd0 <HAL_FLASHEx_Erase+0x130>)
 8001efa:	2203      	movs	r2, #3
 8001efc:	771a      	strb	r2, [r3, #28]
 8001efe:	e016      	b.n	8001f2e <HAL_FLASHEx_Erase+0x8e>
 8001f00:	4b33      	ldr	r3, [pc, #204]	@ (8001fd0 <HAL_FLASHEx_Erase+0x130>)
 8001f02:	2201      	movs	r2, #1
 8001f04:	771a      	strb	r2, [r3, #28]
 8001f06:	e012      	b.n	8001f2e <HAL_FLASHEx_Erase+0x8e>
 8001f08:	4b32      	ldr	r3, [pc, #200]	@ (8001fd4 <HAL_FLASHEx_Erase+0x134>)
 8001f0a:	681b      	ldr	r3, [r3, #0]
 8001f0c:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8001f10:	2b00      	cmp	r3, #0
 8001f12:	d009      	beq.n	8001f28 <HAL_FLASHEx_Erase+0x88>
 8001f14:	4b2f      	ldr	r3, [pc, #188]	@ (8001fd4 <HAL_FLASHEx_Erase+0x134>)
 8001f16:	681b      	ldr	r3, [r3, #0]
 8001f18:	4a2e      	ldr	r2, [pc, #184]	@ (8001fd4 <HAL_FLASHEx_Erase+0x134>)
 8001f1a:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8001f1e:	6013      	str	r3, [r2, #0]
 8001f20:	4b2b      	ldr	r3, [pc, #172]	@ (8001fd0 <HAL_FLASHEx_Erase+0x130>)
 8001f22:	2202      	movs	r2, #2
 8001f24:	771a      	strb	r2, [r3, #28]
 8001f26:	e002      	b.n	8001f2e <HAL_FLASHEx_Erase+0x8e>
 8001f28:	4b29      	ldr	r3, [pc, #164]	@ (8001fd0 <HAL_FLASHEx_Erase+0x130>)
 8001f2a:	2200      	movs	r2, #0
 8001f2c:	771a      	strb	r2, [r3, #28]
 8001f2e:	687b      	ldr	r3, [r7, #4]
 8001f30:	681b      	ldr	r3, [r3, #0]
 8001f32:	2b01      	cmp	r3, #1
 8001f34:	d113      	bne.n	8001f5e <HAL_FLASHEx_Erase+0xbe>
 8001f36:	687b      	ldr	r3, [r7, #4]
 8001f38:	685b      	ldr	r3, [r3, #4]
 8001f3a:	4618      	mov	r0, r3
 8001f3c:	f000 f89a 	bl	8002074 <FLASH_MassErase>
 8001f40:	f24c 3050 	movw	r0, #50000	@ 0xc350
 8001f44:	f7ff fefa 	bl	8001d3c <FLASH_WaitForLastOperation>
 8001f48:	4603      	mov	r3, r0
 8001f4a:	73fb      	strb	r3, [r7, #15]
 8001f4c:	4b21      	ldr	r3, [pc, #132]	@ (8001fd4 <HAL_FLASHEx_Erase+0x134>)
 8001f4e:	695b      	ldr	r3, [r3, #20]
 8001f50:	4a20      	ldr	r2, [pc, #128]	@ (8001fd4 <HAL_FLASHEx_Erase+0x134>)
 8001f52:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 8001f56:	f023 0304 	bic.w	r3, r3, #4
 8001f5a:	6153      	str	r3, [r2, #20]
 8001f5c:	e02d      	b.n	8001fba <HAL_FLASHEx_Erase+0x11a>
 8001f5e:	683b      	ldr	r3, [r7, #0]
 8001f60:	f04f 32ff 	mov.w	r2, #4294967295
 8001f64:	601a      	str	r2, [r3, #0]
 8001f66:	687b      	ldr	r3, [r7, #4]
 8001f68:	689b      	ldr	r3, [r3, #8]
 8001f6a:	60bb      	str	r3, [r7, #8]
 8001f6c:	e01d      	b.n	8001faa <HAL_FLASHEx_Erase+0x10a>
 8001f6e:	687b      	ldr	r3, [r7, #4]
 8001f70:	685b      	ldr	r3, [r3, #4]
 8001f72:	4619      	mov	r1, r3
 8001f74:	68b8      	ldr	r0, [r7, #8]
 8001f76:	f000 f8a5 	bl	80020c4 <FLASH_PageErase>
 8001f7a:	f24c 3050 	movw	r0, #50000	@ 0xc350
 8001f7e:	f7ff fedd 	bl	8001d3c <FLASH_WaitForLastOperation>
 8001f82:	4603      	mov	r3, r0
 8001f84:	73fb      	strb	r3, [r7, #15]
 8001f86:	4b13      	ldr	r3, [pc, #76]	@ (8001fd4 <HAL_FLASHEx_Erase+0x134>)
 8001f88:	695b      	ldr	r3, [r3, #20]
 8001f8a:	4a12      	ldr	r2, [pc, #72]	@ (8001fd4 <HAL_FLASHEx_Erase+0x134>)
 8001f8c:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 8001f90:	f023 0302 	bic.w	r3, r3, #2
 8001f94:	6153      	str	r3, [r2, #20]
 8001f96:	7bfb      	ldrb	r3, [r7, #15]
 8001f98:	2b00      	cmp	r3, #0
 8001f9a:	d003      	beq.n	8001fa4 <HAL_FLASHEx_Erase+0x104>
 8001f9c:	683b      	ldr	r3, [r7, #0]
 8001f9e:	68ba      	ldr	r2, [r7, #8]
 8001fa0:	601a      	str	r2, [r3, #0]
 8001fa2:	e00a      	b.n	8001fba <HAL_FLASHEx_Erase+0x11a>
 8001fa4:	68bb      	ldr	r3, [r7, #8]
 8001fa6:	3301      	adds	r3, #1
 8001fa8:	60bb      	str	r3, [r7, #8]
 8001faa:	687b      	ldr	r3, [r7, #4]
 8001fac:	689a      	ldr	r2, [r3, #8]
 8001fae:	687b      	ldr	r3, [r7, #4]
 8001fb0:	68db      	ldr	r3, [r3, #12]
 8001fb2:	4413      	add	r3, r2
 8001fb4:	68ba      	ldr	r2, [r7, #8]
 8001fb6:	429a      	cmp	r2, r3
 8001fb8:	d3d9      	bcc.n	8001f6e <HAL_FLASHEx_Erase+0xce>
 8001fba:	f000 f8b9 	bl	8002130 <FLASH_FlushCaches>
 8001fbe:	4b04      	ldr	r3, [pc, #16]	@ (8001fd0 <HAL_FLASHEx_Erase+0x130>)
 8001fc0:	2200      	movs	r2, #0
 8001fc2:	701a      	strb	r2, [r3, #0]
 8001fc4:	7bfb      	ldrb	r3, [r7, #15]
 8001fc6:	4618      	mov	r0, r3
 8001fc8:	3710      	adds	r7, #16
 8001fca:	46bd      	mov	sp, r7
 8001fcc:	bd80      	pop	{r7, pc}
 8001fce:	bf00      	nop
 8001fd0:	20000018 	.word	0x20000018
 8001fd4:	40022000 	.word	0x40022000

08001fd8 <HAL_FLASHEx_OBGetConfig>:
 8001fd8:	b580      	push	{r7, lr}
 8001fda:	b082      	sub	sp, #8
 8001fdc:	af00      	add	r7, sp, #0
 8001fde:	6078      	str	r0, [r7, #4]
 8001fe0:	687b      	ldr	r3, [r7, #4]
 8001fe2:	2206      	movs	r2, #6
 8001fe4:	601a      	str	r2, [r3, #0]
 8001fe6:	687b      	ldr	r3, [r7, #4]
 8001fe8:	685b      	ldr	r3, [r3, #4]
 8001fea:	2b00      	cmp	r3, #0
 8001fec:	d00b      	beq.n	8002006 <HAL_FLASHEx_OBGetConfig+0x2e>
 8001fee:	687b      	ldr	r3, [r7, #4]
 8001ff0:	685b      	ldr	r3, [r3, #4]
 8001ff2:	2b01      	cmp	r3, #1
 8001ff4:	d007      	beq.n	8002006 <HAL_FLASHEx_OBGetConfig+0x2e>
 8001ff6:	687b      	ldr	r3, [r7, #4]
 8001ff8:	685b      	ldr	r3, [r3, #4]
 8001ffa:	2b02      	cmp	r3, #2
 8001ffc:	d003      	beq.n	8002006 <HAL_FLASHEx_OBGetConfig+0x2e>
 8001ffe:	687b      	ldr	r3, [r7, #4]
 8002000:	685b      	ldr	r3, [r3, #4]
 8002002:	2b04      	cmp	r3, #4
 8002004:	d10f      	bne.n	8002026 <HAL_FLASHEx_OBGetConfig+0x4e>
 8002006:	687b      	ldr	r3, [r7, #4]
 8002008:	681b      	ldr	r3, [r3, #0]
 800200a:	f043 0201 	orr.w	r2, r3, #1
 800200e:	687b      	ldr	r3, [r7, #4]
 8002010:	601a      	str	r2, [r3, #0]
 8002012:	687b      	ldr	r3, [r7, #4]
 8002014:	6858      	ldr	r0, [r3, #4]
 8002016:	687b      	ldr	r3, [r7, #4]
 8002018:	f103 0108 	add.w	r1, r3, #8
 800201c:	687b      	ldr	r3, [r7, #4]
 800201e:	330c      	adds	r3, #12
 8002020:	461a      	mov	r2, r3
 8002022:	f000 f8cf 	bl	80021c4 <FLASH_OB_GetWRP>
 8002026:	f000 f917 	bl	8002258 <FLASH_OB_GetRDP>
 800202a:	4602      	mov	r2, r0
 800202c:	687b      	ldr	r3, [r7, #4]
 800202e:	611a      	str	r2, [r3, #16]
 8002030:	f000 f92c 	bl	800228c <FLASH_OB_GetUser>
 8002034:	4602      	mov	r2, r0
 8002036:	687b      	ldr	r3, [r7, #4]
 8002038:	619a      	str	r2, [r3, #24]
 800203a:	687b      	ldr	r3, [r7, #4]
 800203c:	69db      	ldr	r3, [r3, #28]
 800203e:	2b01      	cmp	r3, #1
 8002040:	d003      	beq.n	800204a <HAL_FLASHEx_OBGetConfig+0x72>
 8002042:	687b      	ldr	r3, [r7, #4]
 8002044:	69db      	ldr	r3, [r3, #28]
 8002046:	2b02      	cmp	r3, #2
 8002048:	d110      	bne.n	800206c <HAL_FLASHEx_OBGetConfig+0x94>
 800204a:	687b      	ldr	r3, [r7, #4]
 800204c:	681b      	ldr	r3, [r3, #0]
 800204e:	f043 0208 	orr.w	r2, r3, #8
 8002052:	687b      	ldr	r3, [r7, #4]
 8002054:	601a      	str	r2, [r3, #0]
 8002056:	687b      	ldr	r3, [r7, #4]
 8002058:	f103 001c 	add.w	r0, r3, #28
 800205c:	687b      	ldr	r3, [r7, #4]
 800205e:	f103 0120 	add.w	r1, r3, #32
 8002062:	687b      	ldr	r3, [r7, #4]
 8002064:	3324      	adds	r3, #36	@ 0x24
 8002066:	461a      	mov	r2, r3
 8002068:	f000 f924 	bl	80022b4 <FLASH_OB_GetPCROP>
 800206c:	bf00      	nop
 800206e:	3708      	adds	r7, #8
 8002070:	46bd      	mov	sp, r7
 8002072:	bd80      	pop	{r7, pc}

08002074 <FLASH_MassErase>:
 8002074:	b480      	push	{r7}
 8002076:	b083      	sub	sp, #12
 8002078:	af00      	add	r7, sp, #0
 800207a:	6078      	str	r0, [r7, #4]
 800207c:	687b      	ldr	r3, [r7, #4]
 800207e:	f003 0301 	and.w	r3, r3, #1
 8002082:	2b00      	cmp	r3, #0
 8002084:	d005      	beq.n	8002092 <FLASH_MassErase+0x1e>
 8002086:	4b0e      	ldr	r3, [pc, #56]	@ (80020c0 <FLASH_MassErase+0x4c>)
 8002088:	695b      	ldr	r3, [r3, #20]
 800208a:	4a0d      	ldr	r2, [pc, #52]	@ (80020c0 <FLASH_MassErase+0x4c>)
 800208c:	f043 0304 	orr.w	r3, r3, #4
 8002090:	6153      	str	r3, [r2, #20]
 8002092:	687b      	ldr	r3, [r7, #4]
 8002094:	f003 0302 	and.w	r3, r3, #2
 8002098:	2b00      	cmp	r3, #0
 800209a:	d005      	beq.n	80020a8 <FLASH_MassErase+0x34>
 800209c:	4b08      	ldr	r3, [pc, #32]	@ (80020c0 <FLASH_MassErase+0x4c>)
 800209e:	695b      	ldr	r3, [r3, #20]
 80020a0:	4a07      	ldr	r2, [pc, #28]	@ (80020c0 <FLASH_MassErase+0x4c>)
 80020a2:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 80020a6:	6153      	str	r3, [r2, #20]
 80020a8:	4b05      	ldr	r3, [pc, #20]	@ (80020c0 <FLASH_MassErase+0x4c>)
 80020aa:	695b      	ldr	r3, [r3, #20]
 80020ac:	4a04      	ldr	r2, [pc, #16]	@ (80020c0 <FLASH_MassErase+0x4c>)
 80020ae:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80020b2:	6153      	str	r3, [r2, #20]
 80020b4:	bf00      	nop
 80020b6:	370c      	adds	r7, #12
 80020b8:	46bd      	mov	sp, r7
 80020ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020be:	4770      	bx	lr
 80020c0:	40022000 	.word	0x40022000

080020c4 <FLASH_PageErase>:
 80020c4:	b480      	push	{r7}
 80020c6:	b083      	sub	sp, #12
 80020c8:	af00      	add	r7, sp, #0
 80020ca:	6078      	str	r0, [r7, #4]
 80020cc:	6039      	str	r1, [r7, #0]
 80020ce:	683b      	ldr	r3, [r7, #0]
 80020d0:	f003 0301 	and.w	r3, r3, #1
 80020d4:	2b00      	cmp	r3, #0
 80020d6:	d006      	beq.n	80020e6 <FLASH_PageErase+0x22>
 80020d8:	4b14      	ldr	r3, [pc, #80]	@ (800212c <FLASH_PageErase+0x68>)
 80020da:	695b      	ldr	r3, [r3, #20]
 80020dc:	4a13      	ldr	r2, [pc, #76]	@ (800212c <FLASH_PageErase+0x68>)
 80020de:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 80020e2:	6153      	str	r3, [r2, #20]
 80020e4:	e005      	b.n	80020f2 <FLASH_PageErase+0x2e>
 80020e6:	4b11      	ldr	r3, [pc, #68]	@ (800212c <FLASH_PageErase+0x68>)
 80020e8:	695b      	ldr	r3, [r3, #20]
 80020ea:	4a10      	ldr	r2, [pc, #64]	@ (800212c <FLASH_PageErase+0x68>)
 80020ec:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 80020f0:	6153      	str	r3, [r2, #20]
 80020f2:	4b0e      	ldr	r3, [pc, #56]	@ (800212c <FLASH_PageErase+0x68>)
 80020f4:	695b      	ldr	r3, [r3, #20]
 80020f6:	f423 62ff 	bic.w	r2, r3, #2040	@ 0x7f8
 80020fa:	687b      	ldr	r3, [r7, #4]
 80020fc:	00db      	lsls	r3, r3, #3
 80020fe:	f403 63ff 	and.w	r3, r3, #2040	@ 0x7f8
 8002102:	490a      	ldr	r1, [pc, #40]	@ (800212c <FLASH_PageErase+0x68>)
 8002104:	4313      	orrs	r3, r2
 8002106:	614b      	str	r3, [r1, #20]
 8002108:	4b08      	ldr	r3, [pc, #32]	@ (800212c <FLASH_PageErase+0x68>)
 800210a:	695b      	ldr	r3, [r3, #20]
 800210c:	4a07      	ldr	r2, [pc, #28]	@ (800212c <FLASH_PageErase+0x68>)
 800210e:	f043 0302 	orr.w	r3, r3, #2
 8002112:	6153      	str	r3, [r2, #20]
 8002114:	4b05      	ldr	r3, [pc, #20]	@ (800212c <FLASH_PageErase+0x68>)
 8002116:	695b      	ldr	r3, [r3, #20]
 8002118:	4a04      	ldr	r2, [pc, #16]	@ (800212c <FLASH_PageErase+0x68>)
 800211a:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800211e:	6153      	str	r3, [r2, #20]
 8002120:	bf00      	nop
 8002122:	370c      	adds	r7, #12
 8002124:	46bd      	mov	sp, r7
 8002126:	f85d 7b04 	ldr.w	r7, [sp], #4
 800212a:	4770      	bx	lr
 800212c:	40022000 	.word	0x40022000

08002130 <FLASH_FlushCaches>:
 8002130:	b480      	push	{r7}
 8002132:	b083      	sub	sp, #12
 8002134:	af00      	add	r7, sp, #0
 8002136:	4b21      	ldr	r3, [pc, #132]	@ (80021bc <FLASH_FlushCaches+0x8c>)
 8002138:	7f1b      	ldrb	r3, [r3, #28]
 800213a:	71fb      	strb	r3, [r7, #7]
 800213c:	79fb      	ldrb	r3, [r7, #7]
 800213e:	2b01      	cmp	r3, #1
 8002140:	d002      	beq.n	8002148 <FLASH_FlushCaches+0x18>
 8002142:	79fb      	ldrb	r3, [r7, #7]
 8002144:	2b03      	cmp	r3, #3
 8002146:	d117      	bne.n	8002178 <FLASH_FlushCaches+0x48>
 8002148:	4b1d      	ldr	r3, [pc, #116]	@ (80021c0 <FLASH_FlushCaches+0x90>)
 800214a:	681b      	ldr	r3, [r3, #0]
 800214c:	4a1c      	ldr	r2, [pc, #112]	@ (80021c0 <FLASH_FlushCaches+0x90>)
 800214e:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8002152:	6013      	str	r3, [r2, #0]
 8002154:	4b1a      	ldr	r3, [pc, #104]	@ (80021c0 <FLASH_FlushCaches+0x90>)
 8002156:	681b      	ldr	r3, [r3, #0]
 8002158:	4a19      	ldr	r2, [pc, #100]	@ (80021c0 <FLASH_FlushCaches+0x90>)
 800215a:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 800215e:	6013      	str	r3, [r2, #0]
 8002160:	4b17      	ldr	r3, [pc, #92]	@ (80021c0 <FLASH_FlushCaches+0x90>)
 8002162:	681b      	ldr	r3, [r3, #0]
 8002164:	4a16      	ldr	r2, [pc, #88]	@ (80021c0 <FLASH_FlushCaches+0x90>)
 8002166:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 800216a:	6013      	str	r3, [r2, #0]
 800216c:	4b14      	ldr	r3, [pc, #80]	@ (80021c0 <FLASH_FlushCaches+0x90>)
 800216e:	681b      	ldr	r3, [r3, #0]
 8002170:	4a13      	ldr	r2, [pc, #76]	@ (80021c0 <FLASH_FlushCaches+0x90>)
 8002172:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8002176:	6013      	str	r3, [r2, #0]
 8002178:	79fb      	ldrb	r3, [r7, #7]
 800217a:	2b02      	cmp	r3, #2
 800217c:	d002      	beq.n	8002184 <FLASH_FlushCaches+0x54>
 800217e:	79fb      	ldrb	r3, [r7, #7]
 8002180:	2b03      	cmp	r3, #3
 8002182:	d111      	bne.n	80021a8 <FLASH_FlushCaches+0x78>
 8002184:	4b0e      	ldr	r3, [pc, #56]	@ (80021c0 <FLASH_FlushCaches+0x90>)
 8002186:	681b      	ldr	r3, [r3, #0]
 8002188:	4a0d      	ldr	r2, [pc, #52]	@ (80021c0 <FLASH_FlushCaches+0x90>)
 800218a:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 800218e:	6013      	str	r3, [r2, #0]
 8002190:	4b0b      	ldr	r3, [pc, #44]	@ (80021c0 <FLASH_FlushCaches+0x90>)
 8002192:	681b      	ldr	r3, [r3, #0]
 8002194:	4a0a      	ldr	r2, [pc, #40]	@ (80021c0 <FLASH_FlushCaches+0x90>)
 8002196:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 800219a:	6013      	str	r3, [r2, #0]
 800219c:	4b08      	ldr	r3, [pc, #32]	@ (80021c0 <FLASH_FlushCaches+0x90>)
 800219e:	681b      	ldr	r3, [r3, #0]
 80021a0:	4a07      	ldr	r2, [pc, #28]	@ (80021c0 <FLASH_FlushCaches+0x90>)
 80021a2:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 80021a6:	6013      	str	r3, [r2, #0]
 80021a8:	4b04      	ldr	r3, [pc, #16]	@ (80021bc <FLASH_FlushCaches+0x8c>)
 80021aa:	2200      	movs	r2, #0
 80021ac:	771a      	strb	r2, [r3, #28]
 80021ae:	bf00      	nop
 80021b0:	370c      	adds	r7, #12
 80021b2:	46bd      	mov	sp, r7
 80021b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80021b8:	4770      	bx	lr
 80021ba:	bf00      	nop
 80021bc:	20000018 	.word	0x20000018
 80021c0:	40022000 	.word	0x40022000

080021c4 <FLASH_OB_GetWRP>:
 80021c4:	b480      	push	{r7}
 80021c6:	b085      	sub	sp, #20
 80021c8:	af00      	add	r7, sp, #0
 80021ca:	60f8      	str	r0, [r7, #12]
 80021cc:	60b9      	str	r1, [r7, #8]
 80021ce:	607a      	str	r2, [r7, #4]
 80021d0:	68fb      	ldr	r3, [r7, #12]
 80021d2:	2b00      	cmp	r3, #0
 80021d4:	d10b      	bne.n	80021ee <FLASH_OB_GetWRP+0x2a>
 80021d6:	4b1f      	ldr	r3, [pc, #124]	@ (8002254 <FLASH_OB_GetWRP+0x90>)
 80021d8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80021da:	b2da      	uxtb	r2, r3
 80021dc:	68bb      	ldr	r3, [r7, #8]
 80021de:	601a      	str	r2, [r3, #0]
 80021e0:	4b1c      	ldr	r3, [pc, #112]	@ (8002254 <FLASH_OB_GetWRP+0x90>)
 80021e2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80021e4:	0c1b      	lsrs	r3, r3, #16
 80021e6:	b2da      	uxtb	r2, r3
 80021e8:	687b      	ldr	r3, [r7, #4]
 80021ea:	601a      	str	r2, [r3, #0]
 80021ec:	e02b      	b.n	8002246 <FLASH_OB_GetWRP+0x82>
 80021ee:	68fb      	ldr	r3, [r7, #12]
 80021f0:	2b01      	cmp	r3, #1
 80021f2:	d10b      	bne.n	800220c <FLASH_OB_GetWRP+0x48>
 80021f4:	4b17      	ldr	r3, [pc, #92]	@ (8002254 <FLASH_OB_GetWRP+0x90>)
 80021f6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80021f8:	b2da      	uxtb	r2, r3
 80021fa:	68bb      	ldr	r3, [r7, #8]
 80021fc:	601a      	str	r2, [r3, #0]
 80021fe:	4b15      	ldr	r3, [pc, #84]	@ (8002254 <FLASH_OB_GetWRP+0x90>)
 8002200:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002202:	0c1b      	lsrs	r3, r3, #16
 8002204:	b2da      	uxtb	r2, r3
 8002206:	687b      	ldr	r3, [r7, #4]
 8002208:	601a      	str	r2, [r3, #0]
 800220a:	e01c      	b.n	8002246 <FLASH_OB_GetWRP+0x82>
 800220c:	68fb      	ldr	r3, [r7, #12]
 800220e:	2b02      	cmp	r3, #2
 8002210:	d10b      	bne.n	800222a <FLASH_OB_GetWRP+0x66>
 8002212:	4b10      	ldr	r3, [pc, #64]	@ (8002254 <FLASH_OB_GetWRP+0x90>)
 8002214:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002216:	b2da      	uxtb	r2, r3
 8002218:	68bb      	ldr	r3, [r7, #8]
 800221a:	601a      	str	r2, [r3, #0]
 800221c:	4b0d      	ldr	r3, [pc, #52]	@ (8002254 <FLASH_OB_GetWRP+0x90>)
 800221e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002220:	0c1b      	lsrs	r3, r3, #16
 8002222:	b2da      	uxtb	r2, r3
 8002224:	687b      	ldr	r3, [r7, #4]
 8002226:	601a      	str	r2, [r3, #0]
 8002228:	e00d      	b.n	8002246 <FLASH_OB_GetWRP+0x82>
 800222a:	68fb      	ldr	r3, [r7, #12]
 800222c:	2b04      	cmp	r3, #4
 800222e:	d10a      	bne.n	8002246 <FLASH_OB_GetWRP+0x82>
 8002230:	4b08      	ldr	r3, [pc, #32]	@ (8002254 <FLASH_OB_GetWRP+0x90>)
 8002232:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8002234:	b2da      	uxtb	r2, r3
 8002236:	68bb      	ldr	r3, [r7, #8]
 8002238:	601a      	str	r2, [r3, #0]
 800223a:	4b06      	ldr	r3, [pc, #24]	@ (8002254 <FLASH_OB_GetWRP+0x90>)
 800223c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800223e:	0c1b      	lsrs	r3, r3, #16
 8002240:	b2da      	uxtb	r2, r3
 8002242:	687b      	ldr	r3, [r7, #4]
 8002244:	601a      	str	r2, [r3, #0]
 8002246:	bf00      	nop
 8002248:	3714      	adds	r7, #20
 800224a:	46bd      	mov	sp, r7
 800224c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002250:	4770      	bx	lr
 8002252:	bf00      	nop
 8002254:	40022000 	.word	0x40022000

08002258 <FLASH_OB_GetRDP>:
 8002258:	b480      	push	{r7}
 800225a:	b083      	sub	sp, #12
 800225c:	af00      	add	r7, sp, #0
 800225e:	4b0a      	ldr	r3, [pc, #40]	@ (8002288 <FLASH_OB_GetRDP+0x30>)
 8002260:	6a1b      	ldr	r3, [r3, #32]
 8002262:	b2db      	uxtb	r3, r3
 8002264:	607b      	str	r3, [r7, #4]
 8002266:	687b      	ldr	r3, [r7, #4]
 8002268:	2baa      	cmp	r3, #170	@ 0xaa
 800226a:	d004      	beq.n	8002276 <FLASH_OB_GetRDP+0x1e>
 800226c:	687b      	ldr	r3, [r7, #4]
 800226e:	2bcc      	cmp	r3, #204	@ 0xcc
 8002270:	d001      	beq.n	8002276 <FLASH_OB_GetRDP+0x1e>
 8002272:	23bb      	movs	r3, #187	@ 0xbb
 8002274:	e002      	b.n	800227c <FLASH_OB_GetRDP+0x24>
 8002276:	4b04      	ldr	r3, [pc, #16]	@ (8002288 <FLASH_OB_GetRDP+0x30>)
 8002278:	6a1b      	ldr	r3, [r3, #32]
 800227a:	b2db      	uxtb	r3, r3
 800227c:	4618      	mov	r0, r3
 800227e:	370c      	adds	r7, #12
 8002280:	46bd      	mov	sp, r7
 8002282:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002286:	4770      	bx	lr
 8002288:	40022000 	.word	0x40022000

0800228c <FLASH_OB_GetUser>:
 800228c:	b480      	push	{r7}
 800228e:	b083      	sub	sp, #12
 8002290:	af00      	add	r7, sp, #0
 8002292:	4b07      	ldr	r3, [pc, #28]	@ (80022b0 <FLASH_OB_GetUser+0x24>)
 8002294:	6a1b      	ldr	r3, [r3, #32]
 8002296:	607b      	str	r3, [r7, #4]
 8002298:	687b      	ldr	r3, [r7, #4]
 800229a:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 800229e:	607b      	str	r3, [r7, #4]
 80022a0:	687b      	ldr	r3, [r7, #4]
 80022a2:	4618      	mov	r0, r3
 80022a4:	370c      	adds	r7, #12
 80022a6:	46bd      	mov	sp, r7
 80022a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80022ac:	4770      	bx	lr
 80022ae:	bf00      	nop
 80022b0:	40022000 	.word	0x40022000

080022b4 <FLASH_OB_GetPCROP>:
 80022b4:	b480      	push	{r7}
 80022b6:	b089      	sub	sp, #36	@ 0x24
 80022b8:	af00      	add	r7, sp, #0
 80022ba:	60f8      	str	r0, [r7, #12]
 80022bc:	60b9      	str	r1, [r7, #8]
 80022be:	607a      	str	r2, [r7, #4]
 80022c0:	4b3b      	ldr	r3, [pc, #236]	@ (80023b0 <FLASH_OB_GetPCROP+0xfc>)
 80022c2:	681b      	ldr	r3, [r3, #0]
 80022c4:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80022c8:	2b00      	cmp	r3, #0
 80022ca:	d115      	bne.n	80022f8 <FLASH_OB_GetPCROP+0x44>
 80022cc:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 80022d0:	61fb      	str	r3, [r7, #28]
 80022d2:	4b38      	ldr	r3, [pc, #224]	@ (80023b4 <FLASH_OB_GetPCROP+0x100>)
 80022d4:	681b      	ldr	r3, [r3, #0]
 80022d6:	b29b      	uxth	r3, r3
 80022d8:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80022dc:	4293      	cmp	r3, r2
 80022de:	d008      	beq.n	80022f2 <FLASH_OB_GetPCROP+0x3e>
 80022e0:	4b34      	ldr	r3, [pc, #208]	@ (80023b4 <FLASH_OB_GetPCROP+0x100>)
 80022e2:	681b      	ldr	r3, [r3, #0]
 80022e4:	029b      	lsls	r3, r3, #10
 80022e6:	085a      	lsrs	r2, r3, #1
 80022e8:	4b33      	ldr	r3, [pc, #204]	@ (80023b8 <FLASH_OB_GetPCROP+0x104>)
 80022ea:	4013      	ands	r3, r2
 80022ec:	f103 6300 	add.w	r3, r3, #134217728	@ 0x8000000
 80022f0:	e000      	b.n	80022f4 <FLASH_OB_GetPCROP+0x40>
 80022f2:	4b32      	ldr	r3, [pc, #200]	@ (80023bc <FLASH_OB_GetPCROP+0x108>)
 80022f4:	61bb      	str	r3, [r7, #24]
 80022f6:	e014      	b.n	8002322 <FLASH_OB_GetPCROP+0x6e>
 80022f8:	4b2e      	ldr	r3, [pc, #184]	@ (80023b4 <FLASH_OB_GetPCROP+0x100>)
 80022fa:	681b      	ldr	r3, [r3, #0]
 80022fc:	b29b      	uxth	r3, r3
 80022fe:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8002302:	4293      	cmp	r3, r2
 8002304:	d008      	beq.n	8002318 <FLASH_OB_GetPCROP+0x64>
 8002306:	4b2b      	ldr	r3, [pc, #172]	@ (80023b4 <FLASH_OB_GetPCROP+0x100>)
 8002308:	681b      	ldr	r3, [r3, #0]
 800230a:	029b      	lsls	r3, r3, #10
 800230c:	085a      	lsrs	r2, r3, #1
 800230e:	4b2a      	ldr	r3, [pc, #168]	@ (80023b8 <FLASH_OB_GetPCROP+0x104>)
 8002310:	4013      	ands	r3, r2
 8002312:	f103 6300 	add.w	r3, r3, #134217728	@ 0x8000000
 8002316:	e000      	b.n	800231a <FLASH_OB_GetPCROP+0x66>
 8002318:	4b28      	ldr	r3, [pc, #160]	@ (80023bc <FLASH_OB_GetPCROP+0x108>)
 800231a:	61fb      	str	r3, [r7, #28]
 800231c:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 8002320:	61bb      	str	r3, [r7, #24]
 8002322:	68fb      	ldr	r3, [r7, #12]
 8002324:	681b      	ldr	r3, [r3, #0]
 8002326:	f003 0303 	and.w	r3, r3, #3
 800232a:	2b01      	cmp	r3, #1
 800232c:	d115      	bne.n	800235a <FLASH_OB_GetPCROP+0xa6>
 800232e:	4b24      	ldr	r3, [pc, #144]	@ (80023c0 <FLASH_OB_GetPCROP+0x10c>)
 8002330:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002332:	b29b      	uxth	r3, r3
 8002334:	617b      	str	r3, [r7, #20]
 8002336:	697b      	ldr	r3, [r7, #20]
 8002338:	00da      	lsls	r2, r3, #3
 800233a:	69fb      	ldr	r3, [r7, #28]
 800233c:	441a      	add	r2, r3
 800233e:	68bb      	ldr	r3, [r7, #8]
 8002340:	601a      	str	r2, [r3, #0]
 8002342:	4b1f      	ldr	r3, [pc, #124]	@ (80023c0 <FLASH_OB_GetPCROP+0x10c>)
 8002344:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002346:	b29b      	uxth	r3, r3
 8002348:	617b      	str	r3, [r7, #20]
 800234a:	697b      	ldr	r3, [r7, #20]
 800234c:	00da      	lsls	r2, r3, #3
 800234e:	69fb      	ldr	r3, [r7, #28]
 8002350:	4413      	add	r3, r2
 8002352:	1dda      	adds	r2, r3, #7
 8002354:	687b      	ldr	r3, [r7, #4]
 8002356:	601a      	str	r2, [r3, #0]
 8002358:	e01a      	b.n	8002390 <FLASH_OB_GetPCROP+0xdc>
 800235a:	68fb      	ldr	r3, [r7, #12]
 800235c:	681b      	ldr	r3, [r3, #0]
 800235e:	f003 0303 	and.w	r3, r3, #3
 8002362:	2b02      	cmp	r3, #2
 8002364:	d114      	bne.n	8002390 <FLASH_OB_GetPCROP+0xdc>
 8002366:	4b16      	ldr	r3, [pc, #88]	@ (80023c0 <FLASH_OB_GetPCROP+0x10c>)
 8002368:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800236a:	b29b      	uxth	r3, r3
 800236c:	617b      	str	r3, [r7, #20]
 800236e:	697b      	ldr	r3, [r7, #20]
 8002370:	00da      	lsls	r2, r3, #3
 8002372:	69bb      	ldr	r3, [r7, #24]
 8002374:	441a      	add	r2, r3
 8002376:	68bb      	ldr	r3, [r7, #8]
 8002378:	601a      	str	r2, [r3, #0]
 800237a:	4b11      	ldr	r3, [pc, #68]	@ (80023c0 <FLASH_OB_GetPCROP+0x10c>)
 800237c:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800237e:	b29b      	uxth	r3, r3
 8002380:	617b      	str	r3, [r7, #20]
 8002382:	697b      	ldr	r3, [r7, #20]
 8002384:	00da      	lsls	r2, r3, #3
 8002386:	69bb      	ldr	r3, [r7, #24]
 8002388:	4413      	add	r3, r2
 800238a:	1dda      	adds	r2, r3, #7
 800238c:	687b      	ldr	r3, [r7, #4]
 800238e:	601a      	str	r2, [r3, #0]
 8002390:	4b0b      	ldr	r3, [pc, #44]	@ (80023c0 <FLASH_OB_GetPCROP+0x10c>)
 8002392:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002394:	f003 4200 	and.w	r2, r3, #2147483648	@ 0x80000000
 8002398:	68fb      	ldr	r3, [r7, #12]
 800239a:	681b      	ldr	r3, [r3, #0]
 800239c:	431a      	orrs	r2, r3
 800239e:	68fb      	ldr	r3, [r7, #12]
 80023a0:	601a      	str	r2, [r3, #0]
 80023a2:	bf00      	nop
 80023a4:	3724      	adds	r7, #36	@ 0x24
 80023a6:	46bd      	mov	sp, r7
 80023a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80023ac:	4770      	bx	lr
 80023ae:	bf00      	nop
 80023b0:	40010000 	.word	0x40010000
 80023b4:	1fff75e0 	.word	0x1fff75e0
 80023b8:	01fffe00 	.word	0x01fffe00
 80023bc:	08080000 	.word	0x08080000
 80023c0:	40022000 	.word	0x40022000

080023c4 <HAL_GPIO_Init>:
 80023c4:	b480      	push	{r7}
 80023c6:	b087      	sub	sp, #28
 80023c8:	af00      	add	r7, sp, #0
 80023ca:	6078      	str	r0, [r7, #4]
 80023cc:	6039      	str	r1, [r7, #0]
 80023ce:	2300      	movs	r3, #0
 80023d0:	617b      	str	r3, [r7, #20]
 80023d2:	e166      	b.n	80026a2 <HAL_GPIO_Init+0x2de>
 80023d4:	683b      	ldr	r3, [r7, #0]
 80023d6:	681a      	ldr	r2, [r3, #0]
 80023d8:	2101      	movs	r1, #1
 80023da:	697b      	ldr	r3, [r7, #20]
 80023dc:	fa01 f303 	lsl.w	r3, r1, r3
 80023e0:	4013      	ands	r3, r2
 80023e2:	60fb      	str	r3, [r7, #12]
 80023e4:	68fb      	ldr	r3, [r7, #12]
 80023e6:	2b00      	cmp	r3, #0
 80023e8:	f000 8158 	beq.w	800269c <HAL_GPIO_Init+0x2d8>
 80023ec:	683b      	ldr	r3, [r7, #0]
 80023ee:	685b      	ldr	r3, [r3, #4]
 80023f0:	f003 0303 	and.w	r3, r3, #3
 80023f4:	2b01      	cmp	r3, #1
 80023f6:	d005      	beq.n	8002404 <HAL_GPIO_Init+0x40>
 80023f8:	683b      	ldr	r3, [r7, #0]
 80023fa:	685b      	ldr	r3, [r3, #4]
 80023fc:	f003 0303 	and.w	r3, r3, #3
 8002400:	2b02      	cmp	r3, #2
 8002402:	d130      	bne.n	8002466 <HAL_GPIO_Init+0xa2>
 8002404:	687b      	ldr	r3, [r7, #4]
 8002406:	689b      	ldr	r3, [r3, #8]
 8002408:	613b      	str	r3, [r7, #16]
 800240a:	697b      	ldr	r3, [r7, #20]
 800240c:	005b      	lsls	r3, r3, #1
 800240e:	2203      	movs	r2, #3
 8002410:	fa02 f303 	lsl.w	r3, r2, r3
 8002414:	43db      	mvns	r3, r3
 8002416:	693a      	ldr	r2, [r7, #16]
 8002418:	4013      	ands	r3, r2
 800241a:	613b      	str	r3, [r7, #16]
 800241c:	683b      	ldr	r3, [r7, #0]
 800241e:	68da      	ldr	r2, [r3, #12]
 8002420:	697b      	ldr	r3, [r7, #20]
 8002422:	005b      	lsls	r3, r3, #1
 8002424:	fa02 f303 	lsl.w	r3, r2, r3
 8002428:	693a      	ldr	r2, [r7, #16]
 800242a:	4313      	orrs	r3, r2
 800242c:	613b      	str	r3, [r7, #16]
 800242e:	687b      	ldr	r3, [r7, #4]
 8002430:	693a      	ldr	r2, [r7, #16]
 8002432:	609a      	str	r2, [r3, #8]
 8002434:	687b      	ldr	r3, [r7, #4]
 8002436:	685b      	ldr	r3, [r3, #4]
 8002438:	613b      	str	r3, [r7, #16]
 800243a:	2201      	movs	r2, #1
 800243c:	697b      	ldr	r3, [r7, #20]
 800243e:	fa02 f303 	lsl.w	r3, r2, r3
 8002442:	43db      	mvns	r3, r3
 8002444:	693a      	ldr	r2, [r7, #16]
 8002446:	4013      	ands	r3, r2
 8002448:	613b      	str	r3, [r7, #16]
 800244a:	683b      	ldr	r3, [r7, #0]
 800244c:	685b      	ldr	r3, [r3, #4]
 800244e:	091b      	lsrs	r3, r3, #4
 8002450:	f003 0201 	and.w	r2, r3, #1
 8002454:	697b      	ldr	r3, [r7, #20]
 8002456:	fa02 f303 	lsl.w	r3, r2, r3
 800245a:	693a      	ldr	r2, [r7, #16]
 800245c:	4313      	orrs	r3, r2
 800245e:	613b      	str	r3, [r7, #16]
 8002460:	687b      	ldr	r3, [r7, #4]
 8002462:	693a      	ldr	r2, [r7, #16]
 8002464:	605a      	str	r2, [r3, #4]
 8002466:	683b      	ldr	r3, [r7, #0]
 8002468:	685b      	ldr	r3, [r3, #4]
 800246a:	f003 0303 	and.w	r3, r3, #3
 800246e:	2b03      	cmp	r3, #3
 8002470:	d017      	beq.n	80024a2 <HAL_GPIO_Init+0xde>
 8002472:	687b      	ldr	r3, [r7, #4]
 8002474:	68db      	ldr	r3, [r3, #12]
 8002476:	613b      	str	r3, [r7, #16]
 8002478:	697b      	ldr	r3, [r7, #20]
 800247a:	005b      	lsls	r3, r3, #1
 800247c:	2203      	movs	r2, #3
 800247e:	fa02 f303 	lsl.w	r3, r2, r3
 8002482:	43db      	mvns	r3, r3
 8002484:	693a      	ldr	r2, [r7, #16]
 8002486:	4013      	ands	r3, r2
 8002488:	613b      	str	r3, [r7, #16]
 800248a:	683b      	ldr	r3, [r7, #0]
 800248c:	689a      	ldr	r2, [r3, #8]
 800248e:	697b      	ldr	r3, [r7, #20]
 8002490:	005b      	lsls	r3, r3, #1
 8002492:	fa02 f303 	lsl.w	r3, r2, r3
 8002496:	693a      	ldr	r2, [r7, #16]
 8002498:	4313      	orrs	r3, r2
 800249a:	613b      	str	r3, [r7, #16]
 800249c:	687b      	ldr	r3, [r7, #4]
 800249e:	693a      	ldr	r2, [r7, #16]
 80024a0:	60da      	str	r2, [r3, #12]
 80024a2:	683b      	ldr	r3, [r7, #0]
 80024a4:	685b      	ldr	r3, [r3, #4]
 80024a6:	f003 0303 	and.w	r3, r3, #3
 80024aa:	2b02      	cmp	r3, #2
 80024ac:	d123      	bne.n	80024f6 <HAL_GPIO_Init+0x132>
 80024ae:	697b      	ldr	r3, [r7, #20]
 80024b0:	08da      	lsrs	r2, r3, #3
 80024b2:	687b      	ldr	r3, [r7, #4]
 80024b4:	3208      	adds	r2, #8
 80024b6:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80024ba:	613b      	str	r3, [r7, #16]
 80024bc:	697b      	ldr	r3, [r7, #20]
 80024be:	f003 0307 	and.w	r3, r3, #7
 80024c2:	009b      	lsls	r3, r3, #2
 80024c4:	220f      	movs	r2, #15
 80024c6:	fa02 f303 	lsl.w	r3, r2, r3
 80024ca:	43db      	mvns	r3, r3
 80024cc:	693a      	ldr	r2, [r7, #16]
 80024ce:	4013      	ands	r3, r2
 80024d0:	613b      	str	r3, [r7, #16]
 80024d2:	683b      	ldr	r3, [r7, #0]
 80024d4:	691a      	ldr	r2, [r3, #16]
 80024d6:	697b      	ldr	r3, [r7, #20]
 80024d8:	f003 0307 	and.w	r3, r3, #7
 80024dc:	009b      	lsls	r3, r3, #2
 80024de:	fa02 f303 	lsl.w	r3, r2, r3
 80024e2:	693a      	ldr	r2, [r7, #16]
 80024e4:	4313      	orrs	r3, r2
 80024e6:	613b      	str	r3, [r7, #16]
 80024e8:	697b      	ldr	r3, [r7, #20]
 80024ea:	08da      	lsrs	r2, r3, #3
 80024ec:	687b      	ldr	r3, [r7, #4]
 80024ee:	3208      	adds	r2, #8
 80024f0:	6939      	ldr	r1, [r7, #16]
 80024f2:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80024f6:	687b      	ldr	r3, [r7, #4]
 80024f8:	681b      	ldr	r3, [r3, #0]
 80024fa:	613b      	str	r3, [r7, #16]
 80024fc:	697b      	ldr	r3, [r7, #20]
 80024fe:	005b      	lsls	r3, r3, #1
 8002500:	2203      	movs	r2, #3
 8002502:	fa02 f303 	lsl.w	r3, r2, r3
 8002506:	43db      	mvns	r3, r3
 8002508:	693a      	ldr	r2, [r7, #16]
 800250a:	4013      	ands	r3, r2
 800250c:	613b      	str	r3, [r7, #16]
 800250e:	683b      	ldr	r3, [r7, #0]
 8002510:	685b      	ldr	r3, [r3, #4]
 8002512:	f003 0203 	and.w	r2, r3, #3
 8002516:	697b      	ldr	r3, [r7, #20]
 8002518:	005b      	lsls	r3, r3, #1
 800251a:	fa02 f303 	lsl.w	r3, r2, r3
 800251e:	693a      	ldr	r2, [r7, #16]
 8002520:	4313      	orrs	r3, r2
 8002522:	613b      	str	r3, [r7, #16]
 8002524:	687b      	ldr	r3, [r7, #4]
 8002526:	693a      	ldr	r2, [r7, #16]
 8002528:	601a      	str	r2, [r3, #0]
 800252a:	683b      	ldr	r3, [r7, #0]
 800252c:	685b      	ldr	r3, [r3, #4]
 800252e:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8002532:	2b00      	cmp	r3, #0
 8002534:	f000 80b2 	beq.w	800269c <HAL_GPIO_Init+0x2d8>
 8002538:	4b61      	ldr	r3, [pc, #388]	@ (80026c0 <HAL_GPIO_Init+0x2fc>)
 800253a:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800253c:	4a60      	ldr	r2, [pc, #384]	@ (80026c0 <HAL_GPIO_Init+0x2fc>)
 800253e:	f043 0301 	orr.w	r3, r3, #1
 8002542:	6613      	str	r3, [r2, #96]	@ 0x60
 8002544:	4b5e      	ldr	r3, [pc, #376]	@ (80026c0 <HAL_GPIO_Init+0x2fc>)
 8002546:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8002548:	f003 0301 	and.w	r3, r3, #1
 800254c:	60bb      	str	r3, [r7, #8]
 800254e:	68bb      	ldr	r3, [r7, #8]
 8002550:	4a5c      	ldr	r2, [pc, #368]	@ (80026c4 <HAL_GPIO_Init+0x300>)
 8002552:	697b      	ldr	r3, [r7, #20]
 8002554:	089b      	lsrs	r3, r3, #2
 8002556:	3302      	adds	r3, #2
 8002558:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800255c:	613b      	str	r3, [r7, #16]
 800255e:	697b      	ldr	r3, [r7, #20]
 8002560:	f003 0303 	and.w	r3, r3, #3
 8002564:	009b      	lsls	r3, r3, #2
 8002566:	220f      	movs	r2, #15
 8002568:	fa02 f303 	lsl.w	r3, r2, r3
 800256c:	43db      	mvns	r3, r3
 800256e:	693a      	ldr	r2, [r7, #16]
 8002570:	4013      	ands	r3, r2
 8002572:	613b      	str	r3, [r7, #16]
 8002574:	687b      	ldr	r3, [r7, #4]
 8002576:	f1b3 4f90 	cmp.w	r3, #1207959552	@ 0x48000000
 800257a:	d02b      	beq.n	80025d4 <HAL_GPIO_Init+0x210>
 800257c:	687b      	ldr	r3, [r7, #4]
 800257e:	4a52      	ldr	r2, [pc, #328]	@ (80026c8 <HAL_GPIO_Init+0x304>)
 8002580:	4293      	cmp	r3, r2
 8002582:	d025      	beq.n	80025d0 <HAL_GPIO_Init+0x20c>
 8002584:	687b      	ldr	r3, [r7, #4]
 8002586:	4a51      	ldr	r2, [pc, #324]	@ (80026cc <HAL_GPIO_Init+0x308>)
 8002588:	4293      	cmp	r3, r2
 800258a:	d01f      	beq.n	80025cc <HAL_GPIO_Init+0x208>
 800258c:	687b      	ldr	r3, [r7, #4]
 800258e:	4a50      	ldr	r2, [pc, #320]	@ (80026d0 <HAL_GPIO_Init+0x30c>)
 8002590:	4293      	cmp	r3, r2
 8002592:	d019      	beq.n	80025c8 <HAL_GPIO_Init+0x204>
 8002594:	687b      	ldr	r3, [r7, #4]
 8002596:	4a4f      	ldr	r2, [pc, #316]	@ (80026d4 <HAL_GPIO_Init+0x310>)
 8002598:	4293      	cmp	r3, r2
 800259a:	d013      	beq.n	80025c4 <HAL_GPIO_Init+0x200>
 800259c:	687b      	ldr	r3, [r7, #4]
 800259e:	4a4e      	ldr	r2, [pc, #312]	@ (80026d8 <HAL_GPIO_Init+0x314>)
 80025a0:	4293      	cmp	r3, r2
 80025a2:	d00d      	beq.n	80025c0 <HAL_GPIO_Init+0x1fc>
 80025a4:	687b      	ldr	r3, [r7, #4]
 80025a6:	4a4d      	ldr	r2, [pc, #308]	@ (80026dc <HAL_GPIO_Init+0x318>)
 80025a8:	4293      	cmp	r3, r2
 80025aa:	d007      	beq.n	80025bc <HAL_GPIO_Init+0x1f8>
 80025ac:	687b      	ldr	r3, [r7, #4]
 80025ae:	4a4c      	ldr	r2, [pc, #304]	@ (80026e0 <HAL_GPIO_Init+0x31c>)
 80025b0:	4293      	cmp	r3, r2
 80025b2:	d101      	bne.n	80025b8 <HAL_GPIO_Init+0x1f4>
 80025b4:	2307      	movs	r3, #7
 80025b6:	e00e      	b.n	80025d6 <HAL_GPIO_Init+0x212>
 80025b8:	2308      	movs	r3, #8
 80025ba:	e00c      	b.n	80025d6 <HAL_GPIO_Init+0x212>
 80025bc:	2306      	movs	r3, #6
 80025be:	e00a      	b.n	80025d6 <HAL_GPIO_Init+0x212>
 80025c0:	2305      	movs	r3, #5
 80025c2:	e008      	b.n	80025d6 <HAL_GPIO_Init+0x212>
 80025c4:	2304      	movs	r3, #4
 80025c6:	e006      	b.n	80025d6 <HAL_GPIO_Init+0x212>
 80025c8:	2303      	movs	r3, #3
 80025ca:	e004      	b.n	80025d6 <HAL_GPIO_Init+0x212>
 80025cc:	2302      	movs	r3, #2
 80025ce:	e002      	b.n	80025d6 <HAL_GPIO_Init+0x212>
 80025d0:	2301      	movs	r3, #1
 80025d2:	e000      	b.n	80025d6 <HAL_GPIO_Init+0x212>
 80025d4:	2300      	movs	r3, #0
 80025d6:	697a      	ldr	r2, [r7, #20]
 80025d8:	f002 0203 	and.w	r2, r2, #3
 80025dc:	0092      	lsls	r2, r2, #2
 80025de:	4093      	lsls	r3, r2
 80025e0:	693a      	ldr	r2, [r7, #16]
 80025e2:	4313      	orrs	r3, r2
 80025e4:	613b      	str	r3, [r7, #16]
 80025e6:	4937      	ldr	r1, [pc, #220]	@ (80026c4 <HAL_GPIO_Init+0x300>)
 80025e8:	697b      	ldr	r3, [r7, #20]
 80025ea:	089b      	lsrs	r3, r3, #2
 80025ec:	3302      	adds	r3, #2
 80025ee:	693a      	ldr	r2, [r7, #16]
 80025f0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80025f4:	4b3b      	ldr	r3, [pc, #236]	@ (80026e4 <HAL_GPIO_Init+0x320>)
 80025f6:	689b      	ldr	r3, [r3, #8]
 80025f8:	613b      	str	r3, [r7, #16]
 80025fa:	68fb      	ldr	r3, [r7, #12]
 80025fc:	43db      	mvns	r3, r3
 80025fe:	693a      	ldr	r2, [r7, #16]
 8002600:	4013      	ands	r3, r2
 8002602:	613b      	str	r3, [r7, #16]
 8002604:	683b      	ldr	r3, [r7, #0]
 8002606:	685b      	ldr	r3, [r3, #4]
 8002608:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 800260c:	2b00      	cmp	r3, #0
 800260e:	d003      	beq.n	8002618 <HAL_GPIO_Init+0x254>
 8002610:	693a      	ldr	r2, [r7, #16]
 8002612:	68fb      	ldr	r3, [r7, #12]
 8002614:	4313      	orrs	r3, r2
 8002616:	613b      	str	r3, [r7, #16]
 8002618:	4a32      	ldr	r2, [pc, #200]	@ (80026e4 <HAL_GPIO_Init+0x320>)
 800261a:	693b      	ldr	r3, [r7, #16]
 800261c:	6093      	str	r3, [r2, #8]
 800261e:	4b31      	ldr	r3, [pc, #196]	@ (80026e4 <HAL_GPIO_Init+0x320>)
 8002620:	68db      	ldr	r3, [r3, #12]
 8002622:	613b      	str	r3, [r7, #16]
 8002624:	68fb      	ldr	r3, [r7, #12]
 8002626:	43db      	mvns	r3, r3
 8002628:	693a      	ldr	r2, [r7, #16]
 800262a:	4013      	ands	r3, r2
 800262c:	613b      	str	r3, [r7, #16]
 800262e:	683b      	ldr	r3, [r7, #0]
 8002630:	685b      	ldr	r3, [r3, #4]
 8002632:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8002636:	2b00      	cmp	r3, #0
 8002638:	d003      	beq.n	8002642 <HAL_GPIO_Init+0x27e>
 800263a:	693a      	ldr	r2, [r7, #16]
 800263c:	68fb      	ldr	r3, [r7, #12]
 800263e:	4313      	orrs	r3, r2
 8002640:	613b      	str	r3, [r7, #16]
 8002642:	4a28      	ldr	r2, [pc, #160]	@ (80026e4 <HAL_GPIO_Init+0x320>)
 8002644:	693b      	ldr	r3, [r7, #16]
 8002646:	60d3      	str	r3, [r2, #12]
 8002648:	4b26      	ldr	r3, [pc, #152]	@ (80026e4 <HAL_GPIO_Init+0x320>)
 800264a:	685b      	ldr	r3, [r3, #4]
 800264c:	613b      	str	r3, [r7, #16]
 800264e:	68fb      	ldr	r3, [r7, #12]
 8002650:	43db      	mvns	r3, r3
 8002652:	693a      	ldr	r2, [r7, #16]
 8002654:	4013      	ands	r3, r2
 8002656:	613b      	str	r3, [r7, #16]
 8002658:	683b      	ldr	r3, [r7, #0]
 800265a:	685b      	ldr	r3, [r3, #4]
 800265c:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002660:	2b00      	cmp	r3, #0
 8002662:	d003      	beq.n	800266c <HAL_GPIO_Init+0x2a8>
 8002664:	693a      	ldr	r2, [r7, #16]
 8002666:	68fb      	ldr	r3, [r7, #12]
 8002668:	4313      	orrs	r3, r2
 800266a:	613b      	str	r3, [r7, #16]
 800266c:	4a1d      	ldr	r2, [pc, #116]	@ (80026e4 <HAL_GPIO_Init+0x320>)
 800266e:	693b      	ldr	r3, [r7, #16]
 8002670:	6053      	str	r3, [r2, #4]
 8002672:	4b1c      	ldr	r3, [pc, #112]	@ (80026e4 <HAL_GPIO_Init+0x320>)
 8002674:	681b      	ldr	r3, [r3, #0]
 8002676:	613b      	str	r3, [r7, #16]
 8002678:	68fb      	ldr	r3, [r7, #12]
 800267a:	43db      	mvns	r3, r3
 800267c:	693a      	ldr	r2, [r7, #16]
 800267e:	4013      	ands	r3, r2
 8002680:	613b      	str	r3, [r7, #16]
 8002682:	683b      	ldr	r3, [r7, #0]
 8002684:	685b      	ldr	r3, [r3, #4]
 8002686:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800268a:	2b00      	cmp	r3, #0
 800268c:	d003      	beq.n	8002696 <HAL_GPIO_Init+0x2d2>
 800268e:	693a      	ldr	r2, [r7, #16]
 8002690:	68fb      	ldr	r3, [r7, #12]
 8002692:	4313      	orrs	r3, r2
 8002694:	613b      	str	r3, [r7, #16]
 8002696:	4a13      	ldr	r2, [pc, #76]	@ (80026e4 <HAL_GPIO_Init+0x320>)
 8002698:	693b      	ldr	r3, [r7, #16]
 800269a:	6013      	str	r3, [r2, #0]
 800269c:	697b      	ldr	r3, [r7, #20]
 800269e:	3301      	adds	r3, #1
 80026a0:	617b      	str	r3, [r7, #20]
 80026a2:	683b      	ldr	r3, [r7, #0]
 80026a4:	681a      	ldr	r2, [r3, #0]
 80026a6:	697b      	ldr	r3, [r7, #20]
 80026a8:	fa22 f303 	lsr.w	r3, r2, r3
 80026ac:	2b00      	cmp	r3, #0
 80026ae:	f47f ae91 	bne.w	80023d4 <HAL_GPIO_Init+0x10>
 80026b2:	bf00      	nop
 80026b4:	bf00      	nop
 80026b6:	371c      	adds	r7, #28
 80026b8:	46bd      	mov	sp, r7
 80026ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80026be:	4770      	bx	lr
 80026c0:	40021000 	.word	0x40021000
 80026c4:	40010000 	.word	0x40010000
 80026c8:	48000400 	.word	0x48000400
 80026cc:	48000800 	.word	0x48000800
 80026d0:	48000c00 	.word	0x48000c00
 80026d4:	48001000 	.word	0x48001000
 80026d8:	48001400 	.word	0x48001400
 80026dc:	48001800 	.word	0x48001800
 80026e0:	48001c00 	.word	0x48001c00
 80026e4:	40010400 	.word	0x40010400

080026e8 <HAL_GPIO_ReadPin>:
 80026e8:	b480      	push	{r7}
 80026ea:	b085      	sub	sp, #20
 80026ec:	af00      	add	r7, sp, #0
 80026ee:	6078      	str	r0, [r7, #4]
 80026f0:	460b      	mov	r3, r1
 80026f2:	807b      	strh	r3, [r7, #2]
 80026f4:	687b      	ldr	r3, [r7, #4]
 80026f6:	691a      	ldr	r2, [r3, #16]
 80026f8:	887b      	ldrh	r3, [r7, #2]
 80026fa:	4013      	ands	r3, r2
 80026fc:	2b00      	cmp	r3, #0
 80026fe:	d002      	beq.n	8002706 <HAL_GPIO_ReadPin+0x1e>
 8002700:	2301      	movs	r3, #1
 8002702:	73fb      	strb	r3, [r7, #15]
 8002704:	e001      	b.n	800270a <HAL_GPIO_ReadPin+0x22>
 8002706:	2300      	movs	r3, #0
 8002708:	73fb      	strb	r3, [r7, #15]
 800270a:	7bfb      	ldrb	r3, [r7, #15]
 800270c:	4618      	mov	r0, r3
 800270e:	3714      	adds	r7, #20
 8002710:	46bd      	mov	sp, r7
 8002712:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002716:	4770      	bx	lr

08002718 <HAL_GPIO_WritePin>:
 8002718:	b480      	push	{r7}
 800271a:	b083      	sub	sp, #12
 800271c:	af00      	add	r7, sp, #0
 800271e:	6078      	str	r0, [r7, #4]
 8002720:	460b      	mov	r3, r1
 8002722:	807b      	strh	r3, [r7, #2]
 8002724:	4613      	mov	r3, r2
 8002726:	707b      	strb	r3, [r7, #1]
 8002728:	787b      	ldrb	r3, [r7, #1]
 800272a:	2b00      	cmp	r3, #0
 800272c:	d003      	beq.n	8002736 <HAL_GPIO_WritePin+0x1e>
 800272e:	887a      	ldrh	r2, [r7, #2]
 8002730:	687b      	ldr	r3, [r7, #4]
 8002732:	619a      	str	r2, [r3, #24]
 8002734:	e002      	b.n	800273c <HAL_GPIO_WritePin+0x24>
 8002736:	887a      	ldrh	r2, [r7, #2]
 8002738:	687b      	ldr	r3, [r7, #4]
 800273a:	629a      	str	r2, [r3, #40]	@ 0x28
 800273c:	bf00      	nop
 800273e:	370c      	adds	r7, #12
 8002740:	46bd      	mov	sp, r7
 8002742:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002746:	4770      	bx	lr

08002748 <HAL_PWREx_GetVoltageRange>:
 8002748:	b480      	push	{r7}
 800274a:	af00      	add	r7, sp, #0
 800274c:	4b04      	ldr	r3, [pc, #16]	@ (8002760 <HAL_PWREx_GetVoltageRange+0x18>)
 800274e:	681b      	ldr	r3, [r3, #0]
 8002750:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 8002754:	4618      	mov	r0, r3
 8002756:	46bd      	mov	sp, r7
 8002758:	f85d 7b04 	ldr.w	r7, [sp], #4
 800275c:	4770      	bx	lr
 800275e:	bf00      	nop
 8002760:	40007000 	.word	0x40007000

08002764 <HAL_PWREx_ControlVoltageScaling>:
 8002764:	b480      	push	{r7}
 8002766:	b085      	sub	sp, #20
 8002768:	af00      	add	r7, sp, #0
 800276a:	6078      	str	r0, [r7, #4]
 800276c:	687b      	ldr	r3, [r7, #4]
 800276e:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8002772:	d130      	bne.n	80027d6 <HAL_PWREx_ControlVoltageScaling+0x72>
 8002774:	4b23      	ldr	r3, [pc, #140]	@ (8002804 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8002776:	681b      	ldr	r3, [r3, #0]
 8002778:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 800277c:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8002780:	d038      	beq.n	80027f4 <HAL_PWREx_ControlVoltageScaling+0x90>
 8002782:	4b20      	ldr	r3, [pc, #128]	@ (8002804 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8002784:	681b      	ldr	r3, [r3, #0]
 8002786:	f423 63c0 	bic.w	r3, r3, #1536	@ 0x600
 800278a:	4a1e      	ldr	r2, [pc, #120]	@ (8002804 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 800278c:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8002790:	6013      	str	r3, [r2, #0]
 8002792:	4b1d      	ldr	r3, [pc, #116]	@ (8002808 <HAL_PWREx_ControlVoltageScaling+0xa4>)
 8002794:	681b      	ldr	r3, [r3, #0]
 8002796:	2232      	movs	r2, #50	@ 0x32
 8002798:	fb02 f303 	mul.w	r3, r2, r3
 800279c:	4a1b      	ldr	r2, [pc, #108]	@ (800280c <HAL_PWREx_ControlVoltageScaling+0xa8>)
 800279e:	fba2 2303 	umull	r2, r3, r2, r3
 80027a2:	0c9b      	lsrs	r3, r3, #18
 80027a4:	3301      	adds	r3, #1
 80027a6:	60fb      	str	r3, [r7, #12]
 80027a8:	e002      	b.n	80027b0 <HAL_PWREx_ControlVoltageScaling+0x4c>
 80027aa:	68fb      	ldr	r3, [r7, #12]
 80027ac:	3b01      	subs	r3, #1
 80027ae:	60fb      	str	r3, [r7, #12]
 80027b0:	4b14      	ldr	r3, [pc, #80]	@ (8002804 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 80027b2:	695b      	ldr	r3, [r3, #20]
 80027b4:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80027b8:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80027bc:	d102      	bne.n	80027c4 <HAL_PWREx_ControlVoltageScaling+0x60>
 80027be:	68fb      	ldr	r3, [r7, #12]
 80027c0:	2b00      	cmp	r3, #0
 80027c2:	d1f2      	bne.n	80027aa <HAL_PWREx_ControlVoltageScaling+0x46>
 80027c4:	4b0f      	ldr	r3, [pc, #60]	@ (8002804 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 80027c6:	695b      	ldr	r3, [r3, #20]
 80027c8:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80027cc:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80027d0:	d110      	bne.n	80027f4 <HAL_PWREx_ControlVoltageScaling+0x90>
 80027d2:	2303      	movs	r3, #3
 80027d4:	e00f      	b.n	80027f6 <HAL_PWREx_ControlVoltageScaling+0x92>
 80027d6:	4b0b      	ldr	r3, [pc, #44]	@ (8002804 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 80027d8:	681b      	ldr	r3, [r3, #0]
 80027da:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 80027de:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80027e2:	d007      	beq.n	80027f4 <HAL_PWREx_ControlVoltageScaling+0x90>
 80027e4:	4b07      	ldr	r3, [pc, #28]	@ (8002804 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 80027e6:	681b      	ldr	r3, [r3, #0]
 80027e8:	f423 63c0 	bic.w	r3, r3, #1536	@ 0x600
 80027ec:	4a05      	ldr	r2, [pc, #20]	@ (8002804 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 80027ee:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 80027f2:	6013      	str	r3, [r2, #0]
 80027f4:	2300      	movs	r3, #0
 80027f6:	4618      	mov	r0, r3
 80027f8:	3714      	adds	r7, #20
 80027fa:	46bd      	mov	sp, r7
 80027fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002800:	4770      	bx	lr
 8002802:	bf00      	nop
 8002804:	40007000 	.word	0x40007000
 8002808:	2000000c 	.word	0x2000000c
 800280c:	431bde83 	.word	0x431bde83

08002810 <HAL_PWREx_EnableVddIO2>:
 8002810:	b480      	push	{r7}
 8002812:	af00      	add	r7, sp, #0
 8002814:	4b05      	ldr	r3, [pc, #20]	@ (800282c <HAL_PWREx_EnableVddIO2+0x1c>)
 8002816:	685b      	ldr	r3, [r3, #4]
 8002818:	4a04      	ldr	r2, [pc, #16]	@ (800282c <HAL_PWREx_EnableVddIO2+0x1c>)
 800281a:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800281e:	6053      	str	r3, [r2, #4]
 8002820:	bf00      	nop
 8002822:	46bd      	mov	sp, r7
 8002824:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002828:	4770      	bx	lr
 800282a:	bf00      	nop
 800282c:	40007000 	.word	0x40007000

08002830 <HAL_RCC_OscConfig>:
 8002830:	b580      	push	{r7, lr}
 8002832:	b088      	sub	sp, #32
 8002834:	af00      	add	r7, sp, #0
 8002836:	6078      	str	r0, [r7, #4]
 8002838:	687b      	ldr	r3, [r7, #4]
 800283a:	2b00      	cmp	r3, #0
 800283c:	d102      	bne.n	8002844 <HAL_RCC_OscConfig+0x14>
 800283e:	2301      	movs	r3, #1
 8002840:	f000 bc08 	b.w	8003054 <HAL_RCC_OscConfig+0x824>
 8002844:	4b96      	ldr	r3, [pc, #600]	@ (8002aa0 <HAL_RCC_OscConfig+0x270>)
 8002846:	689b      	ldr	r3, [r3, #8]
 8002848:	f003 030c 	and.w	r3, r3, #12
 800284c:	61bb      	str	r3, [r7, #24]
 800284e:	4b94      	ldr	r3, [pc, #592]	@ (8002aa0 <HAL_RCC_OscConfig+0x270>)
 8002850:	68db      	ldr	r3, [r3, #12]
 8002852:	f003 0303 	and.w	r3, r3, #3
 8002856:	617b      	str	r3, [r7, #20]
 8002858:	687b      	ldr	r3, [r7, #4]
 800285a:	681b      	ldr	r3, [r3, #0]
 800285c:	f003 0310 	and.w	r3, r3, #16
 8002860:	2b00      	cmp	r3, #0
 8002862:	f000 80e4 	beq.w	8002a2e <HAL_RCC_OscConfig+0x1fe>
 8002866:	69bb      	ldr	r3, [r7, #24]
 8002868:	2b00      	cmp	r3, #0
 800286a:	d007      	beq.n	800287c <HAL_RCC_OscConfig+0x4c>
 800286c:	69bb      	ldr	r3, [r7, #24]
 800286e:	2b0c      	cmp	r3, #12
 8002870:	f040 808b 	bne.w	800298a <HAL_RCC_OscConfig+0x15a>
 8002874:	697b      	ldr	r3, [r7, #20]
 8002876:	2b01      	cmp	r3, #1
 8002878:	f040 8087 	bne.w	800298a <HAL_RCC_OscConfig+0x15a>
 800287c:	4b88      	ldr	r3, [pc, #544]	@ (8002aa0 <HAL_RCC_OscConfig+0x270>)
 800287e:	681b      	ldr	r3, [r3, #0]
 8002880:	f003 0302 	and.w	r3, r3, #2
 8002884:	2b00      	cmp	r3, #0
 8002886:	d005      	beq.n	8002894 <HAL_RCC_OscConfig+0x64>
 8002888:	687b      	ldr	r3, [r7, #4]
 800288a:	699b      	ldr	r3, [r3, #24]
 800288c:	2b00      	cmp	r3, #0
 800288e:	d101      	bne.n	8002894 <HAL_RCC_OscConfig+0x64>
 8002890:	2301      	movs	r3, #1
 8002892:	e3df      	b.n	8003054 <HAL_RCC_OscConfig+0x824>
 8002894:	687b      	ldr	r3, [r7, #4]
 8002896:	6a1a      	ldr	r2, [r3, #32]
 8002898:	4b81      	ldr	r3, [pc, #516]	@ (8002aa0 <HAL_RCC_OscConfig+0x270>)
 800289a:	681b      	ldr	r3, [r3, #0]
 800289c:	f003 0308 	and.w	r3, r3, #8
 80028a0:	2b00      	cmp	r3, #0
 80028a2:	d004      	beq.n	80028ae <HAL_RCC_OscConfig+0x7e>
 80028a4:	4b7e      	ldr	r3, [pc, #504]	@ (8002aa0 <HAL_RCC_OscConfig+0x270>)
 80028a6:	681b      	ldr	r3, [r3, #0]
 80028a8:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 80028ac:	e005      	b.n	80028ba <HAL_RCC_OscConfig+0x8a>
 80028ae:	4b7c      	ldr	r3, [pc, #496]	@ (8002aa0 <HAL_RCC_OscConfig+0x270>)
 80028b0:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 80028b4:	091b      	lsrs	r3, r3, #4
 80028b6:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 80028ba:	4293      	cmp	r3, r2
 80028bc:	d223      	bcs.n	8002906 <HAL_RCC_OscConfig+0xd6>
 80028be:	687b      	ldr	r3, [r7, #4]
 80028c0:	6a1b      	ldr	r3, [r3, #32]
 80028c2:	4618      	mov	r0, r3
 80028c4:	f000 fd92 	bl	80033ec <RCC_SetFlashLatencyFromMSIRange>
 80028c8:	4603      	mov	r3, r0
 80028ca:	2b00      	cmp	r3, #0
 80028cc:	d001      	beq.n	80028d2 <HAL_RCC_OscConfig+0xa2>
 80028ce:	2301      	movs	r3, #1
 80028d0:	e3c0      	b.n	8003054 <HAL_RCC_OscConfig+0x824>
 80028d2:	4b73      	ldr	r3, [pc, #460]	@ (8002aa0 <HAL_RCC_OscConfig+0x270>)
 80028d4:	681b      	ldr	r3, [r3, #0]
 80028d6:	4a72      	ldr	r2, [pc, #456]	@ (8002aa0 <HAL_RCC_OscConfig+0x270>)
 80028d8:	f043 0308 	orr.w	r3, r3, #8
 80028dc:	6013      	str	r3, [r2, #0]
 80028de:	4b70      	ldr	r3, [pc, #448]	@ (8002aa0 <HAL_RCC_OscConfig+0x270>)
 80028e0:	681b      	ldr	r3, [r3, #0]
 80028e2:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 80028e6:	687b      	ldr	r3, [r7, #4]
 80028e8:	6a1b      	ldr	r3, [r3, #32]
 80028ea:	496d      	ldr	r1, [pc, #436]	@ (8002aa0 <HAL_RCC_OscConfig+0x270>)
 80028ec:	4313      	orrs	r3, r2
 80028ee:	600b      	str	r3, [r1, #0]
 80028f0:	4b6b      	ldr	r3, [pc, #428]	@ (8002aa0 <HAL_RCC_OscConfig+0x270>)
 80028f2:	685b      	ldr	r3, [r3, #4]
 80028f4:	f423 427f 	bic.w	r2, r3, #65280	@ 0xff00
 80028f8:	687b      	ldr	r3, [r7, #4]
 80028fa:	69db      	ldr	r3, [r3, #28]
 80028fc:	021b      	lsls	r3, r3, #8
 80028fe:	4968      	ldr	r1, [pc, #416]	@ (8002aa0 <HAL_RCC_OscConfig+0x270>)
 8002900:	4313      	orrs	r3, r2
 8002902:	604b      	str	r3, [r1, #4]
 8002904:	e025      	b.n	8002952 <HAL_RCC_OscConfig+0x122>
 8002906:	4b66      	ldr	r3, [pc, #408]	@ (8002aa0 <HAL_RCC_OscConfig+0x270>)
 8002908:	681b      	ldr	r3, [r3, #0]
 800290a:	4a65      	ldr	r2, [pc, #404]	@ (8002aa0 <HAL_RCC_OscConfig+0x270>)
 800290c:	f043 0308 	orr.w	r3, r3, #8
 8002910:	6013      	str	r3, [r2, #0]
 8002912:	4b63      	ldr	r3, [pc, #396]	@ (8002aa0 <HAL_RCC_OscConfig+0x270>)
 8002914:	681b      	ldr	r3, [r3, #0]
 8002916:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 800291a:	687b      	ldr	r3, [r7, #4]
 800291c:	6a1b      	ldr	r3, [r3, #32]
 800291e:	4960      	ldr	r1, [pc, #384]	@ (8002aa0 <HAL_RCC_OscConfig+0x270>)
 8002920:	4313      	orrs	r3, r2
 8002922:	600b      	str	r3, [r1, #0]
 8002924:	4b5e      	ldr	r3, [pc, #376]	@ (8002aa0 <HAL_RCC_OscConfig+0x270>)
 8002926:	685b      	ldr	r3, [r3, #4]
 8002928:	f423 427f 	bic.w	r2, r3, #65280	@ 0xff00
 800292c:	687b      	ldr	r3, [r7, #4]
 800292e:	69db      	ldr	r3, [r3, #28]
 8002930:	021b      	lsls	r3, r3, #8
 8002932:	495b      	ldr	r1, [pc, #364]	@ (8002aa0 <HAL_RCC_OscConfig+0x270>)
 8002934:	4313      	orrs	r3, r2
 8002936:	604b      	str	r3, [r1, #4]
 8002938:	69bb      	ldr	r3, [r7, #24]
 800293a:	2b00      	cmp	r3, #0
 800293c:	d109      	bne.n	8002952 <HAL_RCC_OscConfig+0x122>
 800293e:	687b      	ldr	r3, [r7, #4]
 8002940:	6a1b      	ldr	r3, [r3, #32]
 8002942:	4618      	mov	r0, r3
 8002944:	f000 fd52 	bl	80033ec <RCC_SetFlashLatencyFromMSIRange>
 8002948:	4603      	mov	r3, r0
 800294a:	2b00      	cmp	r3, #0
 800294c:	d001      	beq.n	8002952 <HAL_RCC_OscConfig+0x122>
 800294e:	2301      	movs	r3, #1
 8002950:	e380      	b.n	8003054 <HAL_RCC_OscConfig+0x824>
 8002952:	f000 fc87 	bl	8003264 <HAL_RCC_GetSysClockFreq>
 8002956:	4602      	mov	r2, r0
 8002958:	4b51      	ldr	r3, [pc, #324]	@ (8002aa0 <HAL_RCC_OscConfig+0x270>)
 800295a:	689b      	ldr	r3, [r3, #8]
 800295c:	091b      	lsrs	r3, r3, #4
 800295e:	f003 030f 	and.w	r3, r3, #15
 8002962:	4950      	ldr	r1, [pc, #320]	@ (8002aa4 <HAL_RCC_OscConfig+0x274>)
 8002964:	5ccb      	ldrb	r3, [r1, r3]
 8002966:	f003 031f 	and.w	r3, r3, #31
 800296a:	fa22 f303 	lsr.w	r3, r2, r3
 800296e:	4a4e      	ldr	r2, [pc, #312]	@ (8002aa8 <HAL_RCC_OscConfig+0x278>)
 8002970:	6013      	str	r3, [r2, #0]
 8002972:	4b4e      	ldr	r3, [pc, #312]	@ (8002aac <HAL_RCC_OscConfig+0x27c>)
 8002974:	681b      	ldr	r3, [r3, #0]
 8002976:	4618      	mov	r0, r3
 8002978:	f7fe fe00 	bl	800157c <HAL_InitTick>
 800297c:	4603      	mov	r3, r0
 800297e:	73fb      	strb	r3, [r7, #15]
 8002980:	7bfb      	ldrb	r3, [r7, #15]
 8002982:	2b00      	cmp	r3, #0
 8002984:	d052      	beq.n	8002a2c <HAL_RCC_OscConfig+0x1fc>
 8002986:	7bfb      	ldrb	r3, [r7, #15]
 8002988:	e364      	b.n	8003054 <HAL_RCC_OscConfig+0x824>
 800298a:	687b      	ldr	r3, [r7, #4]
 800298c:	699b      	ldr	r3, [r3, #24]
 800298e:	2b00      	cmp	r3, #0
 8002990:	d032      	beq.n	80029f8 <HAL_RCC_OscConfig+0x1c8>
 8002992:	4b43      	ldr	r3, [pc, #268]	@ (8002aa0 <HAL_RCC_OscConfig+0x270>)
 8002994:	681b      	ldr	r3, [r3, #0]
 8002996:	4a42      	ldr	r2, [pc, #264]	@ (8002aa0 <HAL_RCC_OscConfig+0x270>)
 8002998:	f043 0301 	orr.w	r3, r3, #1
 800299c:	6013      	str	r3, [r2, #0]
 800299e:	f7fe fe3d 	bl	800161c <HAL_GetTick>
 80029a2:	6138      	str	r0, [r7, #16]
 80029a4:	e008      	b.n	80029b8 <HAL_RCC_OscConfig+0x188>
 80029a6:	f7fe fe39 	bl	800161c <HAL_GetTick>
 80029aa:	4602      	mov	r2, r0
 80029ac:	693b      	ldr	r3, [r7, #16]
 80029ae:	1ad3      	subs	r3, r2, r3
 80029b0:	2b02      	cmp	r3, #2
 80029b2:	d901      	bls.n	80029b8 <HAL_RCC_OscConfig+0x188>
 80029b4:	2303      	movs	r3, #3
 80029b6:	e34d      	b.n	8003054 <HAL_RCC_OscConfig+0x824>
 80029b8:	4b39      	ldr	r3, [pc, #228]	@ (8002aa0 <HAL_RCC_OscConfig+0x270>)
 80029ba:	681b      	ldr	r3, [r3, #0]
 80029bc:	f003 0302 	and.w	r3, r3, #2
 80029c0:	2b00      	cmp	r3, #0
 80029c2:	d0f0      	beq.n	80029a6 <HAL_RCC_OscConfig+0x176>
 80029c4:	4b36      	ldr	r3, [pc, #216]	@ (8002aa0 <HAL_RCC_OscConfig+0x270>)
 80029c6:	681b      	ldr	r3, [r3, #0]
 80029c8:	4a35      	ldr	r2, [pc, #212]	@ (8002aa0 <HAL_RCC_OscConfig+0x270>)
 80029ca:	f043 0308 	orr.w	r3, r3, #8
 80029ce:	6013      	str	r3, [r2, #0]
 80029d0:	4b33      	ldr	r3, [pc, #204]	@ (8002aa0 <HAL_RCC_OscConfig+0x270>)
 80029d2:	681b      	ldr	r3, [r3, #0]
 80029d4:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 80029d8:	687b      	ldr	r3, [r7, #4]
 80029da:	6a1b      	ldr	r3, [r3, #32]
 80029dc:	4930      	ldr	r1, [pc, #192]	@ (8002aa0 <HAL_RCC_OscConfig+0x270>)
 80029de:	4313      	orrs	r3, r2
 80029e0:	600b      	str	r3, [r1, #0]
 80029e2:	4b2f      	ldr	r3, [pc, #188]	@ (8002aa0 <HAL_RCC_OscConfig+0x270>)
 80029e4:	685b      	ldr	r3, [r3, #4]
 80029e6:	f423 427f 	bic.w	r2, r3, #65280	@ 0xff00
 80029ea:	687b      	ldr	r3, [r7, #4]
 80029ec:	69db      	ldr	r3, [r3, #28]
 80029ee:	021b      	lsls	r3, r3, #8
 80029f0:	492b      	ldr	r1, [pc, #172]	@ (8002aa0 <HAL_RCC_OscConfig+0x270>)
 80029f2:	4313      	orrs	r3, r2
 80029f4:	604b      	str	r3, [r1, #4]
 80029f6:	e01a      	b.n	8002a2e <HAL_RCC_OscConfig+0x1fe>
 80029f8:	4b29      	ldr	r3, [pc, #164]	@ (8002aa0 <HAL_RCC_OscConfig+0x270>)
 80029fa:	681b      	ldr	r3, [r3, #0]
 80029fc:	4a28      	ldr	r2, [pc, #160]	@ (8002aa0 <HAL_RCC_OscConfig+0x270>)
 80029fe:	f023 0301 	bic.w	r3, r3, #1
 8002a02:	6013      	str	r3, [r2, #0]
 8002a04:	f7fe fe0a 	bl	800161c <HAL_GetTick>
 8002a08:	6138      	str	r0, [r7, #16]
 8002a0a:	e008      	b.n	8002a1e <HAL_RCC_OscConfig+0x1ee>
 8002a0c:	f7fe fe06 	bl	800161c <HAL_GetTick>
 8002a10:	4602      	mov	r2, r0
 8002a12:	693b      	ldr	r3, [r7, #16]
 8002a14:	1ad3      	subs	r3, r2, r3
 8002a16:	2b02      	cmp	r3, #2
 8002a18:	d901      	bls.n	8002a1e <HAL_RCC_OscConfig+0x1ee>
 8002a1a:	2303      	movs	r3, #3
 8002a1c:	e31a      	b.n	8003054 <HAL_RCC_OscConfig+0x824>
 8002a1e:	4b20      	ldr	r3, [pc, #128]	@ (8002aa0 <HAL_RCC_OscConfig+0x270>)
 8002a20:	681b      	ldr	r3, [r3, #0]
 8002a22:	f003 0302 	and.w	r3, r3, #2
 8002a26:	2b00      	cmp	r3, #0
 8002a28:	d1f0      	bne.n	8002a0c <HAL_RCC_OscConfig+0x1dc>
 8002a2a:	e000      	b.n	8002a2e <HAL_RCC_OscConfig+0x1fe>
 8002a2c:	bf00      	nop
 8002a2e:	687b      	ldr	r3, [r7, #4]
 8002a30:	681b      	ldr	r3, [r3, #0]
 8002a32:	f003 0301 	and.w	r3, r3, #1
 8002a36:	2b00      	cmp	r3, #0
 8002a38:	d073      	beq.n	8002b22 <HAL_RCC_OscConfig+0x2f2>
 8002a3a:	69bb      	ldr	r3, [r7, #24]
 8002a3c:	2b08      	cmp	r3, #8
 8002a3e:	d005      	beq.n	8002a4c <HAL_RCC_OscConfig+0x21c>
 8002a40:	69bb      	ldr	r3, [r7, #24]
 8002a42:	2b0c      	cmp	r3, #12
 8002a44:	d10e      	bne.n	8002a64 <HAL_RCC_OscConfig+0x234>
 8002a46:	697b      	ldr	r3, [r7, #20]
 8002a48:	2b03      	cmp	r3, #3
 8002a4a:	d10b      	bne.n	8002a64 <HAL_RCC_OscConfig+0x234>
 8002a4c:	4b14      	ldr	r3, [pc, #80]	@ (8002aa0 <HAL_RCC_OscConfig+0x270>)
 8002a4e:	681b      	ldr	r3, [r3, #0]
 8002a50:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002a54:	2b00      	cmp	r3, #0
 8002a56:	d063      	beq.n	8002b20 <HAL_RCC_OscConfig+0x2f0>
 8002a58:	687b      	ldr	r3, [r7, #4]
 8002a5a:	685b      	ldr	r3, [r3, #4]
 8002a5c:	2b00      	cmp	r3, #0
 8002a5e:	d15f      	bne.n	8002b20 <HAL_RCC_OscConfig+0x2f0>
 8002a60:	2301      	movs	r3, #1
 8002a62:	e2f7      	b.n	8003054 <HAL_RCC_OscConfig+0x824>
 8002a64:	687b      	ldr	r3, [r7, #4]
 8002a66:	685b      	ldr	r3, [r3, #4]
 8002a68:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8002a6c:	d106      	bne.n	8002a7c <HAL_RCC_OscConfig+0x24c>
 8002a6e:	4b0c      	ldr	r3, [pc, #48]	@ (8002aa0 <HAL_RCC_OscConfig+0x270>)
 8002a70:	681b      	ldr	r3, [r3, #0]
 8002a72:	4a0b      	ldr	r2, [pc, #44]	@ (8002aa0 <HAL_RCC_OscConfig+0x270>)
 8002a74:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8002a78:	6013      	str	r3, [r2, #0]
 8002a7a:	e025      	b.n	8002ac8 <HAL_RCC_OscConfig+0x298>
 8002a7c:	687b      	ldr	r3, [r7, #4]
 8002a7e:	685b      	ldr	r3, [r3, #4]
 8002a80:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8002a84:	d114      	bne.n	8002ab0 <HAL_RCC_OscConfig+0x280>
 8002a86:	4b06      	ldr	r3, [pc, #24]	@ (8002aa0 <HAL_RCC_OscConfig+0x270>)
 8002a88:	681b      	ldr	r3, [r3, #0]
 8002a8a:	4a05      	ldr	r2, [pc, #20]	@ (8002aa0 <HAL_RCC_OscConfig+0x270>)
 8002a8c:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8002a90:	6013      	str	r3, [r2, #0]
 8002a92:	4b03      	ldr	r3, [pc, #12]	@ (8002aa0 <HAL_RCC_OscConfig+0x270>)
 8002a94:	681b      	ldr	r3, [r3, #0]
 8002a96:	4a02      	ldr	r2, [pc, #8]	@ (8002aa0 <HAL_RCC_OscConfig+0x270>)
 8002a98:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8002a9c:	6013      	str	r3, [r2, #0]
 8002a9e:	e013      	b.n	8002ac8 <HAL_RCC_OscConfig+0x298>
 8002aa0:	40021000 	.word	0x40021000
 8002aa4:	0800588c 	.word	0x0800588c
 8002aa8:	2000000c 	.word	0x2000000c
 8002aac:	20000010 	.word	0x20000010
 8002ab0:	4ba0      	ldr	r3, [pc, #640]	@ (8002d34 <HAL_RCC_OscConfig+0x504>)
 8002ab2:	681b      	ldr	r3, [r3, #0]
 8002ab4:	4a9f      	ldr	r2, [pc, #636]	@ (8002d34 <HAL_RCC_OscConfig+0x504>)
 8002ab6:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8002aba:	6013      	str	r3, [r2, #0]
 8002abc:	4b9d      	ldr	r3, [pc, #628]	@ (8002d34 <HAL_RCC_OscConfig+0x504>)
 8002abe:	681b      	ldr	r3, [r3, #0]
 8002ac0:	4a9c      	ldr	r2, [pc, #624]	@ (8002d34 <HAL_RCC_OscConfig+0x504>)
 8002ac2:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8002ac6:	6013      	str	r3, [r2, #0]
 8002ac8:	687b      	ldr	r3, [r7, #4]
 8002aca:	685b      	ldr	r3, [r3, #4]
 8002acc:	2b00      	cmp	r3, #0
 8002ace:	d013      	beq.n	8002af8 <HAL_RCC_OscConfig+0x2c8>
 8002ad0:	f7fe fda4 	bl	800161c <HAL_GetTick>
 8002ad4:	6138      	str	r0, [r7, #16]
 8002ad6:	e008      	b.n	8002aea <HAL_RCC_OscConfig+0x2ba>
 8002ad8:	f7fe fda0 	bl	800161c <HAL_GetTick>
 8002adc:	4602      	mov	r2, r0
 8002ade:	693b      	ldr	r3, [r7, #16]
 8002ae0:	1ad3      	subs	r3, r2, r3
 8002ae2:	2b64      	cmp	r3, #100	@ 0x64
 8002ae4:	d901      	bls.n	8002aea <HAL_RCC_OscConfig+0x2ba>
 8002ae6:	2303      	movs	r3, #3
 8002ae8:	e2b4      	b.n	8003054 <HAL_RCC_OscConfig+0x824>
 8002aea:	4b92      	ldr	r3, [pc, #584]	@ (8002d34 <HAL_RCC_OscConfig+0x504>)
 8002aec:	681b      	ldr	r3, [r3, #0]
 8002aee:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002af2:	2b00      	cmp	r3, #0
 8002af4:	d0f0      	beq.n	8002ad8 <HAL_RCC_OscConfig+0x2a8>
 8002af6:	e014      	b.n	8002b22 <HAL_RCC_OscConfig+0x2f2>
 8002af8:	f7fe fd90 	bl	800161c <HAL_GetTick>
 8002afc:	6138      	str	r0, [r7, #16]
 8002afe:	e008      	b.n	8002b12 <HAL_RCC_OscConfig+0x2e2>
 8002b00:	f7fe fd8c 	bl	800161c <HAL_GetTick>
 8002b04:	4602      	mov	r2, r0
 8002b06:	693b      	ldr	r3, [r7, #16]
 8002b08:	1ad3      	subs	r3, r2, r3
 8002b0a:	2b64      	cmp	r3, #100	@ 0x64
 8002b0c:	d901      	bls.n	8002b12 <HAL_RCC_OscConfig+0x2e2>
 8002b0e:	2303      	movs	r3, #3
 8002b10:	e2a0      	b.n	8003054 <HAL_RCC_OscConfig+0x824>
 8002b12:	4b88      	ldr	r3, [pc, #544]	@ (8002d34 <HAL_RCC_OscConfig+0x504>)
 8002b14:	681b      	ldr	r3, [r3, #0]
 8002b16:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002b1a:	2b00      	cmp	r3, #0
 8002b1c:	d1f0      	bne.n	8002b00 <HAL_RCC_OscConfig+0x2d0>
 8002b1e:	e000      	b.n	8002b22 <HAL_RCC_OscConfig+0x2f2>
 8002b20:	bf00      	nop
 8002b22:	687b      	ldr	r3, [r7, #4]
 8002b24:	681b      	ldr	r3, [r3, #0]
 8002b26:	f003 0302 	and.w	r3, r3, #2
 8002b2a:	2b00      	cmp	r3, #0
 8002b2c:	d060      	beq.n	8002bf0 <HAL_RCC_OscConfig+0x3c0>
 8002b2e:	69bb      	ldr	r3, [r7, #24]
 8002b30:	2b04      	cmp	r3, #4
 8002b32:	d005      	beq.n	8002b40 <HAL_RCC_OscConfig+0x310>
 8002b34:	69bb      	ldr	r3, [r7, #24]
 8002b36:	2b0c      	cmp	r3, #12
 8002b38:	d119      	bne.n	8002b6e <HAL_RCC_OscConfig+0x33e>
 8002b3a:	697b      	ldr	r3, [r7, #20]
 8002b3c:	2b02      	cmp	r3, #2
 8002b3e:	d116      	bne.n	8002b6e <HAL_RCC_OscConfig+0x33e>
 8002b40:	4b7c      	ldr	r3, [pc, #496]	@ (8002d34 <HAL_RCC_OscConfig+0x504>)
 8002b42:	681b      	ldr	r3, [r3, #0]
 8002b44:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8002b48:	2b00      	cmp	r3, #0
 8002b4a:	d005      	beq.n	8002b58 <HAL_RCC_OscConfig+0x328>
 8002b4c:	687b      	ldr	r3, [r7, #4]
 8002b4e:	68db      	ldr	r3, [r3, #12]
 8002b50:	2b00      	cmp	r3, #0
 8002b52:	d101      	bne.n	8002b58 <HAL_RCC_OscConfig+0x328>
 8002b54:	2301      	movs	r3, #1
 8002b56:	e27d      	b.n	8003054 <HAL_RCC_OscConfig+0x824>
 8002b58:	4b76      	ldr	r3, [pc, #472]	@ (8002d34 <HAL_RCC_OscConfig+0x504>)
 8002b5a:	685b      	ldr	r3, [r3, #4]
 8002b5c:	f023 42fe 	bic.w	r2, r3, #2130706432	@ 0x7f000000
 8002b60:	687b      	ldr	r3, [r7, #4]
 8002b62:	691b      	ldr	r3, [r3, #16]
 8002b64:	061b      	lsls	r3, r3, #24
 8002b66:	4973      	ldr	r1, [pc, #460]	@ (8002d34 <HAL_RCC_OscConfig+0x504>)
 8002b68:	4313      	orrs	r3, r2
 8002b6a:	604b      	str	r3, [r1, #4]
 8002b6c:	e040      	b.n	8002bf0 <HAL_RCC_OscConfig+0x3c0>
 8002b6e:	687b      	ldr	r3, [r7, #4]
 8002b70:	68db      	ldr	r3, [r3, #12]
 8002b72:	2b00      	cmp	r3, #0
 8002b74:	d023      	beq.n	8002bbe <HAL_RCC_OscConfig+0x38e>
 8002b76:	4b6f      	ldr	r3, [pc, #444]	@ (8002d34 <HAL_RCC_OscConfig+0x504>)
 8002b78:	681b      	ldr	r3, [r3, #0]
 8002b7a:	4a6e      	ldr	r2, [pc, #440]	@ (8002d34 <HAL_RCC_OscConfig+0x504>)
 8002b7c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8002b80:	6013      	str	r3, [r2, #0]
 8002b82:	f7fe fd4b 	bl	800161c <HAL_GetTick>
 8002b86:	6138      	str	r0, [r7, #16]
 8002b88:	e008      	b.n	8002b9c <HAL_RCC_OscConfig+0x36c>
 8002b8a:	f7fe fd47 	bl	800161c <HAL_GetTick>
 8002b8e:	4602      	mov	r2, r0
 8002b90:	693b      	ldr	r3, [r7, #16]
 8002b92:	1ad3      	subs	r3, r2, r3
 8002b94:	2b02      	cmp	r3, #2
 8002b96:	d901      	bls.n	8002b9c <HAL_RCC_OscConfig+0x36c>
 8002b98:	2303      	movs	r3, #3
 8002b9a:	e25b      	b.n	8003054 <HAL_RCC_OscConfig+0x824>
 8002b9c:	4b65      	ldr	r3, [pc, #404]	@ (8002d34 <HAL_RCC_OscConfig+0x504>)
 8002b9e:	681b      	ldr	r3, [r3, #0]
 8002ba0:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8002ba4:	2b00      	cmp	r3, #0
 8002ba6:	d0f0      	beq.n	8002b8a <HAL_RCC_OscConfig+0x35a>
 8002ba8:	4b62      	ldr	r3, [pc, #392]	@ (8002d34 <HAL_RCC_OscConfig+0x504>)
 8002baa:	685b      	ldr	r3, [r3, #4]
 8002bac:	f023 42fe 	bic.w	r2, r3, #2130706432	@ 0x7f000000
 8002bb0:	687b      	ldr	r3, [r7, #4]
 8002bb2:	691b      	ldr	r3, [r3, #16]
 8002bb4:	061b      	lsls	r3, r3, #24
 8002bb6:	495f      	ldr	r1, [pc, #380]	@ (8002d34 <HAL_RCC_OscConfig+0x504>)
 8002bb8:	4313      	orrs	r3, r2
 8002bba:	604b      	str	r3, [r1, #4]
 8002bbc:	e018      	b.n	8002bf0 <HAL_RCC_OscConfig+0x3c0>
 8002bbe:	4b5d      	ldr	r3, [pc, #372]	@ (8002d34 <HAL_RCC_OscConfig+0x504>)
 8002bc0:	681b      	ldr	r3, [r3, #0]
 8002bc2:	4a5c      	ldr	r2, [pc, #368]	@ (8002d34 <HAL_RCC_OscConfig+0x504>)
 8002bc4:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8002bc8:	6013      	str	r3, [r2, #0]
 8002bca:	f7fe fd27 	bl	800161c <HAL_GetTick>
 8002bce:	6138      	str	r0, [r7, #16]
 8002bd0:	e008      	b.n	8002be4 <HAL_RCC_OscConfig+0x3b4>
 8002bd2:	f7fe fd23 	bl	800161c <HAL_GetTick>
 8002bd6:	4602      	mov	r2, r0
 8002bd8:	693b      	ldr	r3, [r7, #16]
 8002bda:	1ad3      	subs	r3, r2, r3
 8002bdc:	2b02      	cmp	r3, #2
 8002bde:	d901      	bls.n	8002be4 <HAL_RCC_OscConfig+0x3b4>
 8002be0:	2303      	movs	r3, #3
 8002be2:	e237      	b.n	8003054 <HAL_RCC_OscConfig+0x824>
 8002be4:	4b53      	ldr	r3, [pc, #332]	@ (8002d34 <HAL_RCC_OscConfig+0x504>)
 8002be6:	681b      	ldr	r3, [r3, #0]
 8002be8:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8002bec:	2b00      	cmp	r3, #0
 8002bee:	d1f0      	bne.n	8002bd2 <HAL_RCC_OscConfig+0x3a2>
 8002bf0:	687b      	ldr	r3, [r7, #4]
 8002bf2:	681b      	ldr	r3, [r3, #0]
 8002bf4:	f003 0308 	and.w	r3, r3, #8
 8002bf8:	2b00      	cmp	r3, #0
 8002bfa:	d03c      	beq.n	8002c76 <HAL_RCC_OscConfig+0x446>
 8002bfc:	687b      	ldr	r3, [r7, #4]
 8002bfe:	695b      	ldr	r3, [r3, #20]
 8002c00:	2b00      	cmp	r3, #0
 8002c02:	d01c      	beq.n	8002c3e <HAL_RCC_OscConfig+0x40e>
 8002c04:	4b4b      	ldr	r3, [pc, #300]	@ (8002d34 <HAL_RCC_OscConfig+0x504>)
 8002c06:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8002c0a:	4a4a      	ldr	r2, [pc, #296]	@ (8002d34 <HAL_RCC_OscConfig+0x504>)
 8002c0c:	f043 0301 	orr.w	r3, r3, #1
 8002c10:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
 8002c14:	f7fe fd02 	bl	800161c <HAL_GetTick>
 8002c18:	6138      	str	r0, [r7, #16]
 8002c1a:	e008      	b.n	8002c2e <HAL_RCC_OscConfig+0x3fe>
 8002c1c:	f7fe fcfe 	bl	800161c <HAL_GetTick>
 8002c20:	4602      	mov	r2, r0
 8002c22:	693b      	ldr	r3, [r7, #16]
 8002c24:	1ad3      	subs	r3, r2, r3
 8002c26:	2b02      	cmp	r3, #2
 8002c28:	d901      	bls.n	8002c2e <HAL_RCC_OscConfig+0x3fe>
 8002c2a:	2303      	movs	r3, #3
 8002c2c:	e212      	b.n	8003054 <HAL_RCC_OscConfig+0x824>
 8002c2e:	4b41      	ldr	r3, [pc, #260]	@ (8002d34 <HAL_RCC_OscConfig+0x504>)
 8002c30:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8002c34:	f003 0302 	and.w	r3, r3, #2
 8002c38:	2b00      	cmp	r3, #0
 8002c3a:	d0ef      	beq.n	8002c1c <HAL_RCC_OscConfig+0x3ec>
 8002c3c:	e01b      	b.n	8002c76 <HAL_RCC_OscConfig+0x446>
 8002c3e:	4b3d      	ldr	r3, [pc, #244]	@ (8002d34 <HAL_RCC_OscConfig+0x504>)
 8002c40:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8002c44:	4a3b      	ldr	r2, [pc, #236]	@ (8002d34 <HAL_RCC_OscConfig+0x504>)
 8002c46:	f023 0301 	bic.w	r3, r3, #1
 8002c4a:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
 8002c4e:	f7fe fce5 	bl	800161c <HAL_GetTick>
 8002c52:	6138      	str	r0, [r7, #16]
 8002c54:	e008      	b.n	8002c68 <HAL_RCC_OscConfig+0x438>
 8002c56:	f7fe fce1 	bl	800161c <HAL_GetTick>
 8002c5a:	4602      	mov	r2, r0
 8002c5c:	693b      	ldr	r3, [r7, #16]
 8002c5e:	1ad3      	subs	r3, r2, r3
 8002c60:	2b02      	cmp	r3, #2
 8002c62:	d901      	bls.n	8002c68 <HAL_RCC_OscConfig+0x438>
 8002c64:	2303      	movs	r3, #3
 8002c66:	e1f5      	b.n	8003054 <HAL_RCC_OscConfig+0x824>
 8002c68:	4b32      	ldr	r3, [pc, #200]	@ (8002d34 <HAL_RCC_OscConfig+0x504>)
 8002c6a:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8002c6e:	f003 0302 	and.w	r3, r3, #2
 8002c72:	2b00      	cmp	r3, #0
 8002c74:	d1ef      	bne.n	8002c56 <HAL_RCC_OscConfig+0x426>
 8002c76:	687b      	ldr	r3, [r7, #4]
 8002c78:	681b      	ldr	r3, [r3, #0]
 8002c7a:	f003 0304 	and.w	r3, r3, #4
 8002c7e:	2b00      	cmp	r3, #0
 8002c80:	f000 80a6 	beq.w	8002dd0 <HAL_RCC_OscConfig+0x5a0>
 8002c84:	2300      	movs	r3, #0
 8002c86:	77fb      	strb	r3, [r7, #31]
 8002c88:	4b2a      	ldr	r3, [pc, #168]	@ (8002d34 <HAL_RCC_OscConfig+0x504>)
 8002c8a:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002c8c:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002c90:	2b00      	cmp	r3, #0
 8002c92:	d10d      	bne.n	8002cb0 <HAL_RCC_OscConfig+0x480>
 8002c94:	4b27      	ldr	r3, [pc, #156]	@ (8002d34 <HAL_RCC_OscConfig+0x504>)
 8002c96:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002c98:	4a26      	ldr	r2, [pc, #152]	@ (8002d34 <HAL_RCC_OscConfig+0x504>)
 8002c9a:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8002c9e:	6593      	str	r3, [r2, #88]	@ 0x58
 8002ca0:	4b24      	ldr	r3, [pc, #144]	@ (8002d34 <HAL_RCC_OscConfig+0x504>)
 8002ca2:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002ca4:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002ca8:	60bb      	str	r3, [r7, #8]
 8002caa:	68bb      	ldr	r3, [r7, #8]
 8002cac:	2301      	movs	r3, #1
 8002cae:	77fb      	strb	r3, [r7, #31]
 8002cb0:	4b21      	ldr	r3, [pc, #132]	@ (8002d38 <HAL_RCC_OscConfig+0x508>)
 8002cb2:	681b      	ldr	r3, [r3, #0]
 8002cb4:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002cb8:	2b00      	cmp	r3, #0
 8002cba:	d118      	bne.n	8002cee <HAL_RCC_OscConfig+0x4be>
 8002cbc:	4b1e      	ldr	r3, [pc, #120]	@ (8002d38 <HAL_RCC_OscConfig+0x508>)
 8002cbe:	681b      	ldr	r3, [r3, #0]
 8002cc0:	4a1d      	ldr	r2, [pc, #116]	@ (8002d38 <HAL_RCC_OscConfig+0x508>)
 8002cc2:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8002cc6:	6013      	str	r3, [r2, #0]
 8002cc8:	f7fe fca8 	bl	800161c <HAL_GetTick>
 8002ccc:	6138      	str	r0, [r7, #16]
 8002cce:	e008      	b.n	8002ce2 <HAL_RCC_OscConfig+0x4b2>
 8002cd0:	f7fe fca4 	bl	800161c <HAL_GetTick>
 8002cd4:	4602      	mov	r2, r0
 8002cd6:	693b      	ldr	r3, [r7, #16]
 8002cd8:	1ad3      	subs	r3, r2, r3
 8002cda:	2b02      	cmp	r3, #2
 8002cdc:	d901      	bls.n	8002ce2 <HAL_RCC_OscConfig+0x4b2>
 8002cde:	2303      	movs	r3, #3
 8002ce0:	e1b8      	b.n	8003054 <HAL_RCC_OscConfig+0x824>
 8002ce2:	4b15      	ldr	r3, [pc, #84]	@ (8002d38 <HAL_RCC_OscConfig+0x508>)
 8002ce4:	681b      	ldr	r3, [r3, #0]
 8002ce6:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002cea:	2b00      	cmp	r3, #0
 8002cec:	d0f0      	beq.n	8002cd0 <HAL_RCC_OscConfig+0x4a0>
 8002cee:	687b      	ldr	r3, [r7, #4]
 8002cf0:	689b      	ldr	r3, [r3, #8]
 8002cf2:	2b01      	cmp	r3, #1
 8002cf4:	d108      	bne.n	8002d08 <HAL_RCC_OscConfig+0x4d8>
 8002cf6:	4b0f      	ldr	r3, [pc, #60]	@ (8002d34 <HAL_RCC_OscConfig+0x504>)
 8002cf8:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8002cfc:	4a0d      	ldr	r2, [pc, #52]	@ (8002d34 <HAL_RCC_OscConfig+0x504>)
 8002cfe:	f043 0301 	orr.w	r3, r3, #1
 8002d02:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8002d06:	e029      	b.n	8002d5c <HAL_RCC_OscConfig+0x52c>
 8002d08:	687b      	ldr	r3, [r7, #4]
 8002d0a:	689b      	ldr	r3, [r3, #8]
 8002d0c:	2b05      	cmp	r3, #5
 8002d0e:	d115      	bne.n	8002d3c <HAL_RCC_OscConfig+0x50c>
 8002d10:	4b08      	ldr	r3, [pc, #32]	@ (8002d34 <HAL_RCC_OscConfig+0x504>)
 8002d12:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8002d16:	4a07      	ldr	r2, [pc, #28]	@ (8002d34 <HAL_RCC_OscConfig+0x504>)
 8002d18:	f043 0304 	orr.w	r3, r3, #4
 8002d1c:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8002d20:	4b04      	ldr	r3, [pc, #16]	@ (8002d34 <HAL_RCC_OscConfig+0x504>)
 8002d22:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8002d26:	4a03      	ldr	r2, [pc, #12]	@ (8002d34 <HAL_RCC_OscConfig+0x504>)
 8002d28:	f043 0301 	orr.w	r3, r3, #1
 8002d2c:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8002d30:	e014      	b.n	8002d5c <HAL_RCC_OscConfig+0x52c>
 8002d32:	bf00      	nop
 8002d34:	40021000 	.word	0x40021000
 8002d38:	40007000 	.word	0x40007000
 8002d3c:	4b9d      	ldr	r3, [pc, #628]	@ (8002fb4 <HAL_RCC_OscConfig+0x784>)
 8002d3e:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8002d42:	4a9c      	ldr	r2, [pc, #624]	@ (8002fb4 <HAL_RCC_OscConfig+0x784>)
 8002d44:	f023 0301 	bic.w	r3, r3, #1
 8002d48:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8002d4c:	4b99      	ldr	r3, [pc, #612]	@ (8002fb4 <HAL_RCC_OscConfig+0x784>)
 8002d4e:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8002d52:	4a98      	ldr	r2, [pc, #608]	@ (8002fb4 <HAL_RCC_OscConfig+0x784>)
 8002d54:	f023 0304 	bic.w	r3, r3, #4
 8002d58:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8002d5c:	687b      	ldr	r3, [r7, #4]
 8002d5e:	689b      	ldr	r3, [r3, #8]
 8002d60:	2b00      	cmp	r3, #0
 8002d62:	d016      	beq.n	8002d92 <HAL_RCC_OscConfig+0x562>
 8002d64:	f7fe fc5a 	bl	800161c <HAL_GetTick>
 8002d68:	6138      	str	r0, [r7, #16]
 8002d6a:	e00a      	b.n	8002d82 <HAL_RCC_OscConfig+0x552>
 8002d6c:	f7fe fc56 	bl	800161c <HAL_GetTick>
 8002d70:	4602      	mov	r2, r0
 8002d72:	693b      	ldr	r3, [r7, #16]
 8002d74:	1ad3      	subs	r3, r2, r3
 8002d76:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002d7a:	4293      	cmp	r3, r2
 8002d7c:	d901      	bls.n	8002d82 <HAL_RCC_OscConfig+0x552>
 8002d7e:	2303      	movs	r3, #3
 8002d80:	e168      	b.n	8003054 <HAL_RCC_OscConfig+0x824>
 8002d82:	4b8c      	ldr	r3, [pc, #560]	@ (8002fb4 <HAL_RCC_OscConfig+0x784>)
 8002d84:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8002d88:	f003 0302 	and.w	r3, r3, #2
 8002d8c:	2b00      	cmp	r3, #0
 8002d8e:	d0ed      	beq.n	8002d6c <HAL_RCC_OscConfig+0x53c>
 8002d90:	e015      	b.n	8002dbe <HAL_RCC_OscConfig+0x58e>
 8002d92:	f7fe fc43 	bl	800161c <HAL_GetTick>
 8002d96:	6138      	str	r0, [r7, #16]
 8002d98:	e00a      	b.n	8002db0 <HAL_RCC_OscConfig+0x580>
 8002d9a:	f7fe fc3f 	bl	800161c <HAL_GetTick>
 8002d9e:	4602      	mov	r2, r0
 8002da0:	693b      	ldr	r3, [r7, #16]
 8002da2:	1ad3      	subs	r3, r2, r3
 8002da4:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002da8:	4293      	cmp	r3, r2
 8002daa:	d901      	bls.n	8002db0 <HAL_RCC_OscConfig+0x580>
 8002dac:	2303      	movs	r3, #3
 8002dae:	e151      	b.n	8003054 <HAL_RCC_OscConfig+0x824>
 8002db0:	4b80      	ldr	r3, [pc, #512]	@ (8002fb4 <HAL_RCC_OscConfig+0x784>)
 8002db2:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8002db6:	f003 0302 	and.w	r3, r3, #2
 8002dba:	2b00      	cmp	r3, #0
 8002dbc:	d1ed      	bne.n	8002d9a <HAL_RCC_OscConfig+0x56a>
 8002dbe:	7ffb      	ldrb	r3, [r7, #31]
 8002dc0:	2b01      	cmp	r3, #1
 8002dc2:	d105      	bne.n	8002dd0 <HAL_RCC_OscConfig+0x5a0>
 8002dc4:	4b7b      	ldr	r3, [pc, #492]	@ (8002fb4 <HAL_RCC_OscConfig+0x784>)
 8002dc6:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002dc8:	4a7a      	ldr	r2, [pc, #488]	@ (8002fb4 <HAL_RCC_OscConfig+0x784>)
 8002dca:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8002dce:	6593      	str	r3, [r2, #88]	@ 0x58
 8002dd0:	687b      	ldr	r3, [r7, #4]
 8002dd2:	681b      	ldr	r3, [r3, #0]
 8002dd4:	f003 0320 	and.w	r3, r3, #32
 8002dd8:	2b00      	cmp	r3, #0
 8002dda:	d03c      	beq.n	8002e56 <HAL_RCC_OscConfig+0x626>
 8002ddc:	687b      	ldr	r3, [r7, #4]
 8002dde:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002de0:	2b00      	cmp	r3, #0
 8002de2:	d01c      	beq.n	8002e1e <HAL_RCC_OscConfig+0x5ee>
 8002de4:	4b73      	ldr	r3, [pc, #460]	@ (8002fb4 <HAL_RCC_OscConfig+0x784>)
 8002de6:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8002dea:	4a72      	ldr	r2, [pc, #456]	@ (8002fb4 <HAL_RCC_OscConfig+0x784>)
 8002dec:	f043 0301 	orr.w	r3, r3, #1
 8002df0:	f8c2 3098 	str.w	r3, [r2, #152]	@ 0x98
 8002df4:	f7fe fc12 	bl	800161c <HAL_GetTick>
 8002df8:	6138      	str	r0, [r7, #16]
 8002dfa:	e008      	b.n	8002e0e <HAL_RCC_OscConfig+0x5de>
 8002dfc:	f7fe fc0e 	bl	800161c <HAL_GetTick>
 8002e00:	4602      	mov	r2, r0
 8002e02:	693b      	ldr	r3, [r7, #16]
 8002e04:	1ad3      	subs	r3, r2, r3
 8002e06:	2b02      	cmp	r3, #2
 8002e08:	d901      	bls.n	8002e0e <HAL_RCC_OscConfig+0x5de>
 8002e0a:	2303      	movs	r3, #3
 8002e0c:	e122      	b.n	8003054 <HAL_RCC_OscConfig+0x824>
 8002e0e:	4b69      	ldr	r3, [pc, #420]	@ (8002fb4 <HAL_RCC_OscConfig+0x784>)
 8002e10:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8002e14:	f003 0302 	and.w	r3, r3, #2
 8002e18:	2b00      	cmp	r3, #0
 8002e1a:	d0ef      	beq.n	8002dfc <HAL_RCC_OscConfig+0x5cc>
 8002e1c:	e01b      	b.n	8002e56 <HAL_RCC_OscConfig+0x626>
 8002e1e:	4b65      	ldr	r3, [pc, #404]	@ (8002fb4 <HAL_RCC_OscConfig+0x784>)
 8002e20:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8002e24:	4a63      	ldr	r2, [pc, #396]	@ (8002fb4 <HAL_RCC_OscConfig+0x784>)
 8002e26:	f023 0301 	bic.w	r3, r3, #1
 8002e2a:	f8c2 3098 	str.w	r3, [r2, #152]	@ 0x98
 8002e2e:	f7fe fbf5 	bl	800161c <HAL_GetTick>
 8002e32:	6138      	str	r0, [r7, #16]
 8002e34:	e008      	b.n	8002e48 <HAL_RCC_OscConfig+0x618>
 8002e36:	f7fe fbf1 	bl	800161c <HAL_GetTick>
 8002e3a:	4602      	mov	r2, r0
 8002e3c:	693b      	ldr	r3, [r7, #16]
 8002e3e:	1ad3      	subs	r3, r2, r3
 8002e40:	2b02      	cmp	r3, #2
 8002e42:	d901      	bls.n	8002e48 <HAL_RCC_OscConfig+0x618>
 8002e44:	2303      	movs	r3, #3
 8002e46:	e105      	b.n	8003054 <HAL_RCC_OscConfig+0x824>
 8002e48:	4b5a      	ldr	r3, [pc, #360]	@ (8002fb4 <HAL_RCC_OscConfig+0x784>)
 8002e4a:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8002e4e:	f003 0302 	and.w	r3, r3, #2
 8002e52:	2b00      	cmp	r3, #0
 8002e54:	d1ef      	bne.n	8002e36 <HAL_RCC_OscConfig+0x606>
 8002e56:	687b      	ldr	r3, [r7, #4]
 8002e58:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002e5a:	2b00      	cmp	r3, #0
 8002e5c:	f000 80f9 	beq.w	8003052 <HAL_RCC_OscConfig+0x822>
 8002e60:	687b      	ldr	r3, [r7, #4]
 8002e62:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002e64:	2b02      	cmp	r3, #2
 8002e66:	f040 80cf 	bne.w	8003008 <HAL_RCC_OscConfig+0x7d8>
 8002e6a:	4b52      	ldr	r3, [pc, #328]	@ (8002fb4 <HAL_RCC_OscConfig+0x784>)
 8002e6c:	68db      	ldr	r3, [r3, #12]
 8002e6e:	617b      	str	r3, [r7, #20]
 8002e70:	697b      	ldr	r3, [r7, #20]
 8002e72:	f003 0203 	and.w	r2, r3, #3
 8002e76:	687b      	ldr	r3, [r7, #4]
 8002e78:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002e7a:	429a      	cmp	r2, r3
 8002e7c:	d12c      	bne.n	8002ed8 <HAL_RCC_OscConfig+0x6a8>
 8002e7e:	697b      	ldr	r3, [r7, #20]
 8002e80:	f003 0270 	and.w	r2, r3, #112	@ 0x70
 8002e84:	687b      	ldr	r3, [r7, #4]
 8002e86:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002e88:	3b01      	subs	r3, #1
 8002e8a:	011b      	lsls	r3, r3, #4
 8002e8c:	429a      	cmp	r2, r3
 8002e8e:	d123      	bne.n	8002ed8 <HAL_RCC_OscConfig+0x6a8>
 8002e90:	697b      	ldr	r3, [r7, #20]
 8002e92:	f403 42fe 	and.w	r2, r3, #32512	@ 0x7f00
 8002e96:	687b      	ldr	r3, [r7, #4]
 8002e98:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8002e9a:	021b      	lsls	r3, r3, #8
 8002e9c:	429a      	cmp	r2, r3
 8002e9e:	d11b      	bne.n	8002ed8 <HAL_RCC_OscConfig+0x6a8>
 8002ea0:	697b      	ldr	r3, [r7, #20]
 8002ea2:	f003 4278 	and.w	r2, r3, #4160749568	@ 0xf8000000
 8002ea6:	687b      	ldr	r3, [r7, #4]
 8002ea8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002eaa:	06db      	lsls	r3, r3, #27
 8002eac:	429a      	cmp	r2, r3
 8002eae:	d113      	bne.n	8002ed8 <HAL_RCC_OscConfig+0x6a8>
 8002eb0:	697b      	ldr	r3, [r7, #20]
 8002eb2:	f403 02c0 	and.w	r2, r3, #6291456	@ 0x600000
 8002eb6:	687b      	ldr	r3, [r7, #4]
 8002eb8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002eba:	085b      	lsrs	r3, r3, #1
 8002ebc:	3b01      	subs	r3, #1
 8002ebe:	055b      	lsls	r3, r3, #21
 8002ec0:	429a      	cmp	r2, r3
 8002ec2:	d109      	bne.n	8002ed8 <HAL_RCC_OscConfig+0x6a8>
 8002ec4:	697b      	ldr	r3, [r7, #20]
 8002ec6:	f003 62c0 	and.w	r2, r3, #100663296	@ 0x6000000
 8002eca:	687b      	ldr	r3, [r7, #4]
 8002ecc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002ece:	085b      	lsrs	r3, r3, #1
 8002ed0:	3b01      	subs	r3, #1
 8002ed2:	065b      	lsls	r3, r3, #25
 8002ed4:	429a      	cmp	r2, r3
 8002ed6:	d071      	beq.n	8002fbc <HAL_RCC_OscConfig+0x78c>
 8002ed8:	69bb      	ldr	r3, [r7, #24]
 8002eda:	2b0c      	cmp	r3, #12
 8002edc:	d068      	beq.n	8002fb0 <HAL_RCC_OscConfig+0x780>
 8002ede:	4b35      	ldr	r3, [pc, #212]	@ (8002fb4 <HAL_RCC_OscConfig+0x784>)
 8002ee0:	681b      	ldr	r3, [r3, #0]
 8002ee2:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 8002ee6:	2b00      	cmp	r3, #0
 8002ee8:	d105      	bne.n	8002ef6 <HAL_RCC_OscConfig+0x6c6>
 8002eea:	4b32      	ldr	r3, [pc, #200]	@ (8002fb4 <HAL_RCC_OscConfig+0x784>)
 8002eec:	681b      	ldr	r3, [r3, #0]
 8002eee:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002ef2:	2b00      	cmp	r3, #0
 8002ef4:	d001      	beq.n	8002efa <HAL_RCC_OscConfig+0x6ca>
 8002ef6:	2301      	movs	r3, #1
 8002ef8:	e0ac      	b.n	8003054 <HAL_RCC_OscConfig+0x824>
 8002efa:	4b2e      	ldr	r3, [pc, #184]	@ (8002fb4 <HAL_RCC_OscConfig+0x784>)
 8002efc:	681b      	ldr	r3, [r3, #0]
 8002efe:	4a2d      	ldr	r2, [pc, #180]	@ (8002fb4 <HAL_RCC_OscConfig+0x784>)
 8002f00:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8002f04:	6013      	str	r3, [r2, #0]
 8002f06:	f7fe fb89 	bl	800161c <HAL_GetTick>
 8002f0a:	6138      	str	r0, [r7, #16]
 8002f0c:	e008      	b.n	8002f20 <HAL_RCC_OscConfig+0x6f0>
 8002f0e:	f7fe fb85 	bl	800161c <HAL_GetTick>
 8002f12:	4602      	mov	r2, r0
 8002f14:	693b      	ldr	r3, [r7, #16]
 8002f16:	1ad3      	subs	r3, r2, r3
 8002f18:	2b02      	cmp	r3, #2
 8002f1a:	d901      	bls.n	8002f20 <HAL_RCC_OscConfig+0x6f0>
 8002f1c:	2303      	movs	r3, #3
 8002f1e:	e099      	b.n	8003054 <HAL_RCC_OscConfig+0x824>
 8002f20:	4b24      	ldr	r3, [pc, #144]	@ (8002fb4 <HAL_RCC_OscConfig+0x784>)
 8002f22:	681b      	ldr	r3, [r3, #0]
 8002f24:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002f28:	2b00      	cmp	r3, #0
 8002f2a:	d1f0      	bne.n	8002f0e <HAL_RCC_OscConfig+0x6de>
 8002f2c:	4b21      	ldr	r3, [pc, #132]	@ (8002fb4 <HAL_RCC_OscConfig+0x784>)
 8002f2e:	68da      	ldr	r2, [r3, #12]
 8002f30:	4b21      	ldr	r3, [pc, #132]	@ (8002fb8 <HAL_RCC_OscConfig+0x788>)
 8002f32:	4013      	ands	r3, r2
 8002f34:	687a      	ldr	r2, [r7, #4]
 8002f36:	6ad1      	ldr	r1, [r2, #44]	@ 0x2c
 8002f38:	687a      	ldr	r2, [r7, #4]
 8002f3a:	6b12      	ldr	r2, [r2, #48]	@ 0x30
 8002f3c:	3a01      	subs	r2, #1
 8002f3e:	0112      	lsls	r2, r2, #4
 8002f40:	4311      	orrs	r1, r2
 8002f42:	687a      	ldr	r2, [r7, #4]
 8002f44:	6b52      	ldr	r2, [r2, #52]	@ 0x34
 8002f46:	0212      	lsls	r2, r2, #8
 8002f48:	4311      	orrs	r1, r2
 8002f4a:	687a      	ldr	r2, [r7, #4]
 8002f4c:	6bd2      	ldr	r2, [r2, #60]	@ 0x3c
 8002f4e:	0852      	lsrs	r2, r2, #1
 8002f50:	3a01      	subs	r2, #1
 8002f52:	0552      	lsls	r2, r2, #21
 8002f54:	4311      	orrs	r1, r2
 8002f56:	687a      	ldr	r2, [r7, #4]
 8002f58:	6c12      	ldr	r2, [r2, #64]	@ 0x40
 8002f5a:	0852      	lsrs	r2, r2, #1
 8002f5c:	3a01      	subs	r2, #1
 8002f5e:	0652      	lsls	r2, r2, #25
 8002f60:	4311      	orrs	r1, r2
 8002f62:	687a      	ldr	r2, [r7, #4]
 8002f64:	6b92      	ldr	r2, [r2, #56]	@ 0x38
 8002f66:	06d2      	lsls	r2, r2, #27
 8002f68:	430a      	orrs	r2, r1
 8002f6a:	4912      	ldr	r1, [pc, #72]	@ (8002fb4 <HAL_RCC_OscConfig+0x784>)
 8002f6c:	4313      	orrs	r3, r2
 8002f6e:	60cb      	str	r3, [r1, #12]
 8002f70:	4b10      	ldr	r3, [pc, #64]	@ (8002fb4 <HAL_RCC_OscConfig+0x784>)
 8002f72:	681b      	ldr	r3, [r3, #0]
 8002f74:	4a0f      	ldr	r2, [pc, #60]	@ (8002fb4 <HAL_RCC_OscConfig+0x784>)
 8002f76:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8002f7a:	6013      	str	r3, [r2, #0]
 8002f7c:	4b0d      	ldr	r3, [pc, #52]	@ (8002fb4 <HAL_RCC_OscConfig+0x784>)
 8002f7e:	68db      	ldr	r3, [r3, #12]
 8002f80:	4a0c      	ldr	r2, [pc, #48]	@ (8002fb4 <HAL_RCC_OscConfig+0x784>)
 8002f82:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8002f86:	60d3      	str	r3, [r2, #12]
 8002f88:	f7fe fb48 	bl	800161c <HAL_GetTick>
 8002f8c:	6138      	str	r0, [r7, #16]
 8002f8e:	e008      	b.n	8002fa2 <HAL_RCC_OscConfig+0x772>
 8002f90:	f7fe fb44 	bl	800161c <HAL_GetTick>
 8002f94:	4602      	mov	r2, r0
 8002f96:	693b      	ldr	r3, [r7, #16]
 8002f98:	1ad3      	subs	r3, r2, r3
 8002f9a:	2b02      	cmp	r3, #2
 8002f9c:	d901      	bls.n	8002fa2 <HAL_RCC_OscConfig+0x772>
 8002f9e:	2303      	movs	r3, #3
 8002fa0:	e058      	b.n	8003054 <HAL_RCC_OscConfig+0x824>
 8002fa2:	4b04      	ldr	r3, [pc, #16]	@ (8002fb4 <HAL_RCC_OscConfig+0x784>)
 8002fa4:	681b      	ldr	r3, [r3, #0]
 8002fa6:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002faa:	2b00      	cmp	r3, #0
 8002fac:	d0f0      	beq.n	8002f90 <HAL_RCC_OscConfig+0x760>
 8002fae:	e050      	b.n	8003052 <HAL_RCC_OscConfig+0x822>
 8002fb0:	2301      	movs	r3, #1
 8002fb2:	e04f      	b.n	8003054 <HAL_RCC_OscConfig+0x824>
 8002fb4:	40021000 	.word	0x40021000
 8002fb8:	019d808c 	.word	0x019d808c
 8002fbc:	4b27      	ldr	r3, [pc, #156]	@ (800305c <HAL_RCC_OscConfig+0x82c>)
 8002fbe:	681b      	ldr	r3, [r3, #0]
 8002fc0:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002fc4:	2b00      	cmp	r3, #0
 8002fc6:	d144      	bne.n	8003052 <HAL_RCC_OscConfig+0x822>
 8002fc8:	4b24      	ldr	r3, [pc, #144]	@ (800305c <HAL_RCC_OscConfig+0x82c>)
 8002fca:	681b      	ldr	r3, [r3, #0]
 8002fcc:	4a23      	ldr	r2, [pc, #140]	@ (800305c <HAL_RCC_OscConfig+0x82c>)
 8002fce:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8002fd2:	6013      	str	r3, [r2, #0]
 8002fd4:	4b21      	ldr	r3, [pc, #132]	@ (800305c <HAL_RCC_OscConfig+0x82c>)
 8002fd6:	68db      	ldr	r3, [r3, #12]
 8002fd8:	4a20      	ldr	r2, [pc, #128]	@ (800305c <HAL_RCC_OscConfig+0x82c>)
 8002fda:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8002fde:	60d3      	str	r3, [r2, #12]
 8002fe0:	f7fe fb1c 	bl	800161c <HAL_GetTick>
 8002fe4:	6138      	str	r0, [r7, #16]
 8002fe6:	e008      	b.n	8002ffa <HAL_RCC_OscConfig+0x7ca>
 8002fe8:	f7fe fb18 	bl	800161c <HAL_GetTick>
 8002fec:	4602      	mov	r2, r0
 8002fee:	693b      	ldr	r3, [r7, #16]
 8002ff0:	1ad3      	subs	r3, r2, r3
 8002ff2:	2b02      	cmp	r3, #2
 8002ff4:	d901      	bls.n	8002ffa <HAL_RCC_OscConfig+0x7ca>
 8002ff6:	2303      	movs	r3, #3
 8002ff8:	e02c      	b.n	8003054 <HAL_RCC_OscConfig+0x824>
 8002ffa:	4b18      	ldr	r3, [pc, #96]	@ (800305c <HAL_RCC_OscConfig+0x82c>)
 8002ffc:	681b      	ldr	r3, [r3, #0]
 8002ffe:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003002:	2b00      	cmp	r3, #0
 8003004:	d0f0      	beq.n	8002fe8 <HAL_RCC_OscConfig+0x7b8>
 8003006:	e024      	b.n	8003052 <HAL_RCC_OscConfig+0x822>
 8003008:	69bb      	ldr	r3, [r7, #24]
 800300a:	2b0c      	cmp	r3, #12
 800300c:	d01f      	beq.n	800304e <HAL_RCC_OscConfig+0x81e>
 800300e:	4b13      	ldr	r3, [pc, #76]	@ (800305c <HAL_RCC_OscConfig+0x82c>)
 8003010:	681b      	ldr	r3, [r3, #0]
 8003012:	4a12      	ldr	r2, [pc, #72]	@ (800305c <HAL_RCC_OscConfig+0x82c>)
 8003014:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8003018:	6013      	str	r3, [r2, #0]
 800301a:	f7fe faff 	bl	800161c <HAL_GetTick>
 800301e:	6138      	str	r0, [r7, #16]
 8003020:	e008      	b.n	8003034 <HAL_RCC_OscConfig+0x804>
 8003022:	f7fe fafb 	bl	800161c <HAL_GetTick>
 8003026:	4602      	mov	r2, r0
 8003028:	693b      	ldr	r3, [r7, #16]
 800302a:	1ad3      	subs	r3, r2, r3
 800302c:	2b02      	cmp	r3, #2
 800302e:	d901      	bls.n	8003034 <HAL_RCC_OscConfig+0x804>
 8003030:	2303      	movs	r3, #3
 8003032:	e00f      	b.n	8003054 <HAL_RCC_OscConfig+0x824>
 8003034:	4b09      	ldr	r3, [pc, #36]	@ (800305c <HAL_RCC_OscConfig+0x82c>)
 8003036:	681b      	ldr	r3, [r3, #0]
 8003038:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800303c:	2b00      	cmp	r3, #0
 800303e:	d1f0      	bne.n	8003022 <HAL_RCC_OscConfig+0x7f2>
 8003040:	4b06      	ldr	r3, [pc, #24]	@ (800305c <HAL_RCC_OscConfig+0x82c>)
 8003042:	68da      	ldr	r2, [r3, #12]
 8003044:	4905      	ldr	r1, [pc, #20]	@ (800305c <HAL_RCC_OscConfig+0x82c>)
 8003046:	4b06      	ldr	r3, [pc, #24]	@ (8003060 <HAL_RCC_OscConfig+0x830>)
 8003048:	4013      	ands	r3, r2
 800304a:	60cb      	str	r3, [r1, #12]
 800304c:	e001      	b.n	8003052 <HAL_RCC_OscConfig+0x822>
 800304e:	2301      	movs	r3, #1
 8003050:	e000      	b.n	8003054 <HAL_RCC_OscConfig+0x824>
 8003052:	2300      	movs	r3, #0
 8003054:	4618      	mov	r0, r3
 8003056:	3720      	adds	r7, #32
 8003058:	46bd      	mov	sp, r7
 800305a:	bd80      	pop	{r7, pc}
 800305c:	40021000 	.word	0x40021000
 8003060:	feeefffc 	.word	0xfeeefffc

08003064 <HAL_RCC_ClockConfig>:
 8003064:	b580      	push	{r7, lr}
 8003066:	b084      	sub	sp, #16
 8003068:	af00      	add	r7, sp, #0
 800306a:	6078      	str	r0, [r7, #4]
 800306c:	6039      	str	r1, [r7, #0]
 800306e:	687b      	ldr	r3, [r7, #4]
 8003070:	2b00      	cmp	r3, #0
 8003072:	d101      	bne.n	8003078 <HAL_RCC_ClockConfig+0x14>
 8003074:	2301      	movs	r3, #1
 8003076:	e0e7      	b.n	8003248 <HAL_RCC_ClockConfig+0x1e4>
 8003078:	4b75      	ldr	r3, [pc, #468]	@ (8003250 <HAL_RCC_ClockConfig+0x1ec>)
 800307a:	681b      	ldr	r3, [r3, #0]
 800307c:	f003 0307 	and.w	r3, r3, #7
 8003080:	683a      	ldr	r2, [r7, #0]
 8003082:	429a      	cmp	r2, r3
 8003084:	d910      	bls.n	80030a8 <HAL_RCC_ClockConfig+0x44>
 8003086:	4b72      	ldr	r3, [pc, #456]	@ (8003250 <HAL_RCC_ClockConfig+0x1ec>)
 8003088:	681b      	ldr	r3, [r3, #0]
 800308a:	f023 0207 	bic.w	r2, r3, #7
 800308e:	4970      	ldr	r1, [pc, #448]	@ (8003250 <HAL_RCC_ClockConfig+0x1ec>)
 8003090:	683b      	ldr	r3, [r7, #0]
 8003092:	4313      	orrs	r3, r2
 8003094:	600b      	str	r3, [r1, #0]
 8003096:	4b6e      	ldr	r3, [pc, #440]	@ (8003250 <HAL_RCC_ClockConfig+0x1ec>)
 8003098:	681b      	ldr	r3, [r3, #0]
 800309a:	f003 0307 	and.w	r3, r3, #7
 800309e:	683a      	ldr	r2, [r7, #0]
 80030a0:	429a      	cmp	r2, r3
 80030a2:	d001      	beq.n	80030a8 <HAL_RCC_ClockConfig+0x44>
 80030a4:	2301      	movs	r3, #1
 80030a6:	e0cf      	b.n	8003248 <HAL_RCC_ClockConfig+0x1e4>
 80030a8:	687b      	ldr	r3, [r7, #4]
 80030aa:	681b      	ldr	r3, [r3, #0]
 80030ac:	f003 0302 	and.w	r3, r3, #2
 80030b0:	2b00      	cmp	r3, #0
 80030b2:	d010      	beq.n	80030d6 <HAL_RCC_ClockConfig+0x72>
 80030b4:	687b      	ldr	r3, [r7, #4]
 80030b6:	689a      	ldr	r2, [r3, #8]
 80030b8:	4b66      	ldr	r3, [pc, #408]	@ (8003254 <HAL_RCC_ClockConfig+0x1f0>)
 80030ba:	689b      	ldr	r3, [r3, #8]
 80030bc:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 80030c0:	429a      	cmp	r2, r3
 80030c2:	d908      	bls.n	80030d6 <HAL_RCC_ClockConfig+0x72>
 80030c4:	4b63      	ldr	r3, [pc, #396]	@ (8003254 <HAL_RCC_ClockConfig+0x1f0>)
 80030c6:	689b      	ldr	r3, [r3, #8]
 80030c8:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 80030cc:	687b      	ldr	r3, [r7, #4]
 80030ce:	689b      	ldr	r3, [r3, #8]
 80030d0:	4960      	ldr	r1, [pc, #384]	@ (8003254 <HAL_RCC_ClockConfig+0x1f0>)
 80030d2:	4313      	orrs	r3, r2
 80030d4:	608b      	str	r3, [r1, #8]
 80030d6:	687b      	ldr	r3, [r7, #4]
 80030d8:	681b      	ldr	r3, [r3, #0]
 80030da:	f003 0301 	and.w	r3, r3, #1
 80030de:	2b00      	cmp	r3, #0
 80030e0:	d04c      	beq.n	800317c <HAL_RCC_ClockConfig+0x118>
 80030e2:	687b      	ldr	r3, [r7, #4]
 80030e4:	685b      	ldr	r3, [r3, #4]
 80030e6:	2b03      	cmp	r3, #3
 80030e8:	d107      	bne.n	80030fa <HAL_RCC_ClockConfig+0x96>
 80030ea:	4b5a      	ldr	r3, [pc, #360]	@ (8003254 <HAL_RCC_ClockConfig+0x1f0>)
 80030ec:	681b      	ldr	r3, [r3, #0]
 80030ee:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80030f2:	2b00      	cmp	r3, #0
 80030f4:	d121      	bne.n	800313a <HAL_RCC_ClockConfig+0xd6>
 80030f6:	2301      	movs	r3, #1
 80030f8:	e0a6      	b.n	8003248 <HAL_RCC_ClockConfig+0x1e4>
 80030fa:	687b      	ldr	r3, [r7, #4]
 80030fc:	685b      	ldr	r3, [r3, #4]
 80030fe:	2b02      	cmp	r3, #2
 8003100:	d107      	bne.n	8003112 <HAL_RCC_ClockConfig+0xae>
 8003102:	4b54      	ldr	r3, [pc, #336]	@ (8003254 <HAL_RCC_ClockConfig+0x1f0>)
 8003104:	681b      	ldr	r3, [r3, #0]
 8003106:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800310a:	2b00      	cmp	r3, #0
 800310c:	d115      	bne.n	800313a <HAL_RCC_ClockConfig+0xd6>
 800310e:	2301      	movs	r3, #1
 8003110:	e09a      	b.n	8003248 <HAL_RCC_ClockConfig+0x1e4>
 8003112:	687b      	ldr	r3, [r7, #4]
 8003114:	685b      	ldr	r3, [r3, #4]
 8003116:	2b00      	cmp	r3, #0
 8003118:	d107      	bne.n	800312a <HAL_RCC_ClockConfig+0xc6>
 800311a:	4b4e      	ldr	r3, [pc, #312]	@ (8003254 <HAL_RCC_ClockConfig+0x1f0>)
 800311c:	681b      	ldr	r3, [r3, #0]
 800311e:	f003 0302 	and.w	r3, r3, #2
 8003122:	2b00      	cmp	r3, #0
 8003124:	d109      	bne.n	800313a <HAL_RCC_ClockConfig+0xd6>
 8003126:	2301      	movs	r3, #1
 8003128:	e08e      	b.n	8003248 <HAL_RCC_ClockConfig+0x1e4>
 800312a:	4b4a      	ldr	r3, [pc, #296]	@ (8003254 <HAL_RCC_ClockConfig+0x1f0>)
 800312c:	681b      	ldr	r3, [r3, #0]
 800312e:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8003132:	2b00      	cmp	r3, #0
 8003134:	d101      	bne.n	800313a <HAL_RCC_ClockConfig+0xd6>
 8003136:	2301      	movs	r3, #1
 8003138:	e086      	b.n	8003248 <HAL_RCC_ClockConfig+0x1e4>
 800313a:	4b46      	ldr	r3, [pc, #280]	@ (8003254 <HAL_RCC_ClockConfig+0x1f0>)
 800313c:	689b      	ldr	r3, [r3, #8]
 800313e:	f023 0203 	bic.w	r2, r3, #3
 8003142:	687b      	ldr	r3, [r7, #4]
 8003144:	685b      	ldr	r3, [r3, #4]
 8003146:	4943      	ldr	r1, [pc, #268]	@ (8003254 <HAL_RCC_ClockConfig+0x1f0>)
 8003148:	4313      	orrs	r3, r2
 800314a:	608b      	str	r3, [r1, #8]
 800314c:	f7fe fa66 	bl	800161c <HAL_GetTick>
 8003150:	60f8      	str	r0, [r7, #12]
 8003152:	e00a      	b.n	800316a <HAL_RCC_ClockConfig+0x106>
 8003154:	f7fe fa62 	bl	800161c <HAL_GetTick>
 8003158:	4602      	mov	r2, r0
 800315a:	68fb      	ldr	r3, [r7, #12]
 800315c:	1ad3      	subs	r3, r2, r3
 800315e:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003162:	4293      	cmp	r3, r2
 8003164:	d901      	bls.n	800316a <HAL_RCC_ClockConfig+0x106>
 8003166:	2303      	movs	r3, #3
 8003168:	e06e      	b.n	8003248 <HAL_RCC_ClockConfig+0x1e4>
 800316a:	4b3a      	ldr	r3, [pc, #232]	@ (8003254 <HAL_RCC_ClockConfig+0x1f0>)
 800316c:	689b      	ldr	r3, [r3, #8]
 800316e:	f003 020c 	and.w	r2, r3, #12
 8003172:	687b      	ldr	r3, [r7, #4]
 8003174:	685b      	ldr	r3, [r3, #4]
 8003176:	009b      	lsls	r3, r3, #2
 8003178:	429a      	cmp	r2, r3
 800317a:	d1eb      	bne.n	8003154 <HAL_RCC_ClockConfig+0xf0>
 800317c:	687b      	ldr	r3, [r7, #4]
 800317e:	681b      	ldr	r3, [r3, #0]
 8003180:	f003 0302 	and.w	r3, r3, #2
 8003184:	2b00      	cmp	r3, #0
 8003186:	d010      	beq.n	80031aa <HAL_RCC_ClockConfig+0x146>
 8003188:	687b      	ldr	r3, [r7, #4]
 800318a:	689a      	ldr	r2, [r3, #8]
 800318c:	4b31      	ldr	r3, [pc, #196]	@ (8003254 <HAL_RCC_ClockConfig+0x1f0>)
 800318e:	689b      	ldr	r3, [r3, #8]
 8003190:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8003194:	429a      	cmp	r2, r3
 8003196:	d208      	bcs.n	80031aa <HAL_RCC_ClockConfig+0x146>
 8003198:	4b2e      	ldr	r3, [pc, #184]	@ (8003254 <HAL_RCC_ClockConfig+0x1f0>)
 800319a:	689b      	ldr	r3, [r3, #8]
 800319c:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 80031a0:	687b      	ldr	r3, [r7, #4]
 80031a2:	689b      	ldr	r3, [r3, #8]
 80031a4:	492b      	ldr	r1, [pc, #172]	@ (8003254 <HAL_RCC_ClockConfig+0x1f0>)
 80031a6:	4313      	orrs	r3, r2
 80031a8:	608b      	str	r3, [r1, #8]
 80031aa:	4b29      	ldr	r3, [pc, #164]	@ (8003250 <HAL_RCC_ClockConfig+0x1ec>)
 80031ac:	681b      	ldr	r3, [r3, #0]
 80031ae:	f003 0307 	and.w	r3, r3, #7
 80031b2:	683a      	ldr	r2, [r7, #0]
 80031b4:	429a      	cmp	r2, r3
 80031b6:	d210      	bcs.n	80031da <HAL_RCC_ClockConfig+0x176>
 80031b8:	4b25      	ldr	r3, [pc, #148]	@ (8003250 <HAL_RCC_ClockConfig+0x1ec>)
 80031ba:	681b      	ldr	r3, [r3, #0]
 80031bc:	f023 0207 	bic.w	r2, r3, #7
 80031c0:	4923      	ldr	r1, [pc, #140]	@ (8003250 <HAL_RCC_ClockConfig+0x1ec>)
 80031c2:	683b      	ldr	r3, [r7, #0]
 80031c4:	4313      	orrs	r3, r2
 80031c6:	600b      	str	r3, [r1, #0]
 80031c8:	4b21      	ldr	r3, [pc, #132]	@ (8003250 <HAL_RCC_ClockConfig+0x1ec>)
 80031ca:	681b      	ldr	r3, [r3, #0]
 80031cc:	f003 0307 	and.w	r3, r3, #7
 80031d0:	683a      	ldr	r2, [r7, #0]
 80031d2:	429a      	cmp	r2, r3
 80031d4:	d001      	beq.n	80031da <HAL_RCC_ClockConfig+0x176>
 80031d6:	2301      	movs	r3, #1
 80031d8:	e036      	b.n	8003248 <HAL_RCC_ClockConfig+0x1e4>
 80031da:	687b      	ldr	r3, [r7, #4]
 80031dc:	681b      	ldr	r3, [r3, #0]
 80031de:	f003 0304 	and.w	r3, r3, #4
 80031e2:	2b00      	cmp	r3, #0
 80031e4:	d008      	beq.n	80031f8 <HAL_RCC_ClockConfig+0x194>
 80031e6:	4b1b      	ldr	r3, [pc, #108]	@ (8003254 <HAL_RCC_ClockConfig+0x1f0>)
 80031e8:	689b      	ldr	r3, [r3, #8]
 80031ea:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 80031ee:	687b      	ldr	r3, [r7, #4]
 80031f0:	68db      	ldr	r3, [r3, #12]
 80031f2:	4918      	ldr	r1, [pc, #96]	@ (8003254 <HAL_RCC_ClockConfig+0x1f0>)
 80031f4:	4313      	orrs	r3, r2
 80031f6:	608b      	str	r3, [r1, #8]
 80031f8:	687b      	ldr	r3, [r7, #4]
 80031fa:	681b      	ldr	r3, [r3, #0]
 80031fc:	f003 0308 	and.w	r3, r3, #8
 8003200:	2b00      	cmp	r3, #0
 8003202:	d009      	beq.n	8003218 <HAL_RCC_ClockConfig+0x1b4>
 8003204:	4b13      	ldr	r3, [pc, #76]	@ (8003254 <HAL_RCC_ClockConfig+0x1f0>)
 8003206:	689b      	ldr	r3, [r3, #8]
 8003208:	f423 5260 	bic.w	r2, r3, #14336	@ 0x3800
 800320c:	687b      	ldr	r3, [r7, #4]
 800320e:	691b      	ldr	r3, [r3, #16]
 8003210:	00db      	lsls	r3, r3, #3
 8003212:	4910      	ldr	r1, [pc, #64]	@ (8003254 <HAL_RCC_ClockConfig+0x1f0>)
 8003214:	4313      	orrs	r3, r2
 8003216:	608b      	str	r3, [r1, #8]
 8003218:	f000 f824 	bl	8003264 <HAL_RCC_GetSysClockFreq>
 800321c:	4602      	mov	r2, r0
 800321e:	4b0d      	ldr	r3, [pc, #52]	@ (8003254 <HAL_RCC_ClockConfig+0x1f0>)
 8003220:	689b      	ldr	r3, [r3, #8]
 8003222:	091b      	lsrs	r3, r3, #4
 8003224:	f003 030f 	and.w	r3, r3, #15
 8003228:	490b      	ldr	r1, [pc, #44]	@ (8003258 <HAL_RCC_ClockConfig+0x1f4>)
 800322a:	5ccb      	ldrb	r3, [r1, r3]
 800322c:	f003 031f 	and.w	r3, r3, #31
 8003230:	fa22 f303 	lsr.w	r3, r2, r3
 8003234:	4a09      	ldr	r2, [pc, #36]	@ (800325c <HAL_RCC_ClockConfig+0x1f8>)
 8003236:	6013      	str	r3, [r2, #0]
 8003238:	4b09      	ldr	r3, [pc, #36]	@ (8003260 <HAL_RCC_ClockConfig+0x1fc>)
 800323a:	681b      	ldr	r3, [r3, #0]
 800323c:	4618      	mov	r0, r3
 800323e:	f7fe f99d 	bl	800157c <HAL_InitTick>
 8003242:	4603      	mov	r3, r0
 8003244:	72fb      	strb	r3, [r7, #11]
 8003246:	7afb      	ldrb	r3, [r7, #11]
 8003248:	4618      	mov	r0, r3
 800324a:	3710      	adds	r7, #16
 800324c:	46bd      	mov	sp, r7
 800324e:	bd80      	pop	{r7, pc}
 8003250:	40022000 	.word	0x40022000
 8003254:	40021000 	.word	0x40021000
 8003258:	0800588c 	.word	0x0800588c
 800325c:	2000000c 	.word	0x2000000c
 8003260:	20000010 	.word	0x20000010

08003264 <HAL_RCC_GetSysClockFreq>:
 8003264:	b480      	push	{r7}
 8003266:	b089      	sub	sp, #36	@ 0x24
 8003268:	af00      	add	r7, sp, #0
 800326a:	2300      	movs	r3, #0
 800326c:	61fb      	str	r3, [r7, #28]
 800326e:	2300      	movs	r3, #0
 8003270:	61bb      	str	r3, [r7, #24]
 8003272:	4b3e      	ldr	r3, [pc, #248]	@ (800336c <HAL_RCC_GetSysClockFreq+0x108>)
 8003274:	689b      	ldr	r3, [r3, #8]
 8003276:	f003 030c 	and.w	r3, r3, #12
 800327a:	613b      	str	r3, [r7, #16]
 800327c:	4b3b      	ldr	r3, [pc, #236]	@ (800336c <HAL_RCC_GetSysClockFreq+0x108>)
 800327e:	68db      	ldr	r3, [r3, #12]
 8003280:	f003 0303 	and.w	r3, r3, #3
 8003284:	60fb      	str	r3, [r7, #12]
 8003286:	693b      	ldr	r3, [r7, #16]
 8003288:	2b00      	cmp	r3, #0
 800328a:	d005      	beq.n	8003298 <HAL_RCC_GetSysClockFreq+0x34>
 800328c:	693b      	ldr	r3, [r7, #16]
 800328e:	2b0c      	cmp	r3, #12
 8003290:	d121      	bne.n	80032d6 <HAL_RCC_GetSysClockFreq+0x72>
 8003292:	68fb      	ldr	r3, [r7, #12]
 8003294:	2b01      	cmp	r3, #1
 8003296:	d11e      	bne.n	80032d6 <HAL_RCC_GetSysClockFreq+0x72>
 8003298:	4b34      	ldr	r3, [pc, #208]	@ (800336c <HAL_RCC_GetSysClockFreq+0x108>)
 800329a:	681b      	ldr	r3, [r3, #0]
 800329c:	f003 0308 	and.w	r3, r3, #8
 80032a0:	2b00      	cmp	r3, #0
 80032a2:	d107      	bne.n	80032b4 <HAL_RCC_GetSysClockFreq+0x50>
 80032a4:	4b31      	ldr	r3, [pc, #196]	@ (800336c <HAL_RCC_GetSysClockFreq+0x108>)
 80032a6:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 80032aa:	0a1b      	lsrs	r3, r3, #8
 80032ac:	f003 030f 	and.w	r3, r3, #15
 80032b0:	61fb      	str	r3, [r7, #28]
 80032b2:	e005      	b.n	80032c0 <HAL_RCC_GetSysClockFreq+0x5c>
 80032b4:	4b2d      	ldr	r3, [pc, #180]	@ (800336c <HAL_RCC_GetSysClockFreq+0x108>)
 80032b6:	681b      	ldr	r3, [r3, #0]
 80032b8:	091b      	lsrs	r3, r3, #4
 80032ba:	f003 030f 	and.w	r3, r3, #15
 80032be:	61fb      	str	r3, [r7, #28]
 80032c0:	4a2b      	ldr	r2, [pc, #172]	@ (8003370 <HAL_RCC_GetSysClockFreq+0x10c>)
 80032c2:	69fb      	ldr	r3, [r7, #28]
 80032c4:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80032c8:	61fb      	str	r3, [r7, #28]
 80032ca:	693b      	ldr	r3, [r7, #16]
 80032cc:	2b00      	cmp	r3, #0
 80032ce:	d10d      	bne.n	80032ec <HAL_RCC_GetSysClockFreq+0x88>
 80032d0:	69fb      	ldr	r3, [r7, #28]
 80032d2:	61bb      	str	r3, [r7, #24]
 80032d4:	e00a      	b.n	80032ec <HAL_RCC_GetSysClockFreq+0x88>
 80032d6:	693b      	ldr	r3, [r7, #16]
 80032d8:	2b04      	cmp	r3, #4
 80032da:	d102      	bne.n	80032e2 <HAL_RCC_GetSysClockFreq+0x7e>
 80032dc:	4b25      	ldr	r3, [pc, #148]	@ (8003374 <HAL_RCC_GetSysClockFreq+0x110>)
 80032de:	61bb      	str	r3, [r7, #24]
 80032e0:	e004      	b.n	80032ec <HAL_RCC_GetSysClockFreq+0x88>
 80032e2:	693b      	ldr	r3, [r7, #16]
 80032e4:	2b08      	cmp	r3, #8
 80032e6:	d101      	bne.n	80032ec <HAL_RCC_GetSysClockFreq+0x88>
 80032e8:	4b23      	ldr	r3, [pc, #140]	@ (8003378 <HAL_RCC_GetSysClockFreq+0x114>)
 80032ea:	61bb      	str	r3, [r7, #24]
 80032ec:	693b      	ldr	r3, [r7, #16]
 80032ee:	2b0c      	cmp	r3, #12
 80032f0:	d134      	bne.n	800335c <HAL_RCC_GetSysClockFreq+0xf8>
 80032f2:	4b1e      	ldr	r3, [pc, #120]	@ (800336c <HAL_RCC_GetSysClockFreq+0x108>)
 80032f4:	68db      	ldr	r3, [r3, #12]
 80032f6:	f003 0303 	and.w	r3, r3, #3
 80032fa:	60bb      	str	r3, [r7, #8]
 80032fc:	68bb      	ldr	r3, [r7, #8]
 80032fe:	2b02      	cmp	r3, #2
 8003300:	d003      	beq.n	800330a <HAL_RCC_GetSysClockFreq+0xa6>
 8003302:	68bb      	ldr	r3, [r7, #8]
 8003304:	2b03      	cmp	r3, #3
 8003306:	d003      	beq.n	8003310 <HAL_RCC_GetSysClockFreq+0xac>
 8003308:	e005      	b.n	8003316 <HAL_RCC_GetSysClockFreq+0xb2>
 800330a:	4b1a      	ldr	r3, [pc, #104]	@ (8003374 <HAL_RCC_GetSysClockFreq+0x110>)
 800330c:	617b      	str	r3, [r7, #20]
 800330e:	e005      	b.n	800331c <HAL_RCC_GetSysClockFreq+0xb8>
 8003310:	4b19      	ldr	r3, [pc, #100]	@ (8003378 <HAL_RCC_GetSysClockFreq+0x114>)
 8003312:	617b      	str	r3, [r7, #20]
 8003314:	e002      	b.n	800331c <HAL_RCC_GetSysClockFreq+0xb8>
 8003316:	69fb      	ldr	r3, [r7, #28]
 8003318:	617b      	str	r3, [r7, #20]
 800331a:	bf00      	nop
 800331c:	4b13      	ldr	r3, [pc, #76]	@ (800336c <HAL_RCC_GetSysClockFreq+0x108>)
 800331e:	68db      	ldr	r3, [r3, #12]
 8003320:	091b      	lsrs	r3, r3, #4
 8003322:	f003 0307 	and.w	r3, r3, #7
 8003326:	3301      	adds	r3, #1
 8003328:	607b      	str	r3, [r7, #4]
 800332a:	4b10      	ldr	r3, [pc, #64]	@ (800336c <HAL_RCC_GetSysClockFreq+0x108>)
 800332c:	68db      	ldr	r3, [r3, #12]
 800332e:	0a1b      	lsrs	r3, r3, #8
 8003330:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8003334:	697a      	ldr	r2, [r7, #20]
 8003336:	fb03 f202 	mul.w	r2, r3, r2
 800333a:	687b      	ldr	r3, [r7, #4]
 800333c:	fbb2 f3f3 	udiv	r3, r2, r3
 8003340:	617b      	str	r3, [r7, #20]
 8003342:	4b0a      	ldr	r3, [pc, #40]	@ (800336c <HAL_RCC_GetSysClockFreq+0x108>)
 8003344:	68db      	ldr	r3, [r3, #12]
 8003346:	0e5b      	lsrs	r3, r3, #25
 8003348:	f003 0303 	and.w	r3, r3, #3
 800334c:	3301      	adds	r3, #1
 800334e:	005b      	lsls	r3, r3, #1
 8003350:	603b      	str	r3, [r7, #0]
 8003352:	697a      	ldr	r2, [r7, #20]
 8003354:	683b      	ldr	r3, [r7, #0]
 8003356:	fbb2 f3f3 	udiv	r3, r2, r3
 800335a:	61bb      	str	r3, [r7, #24]
 800335c:	69bb      	ldr	r3, [r7, #24]
 800335e:	4618      	mov	r0, r3
 8003360:	3724      	adds	r7, #36	@ 0x24
 8003362:	46bd      	mov	sp, r7
 8003364:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003368:	4770      	bx	lr
 800336a:	bf00      	nop
 800336c:	40021000 	.word	0x40021000
 8003370:	080058a4 	.word	0x080058a4
 8003374:	00f42400 	.word	0x00f42400
 8003378:	007a1200 	.word	0x007a1200

0800337c <HAL_RCC_GetHCLKFreq>:
 800337c:	b480      	push	{r7}
 800337e:	af00      	add	r7, sp, #0
 8003380:	4b03      	ldr	r3, [pc, #12]	@ (8003390 <HAL_RCC_GetHCLKFreq+0x14>)
 8003382:	681b      	ldr	r3, [r3, #0]
 8003384:	4618      	mov	r0, r3
 8003386:	46bd      	mov	sp, r7
 8003388:	f85d 7b04 	ldr.w	r7, [sp], #4
 800338c:	4770      	bx	lr
 800338e:	bf00      	nop
 8003390:	2000000c 	.word	0x2000000c

08003394 <HAL_RCC_GetPCLK1Freq>:
 8003394:	b580      	push	{r7, lr}
 8003396:	af00      	add	r7, sp, #0
 8003398:	f7ff fff0 	bl	800337c <HAL_RCC_GetHCLKFreq>
 800339c:	4602      	mov	r2, r0
 800339e:	4b06      	ldr	r3, [pc, #24]	@ (80033b8 <HAL_RCC_GetPCLK1Freq+0x24>)
 80033a0:	689b      	ldr	r3, [r3, #8]
 80033a2:	0a1b      	lsrs	r3, r3, #8
 80033a4:	f003 0307 	and.w	r3, r3, #7
 80033a8:	4904      	ldr	r1, [pc, #16]	@ (80033bc <HAL_RCC_GetPCLK1Freq+0x28>)
 80033aa:	5ccb      	ldrb	r3, [r1, r3]
 80033ac:	f003 031f 	and.w	r3, r3, #31
 80033b0:	fa22 f303 	lsr.w	r3, r2, r3
 80033b4:	4618      	mov	r0, r3
 80033b6:	bd80      	pop	{r7, pc}
 80033b8:	40021000 	.word	0x40021000
 80033bc:	0800589c 	.word	0x0800589c

080033c0 <HAL_RCC_GetPCLK2Freq>:
 80033c0:	b580      	push	{r7, lr}
 80033c2:	af00      	add	r7, sp, #0
 80033c4:	f7ff ffda 	bl	800337c <HAL_RCC_GetHCLKFreq>
 80033c8:	4602      	mov	r2, r0
 80033ca:	4b06      	ldr	r3, [pc, #24]	@ (80033e4 <HAL_RCC_GetPCLK2Freq+0x24>)
 80033cc:	689b      	ldr	r3, [r3, #8]
 80033ce:	0adb      	lsrs	r3, r3, #11
 80033d0:	f003 0307 	and.w	r3, r3, #7
 80033d4:	4904      	ldr	r1, [pc, #16]	@ (80033e8 <HAL_RCC_GetPCLK2Freq+0x28>)
 80033d6:	5ccb      	ldrb	r3, [r1, r3]
 80033d8:	f003 031f 	and.w	r3, r3, #31
 80033dc:	fa22 f303 	lsr.w	r3, r2, r3
 80033e0:	4618      	mov	r0, r3
 80033e2:	bd80      	pop	{r7, pc}
 80033e4:	40021000 	.word	0x40021000
 80033e8:	0800589c 	.word	0x0800589c

080033ec <RCC_SetFlashLatencyFromMSIRange>:
 80033ec:	b580      	push	{r7, lr}
 80033ee:	b086      	sub	sp, #24
 80033f0:	af00      	add	r7, sp, #0
 80033f2:	6078      	str	r0, [r7, #4]
 80033f4:	2300      	movs	r3, #0
 80033f6:	613b      	str	r3, [r7, #16]
 80033f8:	4b2a      	ldr	r3, [pc, #168]	@ (80034a4 <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 80033fa:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80033fc:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8003400:	2b00      	cmp	r3, #0
 8003402:	d003      	beq.n	800340c <RCC_SetFlashLatencyFromMSIRange+0x20>
 8003404:	f7ff f9a0 	bl	8002748 <HAL_PWREx_GetVoltageRange>
 8003408:	6178      	str	r0, [r7, #20]
 800340a:	e014      	b.n	8003436 <RCC_SetFlashLatencyFromMSIRange+0x4a>
 800340c:	4b25      	ldr	r3, [pc, #148]	@ (80034a4 <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 800340e:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003410:	4a24      	ldr	r2, [pc, #144]	@ (80034a4 <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 8003412:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8003416:	6593      	str	r3, [r2, #88]	@ 0x58
 8003418:	4b22      	ldr	r3, [pc, #136]	@ (80034a4 <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 800341a:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800341c:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8003420:	60fb      	str	r3, [r7, #12]
 8003422:	68fb      	ldr	r3, [r7, #12]
 8003424:	f7ff f990 	bl	8002748 <HAL_PWREx_GetVoltageRange>
 8003428:	6178      	str	r0, [r7, #20]
 800342a:	4b1e      	ldr	r3, [pc, #120]	@ (80034a4 <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 800342c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800342e:	4a1d      	ldr	r2, [pc, #116]	@ (80034a4 <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 8003430:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8003434:	6593      	str	r3, [r2, #88]	@ 0x58
 8003436:	697b      	ldr	r3, [r7, #20]
 8003438:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800343c:	d10b      	bne.n	8003456 <RCC_SetFlashLatencyFromMSIRange+0x6a>
 800343e:	687b      	ldr	r3, [r7, #4]
 8003440:	2b80      	cmp	r3, #128	@ 0x80
 8003442:	d919      	bls.n	8003478 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 8003444:	687b      	ldr	r3, [r7, #4]
 8003446:	2ba0      	cmp	r3, #160	@ 0xa0
 8003448:	d902      	bls.n	8003450 <RCC_SetFlashLatencyFromMSIRange+0x64>
 800344a:	2302      	movs	r3, #2
 800344c:	613b      	str	r3, [r7, #16]
 800344e:	e013      	b.n	8003478 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 8003450:	2301      	movs	r3, #1
 8003452:	613b      	str	r3, [r7, #16]
 8003454:	e010      	b.n	8003478 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 8003456:	687b      	ldr	r3, [r7, #4]
 8003458:	2b80      	cmp	r3, #128	@ 0x80
 800345a:	d902      	bls.n	8003462 <RCC_SetFlashLatencyFromMSIRange+0x76>
 800345c:	2303      	movs	r3, #3
 800345e:	613b      	str	r3, [r7, #16]
 8003460:	e00a      	b.n	8003478 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 8003462:	687b      	ldr	r3, [r7, #4]
 8003464:	2b80      	cmp	r3, #128	@ 0x80
 8003466:	d102      	bne.n	800346e <RCC_SetFlashLatencyFromMSIRange+0x82>
 8003468:	2302      	movs	r3, #2
 800346a:	613b      	str	r3, [r7, #16]
 800346c:	e004      	b.n	8003478 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 800346e:	687b      	ldr	r3, [r7, #4]
 8003470:	2b70      	cmp	r3, #112	@ 0x70
 8003472:	d101      	bne.n	8003478 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 8003474:	2301      	movs	r3, #1
 8003476:	613b      	str	r3, [r7, #16]
 8003478:	4b0b      	ldr	r3, [pc, #44]	@ (80034a8 <RCC_SetFlashLatencyFromMSIRange+0xbc>)
 800347a:	681b      	ldr	r3, [r3, #0]
 800347c:	f023 0207 	bic.w	r2, r3, #7
 8003480:	4909      	ldr	r1, [pc, #36]	@ (80034a8 <RCC_SetFlashLatencyFromMSIRange+0xbc>)
 8003482:	693b      	ldr	r3, [r7, #16]
 8003484:	4313      	orrs	r3, r2
 8003486:	600b      	str	r3, [r1, #0]
 8003488:	4b07      	ldr	r3, [pc, #28]	@ (80034a8 <RCC_SetFlashLatencyFromMSIRange+0xbc>)
 800348a:	681b      	ldr	r3, [r3, #0]
 800348c:	f003 0307 	and.w	r3, r3, #7
 8003490:	693a      	ldr	r2, [r7, #16]
 8003492:	429a      	cmp	r2, r3
 8003494:	d001      	beq.n	800349a <RCC_SetFlashLatencyFromMSIRange+0xae>
 8003496:	2301      	movs	r3, #1
 8003498:	e000      	b.n	800349c <RCC_SetFlashLatencyFromMSIRange+0xb0>
 800349a:	2300      	movs	r3, #0
 800349c:	4618      	mov	r0, r3
 800349e:	3718      	adds	r7, #24
 80034a0:	46bd      	mov	sp, r7
 80034a2:	bd80      	pop	{r7, pc}
 80034a4:	40021000 	.word	0x40021000
 80034a8:	40022000 	.word	0x40022000

080034ac <HAL_RCCEx_PeriphCLKConfig>:
 80034ac:	b580      	push	{r7, lr}
 80034ae:	b086      	sub	sp, #24
 80034b0:	af00      	add	r7, sp, #0
 80034b2:	6078      	str	r0, [r7, #4]
 80034b4:	2300      	movs	r3, #0
 80034b6:	74fb      	strb	r3, [r7, #19]
 80034b8:	2300      	movs	r3, #0
 80034ba:	74bb      	strb	r3, [r7, #18]
 80034bc:	687b      	ldr	r3, [r7, #4]
 80034be:	681b      	ldr	r3, [r3, #0]
 80034c0:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 80034c4:	2b00      	cmp	r3, #0
 80034c6:	d041      	beq.n	800354c <HAL_RCCEx_PeriphCLKConfig+0xa0>
 80034c8:	687b      	ldr	r3, [r7, #4]
 80034ca:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 80034cc:	f5b3 0f40 	cmp.w	r3, #12582912	@ 0xc00000
 80034d0:	d02a      	beq.n	8003528 <HAL_RCCEx_PeriphCLKConfig+0x7c>
 80034d2:	f5b3 0f40 	cmp.w	r3, #12582912	@ 0xc00000
 80034d6:	d824      	bhi.n	8003522 <HAL_RCCEx_PeriphCLKConfig+0x76>
 80034d8:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 80034dc:	d008      	beq.n	80034f0 <HAL_RCCEx_PeriphCLKConfig+0x44>
 80034de:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 80034e2:	d81e      	bhi.n	8003522 <HAL_RCCEx_PeriphCLKConfig+0x76>
 80034e4:	2b00      	cmp	r3, #0
 80034e6:	d00a      	beq.n	80034fe <HAL_RCCEx_PeriphCLKConfig+0x52>
 80034e8:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 80034ec:	d010      	beq.n	8003510 <HAL_RCCEx_PeriphCLKConfig+0x64>
 80034ee:	e018      	b.n	8003522 <HAL_RCCEx_PeriphCLKConfig+0x76>
 80034f0:	4b86      	ldr	r3, [pc, #536]	@ (800370c <HAL_RCCEx_PeriphCLKConfig+0x260>)
 80034f2:	68db      	ldr	r3, [r3, #12]
 80034f4:	4a85      	ldr	r2, [pc, #532]	@ (800370c <HAL_RCCEx_PeriphCLKConfig+0x260>)
 80034f6:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80034fa:	60d3      	str	r3, [r2, #12]
 80034fc:	e015      	b.n	800352a <HAL_RCCEx_PeriphCLKConfig+0x7e>
 80034fe:	687b      	ldr	r3, [r7, #4]
 8003500:	3304      	adds	r3, #4
 8003502:	2100      	movs	r1, #0
 8003504:	4618      	mov	r0, r3
 8003506:	f000 facd 	bl	8003aa4 <RCCEx_PLLSAI1_Config>
 800350a:	4603      	mov	r3, r0
 800350c:	74fb      	strb	r3, [r7, #19]
 800350e:	e00c      	b.n	800352a <HAL_RCCEx_PeriphCLKConfig+0x7e>
 8003510:	687b      	ldr	r3, [r7, #4]
 8003512:	3320      	adds	r3, #32
 8003514:	2100      	movs	r1, #0
 8003516:	4618      	mov	r0, r3
 8003518:	f000 fbb6 	bl	8003c88 <RCCEx_PLLSAI2_Config>
 800351c:	4603      	mov	r3, r0
 800351e:	74fb      	strb	r3, [r7, #19]
 8003520:	e003      	b.n	800352a <HAL_RCCEx_PeriphCLKConfig+0x7e>
 8003522:	2301      	movs	r3, #1
 8003524:	74fb      	strb	r3, [r7, #19]
 8003526:	e000      	b.n	800352a <HAL_RCCEx_PeriphCLKConfig+0x7e>
 8003528:	bf00      	nop
 800352a:	7cfb      	ldrb	r3, [r7, #19]
 800352c:	2b00      	cmp	r3, #0
 800352e:	d10b      	bne.n	8003548 <HAL_RCCEx_PeriphCLKConfig+0x9c>
 8003530:	4b76      	ldr	r3, [pc, #472]	@ (800370c <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8003532:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8003536:	f423 0240 	bic.w	r2, r3, #12582912	@ 0xc00000
 800353a:	687b      	ldr	r3, [r7, #4]
 800353c:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 800353e:	4973      	ldr	r1, [pc, #460]	@ (800370c <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8003540:	4313      	orrs	r3, r2
 8003542:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8003546:	e001      	b.n	800354c <HAL_RCCEx_PeriphCLKConfig+0xa0>
 8003548:	7cfb      	ldrb	r3, [r7, #19]
 800354a:	74bb      	strb	r3, [r7, #18]
 800354c:	687b      	ldr	r3, [r7, #4]
 800354e:	681b      	ldr	r3, [r3, #0]
 8003550:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8003554:	2b00      	cmp	r3, #0
 8003556:	d041      	beq.n	80035dc <HAL_RCCEx_PeriphCLKConfig+0x130>
 8003558:	687b      	ldr	r3, [r7, #4]
 800355a:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800355c:	f1b3 7f40 	cmp.w	r3, #50331648	@ 0x3000000
 8003560:	d02a      	beq.n	80035b8 <HAL_RCCEx_PeriphCLKConfig+0x10c>
 8003562:	f1b3 7f40 	cmp.w	r3, #50331648	@ 0x3000000
 8003566:	d824      	bhi.n	80035b2 <HAL_RCCEx_PeriphCLKConfig+0x106>
 8003568:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 800356c:	d008      	beq.n	8003580 <HAL_RCCEx_PeriphCLKConfig+0xd4>
 800356e:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 8003572:	d81e      	bhi.n	80035b2 <HAL_RCCEx_PeriphCLKConfig+0x106>
 8003574:	2b00      	cmp	r3, #0
 8003576:	d00a      	beq.n	800358e <HAL_RCCEx_PeriphCLKConfig+0xe2>
 8003578:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 800357c:	d010      	beq.n	80035a0 <HAL_RCCEx_PeriphCLKConfig+0xf4>
 800357e:	e018      	b.n	80035b2 <HAL_RCCEx_PeriphCLKConfig+0x106>
 8003580:	4b62      	ldr	r3, [pc, #392]	@ (800370c <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8003582:	68db      	ldr	r3, [r3, #12]
 8003584:	4a61      	ldr	r2, [pc, #388]	@ (800370c <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8003586:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800358a:	60d3      	str	r3, [r2, #12]
 800358c:	e015      	b.n	80035ba <HAL_RCCEx_PeriphCLKConfig+0x10e>
 800358e:	687b      	ldr	r3, [r7, #4]
 8003590:	3304      	adds	r3, #4
 8003592:	2100      	movs	r1, #0
 8003594:	4618      	mov	r0, r3
 8003596:	f000 fa85 	bl	8003aa4 <RCCEx_PLLSAI1_Config>
 800359a:	4603      	mov	r3, r0
 800359c:	74fb      	strb	r3, [r7, #19]
 800359e:	e00c      	b.n	80035ba <HAL_RCCEx_PeriphCLKConfig+0x10e>
 80035a0:	687b      	ldr	r3, [r7, #4]
 80035a2:	3320      	adds	r3, #32
 80035a4:	2100      	movs	r1, #0
 80035a6:	4618      	mov	r0, r3
 80035a8:	f000 fb6e 	bl	8003c88 <RCCEx_PLLSAI2_Config>
 80035ac:	4603      	mov	r3, r0
 80035ae:	74fb      	strb	r3, [r7, #19]
 80035b0:	e003      	b.n	80035ba <HAL_RCCEx_PeriphCLKConfig+0x10e>
 80035b2:	2301      	movs	r3, #1
 80035b4:	74fb      	strb	r3, [r7, #19]
 80035b6:	e000      	b.n	80035ba <HAL_RCCEx_PeriphCLKConfig+0x10e>
 80035b8:	bf00      	nop
 80035ba:	7cfb      	ldrb	r3, [r7, #19]
 80035bc:	2b00      	cmp	r3, #0
 80035be:	d10b      	bne.n	80035d8 <HAL_RCCEx_PeriphCLKConfig+0x12c>
 80035c0:	4b52      	ldr	r3, [pc, #328]	@ (800370c <HAL_RCCEx_PeriphCLKConfig+0x260>)
 80035c2:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80035c6:	f023 7240 	bic.w	r2, r3, #50331648	@ 0x3000000
 80035ca:	687b      	ldr	r3, [r7, #4]
 80035cc:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 80035ce:	494f      	ldr	r1, [pc, #316]	@ (800370c <HAL_RCCEx_PeriphCLKConfig+0x260>)
 80035d0:	4313      	orrs	r3, r2
 80035d2:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80035d6:	e001      	b.n	80035dc <HAL_RCCEx_PeriphCLKConfig+0x130>
 80035d8:	7cfb      	ldrb	r3, [r7, #19]
 80035da:	74bb      	strb	r3, [r7, #18]
 80035dc:	687b      	ldr	r3, [r7, #4]
 80035de:	681b      	ldr	r3, [r3, #0]
 80035e0:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80035e4:	2b00      	cmp	r3, #0
 80035e6:	f000 80a0 	beq.w	800372a <HAL_RCCEx_PeriphCLKConfig+0x27e>
 80035ea:	2300      	movs	r3, #0
 80035ec:	747b      	strb	r3, [r7, #17]
 80035ee:	4b47      	ldr	r3, [pc, #284]	@ (800370c <HAL_RCCEx_PeriphCLKConfig+0x260>)
 80035f0:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80035f2:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80035f6:	2b00      	cmp	r3, #0
 80035f8:	d101      	bne.n	80035fe <HAL_RCCEx_PeriphCLKConfig+0x152>
 80035fa:	2301      	movs	r3, #1
 80035fc:	e000      	b.n	8003600 <HAL_RCCEx_PeriphCLKConfig+0x154>
 80035fe:	2300      	movs	r3, #0
 8003600:	2b00      	cmp	r3, #0
 8003602:	d00d      	beq.n	8003620 <HAL_RCCEx_PeriphCLKConfig+0x174>
 8003604:	4b41      	ldr	r3, [pc, #260]	@ (800370c <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8003606:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003608:	4a40      	ldr	r2, [pc, #256]	@ (800370c <HAL_RCCEx_PeriphCLKConfig+0x260>)
 800360a:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800360e:	6593      	str	r3, [r2, #88]	@ 0x58
 8003610:	4b3e      	ldr	r3, [pc, #248]	@ (800370c <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8003612:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003614:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8003618:	60bb      	str	r3, [r7, #8]
 800361a:	68bb      	ldr	r3, [r7, #8]
 800361c:	2301      	movs	r3, #1
 800361e:	747b      	strb	r3, [r7, #17]
 8003620:	4b3b      	ldr	r3, [pc, #236]	@ (8003710 <HAL_RCCEx_PeriphCLKConfig+0x264>)
 8003622:	681b      	ldr	r3, [r3, #0]
 8003624:	4a3a      	ldr	r2, [pc, #232]	@ (8003710 <HAL_RCCEx_PeriphCLKConfig+0x264>)
 8003626:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800362a:	6013      	str	r3, [r2, #0]
 800362c:	f7fd fff6 	bl	800161c <HAL_GetTick>
 8003630:	60f8      	str	r0, [r7, #12]
 8003632:	e009      	b.n	8003648 <HAL_RCCEx_PeriphCLKConfig+0x19c>
 8003634:	f7fd fff2 	bl	800161c <HAL_GetTick>
 8003638:	4602      	mov	r2, r0
 800363a:	68fb      	ldr	r3, [r7, #12]
 800363c:	1ad3      	subs	r3, r2, r3
 800363e:	2b02      	cmp	r3, #2
 8003640:	d902      	bls.n	8003648 <HAL_RCCEx_PeriphCLKConfig+0x19c>
 8003642:	2303      	movs	r3, #3
 8003644:	74fb      	strb	r3, [r7, #19]
 8003646:	e005      	b.n	8003654 <HAL_RCCEx_PeriphCLKConfig+0x1a8>
 8003648:	4b31      	ldr	r3, [pc, #196]	@ (8003710 <HAL_RCCEx_PeriphCLKConfig+0x264>)
 800364a:	681b      	ldr	r3, [r3, #0]
 800364c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003650:	2b00      	cmp	r3, #0
 8003652:	d0ef      	beq.n	8003634 <HAL_RCCEx_PeriphCLKConfig+0x188>
 8003654:	7cfb      	ldrb	r3, [r7, #19]
 8003656:	2b00      	cmp	r3, #0
 8003658:	d15c      	bne.n	8003714 <HAL_RCCEx_PeriphCLKConfig+0x268>
 800365a:	4b2c      	ldr	r3, [pc, #176]	@ (800370c <HAL_RCCEx_PeriphCLKConfig+0x260>)
 800365c:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8003660:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8003664:	617b      	str	r3, [r7, #20]
 8003666:	697b      	ldr	r3, [r7, #20]
 8003668:	2b00      	cmp	r3, #0
 800366a:	d01f      	beq.n	80036ac <HAL_RCCEx_PeriphCLKConfig+0x200>
 800366c:	687b      	ldr	r3, [r7, #4]
 800366e:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8003672:	697a      	ldr	r2, [r7, #20]
 8003674:	429a      	cmp	r2, r3
 8003676:	d019      	beq.n	80036ac <HAL_RCCEx_PeriphCLKConfig+0x200>
 8003678:	4b24      	ldr	r3, [pc, #144]	@ (800370c <HAL_RCCEx_PeriphCLKConfig+0x260>)
 800367a:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800367e:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8003682:	617b      	str	r3, [r7, #20]
 8003684:	4b21      	ldr	r3, [pc, #132]	@ (800370c <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8003686:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800368a:	4a20      	ldr	r2, [pc, #128]	@ (800370c <HAL_RCCEx_PeriphCLKConfig+0x260>)
 800368c:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8003690:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8003694:	4b1d      	ldr	r3, [pc, #116]	@ (800370c <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8003696:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800369a:	4a1c      	ldr	r2, [pc, #112]	@ (800370c <HAL_RCCEx_PeriphCLKConfig+0x260>)
 800369c:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80036a0:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 80036a4:	4a19      	ldr	r2, [pc, #100]	@ (800370c <HAL_RCCEx_PeriphCLKConfig+0x260>)
 80036a6:	697b      	ldr	r3, [r7, #20]
 80036a8:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 80036ac:	697b      	ldr	r3, [r7, #20]
 80036ae:	f003 0301 	and.w	r3, r3, #1
 80036b2:	2b00      	cmp	r3, #0
 80036b4:	d016      	beq.n	80036e4 <HAL_RCCEx_PeriphCLKConfig+0x238>
 80036b6:	f7fd ffb1 	bl	800161c <HAL_GetTick>
 80036ba:	60f8      	str	r0, [r7, #12]
 80036bc:	e00b      	b.n	80036d6 <HAL_RCCEx_PeriphCLKConfig+0x22a>
 80036be:	f7fd ffad 	bl	800161c <HAL_GetTick>
 80036c2:	4602      	mov	r2, r0
 80036c4:	68fb      	ldr	r3, [r7, #12]
 80036c6:	1ad3      	subs	r3, r2, r3
 80036c8:	f241 3288 	movw	r2, #5000	@ 0x1388
 80036cc:	4293      	cmp	r3, r2
 80036ce:	d902      	bls.n	80036d6 <HAL_RCCEx_PeriphCLKConfig+0x22a>
 80036d0:	2303      	movs	r3, #3
 80036d2:	74fb      	strb	r3, [r7, #19]
 80036d4:	e006      	b.n	80036e4 <HAL_RCCEx_PeriphCLKConfig+0x238>
 80036d6:	4b0d      	ldr	r3, [pc, #52]	@ (800370c <HAL_RCCEx_PeriphCLKConfig+0x260>)
 80036d8:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80036dc:	f003 0302 	and.w	r3, r3, #2
 80036e0:	2b00      	cmp	r3, #0
 80036e2:	d0ec      	beq.n	80036be <HAL_RCCEx_PeriphCLKConfig+0x212>
 80036e4:	7cfb      	ldrb	r3, [r7, #19]
 80036e6:	2b00      	cmp	r3, #0
 80036e8:	d10c      	bne.n	8003704 <HAL_RCCEx_PeriphCLKConfig+0x258>
 80036ea:	4b08      	ldr	r3, [pc, #32]	@ (800370c <HAL_RCCEx_PeriphCLKConfig+0x260>)
 80036ec:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80036f0:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 80036f4:	687b      	ldr	r3, [r7, #4]
 80036f6:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80036fa:	4904      	ldr	r1, [pc, #16]	@ (800370c <HAL_RCCEx_PeriphCLKConfig+0x260>)
 80036fc:	4313      	orrs	r3, r2
 80036fe:	f8c1 3090 	str.w	r3, [r1, #144]	@ 0x90
 8003702:	e009      	b.n	8003718 <HAL_RCCEx_PeriphCLKConfig+0x26c>
 8003704:	7cfb      	ldrb	r3, [r7, #19]
 8003706:	74bb      	strb	r3, [r7, #18]
 8003708:	e006      	b.n	8003718 <HAL_RCCEx_PeriphCLKConfig+0x26c>
 800370a:	bf00      	nop
 800370c:	40021000 	.word	0x40021000
 8003710:	40007000 	.word	0x40007000
 8003714:	7cfb      	ldrb	r3, [r7, #19]
 8003716:	74bb      	strb	r3, [r7, #18]
 8003718:	7c7b      	ldrb	r3, [r7, #17]
 800371a:	2b01      	cmp	r3, #1
 800371c:	d105      	bne.n	800372a <HAL_RCCEx_PeriphCLKConfig+0x27e>
 800371e:	4ba6      	ldr	r3, [pc, #664]	@ (80039b8 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 8003720:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003722:	4aa5      	ldr	r2, [pc, #660]	@ (80039b8 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 8003724:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8003728:	6593      	str	r3, [r2, #88]	@ 0x58
 800372a:	687b      	ldr	r3, [r7, #4]
 800372c:	681b      	ldr	r3, [r3, #0]
 800372e:	f003 0301 	and.w	r3, r3, #1
 8003732:	2b00      	cmp	r3, #0
 8003734:	d00a      	beq.n	800374c <HAL_RCCEx_PeriphCLKConfig+0x2a0>
 8003736:	4ba0      	ldr	r3, [pc, #640]	@ (80039b8 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 8003738:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800373c:	f023 0203 	bic.w	r2, r3, #3
 8003740:	687b      	ldr	r3, [r7, #4]
 8003742:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8003744:	499c      	ldr	r1, [pc, #624]	@ (80039b8 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 8003746:	4313      	orrs	r3, r2
 8003748:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 800374c:	687b      	ldr	r3, [r7, #4]
 800374e:	681b      	ldr	r3, [r3, #0]
 8003750:	f003 0302 	and.w	r3, r3, #2
 8003754:	2b00      	cmp	r3, #0
 8003756:	d00a      	beq.n	800376e <HAL_RCCEx_PeriphCLKConfig+0x2c2>
 8003758:	4b97      	ldr	r3, [pc, #604]	@ (80039b8 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 800375a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800375e:	f023 020c 	bic.w	r2, r3, #12
 8003762:	687b      	ldr	r3, [r7, #4]
 8003764:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003766:	4994      	ldr	r1, [pc, #592]	@ (80039b8 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 8003768:	4313      	orrs	r3, r2
 800376a:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 800376e:	687b      	ldr	r3, [r7, #4]
 8003770:	681b      	ldr	r3, [r3, #0]
 8003772:	f003 0304 	and.w	r3, r3, #4
 8003776:	2b00      	cmp	r3, #0
 8003778:	d00a      	beq.n	8003790 <HAL_RCCEx_PeriphCLKConfig+0x2e4>
 800377a:	4b8f      	ldr	r3, [pc, #572]	@ (80039b8 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 800377c:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8003780:	f023 0230 	bic.w	r2, r3, #48	@ 0x30
 8003784:	687b      	ldr	r3, [r7, #4]
 8003786:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003788:	498b      	ldr	r1, [pc, #556]	@ (80039b8 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 800378a:	4313      	orrs	r3, r2
 800378c:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8003790:	687b      	ldr	r3, [r7, #4]
 8003792:	681b      	ldr	r3, [r3, #0]
 8003794:	f003 0308 	and.w	r3, r3, #8
 8003798:	2b00      	cmp	r3, #0
 800379a:	d00a      	beq.n	80037b2 <HAL_RCCEx_PeriphCLKConfig+0x306>
 800379c:	4b86      	ldr	r3, [pc, #536]	@ (80039b8 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 800379e:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80037a2:	f023 02c0 	bic.w	r2, r3, #192	@ 0xc0
 80037a6:	687b      	ldr	r3, [r7, #4]
 80037a8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80037aa:	4983      	ldr	r1, [pc, #524]	@ (80039b8 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 80037ac:	4313      	orrs	r3, r2
 80037ae:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80037b2:	687b      	ldr	r3, [r7, #4]
 80037b4:	681b      	ldr	r3, [r3, #0]
 80037b6:	f003 0310 	and.w	r3, r3, #16
 80037ba:	2b00      	cmp	r3, #0
 80037bc:	d00a      	beq.n	80037d4 <HAL_RCCEx_PeriphCLKConfig+0x328>
 80037be:	4b7e      	ldr	r3, [pc, #504]	@ (80039b8 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 80037c0:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80037c4:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 80037c8:	687b      	ldr	r3, [r7, #4]
 80037ca:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80037cc:	497a      	ldr	r1, [pc, #488]	@ (80039b8 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 80037ce:	4313      	orrs	r3, r2
 80037d0:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80037d4:	687b      	ldr	r3, [r7, #4]
 80037d6:	681b      	ldr	r3, [r3, #0]
 80037d8:	f003 0320 	and.w	r3, r3, #32
 80037dc:	2b00      	cmp	r3, #0
 80037de:	d00a      	beq.n	80037f6 <HAL_RCCEx_PeriphCLKConfig+0x34a>
 80037e0:	4b75      	ldr	r3, [pc, #468]	@ (80039b8 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 80037e2:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80037e6:	f423 6240 	bic.w	r2, r3, #3072	@ 0xc00
 80037ea:	687b      	ldr	r3, [r7, #4]
 80037ec:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80037ee:	4972      	ldr	r1, [pc, #456]	@ (80039b8 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 80037f0:	4313      	orrs	r3, r2
 80037f2:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80037f6:	687b      	ldr	r3, [r7, #4]
 80037f8:	681b      	ldr	r3, [r3, #0]
 80037fa:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 80037fe:	2b00      	cmp	r3, #0
 8003800:	d00a      	beq.n	8003818 <HAL_RCCEx_PeriphCLKConfig+0x36c>
 8003802:	4b6d      	ldr	r3, [pc, #436]	@ (80039b8 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 8003804:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8003808:	f423 2240 	bic.w	r2, r3, #786432	@ 0xc0000
 800380c:	687b      	ldr	r3, [r7, #4]
 800380e:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003810:	4969      	ldr	r1, [pc, #420]	@ (80039b8 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 8003812:	4313      	orrs	r3, r2
 8003814:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8003818:	687b      	ldr	r3, [r7, #4]
 800381a:	681b      	ldr	r3, [r3, #0]
 800381c:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8003820:	2b00      	cmp	r3, #0
 8003822:	d00a      	beq.n	800383a <HAL_RCCEx_PeriphCLKConfig+0x38e>
 8003824:	4b64      	ldr	r3, [pc, #400]	@ (80039b8 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 8003826:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800382a:	f423 1240 	bic.w	r2, r3, #3145728	@ 0x300000
 800382e:	687b      	ldr	r3, [r7, #4]
 8003830:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8003832:	4961      	ldr	r1, [pc, #388]	@ (80039b8 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 8003834:	4313      	orrs	r3, r2
 8003836:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 800383a:	687b      	ldr	r3, [r7, #4]
 800383c:	681b      	ldr	r3, [r3, #0]
 800383e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003842:	2b00      	cmp	r3, #0
 8003844:	d00a      	beq.n	800385c <HAL_RCCEx_PeriphCLKConfig+0x3b0>
 8003846:	4b5c      	ldr	r3, [pc, #368]	@ (80039b8 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 8003848:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800384c:	f423 5240 	bic.w	r2, r3, #12288	@ 0x3000
 8003850:	687b      	ldr	r3, [r7, #4]
 8003852:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8003854:	4958      	ldr	r1, [pc, #352]	@ (80039b8 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 8003856:	4313      	orrs	r3, r2
 8003858:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 800385c:	687b      	ldr	r3, [r7, #4]
 800385e:	681b      	ldr	r3, [r3, #0]
 8003860:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003864:	2b00      	cmp	r3, #0
 8003866:	d00a      	beq.n	800387e <HAL_RCCEx_PeriphCLKConfig+0x3d2>
 8003868:	4b53      	ldr	r3, [pc, #332]	@ (80039b8 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 800386a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800386e:	f423 4240 	bic.w	r2, r3, #49152	@ 0xc000
 8003872:	687b      	ldr	r3, [r7, #4]
 8003874:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003876:	4950      	ldr	r1, [pc, #320]	@ (80039b8 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 8003878:	4313      	orrs	r3, r2
 800387a:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 800387e:	687b      	ldr	r3, [r7, #4]
 8003880:	681b      	ldr	r3, [r3, #0]
 8003882:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003886:	2b00      	cmp	r3, #0
 8003888:	d00a      	beq.n	80038a0 <HAL_RCCEx_PeriphCLKConfig+0x3f4>
 800388a:	4b4b      	ldr	r3, [pc, #300]	@ (80039b8 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 800388c:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8003890:	f423 3240 	bic.w	r2, r3, #196608	@ 0x30000
 8003894:	687b      	ldr	r3, [r7, #4]
 8003896:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003898:	4947      	ldr	r1, [pc, #284]	@ (80039b8 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 800389a:	4313      	orrs	r3, r2
 800389c:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80038a0:	687b      	ldr	r3, [r7, #4]
 80038a2:	681b      	ldr	r3, [r3, #0]
 80038a4:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 80038a8:	2b00      	cmp	r3, #0
 80038aa:	d00a      	beq.n	80038c2 <HAL_RCCEx_PeriphCLKConfig+0x416>
 80038ac:	4b42      	ldr	r3, [pc, #264]	@ (80039b8 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 80038ae:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 80038b2:	f023 0203 	bic.w	r2, r3, #3
 80038b6:	687b      	ldr	r3, [r7, #4]
 80038b8:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80038ba:	493f      	ldr	r1, [pc, #252]	@ (80039b8 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 80038bc:	4313      	orrs	r3, r2
 80038be:	f8c1 309c 	str.w	r3, [r1, #156]	@ 0x9c
 80038c2:	687b      	ldr	r3, [r7, #4]
 80038c4:	681b      	ldr	r3, [r3, #0]
 80038c6:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 80038ca:	2b00      	cmp	r3, #0
 80038cc:	d028      	beq.n	8003920 <HAL_RCCEx_PeriphCLKConfig+0x474>
 80038ce:	4b3a      	ldr	r3, [pc, #232]	@ (80039b8 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 80038d0:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80038d4:	f023 6240 	bic.w	r2, r3, #201326592	@ 0xc000000
 80038d8:	687b      	ldr	r3, [r7, #4]
 80038da:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80038dc:	4936      	ldr	r1, [pc, #216]	@ (80039b8 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 80038de:	4313      	orrs	r3, r2
 80038e0:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80038e4:	687b      	ldr	r3, [r7, #4]
 80038e6:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80038e8:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 80038ec:	d106      	bne.n	80038fc <HAL_RCCEx_PeriphCLKConfig+0x450>
 80038ee:	4b32      	ldr	r3, [pc, #200]	@ (80039b8 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 80038f0:	68db      	ldr	r3, [r3, #12]
 80038f2:	4a31      	ldr	r2, [pc, #196]	@ (80039b8 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 80038f4:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 80038f8:	60d3      	str	r3, [r2, #12]
 80038fa:	e011      	b.n	8003920 <HAL_RCCEx_PeriphCLKConfig+0x474>
 80038fc:	687b      	ldr	r3, [r7, #4]
 80038fe:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8003900:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 8003904:	d10c      	bne.n	8003920 <HAL_RCCEx_PeriphCLKConfig+0x474>
 8003906:	687b      	ldr	r3, [r7, #4]
 8003908:	3304      	adds	r3, #4
 800390a:	2101      	movs	r1, #1
 800390c:	4618      	mov	r0, r3
 800390e:	f000 f8c9 	bl	8003aa4 <RCCEx_PLLSAI1_Config>
 8003912:	4603      	mov	r3, r0
 8003914:	74fb      	strb	r3, [r7, #19]
 8003916:	7cfb      	ldrb	r3, [r7, #19]
 8003918:	2b00      	cmp	r3, #0
 800391a:	d001      	beq.n	8003920 <HAL_RCCEx_PeriphCLKConfig+0x474>
 800391c:	7cfb      	ldrb	r3, [r7, #19]
 800391e:	74bb      	strb	r3, [r7, #18]
 8003920:	687b      	ldr	r3, [r7, #4]
 8003922:	681b      	ldr	r3, [r3, #0]
 8003924:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8003928:	2b00      	cmp	r3, #0
 800392a:	d028      	beq.n	800397e <HAL_RCCEx_PeriphCLKConfig+0x4d2>
 800392c:	4b22      	ldr	r3, [pc, #136]	@ (80039b8 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 800392e:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8003932:	f023 6240 	bic.w	r2, r3, #201326592	@ 0xc000000
 8003936:	687b      	ldr	r3, [r7, #4]
 8003938:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800393a:	491f      	ldr	r1, [pc, #124]	@ (80039b8 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 800393c:	4313      	orrs	r3, r2
 800393e:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8003942:	687b      	ldr	r3, [r7, #4]
 8003944:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8003946:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 800394a:	d106      	bne.n	800395a <HAL_RCCEx_PeriphCLKConfig+0x4ae>
 800394c:	4b1a      	ldr	r3, [pc, #104]	@ (80039b8 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 800394e:	68db      	ldr	r3, [r3, #12]
 8003950:	4a19      	ldr	r2, [pc, #100]	@ (80039b8 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 8003952:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8003956:	60d3      	str	r3, [r2, #12]
 8003958:	e011      	b.n	800397e <HAL_RCCEx_PeriphCLKConfig+0x4d2>
 800395a:	687b      	ldr	r3, [r7, #4]
 800395c:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800395e:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 8003962:	d10c      	bne.n	800397e <HAL_RCCEx_PeriphCLKConfig+0x4d2>
 8003964:	687b      	ldr	r3, [r7, #4]
 8003966:	3304      	adds	r3, #4
 8003968:	2101      	movs	r1, #1
 800396a:	4618      	mov	r0, r3
 800396c:	f000 f89a 	bl	8003aa4 <RCCEx_PLLSAI1_Config>
 8003970:	4603      	mov	r3, r0
 8003972:	74fb      	strb	r3, [r7, #19]
 8003974:	7cfb      	ldrb	r3, [r7, #19]
 8003976:	2b00      	cmp	r3, #0
 8003978:	d001      	beq.n	800397e <HAL_RCCEx_PeriphCLKConfig+0x4d2>
 800397a:	7cfb      	ldrb	r3, [r7, #19]
 800397c:	74bb      	strb	r3, [r7, #18]
 800397e:	687b      	ldr	r3, [r7, #4]
 8003980:	681b      	ldr	r3, [r3, #0]
 8003982:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8003986:	2b00      	cmp	r3, #0
 8003988:	d02a      	beq.n	80039e0 <HAL_RCCEx_PeriphCLKConfig+0x534>
 800398a:	4b0b      	ldr	r3, [pc, #44]	@ (80039b8 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 800398c:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8003990:	f023 6240 	bic.w	r2, r3, #201326592	@ 0xc000000
 8003994:	687b      	ldr	r3, [r7, #4]
 8003996:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 8003998:	4907      	ldr	r1, [pc, #28]	@ (80039b8 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 800399a:	4313      	orrs	r3, r2
 800399c:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80039a0:	687b      	ldr	r3, [r7, #4]
 80039a2:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 80039a4:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 80039a8:	d108      	bne.n	80039bc <HAL_RCCEx_PeriphCLKConfig+0x510>
 80039aa:	4b03      	ldr	r3, [pc, #12]	@ (80039b8 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 80039ac:	68db      	ldr	r3, [r3, #12]
 80039ae:	4a02      	ldr	r2, [pc, #8]	@ (80039b8 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 80039b0:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 80039b4:	60d3      	str	r3, [r2, #12]
 80039b6:	e013      	b.n	80039e0 <HAL_RCCEx_PeriphCLKConfig+0x534>
 80039b8:	40021000 	.word	0x40021000
 80039bc:	687b      	ldr	r3, [r7, #4]
 80039be:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 80039c0:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 80039c4:	d10c      	bne.n	80039e0 <HAL_RCCEx_PeriphCLKConfig+0x534>
 80039c6:	687b      	ldr	r3, [r7, #4]
 80039c8:	3304      	adds	r3, #4
 80039ca:	2101      	movs	r1, #1
 80039cc:	4618      	mov	r0, r3
 80039ce:	f000 f869 	bl	8003aa4 <RCCEx_PLLSAI1_Config>
 80039d2:	4603      	mov	r3, r0
 80039d4:	74fb      	strb	r3, [r7, #19]
 80039d6:	7cfb      	ldrb	r3, [r7, #19]
 80039d8:	2b00      	cmp	r3, #0
 80039da:	d001      	beq.n	80039e0 <HAL_RCCEx_PeriphCLKConfig+0x534>
 80039dc:	7cfb      	ldrb	r3, [r7, #19]
 80039de:	74bb      	strb	r3, [r7, #18]
 80039e0:	687b      	ldr	r3, [r7, #4]
 80039e2:	681b      	ldr	r3, [r3, #0]
 80039e4:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80039e8:	2b00      	cmp	r3, #0
 80039ea:	d02f      	beq.n	8003a4c <HAL_RCCEx_PeriphCLKConfig+0x5a0>
 80039ec:	4b2c      	ldr	r3, [pc, #176]	@ (8003aa0 <HAL_RCCEx_PeriphCLKConfig+0x5f4>)
 80039ee:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80039f2:	f023 5240 	bic.w	r2, r3, #805306368	@ 0x30000000
 80039f6:	687b      	ldr	r3, [r7, #4]
 80039f8:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 80039fa:	4929      	ldr	r1, [pc, #164]	@ (8003aa0 <HAL_RCCEx_PeriphCLKConfig+0x5f4>)
 80039fc:	4313      	orrs	r3, r2
 80039fe:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8003a02:	687b      	ldr	r3, [r7, #4]
 8003a04:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8003a06:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8003a0a:	d10d      	bne.n	8003a28 <HAL_RCCEx_PeriphCLKConfig+0x57c>
 8003a0c:	687b      	ldr	r3, [r7, #4]
 8003a0e:	3304      	adds	r3, #4
 8003a10:	2102      	movs	r1, #2
 8003a12:	4618      	mov	r0, r3
 8003a14:	f000 f846 	bl	8003aa4 <RCCEx_PLLSAI1_Config>
 8003a18:	4603      	mov	r3, r0
 8003a1a:	74fb      	strb	r3, [r7, #19]
 8003a1c:	7cfb      	ldrb	r3, [r7, #19]
 8003a1e:	2b00      	cmp	r3, #0
 8003a20:	d014      	beq.n	8003a4c <HAL_RCCEx_PeriphCLKConfig+0x5a0>
 8003a22:	7cfb      	ldrb	r3, [r7, #19]
 8003a24:	74bb      	strb	r3, [r7, #18]
 8003a26:	e011      	b.n	8003a4c <HAL_RCCEx_PeriphCLKConfig+0x5a0>
 8003a28:	687b      	ldr	r3, [r7, #4]
 8003a2a:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8003a2c:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8003a30:	d10c      	bne.n	8003a4c <HAL_RCCEx_PeriphCLKConfig+0x5a0>
 8003a32:	687b      	ldr	r3, [r7, #4]
 8003a34:	3320      	adds	r3, #32
 8003a36:	2102      	movs	r1, #2
 8003a38:	4618      	mov	r0, r3
 8003a3a:	f000 f925 	bl	8003c88 <RCCEx_PLLSAI2_Config>
 8003a3e:	4603      	mov	r3, r0
 8003a40:	74fb      	strb	r3, [r7, #19]
 8003a42:	7cfb      	ldrb	r3, [r7, #19]
 8003a44:	2b00      	cmp	r3, #0
 8003a46:	d001      	beq.n	8003a4c <HAL_RCCEx_PeriphCLKConfig+0x5a0>
 8003a48:	7cfb      	ldrb	r3, [r7, #19]
 8003a4a:	74bb      	strb	r3, [r7, #18]
 8003a4c:	687b      	ldr	r3, [r7, #4]
 8003a4e:	681b      	ldr	r3, [r3, #0]
 8003a50:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8003a54:	2b00      	cmp	r3, #0
 8003a56:	d00b      	beq.n	8003a70 <HAL_RCCEx_PeriphCLKConfig+0x5c4>
 8003a58:	4b11      	ldr	r3, [pc, #68]	@ (8003aa0 <HAL_RCCEx_PeriphCLKConfig+0x5f4>)
 8003a5a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8003a5e:	f023 4280 	bic.w	r2, r3, #1073741824	@ 0x40000000
 8003a62:	687b      	ldr	r3, [r7, #4]
 8003a64:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8003a68:	490d      	ldr	r1, [pc, #52]	@ (8003aa0 <HAL_RCCEx_PeriphCLKConfig+0x5f4>)
 8003a6a:	4313      	orrs	r3, r2
 8003a6c:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8003a70:	687b      	ldr	r3, [r7, #4]
 8003a72:	681b      	ldr	r3, [r3, #0]
 8003a74:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8003a78:	2b00      	cmp	r3, #0
 8003a7a:	d00b      	beq.n	8003a94 <HAL_RCCEx_PeriphCLKConfig+0x5e8>
 8003a7c:	4b08      	ldr	r3, [pc, #32]	@ (8003aa0 <HAL_RCCEx_PeriphCLKConfig+0x5f4>)
 8003a7e:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8003a82:	f023 4200 	bic.w	r2, r3, #2147483648	@ 0x80000000
 8003a86:	687b      	ldr	r3, [r7, #4]
 8003a88:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8003a8c:	4904      	ldr	r1, [pc, #16]	@ (8003aa0 <HAL_RCCEx_PeriphCLKConfig+0x5f4>)
 8003a8e:	4313      	orrs	r3, r2
 8003a90:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8003a94:	7cbb      	ldrb	r3, [r7, #18]
 8003a96:	4618      	mov	r0, r3
 8003a98:	3718      	adds	r7, #24
 8003a9a:	46bd      	mov	sp, r7
 8003a9c:	bd80      	pop	{r7, pc}
 8003a9e:	bf00      	nop
 8003aa0:	40021000 	.word	0x40021000

08003aa4 <RCCEx_PLLSAI1_Config>:
 8003aa4:	b580      	push	{r7, lr}
 8003aa6:	b084      	sub	sp, #16
 8003aa8:	af00      	add	r7, sp, #0
 8003aaa:	6078      	str	r0, [r7, #4]
 8003aac:	6039      	str	r1, [r7, #0]
 8003aae:	2300      	movs	r3, #0
 8003ab0:	73fb      	strb	r3, [r7, #15]
 8003ab2:	4b74      	ldr	r3, [pc, #464]	@ (8003c84 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003ab4:	68db      	ldr	r3, [r3, #12]
 8003ab6:	f003 0303 	and.w	r3, r3, #3
 8003aba:	2b00      	cmp	r3, #0
 8003abc:	d018      	beq.n	8003af0 <RCCEx_PLLSAI1_Config+0x4c>
 8003abe:	4b71      	ldr	r3, [pc, #452]	@ (8003c84 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003ac0:	68db      	ldr	r3, [r3, #12]
 8003ac2:	f003 0203 	and.w	r2, r3, #3
 8003ac6:	687b      	ldr	r3, [r7, #4]
 8003ac8:	681b      	ldr	r3, [r3, #0]
 8003aca:	429a      	cmp	r2, r3
 8003acc:	d10d      	bne.n	8003aea <RCCEx_PLLSAI1_Config+0x46>
 8003ace:	687b      	ldr	r3, [r7, #4]
 8003ad0:	681b      	ldr	r3, [r3, #0]
 8003ad2:	2b00      	cmp	r3, #0
 8003ad4:	d009      	beq.n	8003aea <RCCEx_PLLSAI1_Config+0x46>
 8003ad6:	4b6b      	ldr	r3, [pc, #428]	@ (8003c84 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003ad8:	68db      	ldr	r3, [r3, #12]
 8003ada:	091b      	lsrs	r3, r3, #4
 8003adc:	f003 0307 	and.w	r3, r3, #7
 8003ae0:	1c5a      	adds	r2, r3, #1
 8003ae2:	687b      	ldr	r3, [r7, #4]
 8003ae4:	685b      	ldr	r3, [r3, #4]
 8003ae6:	429a      	cmp	r2, r3
 8003ae8:	d047      	beq.n	8003b7a <RCCEx_PLLSAI1_Config+0xd6>
 8003aea:	2301      	movs	r3, #1
 8003aec:	73fb      	strb	r3, [r7, #15]
 8003aee:	e044      	b.n	8003b7a <RCCEx_PLLSAI1_Config+0xd6>
 8003af0:	687b      	ldr	r3, [r7, #4]
 8003af2:	681b      	ldr	r3, [r3, #0]
 8003af4:	2b03      	cmp	r3, #3
 8003af6:	d018      	beq.n	8003b2a <RCCEx_PLLSAI1_Config+0x86>
 8003af8:	2b03      	cmp	r3, #3
 8003afa:	d825      	bhi.n	8003b48 <RCCEx_PLLSAI1_Config+0xa4>
 8003afc:	2b01      	cmp	r3, #1
 8003afe:	d002      	beq.n	8003b06 <RCCEx_PLLSAI1_Config+0x62>
 8003b00:	2b02      	cmp	r3, #2
 8003b02:	d009      	beq.n	8003b18 <RCCEx_PLLSAI1_Config+0x74>
 8003b04:	e020      	b.n	8003b48 <RCCEx_PLLSAI1_Config+0xa4>
 8003b06:	4b5f      	ldr	r3, [pc, #380]	@ (8003c84 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003b08:	681b      	ldr	r3, [r3, #0]
 8003b0a:	f003 0302 	and.w	r3, r3, #2
 8003b0e:	2b00      	cmp	r3, #0
 8003b10:	d11d      	bne.n	8003b4e <RCCEx_PLLSAI1_Config+0xaa>
 8003b12:	2301      	movs	r3, #1
 8003b14:	73fb      	strb	r3, [r7, #15]
 8003b16:	e01a      	b.n	8003b4e <RCCEx_PLLSAI1_Config+0xaa>
 8003b18:	4b5a      	ldr	r3, [pc, #360]	@ (8003c84 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003b1a:	681b      	ldr	r3, [r3, #0]
 8003b1c:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8003b20:	2b00      	cmp	r3, #0
 8003b22:	d116      	bne.n	8003b52 <RCCEx_PLLSAI1_Config+0xae>
 8003b24:	2301      	movs	r3, #1
 8003b26:	73fb      	strb	r3, [r7, #15]
 8003b28:	e013      	b.n	8003b52 <RCCEx_PLLSAI1_Config+0xae>
 8003b2a:	4b56      	ldr	r3, [pc, #344]	@ (8003c84 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003b2c:	681b      	ldr	r3, [r3, #0]
 8003b2e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003b32:	2b00      	cmp	r3, #0
 8003b34:	d10f      	bne.n	8003b56 <RCCEx_PLLSAI1_Config+0xb2>
 8003b36:	4b53      	ldr	r3, [pc, #332]	@ (8003c84 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003b38:	681b      	ldr	r3, [r3, #0]
 8003b3a:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8003b3e:	2b00      	cmp	r3, #0
 8003b40:	d109      	bne.n	8003b56 <RCCEx_PLLSAI1_Config+0xb2>
 8003b42:	2301      	movs	r3, #1
 8003b44:	73fb      	strb	r3, [r7, #15]
 8003b46:	e006      	b.n	8003b56 <RCCEx_PLLSAI1_Config+0xb2>
 8003b48:	2301      	movs	r3, #1
 8003b4a:	73fb      	strb	r3, [r7, #15]
 8003b4c:	e004      	b.n	8003b58 <RCCEx_PLLSAI1_Config+0xb4>
 8003b4e:	bf00      	nop
 8003b50:	e002      	b.n	8003b58 <RCCEx_PLLSAI1_Config+0xb4>
 8003b52:	bf00      	nop
 8003b54:	e000      	b.n	8003b58 <RCCEx_PLLSAI1_Config+0xb4>
 8003b56:	bf00      	nop
 8003b58:	7bfb      	ldrb	r3, [r7, #15]
 8003b5a:	2b00      	cmp	r3, #0
 8003b5c:	d10d      	bne.n	8003b7a <RCCEx_PLLSAI1_Config+0xd6>
 8003b5e:	4b49      	ldr	r3, [pc, #292]	@ (8003c84 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003b60:	68db      	ldr	r3, [r3, #12]
 8003b62:	f023 0273 	bic.w	r2, r3, #115	@ 0x73
 8003b66:	687b      	ldr	r3, [r7, #4]
 8003b68:	6819      	ldr	r1, [r3, #0]
 8003b6a:	687b      	ldr	r3, [r7, #4]
 8003b6c:	685b      	ldr	r3, [r3, #4]
 8003b6e:	3b01      	subs	r3, #1
 8003b70:	011b      	lsls	r3, r3, #4
 8003b72:	430b      	orrs	r3, r1
 8003b74:	4943      	ldr	r1, [pc, #268]	@ (8003c84 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003b76:	4313      	orrs	r3, r2
 8003b78:	60cb      	str	r3, [r1, #12]
 8003b7a:	7bfb      	ldrb	r3, [r7, #15]
 8003b7c:	2b00      	cmp	r3, #0
 8003b7e:	d17c      	bne.n	8003c7a <RCCEx_PLLSAI1_Config+0x1d6>
 8003b80:	4b40      	ldr	r3, [pc, #256]	@ (8003c84 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003b82:	681b      	ldr	r3, [r3, #0]
 8003b84:	4a3f      	ldr	r2, [pc, #252]	@ (8003c84 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003b86:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 8003b8a:	6013      	str	r3, [r2, #0]
 8003b8c:	f7fd fd46 	bl	800161c <HAL_GetTick>
 8003b90:	60b8      	str	r0, [r7, #8]
 8003b92:	e009      	b.n	8003ba8 <RCCEx_PLLSAI1_Config+0x104>
 8003b94:	f7fd fd42 	bl	800161c <HAL_GetTick>
 8003b98:	4602      	mov	r2, r0
 8003b9a:	68bb      	ldr	r3, [r7, #8]
 8003b9c:	1ad3      	subs	r3, r2, r3
 8003b9e:	2b02      	cmp	r3, #2
 8003ba0:	d902      	bls.n	8003ba8 <RCCEx_PLLSAI1_Config+0x104>
 8003ba2:	2303      	movs	r3, #3
 8003ba4:	73fb      	strb	r3, [r7, #15]
 8003ba6:	e005      	b.n	8003bb4 <RCCEx_PLLSAI1_Config+0x110>
 8003ba8:	4b36      	ldr	r3, [pc, #216]	@ (8003c84 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003baa:	681b      	ldr	r3, [r3, #0]
 8003bac:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 8003bb0:	2b00      	cmp	r3, #0
 8003bb2:	d1ef      	bne.n	8003b94 <RCCEx_PLLSAI1_Config+0xf0>
 8003bb4:	7bfb      	ldrb	r3, [r7, #15]
 8003bb6:	2b00      	cmp	r3, #0
 8003bb8:	d15f      	bne.n	8003c7a <RCCEx_PLLSAI1_Config+0x1d6>
 8003bba:	683b      	ldr	r3, [r7, #0]
 8003bbc:	2b00      	cmp	r3, #0
 8003bbe:	d110      	bne.n	8003be2 <RCCEx_PLLSAI1_Config+0x13e>
 8003bc0:	4b30      	ldr	r3, [pc, #192]	@ (8003c84 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003bc2:	691b      	ldr	r3, [r3, #16]
 8003bc4:	f023 4378 	bic.w	r3, r3, #4160749568	@ 0xf8000000
 8003bc8:	f423 43fe 	bic.w	r3, r3, #32512	@ 0x7f00
 8003bcc:	687a      	ldr	r2, [r7, #4]
 8003bce:	6892      	ldr	r2, [r2, #8]
 8003bd0:	0211      	lsls	r1, r2, #8
 8003bd2:	687a      	ldr	r2, [r7, #4]
 8003bd4:	68d2      	ldr	r2, [r2, #12]
 8003bd6:	06d2      	lsls	r2, r2, #27
 8003bd8:	430a      	orrs	r2, r1
 8003bda:	492a      	ldr	r1, [pc, #168]	@ (8003c84 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003bdc:	4313      	orrs	r3, r2
 8003bde:	610b      	str	r3, [r1, #16]
 8003be0:	e027      	b.n	8003c32 <RCCEx_PLLSAI1_Config+0x18e>
 8003be2:	683b      	ldr	r3, [r7, #0]
 8003be4:	2b01      	cmp	r3, #1
 8003be6:	d112      	bne.n	8003c0e <RCCEx_PLLSAI1_Config+0x16a>
 8003be8:	4b26      	ldr	r3, [pc, #152]	@ (8003c84 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003bea:	691b      	ldr	r3, [r3, #16]
 8003bec:	f423 03c0 	bic.w	r3, r3, #6291456	@ 0x600000
 8003bf0:	f423 43fe 	bic.w	r3, r3, #32512	@ 0x7f00
 8003bf4:	687a      	ldr	r2, [r7, #4]
 8003bf6:	6892      	ldr	r2, [r2, #8]
 8003bf8:	0211      	lsls	r1, r2, #8
 8003bfa:	687a      	ldr	r2, [r7, #4]
 8003bfc:	6912      	ldr	r2, [r2, #16]
 8003bfe:	0852      	lsrs	r2, r2, #1
 8003c00:	3a01      	subs	r2, #1
 8003c02:	0552      	lsls	r2, r2, #21
 8003c04:	430a      	orrs	r2, r1
 8003c06:	491f      	ldr	r1, [pc, #124]	@ (8003c84 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003c08:	4313      	orrs	r3, r2
 8003c0a:	610b      	str	r3, [r1, #16]
 8003c0c:	e011      	b.n	8003c32 <RCCEx_PLLSAI1_Config+0x18e>
 8003c0e:	4b1d      	ldr	r3, [pc, #116]	@ (8003c84 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003c10:	691b      	ldr	r3, [r3, #16]
 8003c12:	f023 63c0 	bic.w	r3, r3, #100663296	@ 0x6000000
 8003c16:	f423 43fe 	bic.w	r3, r3, #32512	@ 0x7f00
 8003c1a:	687a      	ldr	r2, [r7, #4]
 8003c1c:	6892      	ldr	r2, [r2, #8]
 8003c1e:	0211      	lsls	r1, r2, #8
 8003c20:	687a      	ldr	r2, [r7, #4]
 8003c22:	6952      	ldr	r2, [r2, #20]
 8003c24:	0852      	lsrs	r2, r2, #1
 8003c26:	3a01      	subs	r2, #1
 8003c28:	0652      	lsls	r2, r2, #25
 8003c2a:	430a      	orrs	r2, r1
 8003c2c:	4915      	ldr	r1, [pc, #84]	@ (8003c84 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003c2e:	4313      	orrs	r3, r2
 8003c30:	610b      	str	r3, [r1, #16]
 8003c32:	4b14      	ldr	r3, [pc, #80]	@ (8003c84 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003c34:	681b      	ldr	r3, [r3, #0]
 8003c36:	4a13      	ldr	r2, [pc, #76]	@ (8003c84 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003c38:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 8003c3c:	6013      	str	r3, [r2, #0]
 8003c3e:	f7fd fced 	bl	800161c <HAL_GetTick>
 8003c42:	60b8      	str	r0, [r7, #8]
 8003c44:	e009      	b.n	8003c5a <RCCEx_PLLSAI1_Config+0x1b6>
 8003c46:	f7fd fce9 	bl	800161c <HAL_GetTick>
 8003c4a:	4602      	mov	r2, r0
 8003c4c:	68bb      	ldr	r3, [r7, #8]
 8003c4e:	1ad3      	subs	r3, r2, r3
 8003c50:	2b02      	cmp	r3, #2
 8003c52:	d902      	bls.n	8003c5a <RCCEx_PLLSAI1_Config+0x1b6>
 8003c54:	2303      	movs	r3, #3
 8003c56:	73fb      	strb	r3, [r7, #15]
 8003c58:	e005      	b.n	8003c66 <RCCEx_PLLSAI1_Config+0x1c2>
 8003c5a:	4b0a      	ldr	r3, [pc, #40]	@ (8003c84 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003c5c:	681b      	ldr	r3, [r3, #0]
 8003c5e:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 8003c62:	2b00      	cmp	r3, #0
 8003c64:	d0ef      	beq.n	8003c46 <RCCEx_PLLSAI1_Config+0x1a2>
 8003c66:	7bfb      	ldrb	r3, [r7, #15]
 8003c68:	2b00      	cmp	r3, #0
 8003c6a:	d106      	bne.n	8003c7a <RCCEx_PLLSAI1_Config+0x1d6>
 8003c6c:	4b05      	ldr	r3, [pc, #20]	@ (8003c84 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003c6e:	691a      	ldr	r2, [r3, #16]
 8003c70:	687b      	ldr	r3, [r7, #4]
 8003c72:	699b      	ldr	r3, [r3, #24]
 8003c74:	4903      	ldr	r1, [pc, #12]	@ (8003c84 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003c76:	4313      	orrs	r3, r2
 8003c78:	610b      	str	r3, [r1, #16]
 8003c7a:	7bfb      	ldrb	r3, [r7, #15]
 8003c7c:	4618      	mov	r0, r3
 8003c7e:	3710      	adds	r7, #16
 8003c80:	46bd      	mov	sp, r7
 8003c82:	bd80      	pop	{r7, pc}
 8003c84:	40021000 	.word	0x40021000

08003c88 <RCCEx_PLLSAI2_Config>:
 8003c88:	b580      	push	{r7, lr}
 8003c8a:	b084      	sub	sp, #16
 8003c8c:	af00      	add	r7, sp, #0
 8003c8e:	6078      	str	r0, [r7, #4]
 8003c90:	6039      	str	r1, [r7, #0]
 8003c92:	2300      	movs	r3, #0
 8003c94:	73fb      	strb	r3, [r7, #15]
 8003c96:	4b69      	ldr	r3, [pc, #420]	@ (8003e3c <RCCEx_PLLSAI2_Config+0x1b4>)
 8003c98:	68db      	ldr	r3, [r3, #12]
 8003c9a:	f003 0303 	and.w	r3, r3, #3
 8003c9e:	2b00      	cmp	r3, #0
 8003ca0:	d018      	beq.n	8003cd4 <RCCEx_PLLSAI2_Config+0x4c>
 8003ca2:	4b66      	ldr	r3, [pc, #408]	@ (8003e3c <RCCEx_PLLSAI2_Config+0x1b4>)
 8003ca4:	68db      	ldr	r3, [r3, #12]
 8003ca6:	f003 0203 	and.w	r2, r3, #3
 8003caa:	687b      	ldr	r3, [r7, #4]
 8003cac:	681b      	ldr	r3, [r3, #0]
 8003cae:	429a      	cmp	r2, r3
 8003cb0:	d10d      	bne.n	8003cce <RCCEx_PLLSAI2_Config+0x46>
 8003cb2:	687b      	ldr	r3, [r7, #4]
 8003cb4:	681b      	ldr	r3, [r3, #0]
 8003cb6:	2b00      	cmp	r3, #0
 8003cb8:	d009      	beq.n	8003cce <RCCEx_PLLSAI2_Config+0x46>
 8003cba:	4b60      	ldr	r3, [pc, #384]	@ (8003e3c <RCCEx_PLLSAI2_Config+0x1b4>)
 8003cbc:	68db      	ldr	r3, [r3, #12]
 8003cbe:	091b      	lsrs	r3, r3, #4
 8003cc0:	f003 0307 	and.w	r3, r3, #7
 8003cc4:	1c5a      	adds	r2, r3, #1
 8003cc6:	687b      	ldr	r3, [r7, #4]
 8003cc8:	685b      	ldr	r3, [r3, #4]
 8003cca:	429a      	cmp	r2, r3
 8003ccc:	d047      	beq.n	8003d5e <RCCEx_PLLSAI2_Config+0xd6>
 8003cce:	2301      	movs	r3, #1
 8003cd0:	73fb      	strb	r3, [r7, #15]
 8003cd2:	e044      	b.n	8003d5e <RCCEx_PLLSAI2_Config+0xd6>
 8003cd4:	687b      	ldr	r3, [r7, #4]
 8003cd6:	681b      	ldr	r3, [r3, #0]
 8003cd8:	2b03      	cmp	r3, #3
 8003cda:	d018      	beq.n	8003d0e <RCCEx_PLLSAI2_Config+0x86>
 8003cdc:	2b03      	cmp	r3, #3
 8003cde:	d825      	bhi.n	8003d2c <RCCEx_PLLSAI2_Config+0xa4>
 8003ce0:	2b01      	cmp	r3, #1
 8003ce2:	d002      	beq.n	8003cea <RCCEx_PLLSAI2_Config+0x62>
 8003ce4:	2b02      	cmp	r3, #2
 8003ce6:	d009      	beq.n	8003cfc <RCCEx_PLLSAI2_Config+0x74>
 8003ce8:	e020      	b.n	8003d2c <RCCEx_PLLSAI2_Config+0xa4>
 8003cea:	4b54      	ldr	r3, [pc, #336]	@ (8003e3c <RCCEx_PLLSAI2_Config+0x1b4>)
 8003cec:	681b      	ldr	r3, [r3, #0]
 8003cee:	f003 0302 	and.w	r3, r3, #2
 8003cf2:	2b00      	cmp	r3, #0
 8003cf4:	d11d      	bne.n	8003d32 <RCCEx_PLLSAI2_Config+0xaa>
 8003cf6:	2301      	movs	r3, #1
 8003cf8:	73fb      	strb	r3, [r7, #15]
 8003cfa:	e01a      	b.n	8003d32 <RCCEx_PLLSAI2_Config+0xaa>
 8003cfc:	4b4f      	ldr	r3, [pc, #316]	@ (8003e3c <RCCEx_PLLSAI2_Config+0x1b4>)
 8003cfe:	681b      	ldr	r3, [r3, #0]
 8003d00:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8003d04:	2b00      	cmp	r3, #0
 8003d06:	d116      	bne.n	8003d36 <RCCEx_PLLSAI2_Config+0xae>
 8003d08:	2301      	movs	r3, #1
 8003d0a:	73fb      	strb	r3, [r7, #15]
 8003d0c:	e013      	b.n	8003d36 <RCCEx_PLLSAI2_Config+0xae>
 8003d0e:	4b4b      	ldr	r3, [pc, #300]	@ (8003e3c <RCCEx_PLLSAI2_Config+0x1b4>)
 8003d10:	681b      	ldr	r3, [r3, #0]
 8003d12:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003d16:	2b00      	cmp	r3, #0
 8003d18:	d10f      	bne.n	8003d3a <RCCEx_PLLSAI2_Config+0xb2>
 8003d1a:	4b48      	ldr	r3, [pc, #288]	@ (8003e3c <RCCEx_PLLSAI2_Config+0x1b4>)
 8003d1c:	681b      	ldr	r3, [r3, #0]
 8003d1e:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8003d22:	2b00      	cmp	r3, #0
 8003d24:	d109      	bne.n	8003d3a <RCCEx_PLLSAI2_Config+0xb2>
 8003d26:	2301      	movs	r3, #1
 8003d28:	73fb      	strb	r3, [r7, #15]
 8003d2a:	e006      	b.n	8003d3a <RCCEx_PLLSAI2_Config+0xb2>
 8003d2c:	2301      	movs	r3, #1
 8003d2e:	73fb      	strb	r3, [r7, #15]
 8003d30:	e004      	b.n	8003d3c <RCCEx_PLLSAI2_Config+0xb4>
 8003d32:	bf00      	nop
 8003d34:	e002      	b.n	8003d3c <RCCEx_PLLSAI2_Config+0xb4>
 8003d36:	bf00      	nop
 8003d38:	e000      	b.n	8003d3c <RCCEx_PLLSAI2_Config+0xb4>
 8003d3a:	bf00      	nop
 8003d3c:	7bfb      	ldrb	r3, [r7, #15]
 8003d3e:	2b00      	cmp	r3, #0
 8003d40:	d10d      	bne.n	8003d5e <RCCEx_PLLSAI2_Config+0xd6>
 8003d42:	4b3e      	ldr	r3, [pc, #248]	@ (8003e3c <RCCEx_PLLSAI2_Config+0x1b4>)
 8003d44:	68db      	ldr	r3, [r3, #12]
 8003d46:	f023 0273 	bic.w	r2, r3, #115	@ 0x73
 8003d4a:	687b      	ldr	r3, [r7, #4]
 8003d4c:	6819      	ldr	r1, [r3, #0]
 8003d4e:	687b      	ldr	r3, [r7, #4]
 8003d50:	685b      	ldr	r3, [r3, #4]
 8003d52:	3b01      	subs	r3, #1
 8003d54:	011b      	lsls	r3, r3, #4
 8003d56:	430b      	orrs	r3, r1
 8003d58:	4938      	ldr	r1, [pc, #224]	@ (8003e3c <RCCEx_PLLSAI2_Config+0x1b4>)
 8003d5a:	4313      	orrs	r3, r2
 8003d5c:	60cb      	str	r3, [r1, #12]
 8003d5e:	7bfb      	ldrb	r3, [r7, #15]
 8003d60:	2b00      	cmp	r3, #0
 8003d62:	d166      	bne.n	8003e32 <RCCEx_PLLSAI2_Config+0x1aa>
 8003d64:	4b35      	ldr	r3, [pc, #212]	@ (8003e3c <RCCEx_PLLSAI2_Config+0x1b4>)
 8003d66:	681b      	ldr	r3, [r3, #0]
 8003d68:	4a34      	ldr	r2, [pc, #208]	@ (8003e3c <RCCEx_PLLSAI2_Config+0x1b4>)
 8003d6a:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8003d6e:	6013      	str	r3, [r2, #0]
 8003d70:	f7fd fc54 	bl	800161c <HAL_GetTick>
 8003d74:	60b8      	str	r0, [r7, #8]
 8003d76:	e009      	b.n	8003d8c <RCCEx_PLLSAI2_Config+0x104>
 8003d78:	f7fd fc50 	bl	800161c <HAL_GetTick>
 8003d7c:	4602      	mov	r2, r0
 8003d7e:	68bb      	ldr	r3, [r7, #8]
 8003d80:	1ad3      	subs	r3, r2, r3
 8003d82:	2b02      	cmp	r3, #2
 8003d84:	d902      	bls.n	8003d8c <RCCEx_PLLSAI2_Config+0x104>
 8003d86:	2303      	movs	r3, #3
 8003d88:	73fb      	strb	r3, [r7, #15]
 8003d8a:	e005      	b.n	8003d98 <RCCEx_PLLSAI2_Config+0x110>
 8003d8c:	4b2b      	ldr	r3, [pc, #172]	@ (8003e3c <RCCEx_PLLSAI2_Config+0x1b4>)
 8003d8e:	681b      	ldr	r3, [r3, #0]
 8003d90:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 8003d94:	2b00      	cmp	r3, #0
 8003d96:	d1ef      	bne.n	8003d78 <RCCEx_PLLSAI2_Config+0xf0>
 8003d98:	7bfb      	ldrb	r3, [r7, #15]
 8003d9a:	2b00      	cmp	r3, #0
 8003d9c:	d149      	bne.n	8003e32 <RCCEx_PLLSAI2_Config+0x1aa>
 8003d9e:	683b      	ldr	r3, [r7, #0]
 8003da0:	2b00      	cmp	r3, #0
 8003da2:	d110      	bne.n	8003dc6 <RCCEx_PLLSAI2_Config+0x13e>
 8003da4:	4b25      	ldr	r3, [pc, #148]	@ (8003e3c <RCCEx_PLLSAI2_Config+0x1b4>)
 8003da6:	695b      	ldr	r3, [r3, #20]
 8003da8:	f023 4378 	bic.w	r3, r3, #4160749568	@ 0xf8000000
 8003dac:	f423 43fe 	bic.w	r3, r3, #32512	@ 0x7f00
 8003db0:	687a      	ldr	r2, [r7, #4]
 8003db2:	6892      	ldr	r2, [r2, #8]
 8003db4:	0211      	lsls	r1, r2, #8
 8003db6:	687a      	ldr	r2, [r7, #4]
 8003db8:	68d2      	ldr	r2, [r2, #12]
 8003dba:	06d2      	lsls	r2, r2, #27
 8003dbc:	430a      	orrs	r2, r1
 8003dbe:	491f      	ldr	r1, [pc, #124]	@ (8003e3c <RCCEx_PLLSAI2_Config+0x1b4>)
 8003dc0:	4313      	orrs	r3, r2
 8003dc2:	614b      	str	r3, [r1, #20]
 8003dc4:	e011      	b.n	8003dea <RCCEx_PLLSAI2_Config+0x162>
 8003dc6:	4b1d      	ldr	r3, [pc, #116]	@ (8003e3c <RCCEx_PLLSAI2_Config+0x1b4>)
 8003dc8:	695b      	ldr	r3, [r3, #20]
 8003dca:	f023 63c0 	bic.w	r3, r3, #100663296	@ 0x6000000
 8003dce:	f423 43fe 	bic.w	r3, r3, #32512	@ 0x7f00
 8003dd2:	687a      	ldr	r2, [r7, #4]
 8003dd4:	6892      	ldr	r2, [r2, #8]
 8003dd6:	0211      	lsls	r1, r2, #8
 8003dd8:	687a      	ldr	r2, [r7, #4]
 8003dda:	6912      	ldr	r2, [r2, #16]
 8003ddc:	0852      	lsrs	r2, r2, #1
 8003dde:	3a01      	subs	r2, #1
 8003de0:	0652      	lsls	r2, r2, #25
 8003de2:	430a      	orrs	r2, r1
 8003de4:	4915      	ldr	r1, [pc, #84]	@ (8003e3c <RCCEx_PLLSAI2_Config+0x1b4>)
 8003de6:	4313      	orrs	r3, r2
 8003de8:	614b      	str	r3, [r1, #20]
 8003dea:	4b14      	ldr	r3, [pc, #80]	@ (8003e3c <RCCEx_PLLSAI2_Config+0x1b4>)
 8003dec:	681b      	ldr	r3, [r3, #0]
 8003dee:	4a13      	ldr	r2, [pc, #76]	@ (8003e3c <RCCEx_PLLSAI2_Config+0x1b4>)
 8003df0:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8003df4:	6013      	str	r3, [r2, #0]
 8003df6:	f7fd fc11 	bl	800161c <HAL_GetTick>
 8003dfa:	60b8      	str	r0, [r7, #8]
 8003dfc:	e009      	b.n	8003e12 <RCCEx_PLLSAI2_Config+0x18a>
 8003dfe:	f7fd fc0d 	bl	800161c <HAL_GetTick>
 8003e02:	4602      	mov	r2, r0
 8003e04:	68bb      	ldr	r3, [r7, #8]
 8003e06:	1ad3      	subs	r3, r2, r3
 8003e08:	2b02      	cmp	r3, #2
 8003e0a:	d902      	bls.n	8003e12 <RCCEx_PLLSAI2_Config+0x18a>
 8003e0c:	2303      	movs	r3, #3
 8003e0e:	73fb      	strb	r3, [r7, #15]
 8003e10:	e005      	b.n	8003e1e <RCCEx_PLLSAI2_Config+0x196>
 8003e12:	4b0a      	ldr	r3, [pc, #40]	@ (8003e3c <RCCEx_PLLSAI2_Config+0x1b4>)
 8003e14:	681b      	ldr	r3, [r3, #0]
 8003e16:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 8003e1a:	2b00      	cmp	r3, #0
 8003e1c:	d0ef      	beq.n	8003dfe <RCCEx_PLLSAI2_Config+0x176>
 8003e1e:	7bfb      	ldrb	r3, [r7, #15]
 8003e20:	2b00      	cmp	r3, #0
 8003e22:	d106      	bne.n	8003e32 <RCCEx_PLLSAI2_Config+0x1aa>
 8003e24:	4b05      	ldr	r3, [pc, #20]	@ (8003e3c <RCCEx_PLLSAI2_Config+0x1b4>)
 8003e26:	695a      	ldr	r2, [r3, #20]
 8003e28:	687b      	ldr	r3, [r7, #4]
 8003e2a:	695b      	ldr	r3, [r3, #20]
 8003e2c:	4903      	ldr	r1, [pc, #12]	@ (8003e3c <RCCEx_PLLSAI2_Config+0x1b4>)
 8003e2e:	4313      	orrs	r3, r2
 8003e30:	614b      	str	r3, [r1, #20]
 8003e32:	7bfb      	ldrb	r3, [r7, #15]
 8003e34:	4618      	mov	r0, r3
 8003e36:	3710      	adds	r7, #16
 8003e38:	46bd      	mov	sp, r7
 8003e3a:	bd80      	pop	{r7, pc}
 8003e3c:	40021000 	.word	0x40021000

08003e40 <HAL_UART_Init>:
 8003e40:	b580      	push	{r7, lr}
 8003e42:	b082      	sub	sp, #8
 8003e44:	af00      	add	r7, sp, #0
 8003e46:	6078      	str	r0, [r7, #4]
 8003e48:	687b      	ldr	r3, [r7, #4]
 8003e4a:	2b00      	cmp	r3, #0
 8003e4c:	d101      	bne.n	8003e52 <HAL_UART_Init+0x12>
 8003e4e:	2301      	movs	r3, #1
 8003e50:	e040      	b.n	8003ed4 <HAL_UART_Init+0x94>
 8003e52:	687b      	ldr	r3, [r7, #4]
 8003e54:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8003e56:	2b00      	cmp	r3, #0
 8003e58:	d106      	bne.n	8003e68 <HAL_UART_Init+0x28>
 8003e5a:	687b      	ldr	r3, [r7, #4]
 8003e5c:	2200      	movs	r2, #0
 8003e5e:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 8003e62:	6878      	ldr	r0, [r7, #4]
 8003e64:	f7fd fa2c 	bl	80012c0 <HAL_UART_MspInit>
 8003e68:	687b      	ldr	r3, [r7, #4]
 8003e6a:	2224      	movs	r2, #36	@ 0x24
 8003e6c:	67da      	str	r2, [r3, #124]	@ 0x7c
 8003e6e:	687b      	ldr	r3, [r7, #4]
 8003e70:	681b      	ldr	r3, [r3, #0]
 8003e72:	681a      	ldr	r2, [r3, #0]
 8003e74:	687b      	ldr	r3, [r7, #4]
 8003e76:	681b      	ldr	r3, [r3, #0]
 8003e78:	f022 0201 	bic.w	r2, r2, #1
 8003e7c:	601a      	str	r2, [r3, #0]
 8003e7e:	687b      	ldr	r3, [r7, #4]
 8003e80:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003e82:	2b00      	cmp	r3, #0
 8003e84:	d002      	beq.n	8003e8c <HAL_UART_Init+0x4c>
 8003e86:	6878      	ldr	r0, [r7, #4]
 8003e88:	f000 fc32 	bl	80046f0 <UART_AdvFeatureConfig>
 8003e8c:	6878      	ldr	r0, [r7, #4]
 8003e8e:	f000 f977 	bl	8004180 <UART_SetConfig>
 8003e92:	4603      	mov	r3, r0
 8003e94:	2b01      	cmp	r3, #1
 8003e96:	d101      	bne.n	8003e9c <HAL_UART_Init+0x5c>
 8003e98:	2301      	movs	r3, #1
 8003e9a:	e01b      	b.n	8003ed4 <HAL_UART_Init+0x94>
 8003e9c:	687b      	ldr	r3, [r7, #4]
 8003e9e:	681b      	ldr	r3, [r3, #0]
 8003ea0:	685a      	ldr	r2, [r3, #4]
 8003ea2:	687b      	ldr	r3, [r7, #4]
 8003ea4:	681b      	ldr	r3, [r3, #0]
 8003ea6:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8003eaa:	605a      	str	r2, [r3, #4]
 8003eac:	687b      	ldr	r3, [r7, #4]
 8003eae:	681b      	ldr	r3, [r3, #0]
 8003eb0:	689a      	ldr	r2, [r3, #8]
 8003eb2:	687b      	ldr	r3, [r7, #4]
 8003eb4:	681b      	ldr	r3, [r3, #0]
 8003eb6:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8003eba:	609a      	str	r2, [r3, #8]
 8003ebc:	687b      	ldr	r3, [r7, #4]
 8003ebe:	681b      	ldr	r3, [r3, #0]
 8003ec0:	681a      	ldr	r2, [r3, #0]
 8003ec2:	687b      	ldr	r3, [r7, #4]
 8003ec4:	681b      	ldr	r3, [r3, #0]
 8003ec6:	f042 0201 	orr.w	r2, r2, #1
 8003eca:	601a      	str	r2, [r3, #0]
 8003ecc:	6878      	ldr	r0, [r7, #4]
 8003ece:	f000 fcb1 	bl	8004834 <UART_CheckIdleState>
 8003ed2:	4603      	mov	r3, r0
 8003ed4:	4618      	mov	r0, r3
 8003ed6:	3708      	adds	r7, #8
 8003ed8:	46bd      	mov	sp, r7
 8003eda:	bd80      	pop	{r7, pc}

08003edc <HAL_UART_Transmit>:
 8003edc:	b580      	push	{r7, lr}
 8003ede:	b08a      	sub	sp, #40	@ 0x28
 8003ee0:	af02      	add	r7, sp, #8
 8003ee2:	60f8      	str	r0, [r7, #12]
 8003ee4:	60b9      	str	r1, [r7, #8]
 8003ee6:	603b      	str	r3, [r7, #0]
 8003ee8:	4613      	mov	r3, r2
 8003eea:	80fb      	strh	r3, [r7, #6]
 8003eec:	68fb      	ldr	r3, [r7, #12]
 8003eee:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8003ef0:	2b20      	cmp	r3, #32
 8003ef2:	d177      	bne.n	8003fe4 <HAL_UART_Transmit+0x108>
 8003ef4:	68bb      	ldr	r3, [r7, #8]
 8003ef6:	2b00      	cmp	r3, #0
 8003ef8:	d002      	beq.n	8003f00 <HAL_UART_Transmit+0x24>
 8003efa:	88fb      	ldrh	r3, [r7, #6]
 8003efc:	2b00      	cmp	r3, #0
 8003efe:	d101      	bne.n	8003f04 <HAL_UART_Transmit+0x28>
 8003f00:	2301      	movs	r3, #1
 8003f02:	e070      	b.n	8003fe6 <HAL_UART_Transmit+0x10a>
 8003f04:	68fb      	ldr	r3, [r7, #12]
 8003f06:	2200      	movs	r2, #0
 8003f08:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 8003f0c:	68fb      	ldr	r3, [r7, #12]
 8003f0e:	2221      	movs	r2, #33	@ 0x21
 8003f10:	67da      	str	r2, [r3, #124]	@ 0x7c
 8003f12:	f7fd fb83 	bl	800161c <HAL_GetTick>
 8003f16:	6178      	str	r0, [r7, #20]
 8003f18:	68fb      	ldr	r3, [r7, #12]
 8003f1a:	88fa      	ldrh	r2, [r7, #6]
 8003f1c:	f8a3 2050 	strh.w	r2, [r3, #80]	@ 0x50
 8003f20:	68fb      	ldr	r3, [r7, #12]
 8003f22:	88fa      	ldrh	r2, [r7, #6]
 8003f24:	f8a3 2052 	strh.w	r2, [r3, #82]	@ 0x52
 8003f28:	68fb      	ldr	r3, [r7, #12]
 8003f2a:	689b      	ldr	r3, [r3, #8]
 8003f2c:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8003f30:	d108      	bne.n	8003f44 <HAL_UART_Transmit+0x68>
 8003f32:	68fb      	ldr	r3, [r7, #12]
 8003f34:	691b      	ldr	r3, [r3, #16]
 8003f36:	2b00      	cmp	r3, #0
 8003f38:	d104      	bne.n	8003f44 <HAL_UART_Transmit+0x68>
 8003f3a:	2300      	movs	r3, #0
 8003f3c:	61fb      	str	r3, [r7, #28]
 8003f3e:	68bb      	ldr	r3, [r7, #8]
 8003f40:	61bb      	str	r3, [r7, #24]
 8003f42:	e003      	b.n	8003f4c <HAL_UART_Transmit+0x70>
 8003f44:	68bb      	ldr	r3, [r7, #8]
 8003f46:	61fb      	str	r3, [r7, #28]
 8003f48:	2300      	movs	r3, #0
 8003f4a:	61bb      	str	r3, [r7, #24]
 8003f4c:	e02f      	b.n	8003fae <HAL_UART_Transmit+0xd2>
 8003f4e:	683b      	ldr	r3, [r7, #0]
 8003f50:	9300      	str	r3, [sp, #0]
 8003f52:	697b      	ldr	r3, [r7, #20]
 8003f54:	2200      	movs	r2, #0
 8003f56:	2180      	movs	r1, #128	@ 0x80
 8003f58:	68f8      	ldr	r0, [r7, #12]
 8003f5a:	f000 fd13 	bl	8004984 <UART_WaitOnFlagUntilTimeout>
 8003f5e:	4603      	mov	r3, r0
 8003f60:	2b00      	cmp	r3, #0
 8003f62:	d004      	beq.n	8003f6e <HAL_UART_Transmit+0x92>
 8003f64:	68fb      	ldr	r3, [r7, #12]
 8003f66:	2220      	movs	r2, #32
 8003f68:	67da      	str	r2, [r3, #124]	@ 0x7c
 8003f6a:	2303      	movs	r3, #3
 8003f6c:	e03b      	b.n	8003fe6 <HAL_UART_Transmit+0x10a>
 8003f6e:	69fb      	ldr	r3, [r7, #28]
 8003f70:	2b00      	cmp	r3, #0
 8003f72:	d10b      	bne.n	8003f8c <HAL_UART_Transmit+0xb0>
 8003f74:	69bb      	ldr	r3, [r7, #24]
 8003f76:	881a      	ldrh	r2, [r3, #0]
 8003f78:	68fb      	ldr	r3, [r7, #12]
 8003f7a:	681b      	ldr	r3, [r3, #0]
 8003f7c:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8003f80:	b292      	uxth	r2, r2
 8003f82:	851a      	strh	r2, [r3, #40]	@ 0x28
 8003f84:	69bb      	ldr	r3, [r7, #24]
 8003f86:	3302      	adds	r3, #2
 8003f88:	61bb      	str	r3, [r7, #24]
 8003f8a:	e007      	b.n	8003f9c <HAL_UART_Transmit+0xc0>
 8003f8c:	69fb      	ldr	r3, [r7, #28]
 8003f8e:	781a      	ldrb	r2, [r3, #0]
 8003f90:	68fb      	ldr	r3, [r7, #12]
 8003f92:	681b      	ldr	r3, [r3, #0]
 8003f94:	851a      	strh	r2, [r3, #40]	@ 0x28
 8003f96:	69fb      	ldr	r3, [r7, #28]
 8003f98:	3301      	adds	r3, #1
 8003f9a:	61fb      	str	r3, [r7, #28]
 8003f9c:	68fb      	ldr	r3, [r7, #12]
 8003f9e:	f8b3 3052 	ldrh.w	r3, [r3, #82]	@ 0x52
 8003fa2:	b29b      	uxth	r3, r3
 8003fa4:	3b01      	subs	r3, #1
 8003fa6:	b29a      	uxth	r2, r3
 8003fa8:	68fb      	ldr	r3, [r7, #12]
 8003faa:	f8a3 2052 	strh.w	r2, [r3, #82]	@ 0x52
 8003fae:	68fb      	ldr	r3, [r7, #12]
 8003fb0:	f8b3 3052 	ldrh.w	r3, [r3, #82]	@ 0x52
 8003fb4:	b29b      	uxth	r3, r3
 8003fb6:	2b00      	cmp	r3, #0
 8003fb8:	d1c9      	bne.n	8003f4e <HAL_UART_Transmit+0x72>
 8003fba:	683b      	ldr	r3, [r7, #0]
 8003fbc:	9300      	str	r3, [sp, #0]
 8003fbe:	697b      	ldr	r3, [r7, #20]
 8003fc0:	2200      	movs	r2, #0
 8003fc2:	2140      	movs	r1, #64	@ 0x40
 8003fc4:	68f8      	ldr	r0, [r7, #12]
 8003fc6:	f000 fcdd 	bl	8004984 <UART_WaitOnFlagUntilTimeout>
 8003fca:	4603      	mov	r3, r0
 8003fcc:	2b00      	cmp	r3, #0
 8003fce:	d004      	beq.n	8003fda <HAL_UART_Transmit+0xfe>
 8003fd0:	68fb      	ldr	r3, [r7, #12]
 8003fd2:	2220      	movs	r2, #32
 8003fd4:	67da      	str	r2, [r3, #124]	@ 0x7c
 8003fd6:	2303      	movs	r3, #3
 8003fd8:	e005      	b.n	8003fe6 <HAL_UART_Transmit+0x10a>
 8003fda:	68fb      	ldr	r3, [r7, #12]
 8003fdc:	2220      	movs	r2, #32
 8003fde:	67da      	str	r2, [r3, #124]	@ 0x7c
 8003fe0:	2300      	movs	r3, #0
 8003fe2:	e000      	b.n	8003fe6 <HAL_UART_Transmit+0x10a>
 8003fe4:	2302      	movs	r3, #2
 8003fe6:	4618      	mov	r0, r3
 8003fe8:	3720      	adds	r7, #32
 8003fea:	46bd      	mov	sp, r7
 8003fec:	bd80      	pop	{r7, pc}

08003fee <HAL_UART_Receive>:
 8003fee:	b580      	push	{r7, lr}
 8003ff0:	b08a      	sub	sp, #40	@ 0x28
 8003ff2:	af02      	add	r7, sp, #8
 8003ff4:	60f8      	str	r0, [r7, #12]
 8003ff6:	60b9      	str	r1, [r7, #8]
 8003ff8:	603b      	str	r3, [r7, #0]
 8003ffa:	4613      	mov	r3, r2
 8003ffc:	80fb      	strh	r3, [r7, #6]
 8003ffe:	68fb      	ldr	r3, [r7, #12]
 8004000:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8004004:	2b20      	cmp	r3, #32
 8004006:	f040 80b6 	bne.w	8004176 <HAL_UART_Receive+0x188>
 800400a:	68bb      	ldr	r3, [r7, #8]
 800400c:	2b00      	cmp	r3, #0
 800400e:	d002      	beq.n	8004016 <HAL_UART_Receive+0x28>
 8004010:	88fb      	ldrh	r3, [r7, #6]
 8004012:	2b00      	cmp	r3, #0
 8004014:	d101      	bne.n	800401a <HAL_UART_Receive+0x2c>
 8004016:	2301      	movs	r3, #1
 8004018:	e0ae      	b.n	8004178 <HAL_UART_Receive+0x18a>
 800401a:	68fb      	ldr	r3, [r7, #12]
 800401c:	2200      	movs	r2, #0
 800401e:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 8004022:	68fb      	ldr	r3, [r7, #12]
 8004024:	2222      	movs	r2, #34	@ 0x22
 8004026:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 800402a:	68fb      	ldr	r3, [r7, #12]
 800402c:	2200      	movs	r2, #0
 800402e:	661a      	str	r2, [r3, #96]	@ 0x60
 8004030:	f7fd faf4 	bl	800161c <HAL_GetTick>
 8004034:	6178      	str	r0, [r7, #20]
 8004036:	68fb      	ldr	r3, [r7, #12]
 8004038:	88fa      	ldrh	r2, [r7, #6]
 800403a:	f8a3 2058 	strh.w	r2, [r3, #88]	@ 0x58
 800403e:	68fb      	ldr	r3, [r7, #12]
 8004040:	88fa      	ldrh	r2, [r7, #6]
 8004042:	f8a3 205a 	strh.w	r2, [r3, #90]	@ 0x5a
 8004046:	68fb      	ldr	r3, [r7, #12]
 8004048:	689b      	ldr	r3, [r3, #8]
 800404a:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800404e:	d10e      	bne.n	800406e <HAL_UART_Receive+0x80>
 8004050:	68fb      	ldr	r3, [r7, #12]
 8004052:	691b      	ldr	r3, [r3, #16]
 8004054:	2b00      	cmp	r3, #0
 8004056:	d105      	bne.n	8004064 <HAL_UART_Receive+0x76>
 8004058:	68fb      	ldr	r3, [r7, #12]
 800405a:	f240 12ff 	movw	r2, #511	@ 0x1ff
 800405e:	f8a3 205c 	strh.w	r2, [r3, #92]	@ 0x5c
 8004062:	e02d      	b.n	80040c0 <HAL_UART_Receive+0xd2>
 8004064:	68fb      	ldr	r3, [r7, #12]
 8004066:	22ff      	movs	r2, #255	@ 0xff
 8004068:	f8a3 205c 	strh.w	r2, [r3, #92]	@ 0x5c
 800406c:	e028      	b.n	80040c0 <HAL_UART_Receive+0xd2>
 800406e:	68fb      	ldr	r3, [r7, #12]
 8004070:	689b      	ldr	r3, [r3, #8]
 8004072:	2b00      	cmp	r3, #0
 8004074:	d10d      	bne.n	8004092 <HAL_UART_Receive+0xa4>
 8004076:	68fb      	ldr	r3, [r7, #12]
 8004078:	691b      	ldr	r3, [r3, #16]
 800407a:	2b00      	cmp	r3, #0
 800407c:	d104      	bne.n	8004088 <HAL_UART_Receive+0x9a>
 800407e:	68fb      	ldr	r3, [r7, #12]
 8004080:	22ff      	movs	r2, #255	@ 0xff
 8004082:	f8a3 205c 	strh.w	r2, [r3, #92]	@ 0x5c
 8004086:	e01b      	b.n	80040c0 <HAL_UART_Receive+0xd2>
 8004088:	68fb      	ldr	r3, [r7, #12]
 800408a:	227f      	movs	r2, #127	@ 0x7f
 800408c:	f8a3 205c 	strh.w	r2, [r3, #92]	@ 0x5c
 8004090:	e016      	b.n	80040c0 <HAL_UART_Receive+0xd2>
 8004092:	68fb      	ldr	r3, [r7, #12]
 8004094:	689b      	ldr	r3, [r3, #8]
 8004096:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 800409a:	d10d      	bne.n	80040b8 <HAL_UART_Receive+0xca>
 800409c:	68fb      	ldr	r3, [r7, #12]
 800409e:	691b      	ldr	r3, [r3, #16]
 80040a0:	2b00      	cmp	r3, #0
 80040a2:	d104      	bne.n	80040ae <HAL_UART_Receive+0xc0>
 80040a4:	68fb      	ldr	r3, [r7, #12]
 80040a6:	227f      	movs	r2, #127	@ 0x7f
 80040a8:	f8a3 205c 	strh.w	r2, [r3, #92]	@ 0x5c
 80040ac:	e008      	b.n	80040c0 <HAL_UART_Receive+0xd2>
 80040ae:	68fb      	ldr	r3, [r7, #12]
 80040b0:	223f      	movs	r2, #63	@ 0x3f
 80040b2:	f8a3 205c 	strh.w	r2, [r3, #92]	@ 0x5c
 80040b6:	e003      	b.n	80040c0 <HAL_UART_Receive+0xd2>
 80040b8:	68fb      	ldr	r3, [r7, #12]
 80040ba:	2200      	movs	r2, #0
 80040bc:	f8a3 205c 	strh.w	r2, [r3, #92]	@ 0x5c
 80040c0:	68fb      	ldr	r3, [r7, #12]
 80040c2:	f8b3 305c 	ldrh.w	r3, [r3, #92]	@ 0x5c
 80040c6:	827b      	strh	r3, [r7, #18]
 80040c8:	68fb      	ldr	r3, [r7, #12]
 80040ca:	689b      	ldr	r3, [r3, #8]
 80040cc:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80040d0:	d108      	bne.n	80040e4 <HAL_UART_Receive+0xf6>
 80040d2:	68fb      	ldr	r3, [r7, #12]
 80040d4:	691b      	ldr	r3, [r3, #16]
 80040d6:	2b00      	cmp	r3, #0
 80040d8:	d104      	bne.n	80040e4 <HAL_UART_Receive+0xf6>
 80040da:	2300      	movs	r3, #0
 80040dc:	61fb      	str	r3, [r7, #28]
 80040de:	68bb      	ldr	r3, [r7, #8]
 80040e0:	61bb      	str	r3, [r7, #24]
 80040e2:	e003      	b.n	80040ec <HAL_UART_Receive+0xfe>
 80040e4:	68bb      	ldr	r3, [r7, #8]
 80040e6:	61fb      	str	r3, [r7, #28]
 80040e8:	2300      	movs	r3, #0
 80040ea:	61bb      	str	r3, [r7, #24]
 80040ec:	e037      	b.n	800415e <HAL_UART_Receive+0x170>
 80040ee:	683b      	ldr	r3, [r7, #0]
 80040f0:	9300      	str	r3, [sp, #0]
 80040f2:	697b      	ldr	r3, [r7, #20]
 80040f4:	2200      	movs	r2, #0
 80040f6:	2120      	movs	r1, #32
 80040f8:	68f8      	ldr	r0, [r7, #12]
 80040fa:	f000 fc43 	bl	8004984 <UART_WaitOnFlagUntilTimeout>
 80040fe:	4603      	mov	r3, r0
 8004100:	2b00      	cmp	r3, #0
 8004102:	d005      	beq.n	8004110 <HAL_UART_Receive+0x122>
 8004104:	68fb      	ldr	r3, [r7, #12]
 8004106:	2220      	movs	r2, #32
 8004108:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 800410c:	2303      	movs	r3, #3
 800410e:	e033      	b.n	8004178 <HAL_UART_Receive+0x18a>
 8004110:	69fb      	ldr	r3, [r7, #28]
 8004112:	2b00      	cmp	r3, #0
 8004114:	d10c      	bne.n	8004130 <HAL_UART_Receive+0x142>
 8004116:	68fb      	ldr	r3, [r7, #12]
 8004118:	681b      	ldr	r3, [r3, #0]
 800411a:	8c9b      	ldrh	r3, [r3, #36]	@ 0x24
 800411c:	b29a      	uxth	r2, r3
 800411e:	8a7b      	ldrh	r3, [r7, #18]
 8004120:	4013      	ands	r3, r2
 8004122:	b29a      	uxth	r2, r3
 8004124:	69bb      	ldr	r3, [r7, #24]
 8004126:	801a      	strh	r2, [r3, #0]
 8004128:	69bb      	ldr	r3, [r7, #24]
 800412a:	3302      	adds	r3, #2
 800412c:	61bb      	str	r3, [r7, #24]
 800412e:	e00d      	b.n	800414c <HAL_UART_Receive+0x15e>
 8004130:	68fb      	ldr	r3, [r7, #12]
 8004132:	681b      	ldr	r3, [r3, #0]
 8004134:	8c9b      	ldrh	r3, [r3, #36]	@ 0x24
 8004136:	b29b      	uxth	r3, r3
 8004138:	b2da      	uxtb	r2, r3
 800413a:	8a7b      	ldrh	r3, [r7, #18]
 800413c:	b2db      	uxtb	r3, r3
 800413e:	4013      	ands	r3, r2
 8004140:	b2da      	uxtb	r2, r3
 8004142:	69fb      	ldr	r3, [r7, #28]
 8004144:	701a      	strb	r2, [r3, #0]
 8004146:	69fb      	ldr	r3, [r7, #28]
 8004148:	3301      	adds	r3, #1
 800414a:	61fb      	str	r3, [r7, #28]
 800414c:	68fb      	ldr	r3, [r7, #12]
 800414e:	f8b3 305a 	ldrh.w	r3, [r3, #90]	@ 0x5a
 8004152:	b29b      	uxth	r3, r3
 8004154:	3b01      	subs	r3, #1
 8004156:	b29a      	uxth	r2, r3
 8004158:	68fb      	ldr	r3, [r7, #12]
 800415a:	f8a3 205a 	strh.w	r2, [r3, #90]	@ 0x5a
 800415e:	68fb      	ldr	r3, [r7, #12]
 8004160:	f8b3 305a 	ldrh.w	r3, [r3, #90]	@ 0x5a
 8004164:	b29b      	uxth	r3, r3
 8004166:	2b00      	cmp	r3, #0
 8004168:	d1c1      	bne.n	80040ee <HAL_UART_Receive+0x100>
 800416a:	68fb      	ldr	r3, [r7, #12]
 800416c:	2220      	movs	r2, #32
 800416e:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 8004172:	2300      	movs	r3, #0
 8004174:	e000      	b.n	8004178 <HAL_UART_Receive+0x18a>
 8004176:	2302      	movs	r3, #2
 8004178:	4618      	mov	r0, r3
 800417a:	3720      	adds	r7, #32
 800417c:	46bd      	mov	sp, r7
 800417e:	bd80      	pop	{r7, pc}

08004180 <UART_SetConfig>:
 8004180:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8004184:	b08a      	sub	sp, #40	@ 0x28
 8004186:	af00      	add	r7, sp, #0
 8004188:	60f8      	str	r0, [r7, #12]
 800418a:	2300      	movs	r3, #0
 800418c:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 8004190:	68fb      	ldr	r3, [r7, #12]
 8004192:	689a      	ldr	r2, [r3, #8]
 8004194:	68fb      	ldr	r3, [r7, #12]
 8004196:	691b      	ldr	r3, [r3, #16]
 8004198:	431a      	orrs	r2, r3
 800419a:	68fb      	ldr	r3, [r7, #12]
 800419c:	695b      	ldr	r3, [r3, #20]
 800419e:	431a      	orrs	r2, r3
 80041a0:	68fb      	ldr	r3, [r7, #12]
 80041a2:	69db      	ldr	r3, [r3, #28]
 80041a4:	4313      	orrs	r3, r2
 80041a6:	627b      	str	r3, [r7, #36]	@ 0x24
 80041a8:	68fb      	ldr	r3, [r7, #12]
 80041aa:	681b      	ldr	r3, [r3, #0]
 80041ac:	681a      	ldr	r2, [r3, #0]
 80041ae:	4ba4      	ldr	r3, [pc, #656]	@ (8004440 <UART_SetConfig+0x2c0>)
 80041b0:	4013      	ands	r3, r2
 80041b2:	68fa      	ldr	r2, [r7, #12]
 80041b4:	6812      	ldr	r2, [r2, #0]
 80041b6:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 80041b8:	430b      	orrs	r3, r1
 80041ba:	6013      	str	r3, [r2, #0]
 80041bc:	68fb      	ldr	r3, [r7, #12]
 80041be:	681b      	ldr	r3, [r3, #0]
 80041c0:	685b      	ldr	r3, [r3, #4]
 80041c2:	f423 5140 	bic.w	r1, r3, #12288	@ 0x3000
 80041c6:	68fb      	ldr	r3, [r7, #12]
 80041c8:	68da      	ldr	r2, [r3, #12]
 80041ca:	68fb      	ldr	r3, [r7, #12]
 80041cc:	681b      	ldr	r3, [r3, #0]
 80041ce:	430a      	orrs	r2, r1
 80041d0:	605a      	str	r2, [r3, #4]
 80041d2:	68fb      	ldr	r3, [r7, #12]
 80041d4:	699b      	ldr	r3, [r3, #24]
 80041d6:	627b      	str	r3, [r7, #36]	@ 0x24
 80041d8:	68fb      	ldr	r3, [r7, #12]
 80041da:	681b      	ldr	r3, [r3, #0]
 80041dc:	4a99      	ldr	r2, [pc, #612]	@ (8004444 <UART_SetConfig+0x2c4>)
 80041de:	4293      	cmp	r3, r2
 80041e0:	d004      	beq.n	80041ec <UART_SetConfig+0x6c>
 80041e2:	68fb      	ldr	r3, [r7, #12]
 80041e4:	6a1b      	ldr	r3, [r3, #32]
 80041e6:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80041e8:	4313      	orrs	r3, r2
 80041ea:	627b      	str	r3, [r7, #36]	@ 0x24
 80041ec:	68fb      	ldr	r3, [r7, #12]
 80041ee:	681b      	ldr	r3, [r3, #0]
 80041f0:	689b      	ldr	r3, [r3, #8]
 80041f2:	f423 6130 	bic.w	r1, r3, #2816	@ 0xb00
 80041f6:	68fb      	ldr	r3, [r7, #12]
 80041f8:	681b      	ldr	r3, [r3, #0]
 80041fa:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80041fc:	430a      	orrs	r2, r1
 80041fe:	609a      	str	r2, [r3, #8]
 8004200:	68fb      	ldr	r3, [r7, #12]
 8004202:	681b      	ldr	r3, [r3, #0]
 8004204:	4a90      	ldr	r2, [pc, #576]	@ (8004448 <UART_SetConfig+0x2c8>)
 8004206:	4293      	cmp	r3, r2
 8004208:	d126      	bne.n	8004258 <UART_SetConfig+0xd8>
 800420a:	4b90      	ldr	r3, [pc, #576]	@ (800444c <UART_SetConfig+0x2cc>)
 800420c:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8004210:	f003 0303 	and.w	r3, r3, #3
 8004214:	2b03      	cmp	r3, #3
 8004216:	d81b      	bhi.n	8004250 <UART_SetConfig+0xd0>
 8004218:	a201      	add	r2, pc, #4	@ (adr r2, 8004220 <UART_SetConfig+0xa0>)
 800421a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800421e:	bf00      	nop
 8004220:	08004231 	.word	0x08004231
 8004224:	08004241 	.word	0x08004241
 8004228:	08004239 	.word	0x08004239
 800422c:	08004249 	.word	0x08004249
 8004230:	2301      	movs	r3, #1
 8004232:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8004236:	e116      	b.n	8004466 <UART_SetConfig+0x2e6>
 8004238:	2302      	movs	r3, #2
 800423a:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800423e:	e112      	b.n	8004466 <UART_SetConfig+0x2e6>
 8004240:	2304      	movs	r3, #4
 8004242:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8004246:	e10e      	b.n	8004466 <UART_SetConfig+0x2e6>
 8004248:	2308      	movs	r3, #8
 800424a:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800424e:	e10a      	b.n	8004466 <UART_SetConfig+0x2e6>
 8004250:	2310      	movs	r3, #16
 8004252:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8004256:	e106      	b.n	8004466 <UART_SetConfig+0x2e6>
 8004258:	68fb      	ldr	r3, [r7, #12]
 800425a:	681b      	ldr	r3, [r3, #0]
 800425c:	4a7c      	ldr	r2, [pc, #496]	@ (8004450 <UART_SetConfig+0x2d0>)
 800425e:	4293      	cmp	r3, r2
 8004260:	d138      	bne.n	80042d4 <UART_SetConfig+0x154>
 8004262:	4b7a      	ldr	r3, [pc, #488]	@ (800444c <UART_SetConfig+0x2cc>)
 8004264:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8004268:	f003 030c 	and.w	r3, r3, #12
 800426c:	2b0c      	cmp	r3, #12
 800426e:	d82d      	bhi.n	80042cc <UART_SetConfig+0x14c>
 8004270:	a201      	add	r2, pc, #4	@ (adr r2, 8004278 <UART_SetConfig+0xf8>)
 8004272:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004276:	bf00      	nop
 8004278:	080042ad 	.word	0x080042ad
 800427c:	080042cd 	.word	0x080042cd
 8004280:	080042cd 	.word	0x080042cd
 8004284:	080042cd 	.word	0x080042cd
 8004288:	080042bd 	.word	0x080042bd
 800428c:	080042cd 	.word	0x080042cd
 8004290:	080042cd 	.word	0x080042cd
 8004294:	080042cd 	.word	0x080042cd
 8004298:	080042b5 	.word	0x080042b5
 800429c:	080042cd 	.word	0x080042cd
 80042a0:	080042cd 	.word	0x080042cd
 80042a4:	080042cd 	.word	0x080042cd
 80042a8:	080042c5 	.word	0x080042c5
 80042ac:	2300      	movs	r3, #0
 80042ae:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80042b2:	e0d8      	b.n	8004466 <UART_SetConfig+0x2e6>
 80042b4:	2302      	movs	r3, #2
 80042b6:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80042ba:	e0d4      	b.n	8004466 <UART_SetConfig+0x2e6>
 80042bc:	2304      	movs	r3, #4
 80042be:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80042c2:	e0d0      	b.n	8004466 <UART_SetConfig+0x2e6>
 80042c4:	2308      	movs	r3, #8
 80042c6:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80042ca:	e0cc      	b.n	8004466 <UART_SetConfig+0x2e6>
 80042cc:	2310      	movs	r3, #16
 80042ce:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80042d2:	e0c8      	b.n	8004466 <UART_SetConfig+0x2e6>
 80042d4:	68fb      	ldr	r3, [r7, #12]
 80042d6:	681b      	ldr	r3, [r3, #0]
 80042d8:	4a5e      	ldr	r2, [pc, #376]	@ (8004454 <UART_SetConfig+0x2d4>)
 80042da:	4293      	cmp	r3, r2
 80042dc:	d125      	bne.n	800432a <UART_SetConfig+0x1aa>
 80042de:	4b5b      	ldr	r3, [pc, #364]	@ (800444c <UART_SetConfig+0x2cc>)
 80042e0:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80042e4:	f003 0330 	and.w	r3, r3, #48	@ 0x30
 80042e8:	2b30      	cmp	r3, #48	@ 0x30
 80042ea:	d016      	beq.n	800431a <UART_SetConfig+0x19a>
 80042ec:	2b30      	cmp	r3, #48	@ 0x30
 80042ee:	d818      	bhi.n	8004322 <UART_SetConfig+0x1a2>
 80042f0:	2b20      	cmp	r3, #32
 80042f2:	d00a      	beq.n	800430a <UART_SetConfig+0x18a>
 80042f4:	2b20      	cmp	r3, #32
 80042f6:	d814      	bhi.n	8004322 <UART_SetConfig+0x1a2>
 80042f8:	2b00      	cmp	r3, #0
 80042fa:	d002      	beq.n	8004302 <UART_SetConfig+0x182>
 80042fc:	2b10      	cmp	r3, #16
 80042fe:	d008      	beq.n	8004312 <UART_SetConfig+0x192>
 8004300:	e00f      	b.n	8004322 <UART_SetConfig+0x1a2>
 8004302:	2300      	movs	r3, #0
 8004304:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8004308:	e0ad      	b.n	8004466 <UART_SetConfig+0x2e6>
 800430a:	2302      	movs	r3, #2
 800430c:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8004310:	e0a9      	b.n	8004466 <UART_SetConfig+0x2e6>
 8004312:	2304      	movs	r3, #4
 8004314:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8004318:	e0a5      	b.n	8004466 <UART_SetConfig+0x2e6>
 800431a:	2308      	movs	r3, #8
 800431c:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8004320:	e0a1      	b.n	8004466 <UART_SetConfig+0x2e6>
 8004322:	2310      	movs	r3, #16
 8004324:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8004328:	e09d      	b.n	8004466 <UART_SetConfig+0x2e6>
 800432a:	68fb      	ldr	r3, [r7, #12]
 800432c:	681b      	ldr	r3, [r3, #0]
 800432e:	4a4a      	ldr	r2, [pc, #296]	@ (8004458 <UART_SetConfig+0x2d8>)
 8004330:	4293      	cmp	r3, r2
 8004332:	d125      	bne.n	8004380 <UART_SetConfig+0x200>
 8004334:	4b45      	ldr	r3, [pc, #276]	@ (800444c <UART_SetConfig+0x2cc>)
 8004336:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800433a:	f003 03c0 	and.w	r3, r3, #192	@ 0xc0
 800433e:	2bc0      	cmp	r3, #192	@ 0xc0
 8004340:	d016      	beq.n	8004370 <UART_SetConfig+0x1f0>
 8004342:	2bc0      	cmp	r3, #192	@ 0xc0
 8004344:	d818      	bhi.n	8004378 <UART_SetConfig+0x1f8>
 8004346:	2b80      	cmp	r3, #128	@ 0x80
 8004348:	d00a      	beq.n	8004360 <UART_SetConfig+0x1e0>
 800434a:	2b80      	cmp	r3, #128	@ 0x80
 800434c:	d814      	bhi.n	8004378 <UART_SetConfig+0x1f8>
 800434e:	2b00      	cmp	r3, #0
 8004350:	d002      	beq.n	8004358 <UART_SetConfig+0x1d8>
 8004352:	2b40      	cmp	r3, #64	@ 0x40
 8004354:	d008      	beq.n	8004368 <UART_SetConfig+0x1e8>
 8004356:	e00f      	b.n	8004378 <UART_SetConfig+0x1f8>
 8004358:	2300      	movs	r3, #0
 800435a:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800435e:	e082      	b.n	8004466 <UART_SetConfig+0x2e6>
 8004360:	2302      	movs	r3, #2
 8004362:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8004366:	e07e      	b.n	8004466 <UART_SetConfig+0x2e6>
 8004368:	2304      	movs	r3, #4
 800436a:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800436e:	e07a      	b.n	8004466 <UART_SetConfig+0x2e6>
 8004370:	2308      	movs	r3, #8
 8004372:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8004376:	e076      	b.n	8004466 <UART_SetConfig+0x2e6>
 8004378:	2310      	movs	r3, #16
 800437a:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800437e:	e072      	b.n	8004466 <UART_SetConfig+0x2e6>
 8004380:	68fb      	ldr	r3, [r7, #12]
 8004382:	681b      	ldr	r3, [r3, #0]
 8004384:	4a35      	ldr	r2, [pc, #212]	@ (800445c <UART_SetConfig+0x2dc>)
 8004386:	4293      	cmp	r3, r2
 8004388:	d12a      	bne.n	80043e0 <UART_SetConfig+0x260>
 800438a:	4b30      	ldr	r3, [pc, #192]	@ (800444c <UART_SetConfig+0x2cc>)
 800438c:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8004390:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8004394:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8004398:	d01a      	beq.n	80043d0 <UART_SetConfig+0x250>
 800439a:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 800439e:	d81b      	bhi.n	80043d8 <UART_SetConfig+0x258>
 80043a0:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80043a4:	d00c      	beq.n	80043c0 <UART_SetConfig+0x240>
 80043a6:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80043aa:	d815      	bhi.n	80043d8 <UART_SetConfig+0x258>
 80043ac:	2b00      	cmp	r3, #0
 80043ae:	d003      	beq.n	80043b8 <UART_SetConfig+0x238>
 80043b0:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80043b4:	d008      	beq.n	80043c8 <UART_SetConfig+0x248>
 80043b6:	e00f      	b.n	80043d8 <UART_SetConfig+0x258>
 80043b8:	2300      	movs	r3, #0
 80043ba:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80043be:	e052      	b.n	8004466 <UART_SetConfig+0x2e6>
 80043c0:	2302      	movs	r3, #2
 80043c2:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80043c6:	e04e      	b.n	8004466 <UART_SetConfig+0x2e6>
 80043c8:	2304      	movs	r3, #4
 80043ca:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80043ce:	e04a      	b.n	8004466 <UART_SetConfig+0x2e6>
 80043d0:	2308      	movs	r3, #8
 80043d2:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80043d6:	e046      	b.n	8004466 <UART_SetConfig+0x2e6>
 80043d8:	2310      	movs	r3, #16
 80043da:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80043de:	e042      	b.n	8004466 <UART_SetConfig+0x2e6>
 80043e0:	68fb      	ldr	r3, [r7, #12]
 80043e2:	681b      	ldr	r3, [r3, #0]
 80043e4:	4a17      	ldr	r2, [pc, #92]	@ (8004444 <UART_SetConfig+0x2c4>)
 80043e6:	4293      	cmp	r3, r2
 80043e8:	d13a      	bne.n	8004460 <UART_SetConfig+0x2e0>
 80043ea:	4b18      	ldr	r3, [pc, #96]	@ (800444c <UART_SetConfig+0x2cc>)
 80043ec:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80043f0:	f403 6340 	and.w	r3, r3, #3072	@ 0xc00
 80043f4:	f5b3 6f40 	cmp.w	r3, #3072	@ 0xc00
 80043f8:	d01a      	beq.n	8004430 <UART_SetConfig+0x2b0>
 80043fa:	f5b3 6f40 	cmp.w	r3, #3072	@ 0xc00
 80043fe:	d81b      	bhi.n	8004438 <UART_SetConfig+0x2b8>
 8004400:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8004404:	d00c      	beq.n	8004420 <UART_SetConfig+0x2a0>
 8004406:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800440a:	d815      	bhi.n	8004438 <UART_SetConfig+0x2b8>
 800440c:	2b00      	cmp	r3, #0
 800440e:	d003      	beq.n	8004418 <UART_SetConfig+0x298>
 8004410:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8004414:	d008      	beq.n	8004428 <UART_SetConfig+0x2a8>
 8004416:	e00f      	b.n	8004438 <UART_SetConfig+0x2b8>
 8004418:	2300      	movs	r3, #0
 800441a:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800441e:	e022      	b.n	8004466 <UART_SetConfig+0x2e6>
 8004420:	2302      	movs	r3, #2
 8004422:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8004426:	e01e      	b.n	8004466 <UART_SetConfig+0x2e6>
 8004428:	2304      	movs	r3, #4
 800442a:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800442e:	e01a      	b.n	8004466 <UART_SetConfig+0x2e6>
 8004430:	2308      	movs	r3, #8
 8004432:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8004436:	e016      	b.n	8004466 <UART_SetConfig+0x2e6>
 8004438:	2310      	movs	r3, #16
 800443a:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800443e:	e012      	b.n	8004466 <UART_SetConfig+0x2e6>
 8004440:	efff69f3 	.word	0xefff69f3
 8004444:	40008000 	.word	0x40008000
 8004448:	40013800 	.word	0x40013800
 800444c:	40021000 	.word	0x40021000
 8004450:	40004400 	.word	0x40004400
 8004454:	40004800 	.word	0x40004800
 8004458:	40004c00 	.word	0x40004c00
 800445c:	40005000 	.word	0x40005000
 8004460:	2310      	movs	r3, #16
 8004462:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8004466:	68fb      	ldr	r3, [r7, #12]
 8004468:	681b      	ldr	r3, [r3, #0]
 800446a:	4a9f      	ldr	r2, [pc, #636]	@ (80046e8 <UART_SetConfig+0x568>)
 800446c:	4293      	cmp	r3, r2
 800446e:	d17a      	bne.n	8004566 <UART_SetConfig+0x3e6>
 8004470:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 8004474:	2b08      	cmp	r3, #8
 8004476:	d824      	bhi.n	80044c2 <UART_SetConfig+0x342>
 8004478:	a201      	add	r2, pc, #4	@ (adr r2, 8004480 <UART_SetConfig+0x300>)
 800447a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800447e:	bf00      	nop
 8004480:	080044a5 	.word	0x080044a5
 8004484:	080044c3 	.word	0x080044c3
 8004488:	080044ad 	.word	0x080044ad
 800448c:	080044c3 	.word	0x080044c3
 8004490:	080044b3 	.word	0x080044b3
 8004494:	080044c3 	.word	0x080044c3
 8004498:	080044c3 	.word	0x080044c3
 800449c:	080044c3 	.word	0x080044c3
 80044a0:	080044bb 	.word	0x080044bb
 80044a4:	f7fe ff76 	bl	8003394 <HAL_RCC_GetPCLK1Freq>
 80044a8:	61f8      	str	r0, [r7, #28]
 80044aa:	e010      	b.n	80044ce <UART_SetConfig+0x34e>
 80044ac:	4b8f      	ldr	r3, [pc, #572]	@ (80046ec <UART_SetConfig+0x56c>)
 80044ae:	61fb      	str	r3, [r7, #28]
 80044b0:	e00d      	b.n	80044ce <UART_SetConfig+0x34e>
 80044b2:	f7fe fed7 	bl	8003264 <HAL_RCC_GetSysClockFreq>
 80044b6:	61f8      	str	r0, [r7, #28]
 80044b8:	e009      	b.n	80044ce <UART_SetConfig+0x34e>
 80044ba:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80044be:	61fb      	str	r3, [r7, #28]
 80044c0:	e005      	b.n	80044ce <UART_SetConfig+0x34e>
 80044c2:	2300      	movs	r3, #0
 80044c4:	61fb      	str	r3, [r7, #28]
 80044c6:	2301      	movs	r3, #1
 80044c8:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 80044cc:	bf00      	nop
 80044ce:	69fb      	ldr	r3, [r7, #28]
 80044d0:	2b00      	cmp	r3, #0
 80044d2:	f000 80fb 	beq.w	80046cc <UART_SetConfig+0x54c>
 80044d6:	68fb      	ldr	r3, [r7, #12]
 80044d8:	685a      	ldr	r2, [r3, #4]
 80044da:	4613      	mov	r3, r2
 80044dc:	005b      	lsls	r3, r3, #1
 80044de:	4413      	add	r3, r2
 80044e0:	69fa      	ldr	r2, [r7, #28]
 80044e2:	429a      	cmp	r2, r3
 80044e4:	d305      	bcc.n	80044f2 <UART_SetConfig+0x372>
 80044e6:	68fb      	ldr	r3, [r7, #12]
 80044e8:	685b      	ldr	r3, [r3, #4]
 80044ea:	031b      	lsls	r3, r3, #12
 80044ec:	69fa      	ldr	r2, [r7, #28]
 80044ee:	429a      	cmp	r2, r3
 80044f0:	d903      	bls.n	80044fa <UART_SetConfig+0x37a>
 80044f2:	2301      	movs	r3, #1
 80044f4:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 80044f8:	e0e8      	b.n	80046cc <UART_SetConfig+0x54c>
 80044fa:	69fb      	ldr	r3, [r7, #28]
 80044fc:	2200      	movs	r2, #0
 80044fe:	461c      	mov	r4, r3
 8004500:	4615      	mov	r5, r2
 8004502:	f04f 0200 	mov.w	r2, #0
 8004506:	f04f 0300 	mov.w	r3, #0
 800450a:	022b      	lsls	r3, r5, #8
 800450c:	ea43 6314 	orr.w	r3, r3, r4, lsr #24
 8004510:	0222      	lsls	r2, r4, #8
 8004512:	68f9      	ldr	r1, [r7, #12]
 8004514:	6849      	ldr	r1, [r1, #4]
 8004516:	0849      	lsrs	r1, r1, #1
 8004518:	2000      	movs	r0, #0
 800451a:	4688      	mov	r8, r1
 800451c:	4681      	mov	r9, r0
 800451e:	eb12 0a08 	adds.w	sl, r2, r8
 8004522:	eb43 0b09 	adc.w	fp, r3, r9
 8004526:	68fb      	ldr	r3, [r7, #12]
 8004528:	685b      	ldr	r3, [r3, #4]
 800452a:	2200      	movs	r2, #0
 800452c:	603b      	str	r3, [r7, #0]
 800452e:	607a      	str	r2, [r7, #4]
 8004530:	e9d7 2300 	ldrd	r2, r3, [r7]
 8004534:	4650      	mov	r0, sl
 8004536:	4659      	mov	r1, fp
 8004538:	f7fb feb2 	bl	80002a0 <__aeabi_uldivmod>
 800453c:	4602      	mov	r2, r0
 800453e:	460b      	mov	r3, r1
 8004540:	4613      	mov	r3, r2
 8004542:	61bb      	str	r3, [r7, #24]
 8004544:	69bb      	ldr	r3, [r7, #24]
 8004546:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 800454a:	d308      	bcc.n	800455e <UART_SetConfig+0x3de>
 800454c:	69bb      	ldr	r3, [r7, #24]
 800454e:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 8004552:	d204      	bcs.n	800455e <UART_SetConfig+0x3de>
 8004554:	68fb      	ldr	r3, [r7, #12]
 8004556:	681b      	ldr	r3, [r3, #0]
 8004558:	69ba      	ldr	r2, [r7, #24]
 800455a:	60da      	str	r2, [r3, #12]
 800455c:	e0b6      	b.n	80046cc <UART_SetConfig+0x54c>
 800455e:	2301      	movs	r3, #1
 8004560:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 8004564:	e0b2      	b.n	80046cc <UART_SetConfig+0x54c>
 8004566:	68fb      	ldr	r3, [r7, #12]
 8004568:	69db      	ldr	r3, [r3, #28]
 800456a:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 800456e:	d15e      	bne.n	800462e <UART_SetConfig+0x4ae>
 8004570:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 8004574:	2b08      	cmp	r3, #8
 8004576:	d828      	bhi.n	80045ca <UART_SetConfig+0x44a>
 8004578:	a201      	add	r2, pc, #4	@ (adr r2, 8004580 <UART_SetConfig+0x400>)
 800457a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800457e:	bf00      	nop
 8004580:	080045a5 	.word	0x080045a5
 8004584:	080045ad 	.word	0x080045ad
 8004588:	080045b5 	.word	0x080045b5
 800458c:	080045cb 	.word	0x080045cb
 8004590:	080045bb 	.word	0x080045bb
 8004594:	080045cb 	.word	0x080045cb
 8004598:	080045cb 	.word	0x080045cb
 800459c:	080045cb 	.word	0x080045cb
 80045a0:	080045c3 	.word	0x080045c3
 80045a4:	f7fe fef6 	bl	8003394 <HAL_RCC_GetPCLK1Freq>
 80045a8:	61f8      	str	r0, [r7, #28]
 80045aa:	e014      	b.n	80045d6 <UART_SetConfig+0x456>
 80045ac:	f7fe ff08 	bl	80033c0 <HAL_RCC_GetPCLK2Freq>
 80045b0:	61f8      	str	r0, [r7, #28]
 80045b2:	e010      	b.n	80045d6 <UART_SetConfig+0x456>
 80045b4:	4b4d      	ldr	r3, [pc, #308]	@ (80046ec <UART_SetConfig+0x56c>)
 80045b6:	61fb      	str	r3, [r7, #28]
 80045b8:	e00d      	b.n	80045d6 <UART_SetConfig+0x456>
 80045ba:	f7fe fe53 	bl	8003264 <HAL_RCC_GetSysClockFreq>
 80045be:	61f8      	str	r0, [r7, #28]
 80045c0:	e009      	b.n	80045d6 <UART_SetConfig+0x456>
 80045c2:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80045c6:	61fb      	str	r3, [r7, #28]
 80045c8:	e005      	b.n	80045d6 <UART_SetConfig+0x456>
 80045ca:	2300      	movs	r3, #0
 80045cc:	61fb      	str	r3, [r7, #28]
 80045ce:	2301      	movs	r3, #1
 80045d0:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 80045d4:	bf00      	nop
 80045d6:	69fb      	ldr	r3, [r7, #28]
 80045d8:	2b00      	cmp	r3, #0
 80045da:	d077      	beq.n	80046cc <UART_SetConfig+0x54c>
 80045dc:	69fb      	ldr	r3, [r7, #28]
 80045de:	005a      	lsls	r2, r3, #1
 80045e0:	68fb      	ldr	r3, [r7, #12]
 80045e2:	685b      	ldr	r3, [r3, #4]
 80045e4:	085b      	lsrs	r3, r3, #1
 80045e6:	441a      	add	r2, r3
 80045e8:	68fb      	ldr	r3, [r7, #12]
 80045ea:	685b      	ldr	r3, [r3, #4]
 80045ec:	fbb2 f3f3 	udiv	r3, r2, r3
 80045f0:	61bb      	str	r3, [r7, #24]
 80045f2:	69bb      	ldr	r3, [r7, #24]
 80045f4:	2b0f      	cmp	r3, #15
 80045f6:	d916      	bls.n	8004626 <UART_SetConfig+0x4a6>
 80045f8:	69bb      	ldr	r3, [r7, #24]
 80045fa:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80045fe:	d212      	bcs.n	8004626 <UART_SetConfig+0x4a6>
 8004600:	69bb      	ldr	r3, [r7, #24]
 8004602:	b29b      	uxth	r3, r3
 8004604:	f023 030f 	bic.w	r3, r3, #15
 8004608:	82fb      	strh	r3, [r7, #22]
 800460a:	69bb      	ldr	r3, [r7, #24]
 800460c:	085b      	lsrs	r3, r3, #1
 800460e:	b29b      	uxth	r3, r3
 8004610:	f003 0307 	and.w	r3, r3, #7
 8004614:	b29a      	uxth	r2, r3
 8004616:	8afb      	ldrh	r3, [r7, #22]
 8004618:	4313      	orrs	r3, r2
 800461a:	82fb      	strh	r3, [r7, #22]
 800461c:	68fb      	ldr	r3, [r7, #12]
 800461e:	681b      	ldr	r3, [r3, #0]
 8004620:	8afa      	ldrh	r2, [r7, #22]
 8004622:	60da      	str	r2, [r3, #12]
 8004624:	e052      	b.n	80046cc <UART_SetConfig+0x54c>
 8004626:	2301      	movs	r3, #1
 8004628:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 800462c:	e04e      	b.n	80046cc <UART_SetConfig+0x54c>
 800462e:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 8004632:	2b08      	cmp	r3, #8
 8004634:	d827      	bhi.n	8004686 <UART_SetConfig+0x506>
 8004636:	a201      	add	r2, pc, #4	@ (adr r2, 800463c <UART_SetConfig+0x4bc>)
 8004638:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800463c:	08004661 	.word	0x08004661
 8004640:	08004669 	.word	0x08004669
 8004644:	08004671 	.word	0x08004671
 8004648:	08004687 	.word	0x08004687
 800464c:	08004677 	.word	0x08004677
 8004650:	08004687 	.word	0x08004687
 8004654:	08004687 	.word	0x08004687
 8004658:	08004687 	.word	0x08004687
 800465c:	0800467f 	.word	0x0800467f
 8004660:	f7fe fe98 	bl	8003394 <HAL_RCC_GetPCLK1Freq>
 8004664:	61f8      	str	r0, [r7, #28]
 8004666:	e014      	b.n	8004692 <UART_SetConfig+0x512>
 8004668:	f7fe feaa 	bl	80033c0 <HAL_RCC_GetPCLK2Freq>
 800466c:	61f8      	str	r0, [r7, #28]
 800466e:	e010      	b.n	8004692 <UART_SetConfig+0x512>
 8004670:	4b1e      	ldr	r3, [pc, #120]	@ (80046ec <UART_SetConfig+0x56c>)
 8004672:	61fb      	str	r3, [r7, #28]
 8004674:	e00d      	b.n	8004692 <UART_SetConfig+0x512>
 8004676:	f7fe fdf5 	bl	8003264 <HAL_RCC_GetSysClockFreq>
 800467a:	61f8      	str	r0, [r7, #28]
 800467c:	e009      	b.n	8004692 <UART_SetConfig+0x512>
 800467e:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8004682:	61fb      	str	r3, [r7, #28]
 8004684:	e005      	b.n	8004692 <UART_SetConfig+0x512>
 8004686:	2300      	movs	r3, #0
 8004688:	61fb      	str	r3, [r7, #28]
 800468a:	2301      	movs	r3, #1
 800468c:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 8004690:	bf00      	nop
 8004692:	69fb      	ldr	r3, [r7, #28]
 8004694:	2b00      	cmp	r3, #0
 8004696:	d019      	beq.n	80046cc <UART_SetConfig+0x54c>
 8004698:	68fb      	ldr	r3, [r7, #12]
 800469a:	685b      	ldr	r3, [r3, #4]
 800469c:	085a      	lsrs	r2, r3, #1
 800469e:	69fb      	ldr	r3, [r7, #28]
 80046a0:	441a      	add	r2, r3
 80046a2:	68fb      	ldr	r3, [r7, #12]
 80046a4:	685b      	ldr	r3, [r3, #4]
 80046a6:	fbb2 f3f3 	udiv	r3, r2, r3
 80046aa:	61bb      	str	r3, [r7, #24]
 80046ac:	69bb      	ldr	r3, [r7, #24]
 80046ae:	2b0f      	cmp	r3, #15
 80046b0:	d909      	bls.n	80046c6 <UART_SetConfig+0x546>
 80046b2:	69bb      	ldr	r3, [r7, #24]
 80046b4:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80046b8:	d205      	bcs.n	80046c6 <UART_SetConfig+0x546>
 80046ba:	69bb      	ldr	r3, [r7, #24]
 80046bc:	b29a      	uxth	r2, r3
 80046be:	68fb      	ldr	r3, [r7, #12]
 80046c0:	681b      	ldr	r3, [r3, #0]
 80046c2:	60da      	str	r2, [r3, #12]
 80046c4:	e002      	b.n	80046cc <UART_SetConfig+0x54c>
 80046c6:	2301      	movs	r3, #1
 80046c8:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 80046cc:	68fb      	ldr	r3, [r7, #12]
 80046ce:	2200      	movs	r2, #0
 80046d0:	669a      	str	r2, [r3, #104]	@ 0x68
 80046d2:	68fb      	ldr	r3, [r7, #12]
 80046d4:	2200      	movs	r2, #0
 80046d6:	66da      	str	r2, [r3, #108]	@ 0x6c
 80046d8:	f897 3022 	ldrb.w	r3, [r7, #34]	@ 0x22
 80046dc:	4618      	mov	r0, r3
 80046de:	3728      	adds	r7, #40	@ 0x28
 80046e0:	46bd      	mov	sp, r7
 80046e2:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80046e6:	bf00      	nop
 80046e8:	40008000 	.word	0x40008000
 80046ec:	00f42400 	.word	0x00f42400

080046f0 <UART_AdvFeatureConfig>:
 80046f0:	b480      	push	{r7}
 80046f2:	b083      	sub	sp, #12
 80046f4:	af00      	add	r7, sp, #0
 80046f6:	6078      	str	r0, [r7, #4]
 80046f8:	687b      	ldr	r3, [r7, #4]
 80046fa:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80046fc:	f003 0308 	and.w	r3, r3, #8
 8004700:	2b00      	cmp	r3, #0
 8004702:	d00a      	beq.n	800471a <UART_AdvFeatureConfig+0x2a>
 8004704:	687b      	ldr	r3, [r7, #4]
 8004706:	681b      	ldr	r3, [r3, #0]
 8004708:	685b      	ldr	r3, [r3, #4]
 800470a:	f423 4100 	bic.w	r1, r3, #32768	@ 0x8000
 800470e:	687b      	ldr	r3, [r7, #4]
 8004710:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8004712:	687b      	ldr	r3, [r7, #4]
 8004714:	681b      	ldr	r3, [r3, #0]
 8004716:	430a      	orrs	r2, r1
 8004718:	605a      	str	r2, [r3, #4]
 800471a:	687b      	ldr	r3, [r7, #4]
 800471c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800471e:	f003 0301 	and.w	r3, r3, #1
 8004722:	2b00      	cmp	r3, #0
 8004724:	d00a      	beq.n	800473c <UART_AdvFeatureConfig+0x4c>
 8004726:	687b      	ldr	r3, [r7, #4]
 8004728:	681b      	ldr	r3, [r3, #0]
 800472a:	685b      	ldr	r3, [r3, #4]
 800472c:	f423 3100 	bic.w	r1, r3, #131072	@ 0x20000
 8004730:	687b      	ldr	r3, [r7, #4]
 8004732:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8004734:	687b      	ldr	r3, [r7, #4]
 8004736:	681b      	ldr	r3, [r3, #0]
 8004738:	430a      	orrs	r2, r1
 800473a:	605a      	str	r2, [r3, #4]
 800473c:	687b      	ldr	r3, [r7, #4]
 800473e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004740:	f003 0302 	and.w	r3, r3, #2
 8004744:	2b00      	cmp	r3, #0
 8004746:	d00a      	beq.n	800475e <UART_AdvFeatureConfig+0x6e>
 8004748:	687b      	ldr	r3, [r7, #4]
 800474a:	681b      	ldr	r3, [r3, #0]
 800474c:	685b      	ldr	r3, [r3, #4]
 800474e:	f423 3180 	bic.w	r1, r3, #65536	@ 0x10000
 8004752:	687b      	ldr	r3, [r7, #4]
 8004754:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8004756:	687b      	ldr	r3, [r7, #4]
 8004758:	681b      	ldr	r3, [r3, #0]
 800475a:	430a      	orrs	r2, r1
 800475c:	605a      	str	r2, [r3, #4]
 800475e:	687b      	ldr	r3, [r7, #4]
 8004760:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004762:	f003 0304 	and.w	r3, r3, #4
 8004766:	2b00      	cmp	r3, #0
 8004768:	d00a      	beq.n	8004780 <UART_AdvFeatureConfig+0x90>
 800476a:	687b      	ldr	r3, [r7, #4]
 800476c:	681b      	ldr	r3, [r3, #0]
 800476e:	685b      	ldr	r3, [r3, #4]
 8004770:	f423 2180 	bic.w	r1, r3, #262144	@ 0x40000
 8004774:	687b      	ldr	r3, [r7, #4]
 8004776:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8004778:	687b      	ldr	r3, [r7, #4]
 800477a:	681b      	ldr	r3, [r3, #0]
 800477c:	430a      	orrs	r2, r1
 800477e:	605a      	str	r2, [r3, #4]
 8004780:	687b      	ldr	r3, [r7, #4]
 8004782:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004784:	f003 0310 	and.w	r3, r3, #16
 8004788:	2b00      	cmp	r3, #0
 800478a:	d00a      	beq.n	80047a2 <UART_AdvFeatureConfig+0xb2>
 800478c:	687b      	ldr	r3, [r7, #4]
 800478e:	681b      	ldr	r3, [r3, #0]
 8004790:	689b      	ldr	r3, [r3, #8]
 8004792:	f423 5180 	bic.w	r1, r3, #4096	@ 0x1000
 8004796:	687b      	ldr	r3, [r7, #4]
 8004798:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 800479a:	687b      	ldr	r3, [r7, #4]
 800479c:	681b      	ldr	r3, [r3, #0]
 800479e:	430a      	orrs	r2, r1
 80047a0:	609a      	str	r2, [r3, #8]
 80047a2:	687b      	ldr	r3, [r7, #4]
 80047a4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80047a6:	f003 0320 	and.w	r3, r3, #32
 80047aa:	2b00      	cmp	r3, #0
 80047ac:	d00a      	beq.n	80047c4 <UART_AdvFeatureConfig+0xd4>
 80047ae:	687b      	ldr	r3, [r7, #4]
 80047b0:	681b      	ldr	r3, [r3, #0]
 80047b2:	689b      	ldr	r3, [r3, #8]
 80047b4:	f423 5100 	bic.w	r1, r3, #8192	@ 0x2000
 80047b8:	687b      	ldr	r3, [r7, #4]
 80047ba:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 80047bc:	687b      	ldr	r3, [r7, #4]
 80047be:	681b      	ldr	r3, [r3, #0]
 80047c0:	430a      	orrs	r2, r1
 80047c2:	609a      	str	r2, [r3, #8]
 80047c4:	687b      	ldr	r3, [r7, #4]
 80047c6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80047c8:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80047cc:	2b00      	cmp	r3, #0
 80047ce:	d01a      	beq.n	8004806 <UART_AdvFeatureConfig+0x116>
 80047d0:	687b      	ldr	r3, [r7, #4]
 80047d2:	681b      	ldr	r3, [r3, #0]
 80047d4:	685b      	ldr	r3, [r3, #4]
 80047d6:	f423 1180 	bic.w	r1, r3, #1048576	@ 0x100000
 80047da:	687b      	ldr	r3, [r7, #4]
 80047dc:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80047de:	687b      	ldr	r3, [r7, #4]
 80047e0:	681b      	ldr	r3, [r3, #0]
 80047e2:	430a      	orrs	r2, r1
 80047e4:	605a      	str	r2, [r3, #4]
 80047e6:	687b      	ldr	r3, [r7, #4]
 80047e8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80047ea:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 80047ee:	d10a      	bne.n	8004806 <UART_AdvFeatureConfig+0x116>
 80047f0:	687b      	ldr	r3, [r7, #4]
 80047f2:	681b      	ldr	r3, [r3, #0]
 80047f4:	685b      	ldr	r3, [r3, #4]
 80047f6:	f423 01c0 	bic.w	r1, r3, #6291456	@ 0x600000
 80047fa:	687b      	ldr	r3, [r7, #4]
 80047fc:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80047fe:	687b      	ldr	r3, [r7, #4]
 8004800:	681b      	ldr	r3, [r3, #0]
 8004802:	430a      	orrs	r2, r1
 8004804:	605a      	str	r2, [r3, #4]
 8004806:	687b      	ldr	r3, [r7, #4]
 8004808:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800480a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800480e:	2b00      	cmp	r3, #0
 8004810:	d00a      	beq.n	8004828 <UART_AdvFeatureConfig+0x138>
 8004812:	687b      	ldr	r3, [r7, #4]
 8004814:	681b      	ldr	r3, [r3, #0]
 8004816:	685b      	ldr	r3, [r3, #4]
 8004818:	f423 2100 	bic.w	r1, r3, #524288	@ 0x80000
 800481c:	687b      	ldr	r3, [r7, #4]
 800481e:	6c9a      	ldr	r2, [r3, #72]	@ 0x48
 8004820:	687b      	ldr	r3, [r7, #4]
 8004822:	681b      	ldr	r3, [r3, #0]
 8004824:	430a      	orrs	r2, r1
 8004826:	605a      	str	r2, [r3, #4]
 8004828:	bf00      	nop
 800482a:	370c      	adds	r7, #12
 800482c:	46bd      	mov	sp, r7
 800482e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004832:	4770      	bx	lr

08004834 <UART_CheckIdleState>:
 8004834:	b580      	push	{r7, lr}
 8004836:	b098      	sub	sp, #96	@ 0x60
 8004838:	af02      	add	r7, sp, #8
 800483a:	6078      	str	r0, [r7, #4]
 800483c:	687b      	ldr	r3, [r7, #4]
 800483e:	2200      	movs	r2, #0
 8004840:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 8004844:	f7fc feea 	bl	800161c <HAL_GetTick>
 8004848:	6578      	str	r0, [r7, #84]	@ 0x54
 800484a:	687b      	ldr	r3, [r7, #4]
 800484c:	681b      	ldr	r3, [r3, #0]
 800484e:	681b      	ldr	r3, [r3, #0]
 8004850:	f003 0308 	and.w	r3, r3, #8
 8004854:	2b08      	cmp	r3, #8
 8004856:	d12e      	bne.n	80048b6 <UART_CheckIdleState+0x82>
 8004858:	f06f 437e 	mvn.w	r3, #4261412864	@ 0xfe000000
 800485c:	9300      	str	r3, [sp, #0]
 800485e:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8004860:	2200      	movs	r2, #0
 8004862:	f44f 1100 	mov.w	r1, #2097152	@ 0x200000
 8004866:	6878      	ldr	r0, [r7, #4]
 8004868:	f000 f88c 	bl	8004984 <UART_WaitOnFlagUntilTimeout>
 800486c:	4603      	mov	r3, r0
 800486e:	2b00      	cmp	r3, #0
 8004870:	d021      	beq.n	80048b6 <UART_CheckIdleState+0x82>
 8004872:	687b      	ldr	r3, [r7, #4]
 8004874:	681b      	ldr	r3, [r3, #0]
 8004876:	63bb      	str	r3, [r7, #56]	@ 0x38
 8004878:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800487a:	e853 3f00 	ldrex	r3, [r3]
 800487e:	637b      	str	r3, [r7, #52]	@ 0x34
 8004880:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8004882:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8004886:	653b      	str	r3, [r7, #80]	@ 0x50
 8004888:	687b      	ldr	r3, [r7, #4]
 800488a:	681b      	ldr	r3, [r3, #0]
 800488c:	461a      	mov	r2, r3
 800488e:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8004890:	647b      	str	r3, [r7, #68]	@ 0x44
 8004892:	643a      	str	r2, [r7, #64]	@ 0x40
 8004894:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 8004896:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8004898:	e841 2300 	strex	r3, r2, [r1]
 800489c:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800489e:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80048a0:	2b00      	cmp	r3, #0
 80048a2:	d1e6      	bne.n	8004872 <UART_CheckIdleState+0x3e>
 80048a4:	687b      	ldr	r3, [r7, #4]
 80048a6:	2220      	movs	r2, #32
 80048a8:	67da      	str	r2, [r3, #124]	@ 0x7c
 80048aa:	687b      	ldr	r3, [r7, #4]
 80048ac:	2200      	movs	r2, #0
 80048ae:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 80048b2:	2303      	movs	r3, #3
 80048b4:	e062      	b.n	800497c <UART_CheckIdleState+0x148>
 80048b6:	687b      	ldr	r3, [r7, #4]
 80048b8:	681b      	ldr	r3, [r3, #0]
 80048ba:	681b      	ldr	r3, [r3, #0]
 80048bc:	f003 0304 	and.w	r3, r3, #4
 80048c0:	2b04      	cmp	r3, #4
 80048c2:	d149      	bne.n	8004958 <UART_CheckIdleState+0x124>
 80048c4:	f06f 437e 	mvn.w	r3, #4261412864	@ 0xfe000000
 80048c8:	9300      	str	r3, [sp, #0]
 80048ca:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80048cc:	2200      	movs	r2, #0
 80048ce:	f44f 0180 	mov.w	r1, #4194304	@ 0x400000
 80048d2:	6878      	ldr	r0, [r7, #4]
 80048d4:	f000 f856 	bl	8004984 <UART_WaitOnFlagUntilTimeout>
 80048d8:	4603      	mov	r3, r0
 80048da:	2b00      	cmp	r3, #0
 80048dc:	d03c      	beq.n	8004958 <UART_CheckIdleState+0x124>
 80048de:	687b      	ldr	r3, [r7, #4]
 80048e0:	681b      	ldr	r3, [r3, #0]
 80048e2:	627b      	str	r3, [r7, #36]	@ 0x24
 80048e4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80048e6:	e853 3f00 	ldrex	r3, [r3]
 80048ea:	623b      	str	r3, [r7, #32]
 80048ec:	6a3b      	ldr	r3, [r7, #32]
 80048ee:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 80048f2:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80048f4:	687b      	ldr	r3, [r7, #4]
 80048f6:	681b      	ldr	r3, [r3, #0]
 80048f8:	461a      	mov	r2, r3
 80048fa:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 80048fc:	633b      	str	r3, [r7, #48]	@ 0x30
 80048fe:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8004900:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8004902:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8004904:	e841 2300 	strex	r3, r2, [r1]
 8004908:	62bb      	str	r3, [r7, #40]	@ 0x28
 800490a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800490c:	2b00      	cmp	r3, #0
 800490e:	d1e6      	bne.n	80048de <UART_CheckIdleState+0xaa>
 8004910:	687b      	ldr	r3, [r7, #4]
 8004912:	681b      	ldr	r3, [r3, #0]
 8004914:	3308      	adds	r3, #8
 8004916:	613b      	str	r3, [r7, #16]
 8004918:	693b      	ldr	r3, [r7, #16]
 800491a:	e853 3f00 	ldrex	r3, [r3]
 800491e:	60fb      	str	r3, [r7, #12]
 8004920:	68fb      	ldr	r3, [r7, #12]
 8004922:	f023 0301 	bic.w	r3, r3, #1
 8004926:	64bb      	str	r3, [r7, #72]	@ 0x48
 8004928:	687b      	ldr	r3, [r7, #4]
 800492a:	681b      	ldr	r3, [r3, #0]
 800492c:	3308      	adds	r3, #8
 800492e:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8004930:	61fa      	str	r2, [r7, #28]
 8004932:	61bb      	str	r3, [r7, #24]
 8004934:	69b9      	ldr	r1, [r7, #24]
 8004936:	69fa      	ldr	r2, [r7, #28]
 8004938:	e841 2300 	strex	r3, r2, [r1]
 800493c:	617b      	str	r3, [r7, #20]
 800493e:	697b      	ldr	r3, [r7, #20]
 8004940:	2b00      	cmp	r3, #0
 8004942:	d1e5      	bne.n	8004910 <UART_CheckIdleState+0xdc>
 8004944:	687b      	ldr	r3, [r7, #4]
 8004946:	2220      	movs	r2, #32
 8004948:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 800494c:	687b      	ldr	r3, [r7, #4]
 800494e:	2200      	movs	r2, #0
 8004950:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 8004954:	2303      	movs	r3, #3
 8004956:	e011      	b.n	800497c <UART_CheckIdleState+0x148>
 8004958:	687b      	ldr	r3, [r7, #4]
 800495a:	2220      	movs	r2, #32
 800495c:	67da      	str	r2, [r3, #124]	@ 0x7c
 800495e:	687b      	ldr	r3, [r7, #4]
 8004960:	2220      	movs	r2, #32
 8004962:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 8004966:	687b      	ldr	r3, [r7, #4]
 8004968:	2200      	movs	r2, #0
 800496a:	661a      	str	r2, [r3, #96]	@ 0x60
 800496c:	687b      	ldr	r3, [r7, #4]
 800496e:	2200      	movs	r2, #0
 8004970:	665a      	str	r2, [r3, #100]	@ 0x64
 8004972:	687b      	ldr	r3, [r7, #4]
 8004974:	2200      	movs	r2, #0
 8004976:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 800497a:	2300      	movs	r3, #0
 800497c:	4618      	mov	r0, r3
 800497e:	3758      	adds	r7, #88	@ 0x58
 8004980:	46bd      	mov	sp, r7
 8004982:	bd80      	pop	{r7, pc}

08004984 <UART_WaitOnFlagUntilTimeout>:
 8004984:	b580      	push	{r7, lr}
 8004986:	b084      	sub	sp, #16
 8004988:	af00      	add	r7, sp, #0
 800498a:	60f8      	str	r0, [r7, #12]
 800498c:	60b9      	str	r1, [r7, #8]
 800498e:	603b      	str	r3, [r7, #0]
 8004990:	4613      	mov	r3, r2
 8004992:	71fb      	strb	r3, [r7, #7]
 8004994:	e04f      	b.n	8004a36 <UART_WaitOnFlagUntilTimeout+0xb2>
 8004996:	69bb      	ldr	r3, [r7, #24]
 8004998:	f1b3 3fff 	cmp.w	r3, #4294967295
 800499c:	d04b      	beq.n	8004a36 <UART_WaitOnFlagUntilTimeout+0xb2>
 800499e:	f7fc fe3d 	bl	800161c <HAL_GetTick>
 80049a2:	4602      	mov	r2, r0
 80049a4:	683b      	ldr	r3, [r7, #0]
 80049a6:	1ad3      	subs	r3, r2, r3
 80049a8:	69ba      	ldr	r2, [r7, #24]
 80049aa:	429a      	cmp	r2, r3
 80049ac:	d302      	bcc.n	80049b4 <UART_WaitOnFlagUntilTimeout+0x30>
 80049ae:	69bb      	ldr	r3, [r7, #24]
 80049b0:	2b00      	cmp	r3, #0
 80049b2:	d101      	bne.n	80049b8 <UART_WaitOnFlagUntilTimeout+0x34>
 80049b4:	2303      	movs	r3, #3
 80049b6:	e04e      	b.n	8004a56 <UART_WaitOnFlagUntilTimeout+0xd2>
 80049b8:	68fb      	ldr	r3, [r7, #12]
 80049ba:	681b      	ldr	r3, [r3, #0]
 80049bc:	681b      	ldr	r3, [r3, #0]
 80049be:	f003 0304 	and.w	r3, r3, #4
 80049c2:	2b00      	cmp	r3, #0
 80049c4:	d037      	beq.n	8004a36 <UART_WaitOnFlagUntilTimeout+0xb2>
 80049c6:	68bb      	ldr	r3, [r7, #8]
 80049c8:	2b80      	cmp	r3, #128	@ 0x80
 80049ca:	d034      	beq.n	8004a36 <UART_WaitOnFlagUntilTimeout+0xb2>
 80049cc:	68bb      	ldr	r3, [r7, #8]
 80049ce:	2b40      	cmp	r3, #64	@ 0x40
 80049d0:	d031      	beq.n	8004a36 <UART_WaitOnFlagUntilTimeout+0xb2>
 80049d2:	68fb      	ldr	r3, [r7, #12]
 80049d4:	681b      	ldr	r3, [r3, #0]
 80049d6:	69db      	ldr	r3, [r3, #28]
 80049d8:	f003 0308 	and.w	r3, r3, #8
 80049dc:	2b08      	cmp	r3, #8
 80049de:	d110      	bne.n	8004a02 <UART_WaitOnFlagUntilTimeout+0x7e>
 80049e0:	68fb      	ldr	r3, [r7, #12]
 80049e2:	681b      	ldr	r3, [r3, #0]
 80049e4:	2208      	movs	r2, #8
 80049e6:	621a      	str	r2, [r3, #32]
 80049e8:	68f8      	ldr	r0, [r7, #12]
 80049ea:	f000 f838 	bl	8004a5e <UART_EndRxTransfer>
 80049ee:	68fb      	ldr	r3, [r7, #12]
 80049f0:	2208      	movs	r2, #8
 80049f2:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 80049f6:	68fb      	ldr	r3, [r7, #12]
 80049f8:	2200      	movs	r2, #0
 80049fa:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 80049fe:	2301      	movs	r3, #1
 8004a00:	e029      	b.n	8004a56 <UART_WaitOnFlagUntilTimeout+0xd2>
 8004a02:	68fb      	ldr	r3, [r7, #12]
 8004a04:	681b      	ldr	r3, [r3, #0]
 8004a06:	69db      	ldr	r3, [r3, #28]
 8004a08:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8004a0c:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8004a10:	d111      	bne.n	8004a36 <UART_WaitOnFlagUntilTimeout+0xb2>
 8004a12:	68fb      	ldr	r3, [r7, #12]
 8004a14:	681b      	ldr	r3, [r3, #0]
 8004a16:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 8004a1a:	621a      	str	r2, [r3, #32]
 8004a1c:	68f8      	ldr	r0, [r7, #12]
 8004a1e:	f000 f81e 	bl	8004a5e <UART_EndRxTransfer>
 8004a22:	68fb      	ldr	r3, [r7, #12]
 8004a24:	2220      	movs	r2, #32
 8004a26:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 8004a2a:	68fb      	ldr	r3, [r7, #12]
 8004a2c:	2200      	movs	r2, #0
 8004a2e:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 8004a32:	2303      	movs	r3, #3
 8004a34:	e00f      	b.n	8004a56 <UART_WaitOnFlagUntilTimeout+0xd2>
 8004a36:	68fb      	ldr	r3, [r7, #12]
 8004a38:	681b      	ldr	r3, [r3, #0]
 8004a3a:	69da      	ldr	r2, [r3, #28]
 8004a3c:	68bb      	ldr	r3, [r7, #8]
 8004a3e:	4013      	ands	r3, r2
 8004a40:	68ba      	ldr	r2, [r7, #8]
 8004a42:	429a      	cmp	r2, r3
 8004a44:	bf0c      	ite	eq
 8004a46:	2301      	moveq	r3, #1
 8004a48:	2300      	movne	r3, #0
 8004a4a:	b2db      	uxtb	r3, r3
 8004a4c:	461a      	mov	r2, r3
 8004a4e:	79fb      	ldrb	r3, [r7, #7]
 8004a50:	429a      	cmp	r2, r3
 8004a52:	d0a0      	beq.n	8004996 <UART_WaitOnFlagUntilTimeout+0x12>
 8004a54:	2300      	movs	r3, #0
 8004a56:	4618      	mov	r0, r3
 8004a58:	3710      	adds	r7, #16
 8004a5a:	46bd      	mov	sp, r7
 8004a5c:	bd80      	pop	{r7, pc}

08004a5e <UART_EndRxTransfer>:
 8004a5e:	b480      	push	{r7}
 8004a60:	b095      	sub	sp, #84	@ 0x54
 8004a62:	af00      	add	r7, sp, #0
 8004a64:	6078      	str	r0, [r7, #4]
 8004a66:	687b      	ldr	r3, [r7, #4]
 8004a68:	681b      	ldr	r3, [r3, #0]
 8004a6a:	637b      	str	r3, [r7, #52]	@ 0x34
 8004a6c:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8004a6e:	e853 3f00 	ldrex	r3, [r3]
 8004a72:	633b      	str	r3, [r7, #48]	@ 0x30
 8004a74:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004a76:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8004a7a:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8004a7c:	687b      	ldr	r3, [r7, #4]
 8004a7e:	681b      	ldr	r3, [r3, #0]
 8004a80:	461a      	mov	r2, r3
 8004a82:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8004a84:	643b      	str	r3, [r7, #64]	@ 0x40
 8004a86:	63fa      	str	r2, [r7, #60]	@ 0x3c
 8004a88:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 8004a8a:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 8004a8c:	e841 2300 	strex	r3, r2, [r1]
 8004a90:	63bb      	str	r3, [r7, #56]	@ 0x38
 8004a92:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004a94:	2b00      	cmp	r3, #0
 8004a96:	d1e6      	bne.n	8004a66 <UART_EndRxTransfer+0x8>
 8004a98:	687b      	ldr	r3, [r7, #4]
 8004a9a:	681b      	ldr	r3, [r3, #0]
 8004a9c:	3308      	adds	r3, #8
 8004a9e:	623b      	str	r3, [r7, #32]
 8004aa0:	6a3b      	ldr	r3, [r7, #32]
 8004aa2:	e853 3f00 	ldrex	r3, [r3]
 8004aa6:	61fb      	str	r3, [r7, #28]
 8004aa8:	69fb      	ldr	r3, [r7, #28]
 8004aaa:	f023 0301 	bic.w	r3, r3, #1
 8004aae:	64bb      	str	r3, [r7, #72]	@ 0x48
 8004ab0:	687b      	ldr	r3, [r7, #4]
 8004ab2:	681b      	ldr	r3, [r3, #0]
 8004ab4:	3308      	adds	r3, #8
 8004ab6:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8004ab8:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8004aba:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004abc:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8004abe:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8004ac0:	e841 2300 	strex	r3, r2, [r1]
 8004ac4:	627b      	str	r3, [r7, #36]	@ 0x24
 8004ac6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004ac8:	2b00      	cmp	r3, #0
 8004aca:	d1e5      	bne.n	8004a98 <UART_EndRxTransfer+0x3a>
 8004acc:	687b      	ldr	r3, [r7, #4]
 8004ace:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8004ad0:	2b01      	cmp	r3, #1
 8004ad2:	d118      	bne.n	8004b06 <UART_EndRxTransfer+0xa8>
 8004ad4:	687b      	ldr	r3, [r7, #4]
 8004ad6:	681b      	ldr	r3, [r3, #0]
 8004ad8:	60fb      	str	r3, [r7, #12]
 8004ada:	68fb      	ldr	r3, [r7, #12]
 8004adc:	e853 3f00 	ldrex	r3, [r3]
 8004ae0:	60bb      	str	r3, [r7, #8]
 8004ae2:	68bb      	ldr	r3, [r7, #8]
 8004ae4:	f023 0310 	bic.w	r3, r3, #16
 8004ae8:	647b      	str	r3, [r7, #68]	@ 0x44
 8004aea:	687b      	ldr	r3, [r7, #4]
 8004aec:	681b      	ldr	r3, [r3, #0]
 8004aee:	461a      	mov	r2, r3
 8004af0:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8004af2:	61bb      	str	r3, [r7, #24]
 8004af4:	617a      	str	r2, [r7, #20]
 8004af6:	6979      	ldr	r1, [r7, #20]
 8004af8:	69ba      	ldr	r2, [r7, #24]
 8004afa:	e841 2300 	strex	r3, r2, [r1]
 8004afe:	613b      	str	r3, [r7, #16]
 8004b00:	693b      	ldr	r3, [r7, #16]
 8004b02:	2b00      	cmp	r3, #0
 8004b04:	d1e6      	bne.n	8004ad4 <UART_EndRxTransfer+0x76>
 8004b06:	687b      	ldr	r3, [r7, #4]
 8004b08:	2220      	movs	r2, #32
 8004b0a:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 8004b0e:	687b      	ldr	r3, [r7, #4]
 8004b10:	2200      	movs	r2, #0
 8004b12:	661a      	str	r2, [r3, #96]	@ 0x60
 8004b14:	687b      	ldr	r3, [r7, #4]
 8004b16:	2200      	movs	r2, #0
 8004b18:	669a      	str	r2, [r3, #104]	@ 0x68
 8004b1a:	bf00      	nop
 8004b1c:	3754      	adds	r7, #84	@ 0x54
 8004b1e:	46bd      	mov	sp, r7
 8004b20:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b24:	4770      	bx	lr
	...

08004b28 <_vsiprintf_r>:
 8004b28:	b510      	push	{r4, lr}
 8004b2a:	b09a      	sub	sp, #104	@ 0x68
 8004b2c:	2400      	movs	r4, #0
 8004b2e:	9100      	str	r1, [sp, #0]
 8004b30:	9104      	str	r1, [sp, #16]
 8004b32:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 8004b36:	9105      	str	r1, [sp, #20]
 8004b38:	9102      	str	r1, [sp, #8]
 8004b3a:	4905      	ldr	r1, [pc, #20]	@ (8004b50 <_vsiprintf_r+0x28>)
 8004b3c:	9103      	str	r1, [sp, #12]
 8004b3e:	4669      	mov	r1, sp
 8004b40:	9419      	str	r4, [sp, #100]	@ 0x64
 8004b42:	f000 f999 	bl	8004e78 <_svfiprintf_r>
 8004b46:	9b00      	ldr	r3, [sp, #0]
 8004b48:	701c      	strb	r4, [r3, #0]
 8004b4a:	b01a      	add	sp, #104	@ 0x68
 8004b4c:	bd10      	pop	{r4, pc}
 8004b4e:	bf00      	nop
 8004b50:	ffff0208 	.word	0xffff0208

08004b54 <vsiprintf>:
 8004b54:	4613      	mov	r3, r2
 8004b56:	460a      	mov	r2, r1
 8004b58:	4601      	mov	r1, r0
 8004b5a:	4802      	ldr	r0, [pc, #8]	@ (8004b64 <vsiprintf+0x10>)
 8004b5c:	6800      	ldr	r0, [r0, #0]
 8004b5e:	f7ff bfe3 	b.w	8004b28 <_vsiprintf_r>
 8004b62:	bf00      	nop
 8004b64:	20000038 	.word	0x20000038

08004b68 <memset>:
 8004b68:	4402      	add	r2, r0
 8004b6a:	4603      	mov	r3, r0
 8004b6c:	4293      	cmp	r3, r2
 8004b6e:	d100      	bne.n	8004b72 <memset+0xa>
 8004b70:	4770      	bx	lr
 8004b72:	f803 1b01 	strb.w	r1, [r3], #1
 8004b76:	e7f9      	b.n	8004b6c <memset+0x4>

08004b78 <__errno>:
 8004b78:	4b01      	ldr	r3, [pc, #4]	@ (8004b80 <__errno+0x8>)
 8004b7a:	6818      	ldr	r0, [r3, #0]
 8004b7c:	4770      	bx	lr
 8004b7e:	bf00      	nop
 8004b80:	20000038 	.word	0x20000038

08004b84 <__libc_init_array>:
 8004b84:	b570      	push	{r4, r5, r6, lr}
 8004b86:	4d0d      	ldr	r5, [pc, #52]	@ (8004bbc <__libc_init_array+0x38>)
 8004b88:	4c0d      	ldr	r4, [pc, #52]	@ (8004bc0 <__libc_init_array+0x3c>)
 8004b8a:	1b64      	subs	r4, r4, r5
 8004b8c:	10a4      	asrs	r4, r4, #2
 8004b8e:	2600      	movs	r6, #0
 8004b90:	42a6      	cmp	r6, r4
 8004b92:	d109      	bne.n	8004ba8 <__libc_init_array+0x24>
 8004b94:	4d0b      	ldr	r5, [pc, #44]	@ (8004bc4 <__libc_init_array+0x40>)
 8004b96:	4c0c      	ldr	r4, [pc, #48]	@ (8004bc8 <__libc_init_array+0x44>)
 8004b98:	f000 fc64 	bl	8005464 <_init>
 8004b9c:	1b64      	subs	r4, r4, r5
 8004b9e:	10a4      	asrs	r4, r4, #2
 8004ba0:	2600      	movs	r6, #0
 8004ba2:	42a6      	cmp	r6, r4
 8004ba4:	d105      	bne.n	8004bb2 <__libc_init_array+0x2e>
 8004ba6:	bd70      	pop	{r4, r5, r6, pc}
 8004ba8:	f855 3b04 	ldr.w	r3, [r5], #4
 8004bac:	4798      	blx	r3
 8004bae:	3601      	adds	r6, #1
 8004bb0:	e7ee      	b.n	8004b90 <__libc_init_array+0xc>
 8004bb2:	f855 3b04 	ldr.w	r3, [r5], #4
 8004bb6:	4798      	blx	r3
 8004bb8:	3601      	adds	r6, #1
 8004bba:	e7f2      	b.n	8004ba2 <__libc_init_array+0x1e>
 8004bbc:	08005910 	.word	0x08005910
 8004bc0:	08005910 	.word	0x08005910
 8004bc4:	08005910 	.word	0x08005910
 8004bc8:	08005914 	.word	0x08005914

08004bcc <__retarget_lock_acquire_recursive>:
 8004bcc:	4770      	bx	lr

08004bce <__retarget_lock_release_recursive>:
 8004bce:	4770      	bx	lr

08004bd0 <_free_r>:
 8004bd0:	b538      	push	{r3, r4, r5, lr}
 8004bd2:	4605      	mov	r5, r0
 8004bd4:	2900      	cmp	r1, #0
 8004bd6:	d041      	beq.n	8004c5c <_free_r+0x8c>
 8004bd8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8004bdc:	1f0c      	subs	r4, r1, #4
 8004bde:	2b00      	cmp	r3, #0
 8004be0:	bfb8      	it	lt
 8004be2:	18e4      	addlt	r4, r4, r3
 8004be4:	f000 f8e0 	bl	8004da8 <__malloc_lock>
 8004be8:	4a1d      	ldr	r2, [pc, #116]	@ (8004c60 <_free_r+0x90>)
 8004bea:	6813      	ldr	r3, [r2, #0]
 8004bec:	b933      	cbnz	r3, 8004bfc <_free_r+0x2c>
 8004bee:	6063      	str	r3, [r4, #4]
 8004bf0:	6014      	str	r4, [r2, #0]
 8004bf2:	4628      	mov	r0, r5
 8004bf4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004bf8:	f000 b8dc 	b.w	8004db4 <__malloc_unlock>
 8004bfc:	42a3      	cmp	r3, r4
 8004bfe:	d908      	bls.n	8004c12 <_free_r+0x42>
 8004c00:	6820      	ldr	r0, [r4, #0]
 8004c02:	1821      	adds	r1, r4, r0
 8004c04:	428b      	cmp	r3, r1
 8004c06:	bf01      	itttt	eq
 8004c08:	6819      	ldreq	r1, [r3, #0]
 8004c0a:	685b      	ldreq	r3, [r3, #4]
 8004c0c:	1809      	addeq	r1, r1, r0
 8004c0e:	6021      	streq	r1, [r4, #0]
 8004c10:	e7ed      	b.n	8004bee <_free_r+0x1e>
 8004c12:	461a      	mov	r2, r3
 8004c14:	685b      	ldr	r3, [r3, #4]
 8004c16:	b10b      	cbz	r3, 8004c1c <_free_r+0x4c>
 8004c18:	42a3      	cmp	r3, r4
 8004c1a:	d9fa      	bls.n	8004c12 <_free_r+0x42>
 8004c1c:	6811      	ldr	r1, [r2, #0]
 8004c1e:	1850      	adds	r0, r2, r1
 8004c20:	42a0      	cmp	r0, r4
 8004c22:	d10b      	bne.n	8004c3c <_free_r+0x6c>
 8004c24:	6820      	ldr	r0, [r4, #0]
 8004c26:	4401      	add	r1, r0
 8004c28:	1850      	adds	r0, r2, r1
 8004c2a:	4283      	cmp	r3, r0
 8004c2c:	6011      	str	r1, [r2, #0]
 8004c2e:	d1e0      	bne.n	8004bf2 <_free_r+0x22>
 8004c30:	6818      	ldr	r0, [r3, #0]
 8004c32:	685b      	ldr	r3, [r3, #4]
 8004c34:	6053      	str	r3, [r2, #4]
 8004c36:	4408      	add	r0, r1
 8004c38:	6010      	str	r0, [r2, #0]
 8004c3a:	e7da      	b.n	8004bf2 <_free_r+0x22>
 8004c3c:	d902      	bls.n	8004c44 <_free_r+0x74>
 8004c3e:	230c      	movs	r3, #12
 8004c40:	602b      	str	r3, [r5, #0]
 8004c42:	e7d6      	b.n	8004bf2 <_free_r+0x22>
 8004c44:	6820      	ldr	r0, [r4, #0]
 8004c46:	1821      	adds	r1, r4, r0
 8004c48:	428b      	cmp	r3, r1
 8004c4a:	bf04      	itt	eq
 8004c4c:	6819      	ldreq	r1, [r3, #0]
 8004c4e:	685b      	ldreq	r3, [r3, #4]
 8004c50:	6063      	str	r3, [r4, #4]
 8004c52:	bf04      	itt	eq
 8004c54:	1809      	addeq	r1, r1, r0
 8004c56:	6021      	streq	r1, [r4, #0]
 8004c58:	6054      	str	r4, [r2, #4]
 8004c5a:	e7ca      	b.n	8004bf2 <_free_r+0x22>
 8004c5c:	bd38      	pop	{r3, r4, r5, pc}
 8004c5e:	bf00      	nop
 8004c60:	200003ec 	.word	0x200003ec

08004c64 <sbrk_aligned>:
 8004c64:	b570      	push	{r4, r5, r6, lr}
 8004c66:	4e0f      	ldr	r6, [pc, #60]	@ (8004ca4 <sbrk_aligned+0x40>)
 8004c68:	460c      	mov	r4, r1
 8004c6a:	6831      	ldr	r1, [r6, #0]
 8004c6c:	4605      	mov	r5, r0
 8004c6e:	b911      	cbnz	r1, 8004c76 <sbrk_aligned+0x12>
 8004c70:	f000 fba4 	bl	80053bc <_sbrk_r>
 8004c74:	6030      	str	r0, [r6, #0]
 8004c76:	4621      	mov	r1, r4
 8004c78:	4628      	mov	r0, r5
 8004c7a:	f000 fb9f 	bl	80053bc <_sbrk_r>
 8004c7e:	1c43      	adds	r3, r0, #1
 8004c80:	d103      	bne.n	8004c8a <sbrk_aligned+0x26>
 8004c82:	f04f 34ff 	mov.w	r4, #4294967295
 8004c86:	4620      	mov	r0, r4
 8004c88:	bd70      	pop	{r4, r5, r6, pc}
 8004c8a:	1cc4      	adds	r4, r0, #3
 8004c8c:	f024 0403 	bic.w	r4, r4, #3
 8004c90:	42a0      	cmp	r0, r4
 8004c92:	d0f8      	beq.n	8004c86 <sbrk_aligned+0x22>
 8004c94:	1a21      	subs	r1, r4, r0
 8004c96:	4628      	mov	r0, r5
 8004c98:	f000 fb90 	bl	80053bc <_sbrk_r>
 8004c9c:	3001      	adds	r0, #1
 8004c9e:	d1f2      	bne.n	8004c86 <sbrk_aligned+0x22>
 8004ca0:	e7ef      	b.n	8004c82 <sbrk_aligned+0x1e>
 8004ca2:	bf00      	nop
 8004ca4:	200003e8 	.word	0x200003e8

08004ca8 <_malloc_r>:
 8004ca8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004cac:	1ccd      	adds	r5, r1, #3
 8004cae:	f025 0503 	bic.w	r5, r5, #3
 8004cb2:	3508      	adds	r5, #8
 8004cb4:	2d0c      	cmp	r5, #12
 8004cb6:	bf38      	it	cc
 8004cb8:	250c      	movcc	r5, #12
 8004cba:	2d00      	cmp	r5, #0
 8004cbc:	4606      	mov	r6, r0
 8004cbe:	db01      	blt.n	8004cc4 <_malloc_r+0x1c>
 8004cc0:	42a9      	cmp	r1, r5
 8004cc2:	d904      	bls.n	8004cce <_malloc_r+0x26>
 8004cc4:	230c      	movs	r3, #12
 8004cc6:	6033      	str	r3, [r6, #0]
 8004cc8:	2000      	movs	r0, #0
 8004cca:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004cce:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8004da4 <_malloc_r+0xfc>
 8004cd2:	f000 f869 	bl	8004da8 <__malloc_lock>
 8004cd6:	f8d8 3000 	ldr.w	r3, [r8]
 8004cda:	461c      	mov	r4, r3
 8004cdc:	bb44      	cbnz	r4, 8004d30 <_malloc_r+0x88>
 8004cde:	4629      	mov	r1, r5
 8004ce0:	4630      	mov	r0, r6
 8004ce2:	f7ff ffbf 	bl	8004c64 <sbrk_aligned>
 8004ce6:	1c43      	adds	r3, r0, #1
 8004ce8:	4604      	mov	r4, r0
 8004cea:	d158      	bne.n	8004d9e <_malloc_r+0xf6>
 8004cec:	f8d8 4000 	ldr.w	r4, [r8]
 8004cf0:	4627      	mov	r7, r4
 8004cf2:	2f00      	cmp	r7, #0
 8004cf4:	d143      	bne.n	8004d7e <_malloc_r+0xd6>
 8004cf6:	2c00      	cmp	r4, #0
 8004cf8:	d04b      	beq.n	8004d92 <_malloc_r+0xea>
 8004cfa:	6823      	ldr	r3, [r4, #0]
 8004cfc:	4639      	mov	r1, r7
 8004cfe:	4630      	mov	r0, r6
 8004d00:	eb04 0903 	add.w	r9, r4, r3
 8004d04:	f000 fb5a 	bl	80053bc <_sbrk_r>
 8004d08:	4581      	cmp	r9, r0
 8004d0a:	d142      	bne.n	8004d92 <_malloc_r+0xea>
 8004d0c:	6821      	ldr	r1, [r4, #0]
 8004d0e:	1a6d      	subs	r5, r5, r1
 8004d10:	4629      	mov	r1, r5
 8004d12:	4630      	mov	r0, r6
 8004d14:	f7ff ffa6 	bl	8004c64 <sbrk_aligned>
 8004d18:	3001      	adds	r0, #1
 8004d1a:	d03a      	beq.n	8004d92 <_malloc_r+0xea>
 8004d1c:	6823      	ldr	r3, [r4, #0]
 8004d1e:	442b      	add	r3, r5
 8004d20:	6023      	str	r3, [r4, #0]
 8004d22:	f8d8 3000 	ldr.w	r3, [r8]
 8004d26:	685a      	ldr	r2, [r3, #4]
 8004d28:	bb62      	cbnz	r2, 8004d84 <_malloc_r+0xdc>
 8004d2a:	f8c8 7000 	str.w	r7, [r8]
 8004d2e:	e00f      	b.n	8004d50 <_malloc_r+0xa8>
 8004d30:	6822      	ldr	r2, [r4, #0]
 8004d32:	1b52      	subs	r2, r2, r5
 8004d34:	d420      	bmi.n	8004d78 <_malloc_r+0xd0>
 8004d36:	2a0b      	cmp	r2, #11
 8004d38:	d917      	bls.n	8004d6a <_malloc_r+0xc2>
 8004d3a:	1961      	adds	r1, r4, r5
 8004d3c:	42a3      	cmp	r3, r4
 8004d3e:	6025      	str	r5, [r4, #0]
 8004d40:	bf18      	it	ne
 8004d42:	6059      	strne	r1, [r3, #4]
 8004d44:	6863      	ldr	r3, [r4, #4]
 8004d46:	bf08      	it	eq
 8004d48:	f8c8 1000 	streq.w	r1, [r8]
 8004d4c:	5162      	str	r2, [r4, r5]
 8004d4e:	604b      	str	r3, [r1, #4]
 8004d50:	4630      	mov	r0, r6
 8004d52:	f000 f82f 	bl	8004db4 <__malloc_unlock>
 8004d56:	f104 000b 	add.w	r0, r4, #11
 8004d5a:	1d23      	adds	r3, r4, #4
 8004d5c:	f020 0007 	bic.w	r0, r0, #7
 8004d60:	1ac2      	subs	r2, r0, r3
 8004d62:	bf1c      	itt	ne
 8004d64:	1a1b      	subne	r3, r3, r0
 8004d66:	50a3      	strne	r3, [r4, r2]
 8004d68:	e7af      	b.n	8004cca <_malloc_r+0x22>
 8004d6a:	6862      	ldr	r2, [r4, #4]
 8004d6c:	42a3      	cmp	r3, r4
 8004d6e:	bf0c      	ite	eq
 8004d70:	f8c8 2000 	streq.w	r2, [r8]
 8004d74:	605a      	strne	r2, [r3, #4]
 8004d76:	e7eb      	b.n	8004d50 <_malloc_r+0xa8>
 8004d78:	4623      	mov	r3, r4
 8004d7a:	6864      	ldr	r4, [r4, #4]
 8004d7c:	e7ae      	b.n	8004cdc <_malloc_r+0x34>
 8004d7e:	463c      	mov	r4, r7
 8004d80:	687f      	ldr	r7, [r7, #4]
 8004d82:	e7b6      	b.n	8004cf2 <_malloc_r+0x4a>
 8004d84:	461a      	mov	r2, r3
 8004d86:	685b      	ldr	r3, [r3, #4]
 8004d88:	42a3      	cmp	r3, r4
 8004d8a:	d1fb      	bne.n	8004d84 <_malloc_r+0xdc>
 8004d8c:	2300      	movs	r3, #0
 8004d8e:	6053      	str	r3, [r2, #4]
 8004d90:	e7de      	b.n	8004d50 <_malloc_r+0xa8>
 8004d92:	230c      	movs	r3, #12
 8004d94:	6033      	str	r3, [r6, #0]
 8004d96:	4630      	mov	r0, r6
 8004d98:	f000 f80c 	bl	8004db4 <__malloc_unlock>
 8004d9c:	e794      	b.n	8004cc8 <_malloc_r+0x20>
 8004d9e:	6005      	str	r5, [r0, #0]
 8004da0:	e7d6      	b.n	8004d50 <_malloc_r+0xa8>
 8004da2:	bf00      	nop
 8004da4:	200003ec 	.word	0x200003ec

08004da8 <__malloc_lock>:
 8004da8:	4801      	ldr	r0, [pc, #4]	@ (8004db0 <__malloc_lock+0x8>)
 8004daa:	f7ff bf0f 	b.w	8004bcc <__retarget_lock_acquire_recursive>
 8004dae:	bf00      	nop
 8004db0:	200003e4 	.word	0x200003e4

08004db4 <__malloc_unlock>:
 8004db4:	4801      	ldr	r0, [pc, #4]	@ (8004dbc <__malloc_unlock+0x8>)
 8004db6:	f7ff bf0a 	b.w	8004bce <__retarget_lock_release_recursive>
 8004dba:	bf00      	nop
 8004dbc:	200003e4 	.word	0x200003e4

08004dc0 <__ssputs_r>:
 8004dc0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004dc4:	688e      	ldr	r6, [r1, #8]
 8004dc6:	461f      	mov	r7, r3
 8004dc8:	42be      	cmp	r6, r7
 8004dca:	680b      	ldr	r3, [r1, #0]
 8004dcc:	4682      	mov	sl, r0
 8004dce:	460c      	mov	r4, r1
 8004dd0:	4690      	mov	r8, r2
 8004dd2:	d82d      	bhi.n	8004e30 <__ssputs_r+0x70>
 8004dd4:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8004dd8:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 8004ddc:	d026      	beq.n	8004e2c <__ssputs_r+0x6c>
 8004dde:	6965      	ldr	r5, [r4, #20]
 8004de0:	6909      	ldr	r1, [r1, #16]
 8004de2:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8004de6:	eba3 0901 	sub.w	r9, r3, r1
 8004dea:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8004dee:	1c7b      	adds	r3, r7, #1
 8004df0:	444b      	add	r3, r9
 8004df2:	106d      	asrs	r5, r5, #1
 8004df4:	429d      	cmp	r5, r3
 8004df6:	bf38      	it	cc
 8004df8:	461d      	movcc	r5, r3
 8004dfa:	0553      	lsls	r3, r2, #21
 8004dfc:	d527      	bpl.n	8004e4e <__ssputs_r+0x8e>
 8004dfe:	4629      	mov	r1, r5
 8004e00:	f7ff ff52 	bl	8004ca8 <_malloc_r>
 8004e04:	4606      	mov	r6, r0
 8004e06:	b360      	cbz	r0, 8004e62 <__ssputs_r+0xa2>
 8004e08:	6921      	ldr	r1, [r4, #16]
 8004e0a:	464a      	mov	r2, r9
 8004e0c:	f000 fae6 	bl	80053dc <memcpy>
 8004e10:	89a3      	ldrh	r3, [r4, #12]
 8004e12:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 8004e16:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8004e1a:	81a3      	strh	r3, [r4, #12]
 8004e1c:	6126      	str	r6, [r4, #16]
 8004e1e:	6165      	str	r5, [r4, #20]
 8004e20:	444e      	add	r6, r9
 8004e22:	eba5 0509 	sub.w	r5, r5, r9
 8004e26:	6026      	str	r6, [r4, #0]
 8004e28:	60a5      	str	r5, [r4, #8]
 8004e2a:	463e      	mov	r6, r7
 8004e2c:	42be      	cmp	r6, r7
 8004e2e:	d900      	bls.n	8004e32 <__ssputs_r+0x72>
 8004e30:	463e      	mov	r6, r7
 8004e32:	6820      	ldr	r0, [r4, #0]
 8004e34:	4632      	mov	r2, r6
 8004e36:	4641      	mov	r1, r8
 8004e38:	f000 faa6 	bl	8005388 <memmove>
 8004e3c:	68a3      	ldr	r3, [r4, #8]
 8004e3e:	1b9b      	subs	r3, r3, r6
 8004e40:	60a3      	str	r3, [r4, #8]
 8004e42:	6823      	ldr	r3, [r4, #0]
 8004e44:	4433      	add	r3, r6
 8004e46:	6023      	str	r3, [r4, #0]
 8004e48:	2000      	movs	r0, #0
 8004e4a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004e4e:	462a      	mov	r2, r5
 8004e50:	f000 fad2 	bl	80053f8 <_realloc_r>
 8004e54:	4606      	mov	r6, r0
 8004e56:	2800      	cmp	r0, #0
 8004e58:	d1e0      	bne.n	8004e1c <__ssputs_r+0x5c>
 8004e5a:	6921      	ldr	r1, [r4, #16]
 8004e5c:	4650      	mov	r0, sl
 8004e5e:	f7ff feb7 	bl	8004bd0 <_free_r>
 8004e62:	230c      	movs	r3, #12
 8004e64:	f8ca 3000 	str.w	r3, [sl]
 8004e68:	89a3      	ldrh	r3, [r4, #12]
 8004e6a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8004e6e:	81a3      	strh	r3, [r4, #12]
 8004e70:	f04f 30ff 	mov.w	r0, #4294967295
 8004e74:	e7e9      	b.n	8004e4a <__ssputs_r+0x8a>
	...

08004e78 <_svfiprintf_r>:
 8004e78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004e7c:	4698      	mov	r8, r3
 8004e7e:	898b      	ldrh	r3, [r1, #12]
 8004e80:	061b      	lsls	r3, r3, #24
 8004e82:	b09d      	sub	sp, #116	@ 0x74
 8004e84:	4607      	mov	r7, r0
 8004e86:	460d      	mov	r5, r1
 8004e88:	4614      	mov	r4, r2
 8004e8a:	d510      	bpl.n	8004eae <_svfiprintf_r+0x36>
 8004e8c:	690b      	ldr	r3, [r1, #16]
 8004e8e:	b973      	cbnz	r3, 8004eae <_svfiprintf_r+0x36>
 8004e90:	2140      	movs	r1, #64	@ 0x40
 8004e92:	f7ff ff09 	bl	8004ca8 <_malloc_r>
 8004e96:	6028      	str	r0, [r5, #0]
 8004e98:	6128      	str	r0, [r5, #16]
 8004e9a:	b930      	cbnz	r0, 8004eaa <_svfiprintf_r+0x32>
 8004e9c:	230c      	movs	r3, #12
 8004e9e:	603b      	str	r3, [r7, #0]
 8004ea0:	f04f 30ff 	mov.w	r0, #4294967295
 8004ea4:	b01d      	add	sp, #116	@ 0x74
 8004ea6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004eaa:	2340      	movs	r3, #64	@ 0x40
 8004eac:	616b      	str	r3, [r5, #20]
 8004eae:	2300      	movs	r3, #0
 8004eb0:	9309      	str	r3, [sp, #36]	@ 0x24
 8004eb2:	2320      	movs	r3, #32
 8004eb4:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8004eb8:	f8cd 800c 	str.w	r8, [sp, #12]
 8004ebc:	2330      	movs	r3, #48	@ 0x30
 8004ebe:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 800505c <_svfiprintf_r+0x1e4>
 8004ec2:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8004ec6:	f04f 0901 	mov.w	r9, #1
 8004eca:	4623      	mov	r3, r4
 8004ecc:	469a      	mov	sl, r3
 8004ece:	f813 2b01 	ldrb.w	r2, [r3], #1
 8004ed2:	b10a      	cbz	r2, 8004ed8 <_svfiprintf_r+0x60>
 8004ed4:	2a25      	cmp	r2, #37	@ 0x25
 8004ed6:	d1f9      	bne.n	8004ecc <_svfiprintf_r+0x54>
 8004ed8:	ebba 0b04 	subs.w	fp, sl, r4
 8004edc:	d00b      	beq.n	8004ef6 <_svfiprintf_r+0x7e>
 8004ede:	465b      	mov	r3, fp
 8004ee0:	4622      	mov	r2, r4
 8004ee2:	4629      	mov	r1, r5
 8004ee4:	4638      	mov	r0, r7
 8004ee6:	f7ff ff6b 	bl	8004dc0 <__ssputs_r>
 8004eea:	3001      	adds	r0, #1
 8004eec:	f000 80a7 	beq.w	800503e <_svfiprintf_r+0x1c6>
 8004ef0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8004ef2:	445a      	add	r2, fp
 8004ef4:	9209      	str	r2, [sp, #36]	@ 0x24
 8004ef6:	f89a 3000 	ldrb.w	r3, [sl]
 8004efa:	2b00      	cmp	r3, #0
 8004efc:	f000 809f 	beq.w	800503e <_svfiprintf_r+0x1c6>
 8004f00:	2300      	movs	r3, #0
 8004f02:	f04f 32ff 	mov.w	r2, #4294967295
 8004f06:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8004f0a:	f10a 0a01 	add.w	sl, sl, #1
 8004f0e:	9304      	str	r3, [sp, #16]
 8004f10:	9307      	str	r3, [sp, #28]
 8004f12:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8004f16:	931a      	str	r3, [sp, #104]	@ 0x68
 8004f18:	4654      	mov	r4, sl
 8004f1a:	2205      	movs	r2, #5
 8004f1c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004f20:	484e      	ldr	r0, [pc, #312]	@ (800505c <_svfiprintf_r+0x1e4>)
 8004f22:	f7fb f96d 	bl	8000200 <memchr>
 8004f26:	9a04      	ldr	r2, [sp, #16]
 8004f28:	b9d8      	cbnz	r0, 8004f62 <_svfiprintf_r+0xea>
 8004f2a:	06d0      	lsls	r0, r2, #27
 8004f2c:	bf44      	itt	mi
 8004f2e:	2320      	movmi	r3, #32
 8004f30:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8004f34:	0711      	lsls	r1, r2, #28
 8004f36:	bf44      	itt	mi
 8004f38:	232b      	movmi	r3, #43	@ 0x2b
 8004f3a:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8004f3e:	f89a 3000 	ldrb.w	r3, [sl]
 8004f42:	2b2a      	cmp	r3, #42	@ 0x2a
 8004f44:	d015      	beq.n	8004f72 <_svfiprintf_r+0xfa>
 8004f46:	9a07      	ldr	r2, [sp, #28]
 8004f48:	4654      	mov	r4, sl
 8004f4a:	2000      	movs	r0, #0
 8004f4c:	f04f 0c0a 	mov.w	ip, #10
 8004f50:	4621      	mov	r1, r4
 8004f52:	f811 3b01 	ldrb.w	r3, [r1], #1
 8004f56:	3b30      	subs	r3, #48	@ 0x30
 8004f58:	2b09      	cmp	r3, #9
 8004f5a:	d94b      	bls.n	8004ff4 <_svfiprintf_r+0x17c>
 8004f5c:	b1b0      	cbz	r0, 8004f8c <_svfiprintf_r+0x114>
 8004f5e:	9207      	str	r2, [sp, #28]
 8004f60:	e014      	b.n	8004f8c <_svfiprintf_r+0x114>
 8004f62:	eba0 0308 	sub.w	r3, r0, r8
 8004f66:	fa09 f303 	lsl.w	r3, r9, r3
 8004f6a:	4313      	orrs	r3, r2
 8004f6c:	9304      	str	r3, [sp, #16]
 8004f6e:	46a2      	mov	sl, r4
 8004f70:	e7d2      	b.n	8004f18 <_svfiprintf_r+0xa0>
 8004f72:	9b03      	ldr	r3, [sp, #12]
 8004f74:	1d19      	adds	r1, r3, #4
 8004f76:	681b      	ldr	r3, [r3, #0]
 8004f78:	9103      	str	r1, [sp, #12]
 8004f7a:	2b00      	cmp	r3, #0
 8004f7c:	bfbb      	ittet	lt
 8004f7e:	425b      	neglt	r3, r3
 8004f80:	f042 0202 	orrlt.w	r2, r2, #2
 8004f84:	9307      	strge	r3, [sp, #28]
 8004f86:	9307      	strlt	r3, [sp, #28]
 8004f88:	bfb8      	it	lt
 8004f8a:	9204      	strlt	r2, [sp, #16]
 8004f8c:	7823      	ldrb	r3, [r4, #0]
 8004f8e:	2b2e      	cmp	r3, #46	@ 0x2e
 8004f90:	d10a      	bne.n	8004fa8 <_svfiprintf_r+0x130>
 8004f92:	7863      	ldrb	r3, [r4, #1]
 8004f94:	2b2a      	cmp	r3, #42	@ 0x2a
 8004f96:	d132      	bne.n	8004ffe <_svfiprintf_r+0x186>
 8004f98:	9b03      	ldr	r3, [sp, #12]
 8004f9a:	1d1a      	adds	r2, r3, #4
 8004f9c:	681b      	ldr	r3, [r3, #0]
 8004f9e:	9203      	str	r2, [sp, #12]
 8004fa0:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8004fa4:	3402      	adds	r4, #2
 8004fa6:	9305      	str	r3, [sp, #20]
 8004fa8:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 800506c <_svfiprintf_r+0x1f4>
 8004fac:	7821      	ldrb	r1, [r4, #0]
 8004fae:	2203      	movs	r2, #3
 8004fb0:	4650      	mov	r0, sl
 8004fb2:	f7fb f925 	bl	8000200 <memchr>
 8004fb6:	b138      	cbz	r0, 8004fc8 <_svfiprintf_r+0x150>
 8004fb8:	9b04      	ldr	r3, [sp, #16]
 8004fba:	eba0 000a 	sub.w	r0, r0, sl
 8004fbe:	2240      	movs	r2, #64	@ 0x40
 8004fc0:	4082      	lsls	r2, r0
 8004fc2:	4313      	orrs	r3, r2
 8004fc4:	3401      	adds	r4, #1
 8004fc6:	9304      	str	r3, [sp, #16]
 8004fc8:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004fcc:	4824      	ldr	r0, [pc, #144]	@ (8005060 <_svfiprintf_r+0x1e8>)
 8004fce:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8004fd2:	2206      	movs	r2, #6
 8004fd4:	f7fb f914 	bl	8000200 <memchr>
 8004fd8:	2800      	cmp	r0, #0
 8004fda:	d036      	beq.n	800504a <_svfiprintf_r+0x1d2>
 8004fdc:	4b21      	ldr	r3, [pc, #132]	@ (8005064 <_svfiprintf_r+0x1ec>)
 8004fde:	bb1b      	cbnz	r3, 8005028 <_svfiprintf_r+0x1b0>
 8004fe0:	9b03      	ldr	r3, [sp, #12]
 8004fe2:	3307      	adds	r3, #7
 8004fe4:	f023 0307 	bic.w	r3, r3, #7
 8004fe8:	3308      	adds	r3, #8
 8004fea:	9303      	str	r3, [sp, #12]
 8004fec:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004fee:	4433      	add	r3, r6
 8004ff0:	9309      	str	r3, [sp, #36]	@ 0x24
 8004ff2:	e76a      	b.n	8004eca <_svfiprintf_r+0x52>
 8004ff4:	fb0c 3202 	mla	r2, ip, r2, r3
 8004ff8:	460c      	mov	r4, r1
 8004ffa:	2001      	movs	r0, #1
 8004ffc:	e7a8      	b.n	8004f50 <_svfiprintf_r+0xd8>
 8004ffe:	2300      	movs	r3, #0
 8005000:	3401      	adds	r4, #1
 8005002:	9305      	str	r3, [sp, #20]
 8005004:	4619      	mov	r1, r3
 8005006:	f04f 0c0a 	mov.w	ip, #10
 800500a:	4620      	mov	r0, r4
 800500c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8005010:	3a30      	subs	r2, #48	@ 0x30
 8005012:	2a09      	cmp	r2, #9
 8005014:	d903      	bls.n	800501e <_svfiprintf_r+0x1a6>
 8005016:	2b00      	cmp	r3, #0
 8005018:	d0c6      	beq.n	8004fa8 <_svfiprintf_r+0x130>
 800501a:	9105      	str	r1, [sp, #20]
 800501c:	e7c4      	b.n	8004fa8 <_svfiprintf_r+0x130>
 800501e:	fb0c 2101 	mla	r1, ip, r1, r2
 8005022:	4604      	mov	r4, r0
 8005024:	2301      	movs	r3, #1
 8005026:	e7f0      	b.n	800500a <_svfiprintf_r+0x192>
 8005028:	ab03      	add	r3, sp, #12
 800502a:	9300      	str	r3, [sp, #0]
 800502c:	462a      	mov	r2, r5
 800502e:	4b0e      	ldr	r3, [pc, #56]	@ (8005068 <_svfiprintf_r+0x1f0>)
 8005030:	a904      	add	r1, sp, #16
 8005032:	4638      	mov	r0, r7
 8005034:	f3af 8000 	nop.w
 8005038:	1c42      	adds	r2, r0, #1
 800503a:	4606      	mov	r6, r0
 800503c:	d1d6      	bne.n	8004fec <_svfiprintf_r+0x174>
 800503e:	89ab      	ldrh	r3, [r5, #12]
 8005040:	065b      	lsls	r3, r3, #25
 8005042:	f53f af2d 	bmi.w	8004ea0 <_svfiprintf_r+0x28>
 8005046:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8005048:	e72c      	b.n	8004ea4 <_svfiprintf_r+0x2c>
 800504a:	ab03      	add	r3, sp, #12
 800504c:	9300      	str	r3, [sp, #0]
 800504e:	462a      	mov	r2, r5
 8005050:	4b05      	ldr	r3, [pc, #20]	@ (8005068 <_svfiprintf_r+0x1f0>)
 8005052:	a904      	add	r1, sp, #16
 8005054:	4638      	mov	r0, r7
 8005056:	f000 f879 	bl	800514c <_printf_i>
 800505a:	e7ed      	b.n	8005038 <_svfiprintf_r+0x1c0>
 800505c:	080058d4 	.word	0x080058d4
 8005060:	080058de 	.word	0x080058de
 8005064:	00000000 	.word	0x00000000
 8005068:	08004dc1 	.word	0x08004dc1
 800506c:	080058da 	.word	0x080058da

08005070 <_printf_common>:
 8005070:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005074:	4616      	mov	r6, r2
 8005076:	4698      	mov	r8, r3
 8005078:	688a      	ldr	r2, [r1, #8]
 800507a:	690b      	ldr	r3, [r1, #16]
 800507c:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8005080:	4293      	cmp	r3, r2
 8005082:	bfb8      	it	lt
 8005084:	4613      	movlt	r3, r2
 8005086:	6033      	str	r3, [r6, #0]
 8005088:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 800508c:	4607      	mov	r7, r0
 800508e:	460c      	mov	r4, r1
 8005090:	b10a      	cbz	r2, 8005096 <_printf_common+0x26>
 8005092:	3301      	adds	r3, #1
 8005094:	6033      	str	r3, [r6, #0]
 8005096:	6823      	ldr	r3, [r4, #0]
 8005098:	0699      	lsls	r1, r3, #26
 800509a:	bf42      	ittt	mi
 800509c:	6833      	ldrmi	r3, [r6, #0]
 800509e:	3302      	addmi	r3, #2
 80050a0:	6033      	strmi	r3, [r6, #0]
 80050a2:	6825      	ldr	r5, [r4, #0]
 80050a4:	f015 0506 	ands.w	r5, r5, #6
 80050a8:	d106      	bne.n	80050b8 <_printf_common+0x48>
 80050aa:	f104 0a19 	add.w	sl, r4, #25
 80050ae:	68e3      	ldr	r3, [r4, #12]
 80050b0:	6832      	ldr	r2, [r6, #0]
 80050b2:	1a9b      	subs	r3, r3, r2
 80050b4:	42ab      	cmp	r3, r5
 80050b6:	dc26      	bgt.n	8005106 <_printf_common+0x96>
 80050b8:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 80050bc:	6822      	ldr	r2, [r4, #0]
 80050be:	3b00      	subs	r3, #0
 80050c0:	bf18      	it	ne
 80050c2:	2301      	movne	r3, #1
 80050c4:	0692      	lsls	r2, r2, #26
 80050c6:	d42b      	bmi.n	8005120 <_printf_common+0xb0>
 80050c8:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 80050cc:	4641      	mov	r1, r8
 80050ce:	4638      	mov	r0, r7
 80050d0:	47c8      	blx	r9
 80050d2:	3001      	adds	r0, #1
 80050d4:	d01e      	beq.n	8005114 <_printf_common+0xa4>
 80050d6:	6823      	ldr	r3, [r4, #0]
 80050d8:	6922      	ldr	r2, [r4, #16]
 80050da:	f003 0306 	and.w	r3, r3, #6
 80050de:	2b04      	cmp	r3, #4
 80050e0:	bf02      	ittt	eq
 80050e2:	68e5      	ldreq	r5, [r4, #12]
 80050e4:	6833      	ldreq	r3, [r6, #0]
 80050e6:	1aed      	subeq	r5, r5, r3
 80050e8:	68a3      	ldr	r3, [r4, #8]
 80050ea:	bf0c      	ite	eq
 80050ec:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80050f0:	2500      	movne	r5, #0
 80050f2:	4293      	cmp	r3, r2
 80050f4:	bfc4      	itt	gt
 80050f6:	1a9b      	subgt	r3, r3, r2
 80050f8:	18ed      	addgt	r5, r5, r3
 80050fa:	2600      	movs	r6, #0
 80050fc:	341a      	adds	r4, #26
 80050fe:	42b5      	cmp	r5, r6
 8005100:	d11a      	bne.n	8005138 <_printf_common+0xc8>
 8005102:	2000      	movs	r0, #0
 8005104:	e008      	b.n	8005118 <_printf_common+0xa8>
 8005106:	2301      	movs	r3, #1
 8005108:	4652      	mov	r2, sl
 800510a:	4641      	mov	r1, r8
 800510c:	4638      	mov	r0, r7
 800510e:	47c8      	blx	r9
 8005110:	3001      	adds	r0, #1
 8005112:	d103      	bne.n	800511c <_printf_common+0xac>
 8005114:	f04f 30ff 	mov.w	r0, #4294967295
 8005118:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800511c:	3501      	adds	r5, #1
 800511e:	e7c6      	b.n	80050ae <_printf_common+0x3e>
 8005120:	18e1      	adds	r1, r4, r3
 8005122:	1c5a      	adds	r2, r3, #1
 8005124:	2030      	movs	r0, #48	@ 0x30
 8005126:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 800512a:	4422      	add	r2, r4
 800512c:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8005130:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8005134:	3302      	adds	r3, #2
 8005136:	e7c7      	b.n	80050c8 <_printf_common+0x58>
 8005138:	2301      	movs	r3, #1
 800513a:	4622      	mov	r2, r4
 800513c:	4641      	mov	r1, r8
 800513e:	4638      	mov	r0, r7
 8005140:	47c8      	blx	r9
 8005142:	3001      	adds	r0, #1
 8005144:	d0e6      	beq.n	8005114 <_printf_common+0xa4>
 8005146:	3601      	adds	r6, #1
 8005148:	e7d9      	b.n	80050fe <_printf_common+0x8e>
	...

0800514c <_printf_i>:
 800514c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8005150:	7e0f      	ldrb	r7, [r1, #24]
 8005152:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8005154:	2f78      	cmp	r7, #120	@ 0x78
 8005156:	4691      	mov	r9, r2
 8005158:	4680      	mov	r8, r0
 800515a:	460c      	mov	r4, r1
 800515c:	469a      	mov	sl, r3
 800515e:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8005162:	d807      	bhi.n	8005174 <_printf_i+0x28>
 8005164:	2f62      	cmp	r7, #98	@ 0x62
 8005166:	d80a      	bhi.n	800517e <_printf_i+0x32>
 8005168:	2f00      	cmp	r7, #0
 800516a:	f000 80d1 	beq.w	8005310 <_printf_i+0x1c4>
 800516e:	2f58      	cmp	r7, #88	@ 0x58
 8005170:	f000 80b8 	beq.w	80052e4 <_printf_i+0x198>
 8005174:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8005178:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 800517c:	e03a      	b.n	80051f4 <_printf_i+0xa8>
 800517e:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8005182:	2b15      	cmp	r3, #21
 8005184:	d8f6      	bhi.n	8005174 <_printf_i+0x28>
 8005186:	a101      	add	r1, pc, #4	@ (adr r1, 800518c <_printf_i+0x40>)
 8005188:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800518c:	080051e5 	.word	0x080051e5
 8005190:	080051f9 	.word	0x080051f9
 8005194:	08005175 	.word	0x08005175
 8005198:	08005175 	.word	0x08005175
 800519c:	08005175 	.word	0x08005175
 80051a0:	08005175 	.word	0x08005175
 80051a4:	080051f9 	.word	0x080051f9
 80051a8:	08005175 	.word	0x08005175
 80051ac:	08005175 	.word	0x08005175
 80051b0:	08005175 	.word	0x08005175
 80051b4:	08005175 	.word	0x08005175
 80051b8:	080052f7 	.word	0x080052f7
 80051bc:	08005223 	.word	0x08005223
 80051c0:	080052b1 	.word	0x080052b1
 80051c4:	08005175 	.word	0x08005175
 80051c8:	08005175 	.word	0x08005175
 80051cc:	08005319 	.word	0x08005319
 80051d0:	08005175 	.word	0x08005175
 80051d4:	08005223 	.word	0x08005223
 80051d8:	08005175 	.word	0x08005175
 80051dc:	08005175 	.word	0x08005175
 80051e0:	080052b9 	.word	0x080052b9
 80051e4:	6833      	ldr	r3, [r6, #0]
 80051e6:	1d1a      	adds	r2, r3, #4
 80051e8:	681b      	ldr	r3, [r3, #0]
 80051ea:	6032      	str	r2, [r6, #0]
 80051ec:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80051f0:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 80051f4:	2301      	movs	r3, #1
 80051f6:	e09c      	b.n	8005332 <_printf_i+0x1e6>
 80051f8:	6833      	ldr	r3, [r6, #0]
 80051fa:	6820      	ldr	r0, [r4, #0]
 80051fc:	1d19      	adds	r1, r3, #4
 80051fe:	6031      	str	r1, [r6, #0]
 8005200:	0606      	lsls	r6, r0, #24
 8005202:	d501      	bpl.n	8005208 <_printf_i+0xbc>
 8005204:	681d      	ldr	r5, [r3, #0]
 8005206:	e003      	b.n	8005210 <_printf_i+0xc4>
 8005208:	0645      	lsls	r5, r0, #25
 800520a:	d5fb      	bpl.n	8005204 <_printf_i+0xb8>
 800520c:	f9b3 5000 	ldrsh.w	r5, [r3]
 8005210:	2d00      	cmp	r5, #0
 8005212:	da03      	bge.n	800521c <_printf_i+0xd0>
 8005214:	232d      	movs	r3, #45	@ 0x2d
 8005216:	426d      	negs	r5, r5
 8005218:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800521c:	4858      	ldr	r0, [pc, #352]	@ (8005380 <_printf_i+0x234>)
 800521e:	230a      	movs	r3, #10
 8005220:	e011      	b.n	8005246 <_printf_i+0xfa>
 8005222:	6821      	ldr	r1, [r4, #0]
 8005224:	6833      	ldr	r3, [r6, #0]
 8005226:	0608      	lsls	r0, r1, #24
 8005228:	f853 5b04 	ldr.w	r5, [r3], #4
 800522c:	d402      	bmi.n	8005234 <_printf_i+0xe8>
 800522e:	0649      	lsls	r1, r1, #25
 8005230:	bf48      	it	mi
 8005232:	b2ad      	uxthmi	r5, r5
 8005234:	2f6f      	cmp	r7, #111	@ 0x6f
 8005236:	4852      	ldr	r0, [pc, #328]	@ (8005380 <_printf_i+0x234>)
 8005238:	6033      	str	r3, [r6, #0]
 800523a:	bf14      	ite	ne
 800523c:	230a      	movne	r3, #10
 800523e:	2308      	moveq	r3, #8
 8005240:	2100      	movs	r1, #0
 8005242:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8005246:	6866      	ldr	r6, [r4, #4]
 8005248:	60a6      	str	r6, [r4, #8]
 800524a:	2e00      	cmp	r6, #0
 800524c:	db05      	blt.n	800525a <_printf_i+0x10e>
 800524e:	6821      	ldr	r1, [r4, #0]
 8005250:	432e      	orrs	r6, r5
 8005252:	f021 0104 	bic.w	r1, r1, #4
 8005256:	6021      	str	r1, [r4, #0]
 8005258:	d04b      	beq.n	80052f2 <_printf_i+0x1a6>
 800525a:	4616      	mov	r6, r2
 800525c:	fbb5 f1f3 	udiv	r1, r5, r3
 8005260:	fb03 5711 	mls	r7, r3, r1, r5
 8005264:	5dc7      	ldrb	r7, [r0, r7]
 8005266:	f806 7d01 	strb.w	r7, [r6, #-1]!
 800526a:	462f      	mov	r7, r5
 800526c:	42bb      	cmp	r3, r7
 800526e:	460d      	mov	r5, r1
 8005270:	d9f4      	bls.n	800525c <_printf_i+0x110>
 8005272:	2b08      	cmp	r3, #8
 8005274:	d10b      	bne.n	800528e <_printf_i+0x142>
 8005276:	6823      	ldr	r3, [r4, #0]
 8005278:	07df      	lsls	r7, r3, #31
 800527a:	d508      	bpl.n	800528e <_printf_i+0x142>
 800527c:	6923      	ldr	r3, [r4, #16]
 800527e:	6861      	ldr	r1, [r4, #4]
 8005280:	4299      	cmp	r1, r3
 8005282:	bfde      	ittt	le
 8005284:	2330      	movle	r3, #48	@ 0x30
 8005286:	f806 3c01 	strble.w	r3, [r6, #-1]
 800528a:	f106 36ff 	addle.w	r6, r6, #4294967295
 800528e:	1b92      	subs	r2, r2, r6
 8005290:	6122      	str	r2, [r4, #16]
 8005292:	f8cd a000 	str.w	sl, [sp]
 8005296:	464b      	mov	r3, r9
 8005298:	aa03      	add	r2, sp, #12
 800529a:	4621      	mov	r1, r4
 800529c:	4640      	mov	r0, r8
 800529e:	f7ff fee7 	bl	8005070 <_printf_common>
 80052a2:	3001      	adds	r0, #1
 80052a4:	d14a      	bne.n	800533c <_printf_i+0x1f0>
 80052a6:	f04f 30ff 	mov.w	r0, #4294967295
 80052aa:	b004      	add	sp, #16
 80052ac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80052b0:	6823      	ldr	r3, [r4, #0]
 80052b2:	f043 0320 	orr.w	r3, r3, #32
 80052b6:	6023      	str	r3, [r4, #0]
 80052b8:	4832      	ldr	r0, [pc, #200]	@ (8005384 <_printf_i+0x238>)
 80052ba:	2778      	movs	r7, #120	@ 0x78
 80052bc:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 80052c0:	6823      	ldr	r3, [r4, #0]
 80052c2:	6831      	ldr	r1, [r6, #0]
 80052c4:	061f      	lsls	r7, r3, #24
 80052c6:	f851 5b04 	ldr.w	r5, [r1], #4
 80052ca:	d402      	bmi.n	80052d2 <_printf_i+0x186>
 80052cc:	065f      	lsls	r7, r3, #25
 80052ce:	bf48      	it	mi
 80052d0:	b2ad      	uxthmi	r5, r5
 80052d2:	6031      	str	r1, [r6, #0]
 80052d4:	07d9      	lsls	r1, r3, #31
 80052d6:	bf44      	itt	mi
 80052d8:	f043 0320 	orrmi.w	r3, r3, #32
 80052dc:	6023      	strmi	r3, [r4, #0]
 80052de:	b11d      	cbz	r5, 80052e8 <_printf_i+0x19c>
 80052e0:	2310      	movs	r3, #16
 80052e2:	e7ad      	b.n	8005240 <_printf_i+0xf4>
 80052e4:	4826      	ldr	r0, [pc, #152]	@ (8005380 <_printf_i+0x234>)
 80052e6:	e7e9      	b.n	80052bc <_printf_i+0x170>
 80052e8:	6823      	ldr	r3, [r4, #0]
 80052ea:	f023 0320 	bic.w	r3, r3, #32
 80052ee:	6023      	str	r3, [r4, #0]
 80052f0:	e7f6      	b.n	80052e0 <_printf_i+0x194>
 80052f2:	4616      	mov	r6, r2
 80052f4:	e7bd      	b.n	8005272 <_printf_i+0x126>
 80052f6:	6833      	ldr	r3, [r6, #0]
 80052f8:	6825      	ldr	r5, [r4, #0]
 80052fa:	6961      	ldr	r1, [r4, #20]
 80052fc:	1d18      	adds	r0, r3, #4
 80052fe:	6030      	str	r0, [r6, #0]
 8005300:	062e      	lsls	r6, r5, #24
 8005302:	681b      	ldr	r3, [r3, #0]
 8005304:	d501      	bpl.n	800530a <_printf_i+0x1be>
 8005306:	6019      	str	r1, [r3, #0]
 8005308:	e002      	b.n	8005310 <_printf_i+0x1c4>
 800530a:	0668      	lsls	r0, r5, #25
 800530c:	d5fb      	bpl.n	8005306 <_printf_i+0x1ba>
 800530e:	8019      	strh	r1, [r3, #0]
 8005310:	2300      	movs	r3, #0
 8005312:	6123      	str	r3, [r4, #16]
 8005314:	4616      	mov	r6, r2
 8005316:	e7bc      	b.n	8005292 <_printf_i+0x146>
 8005318:	6833      	ldr	r3, [r6, #0]
 800531a:	1d1a      	adds	r2, r3, #4
 800531c:	6032      	str	r2, [r6, #0]
 800531e:	681e      	ldr	r6, [r3, #0]
 8005320:	6862      	ldr	r2, [r4, #4]
 8005322:	2100      	movs	r1, #0
 8005324:	4630      	mov	r0, r6
 8005326:	f7fa ff6b 	bl	8000200 <memchr>
 800532a:	b108      	cbz	r0, 8005330 <_printf_i+0x1e4>
 800532c:	1b80      	subs	r0, r0, r6
 800532e:	6060      	str	r0, [r4, #4]
 8005330:	6863      	ldr	r3, [r4, #4]
 8005332:	6123      	str	r3, [r4, #16]
 8005334:	2300      	movs	r3, #0
 8005336:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800533a:	e7aa      	b.n	8005292 <_printf_i+0x146>
 800533c:	6923      	ldr	r3, [r4, #16]
 800533e:	4632      	mov	r2, r6
 8005340:	4649      	mov	r1, r9
 8005342:	4640      	mov	r0, r8
 8005344:	47d0      	blx	sl
 8005346:	3001      	adds	r0, #1
 8005348:	d0ad      	beq.n	80052a6 <_printf_i+0x15a>
 800534a:	6823      	ldr	r3, [r4, #0]
 800534c:	079b      	lsls	r3, r3, #30
 800534e:	d413      	bmi.n	8005378 <_printf_i+0x22c>
 8005350:	68e0      	ldr	r0, [r4, #12]
 8005352:	9b03      	ldr	r3, [sp, #12]
 8005354:	4298      	cmp	r0, r3
 8005356:	bfb8      	it	lt
 8005358:	4618      	movlt	r0, r3
 800535a:	e7a6      	b.n	80052aa <_printf_i+0x15e>
 800535c:	2301      	movs	r3, #1
 800535e:	4632      	mov	r2, r6
 8005360:	4649      	mov	r1, r9
 8005362:	4640      	mov	r0, r8
 8005364:	47d0      	blx	sl
 8005366:	3001      	adds	r0, #1
 8005368:	d09d      	beq.n	80052a6 <_printf_i+0x15a>
 800536a:	3501      	adds	r5, #1
 800536c:	68e3      	ldr	r3, [r4, #12]
 800536e:	9903      	ldr	r1, [sp, #12]
 8005370:	1a5b      	subs	r3, r3, r1
 8005372:	42ab      	cmp	r3, r5
 8005374:	dcf2      	bgt.n	800535c <_printf_i+0x210>
 8005376:	e7eb      	b.n	8005350 <_printf_i+0x204>
 8005378:	2500      	movs	r5, #0
 800537a:	f104 0619 	add.w	r6, r4, #25
 800537e:	e7f5      	b.n	800536c <_printf_i+0x220>
 8005380:	080058e5 	.word	0x080058e5
 8005384:	080058f6 	.word	0x080058f6

08005388 <memmove>:
 8005388:	4288      	cmp	r0, r1
 800538a:	b510      	push	{r4, lr}
 800538c:	eb01 0402 	add.w	r4, r1, r2
 8005390:	d902      	bls.n	8005398 <memmove+0x10>
 8005392:	4284      	cmp	r4, r0
 8005394:	4623      	mov	r3, r4
 8005396:	d807      	bhi.n	80053a8 <memmove+0x20>
 8005398:	1e43      	subs	r3, r0, #1
 800539a:	42a1      	cmp	r1, r4
 800539c:	d008      	beq.n	80053b0 <memmove+0x28>
 800539e:	f811 2b01 	ldrb.w	r2, [r1], #1
 80053a2:	f803 2f01 	strb.w	r2, [r3, #1]!
 80053a6:	e7f8      	b.n	800539a <memmove+0x12>
 80053a8:	4402      	add	r2, r0
 80053aa:	4601      	mov	r1, r0
 80053ac:	428a      	cmp	r2, r1
 80053ae:	d100      	bne.n	80053b2 <memmove+0x2a>
 80053b0:	bd10      	pop	{r4, pc}
 80053b2:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80053b6:	f802 4d01 	strb.w	r4, [r2, #-1]!
 80053ba:	e7f7      	b.n	80053ac <memmove+0x24>

080053bc <_sbrk_r>:
 80053bc:	b538      	push	{r3, r4, r5, lr}
 80053be:	4d06      	ldr	r5, [pc, #24]	@ (80053d8 <_sbrk_r+0x1c>)
 80053c0:	2300      	movs	r3, #0
 80053c2:	4604      	mov	r4, r0
 80053c4:	4608      	mov	r0, r1
 80053c6:	602b      	str	r3, [r5, #0]
 80053c8:	f7fc f84e 	bl	8001468 <_sbrk>
 80053cc:	1c43      	adds	r3, r0, #1
 80053ce:	d102      	bne.n	80053d6 <_sbrk_r+0x1a>
 80053d0:	682b      	ldr	r3, [r5, #0]
 80053d2:	b103      	cbz	r3, 80053d6 <_sbrk_r+0x1a>
 80053d4:	6023      	str	r3, [r4, #0]
 80053d6:	bd38      	pop	{r3, r4, r5, pc}
 80053d8:	200003e0 	.word	0x200003e0

080053dc <memcpy>:
 80053dc:	440a      	add	r2, r1
 80053de:	4291      	cmp	r1, r2
 80053e0:	f100 33ff 	add.w	r3, r0, #4294967295
 80053e4:	d100      	bne.n	80053e8 <memcpy+0xc>
 80053e6:	4770      	bx	lr
 80053e8:	b510      	push	{r4, lr}
 80053ea:	f811 4b01 	ldrb.w	r4, [r1], #1
 80053ee:	f803 4f01 	strb.w	r4, [r3, #1]!
 80053f2:	4291      	cmp	r1, r2
 80053f4:	d1f9      	bne.n	80053ea <memcpy+0xe>
 80053f6:	bd10      	pop	{r4, pc}

080053f8 <_realloc_r>:
 80053f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80053fc:	4607      	mov	r7, r0
 80053fe:	4614      	mov	r4, r2
 8005400:	460d      	mov	r5, r1
 8005402:	b921      	cbnz	r1, 800540e <_realloc_r+0x16>
 8005404:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8005408:	4611      	mov	r1, r2
 800540a:	f7ff bc4d 	b.w	8004ca8 <_malloc_r>
 800540e:	b92a      	cbnz	r2, 800541c <_realloc_r+0x24>
 8005410:	f7ff fbde 	bl	8004bd0 <_free_r>
 8005414:	4625      	mov	r5, r4
 8005416:	4628      	mov	r0, r5
 8005418:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800541c:	f000 f81a 	bl	8005454 <_malloc_usable_size_r>
 8005420:	4284      	cmp	r4, r0
 8005422:	4606      	mov	r6, r0
 8005424:	d802      	bhi.n	800542c <_realloc_r+0x34>
 8005426:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 800542a:	d8f4      	bhi.n	8005416 <_realloc_r+0x1e>
 800542c:	4621      	mov	r1, r4
 800542e:	4638      	mov	r0, r7
 8005430:	f7ff fc3a 	bl	8004ca8 <_malloc_r>
 8005434:	4680      	mov	r8, r0
 8005436:	b908      	cbnz	r0, 800543c <_realloc_r+0x44>
 8005438:	4645      	mov	r5, r8
 800543a:	e7ec      	b.n	8005416 <_realloc_r+0x1e>
 800543c:	42b4      	cmp	r4, r6
 800543e:	4622      	mov	r2, r4
 8005440:	4629      	mov	r1, r5
 8005442:	bf28      	it	cs
 8005444:	4632      	movcs	r2, r6
 8005446:	f7ff ffc9 	bl	80053dc <memcpy>
 800544a:	4629      	mov	r1, r5
 800544c:	4638      	mov	r0, r7
 800544e:	f7ff fbbf 	bl	8004bd0 <_free_r>
 8005452:	e7f1      	b.n	8005438 <_realloc_r+0x40>

08005454 <_malloc_usable_size_r>:
 8005454:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8005458:	1f18      	subs	r0, r3, #4
 800545a:	2b00      	cmp	r3, #0
 800545c:	bfbc      	itt	lt
 800545e:	580b      	ldrlt	r3, [r1, r0]
 8005460:	18c0      	addlt	r0, r0, r3
 8005462:	4770      	bx	lr

08005464 <_init>:
 8005464:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005466:	bf00      	nop
 8005468:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800546a:	bc08      	pop	{r3}
 800546c:	469e      	mov	lr, r3
 800546e:	4770      	bx	lr

08005470 <_fini>:
 8005470:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005472:	bf00      	nop
 8005474:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8005476:	bc08      	pop	{r3}
 8005478:	469e      	mov	lr, r3
 800547a:	4770      	bx	lr
