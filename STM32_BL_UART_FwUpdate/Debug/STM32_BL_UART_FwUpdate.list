
STM32_BL_UART_FwUpdate.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00005358  080001b0  080001b0  000011b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000508  08005508  08005508  00006508  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08005a10  08005a10  00007088  2**0
                  CONTENTS, READONLY
  4 .ARM          00000008  08005a10  08005a10  00006a10  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08005a18  08005a18  00007088  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08005a18  08005a18  00006a18  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08005a1c  08005a1c  00006a1c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000088  20000000  08005a20  00007000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000036c  20000088  08005aa8  00007088  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200003f4  08005aa8  000073f4  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00007088  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000cd91  00000000  00000000  000070b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00002271  00000000  00000000  00013e49  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000b90  00000000  00000000  000160c0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000008e3  00000000  00000000  00016c50  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00028e04  00000000  00000000  00017533  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000e5f9  00000000  00000000  00040337  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000f7b06  00000000  00000000  0004e930  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00146436  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00003340  00000000  00000000  0014647c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000074  00000000  00000000  001497bc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	@ (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	@ (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	@ (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000088 	.word	0x20000088
 80001cc:	00000000 	.word	0x00000000
 80001d0:	080054f0 	.word	0x080054f0

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	@ (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	@ (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	@ (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	2000008c 	.word	0x2000008c
 80001ec:	080054f0 	.word	0x080054f0

080001f0 <strlen>:
 80001f0:	4603      	mov	r3, r0
 80001f2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001f6:	2a00      	cmp	r2, #0
 80001f8:	d1fb      	bne.n	80001f2 <strlen+0x2>
 80001fa:	1a18      	subs	r0, r3, r0
 80001fc:	3801      	subs	r0, #1
 80001fe:	4770      	bx	lr

08000200 <memchr>:
 8000200:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000204:	2a10      	cmp	r2, #16
 8000206:	db2b      	blt.n	8000260 <memchr+0x60>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	d008      	beq.n	8000220 <memchr+0x20>
 800020e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000212:	3a01      	subs	r2, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d02d      	beq.n	8000274 <memchr+0x74>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	b342      	cbz	r2, 8000270 <memchr+0x70>
 800021e:	d1f6      	bne.n	800020e <memchr+0xe>
 8000220:	b4f0      	push	{r4, r5, r6, r7}
 8000222:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000226:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800022a:	f022 0407 	bic.w	r4, r2, #7
 800022e:	f07f 0700 	mvns.w	r7, #0
 8000232:	2300      	movs	r3, #0
 8000234:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000238:	3c08      	subs	r4, #8
 800023a:	ea85 0501 	eor.w	r5, r5, r1
 800023e:	ea86 0601 	eor.w	r6, r6, r1
 8000242:	fa85 f547 	uadd8	r5, r5, r7
 8000246:	faa3 f587 	sel	r5, r3, r7
 800024a:	fa86 f647 	uadd8	r6, r6, r7
 800024e:	faa5 f687 	sel	r6, r5, r7
 8000252:	b98e      	cbnz	r6, 8000278 <memchr+0x78>
 8000254:	d1ee      	bne.n	8000234 <memchr+0x34>
 8000256:	bcf0      	pop	{r4, r5, r6, r7}
 8000258:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800025c:	f002 0207 	and.w	r2, r2, #7
 8000260:	b132      	cbz	r2, 8000270 <memchr+0x70>
 8000262:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000266:	3a01      	subs	r2, #1
 8000268:	ea83 0301 	eor.w	r3, r3, r1
 800026c:	b113      	cbz	r3, 8000274 <memchr+0x74>
 800026e:	d1f8      	bne.n	8000262 <memchr+0x62>
 8000270:	2000      	movs	r0, #0
 8000272:	4770      	bx	lr
 8000274:	3801      	subs	r0, #1
 8000276:	4770      	bx	lr
 8000278:	2d00      	cmp	r5, #0
 800027a:	bf06      	itte	eq
 800027c:	4635      	moveq	r5, r6
 800027e:	3803      	subeq	r0, #3
 8000280:	3807      	subne	r0, #7
 8000282:	f015 0f01 	tst.w	r5, #1
 8000286:	d107      	bne.n	8000298 <memchr+0x98>
 8000288:	3001      	adds	r0, #1
 800028a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800028e:	bf02      	ittt	eq
 8000290:	3001      	addeq	r0, #1
 8000292:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000296:	3001      	addeq	r0, #1
 8000298:	bcf0      	pop	{r4, r5, r6, r7}
 800029a:	3801      	subs	r0, #1
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop

080002a0 <__aeabi_uldivmod>:
 80002a0:	b953      	cbnz	r3, 80002b8 <__aeabi_uldivmod+0x18>
 80002a2:	b94a      	cbnz	r2, 80002b8 <__aeabi_uldivmod+0x18>
 80002a4:	2900      	cmp	r1, #0
 80002a6:	bf08      	it	eq
 80002a8:	2800      	cmpeq	r0, #0
 80002aa:	bf1c      	itt	ne
 80002ac:	f04f 31ff 	movne.w	r1, #4294967295
 80002b0:	f04f 30ff 	movne.w	r0, #4294967295
 80002b4:	f000 b988 	b.w	80005c8 <__aeabi_idiv0>
 80002b8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002bc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002c0:	f000 f806 	bl	80002d0 <__udivmoddi4>
 80002c4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002c8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002cc:	b004      	add	sp, #16
 80002ce:	4770      	bx	lr

080002d0 <__udivmoddi4>:
 80002d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002d4:	9d08      	ldr	r5, [sp, #32]
 80002d6:	468e      	mov	lr, r1
 80002d8:	4604      	mov	r4, r0
 80002da:	4688      	mov	r8, r1
 80002dc:	2b00      	cmp	r3, #0
 80002de:	d14a      	bne.n	8000376 <__udivmoddi4+0xa6>
 80002e0:	428a      	cmp	r2, r1
 80002e2:	4617      	mov	r7, r2
 80002e4:	d962      	bls.n	80003ac <__udivmoddi4+0xdc>
 80002e6:	fab2 f682 	clz	r6, r2
 80002ea:	b14e      	cbz	r6, 8000300 <__udivmoddi4+0x30>
 80002ec:	f1c6 0320 	rsb	r3, r6, #32
 80002f0:	fa01 f806 	lsl.w	r8, r1, r6
 80002f4:	fa20 f303 	lsr.w	r3, r0, r3
 80002f8:	40b7      	lsls	r7, r6
 80002fa:	ea43 0808 	orr.w	r8, r3, r8
 80002fe:	40b4      	lsls	r4, r6
 8000300:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000304:	fa1f fc87 	uxth.w	ip, r7
 8000308:	fbb8 f1fe 	udiv	r1, r8, lr
 800030c:	0c23      	lsrs	r3, r4, #16
 800030e:	fb0e 8811 	mls	r8, lr, r1, r8
 8000312:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000316:	fb01 f20c 	mul.w	r2, r1, ip
 800031a:	429a      	cmp	r2, r3
 800031c:	d909      	bls.n	8000332 <__udivmoddi4+0x62>
 800031e:	18fb      	adds	r3, r7, r3
 8000320:	f101 30ff 	add.w	r0, r1, #4294967295
 8000324:	f080 80ea 	bcs.w	80004fc <__udivmoddi4+0x22c>
 8000328:	429a      	cmp	r2, r3
 800032a:	f240 80e7 	bls.w	80004fc <__udivmoddi4+0x22c>
 800032e:	3902      	subs	r1, #2
 8000330:	443b      	add	r3, r7
 8000332:	1a9a      	subs	r2, r3, r2
 8000334:	b2a3      	uxth	r3, r4
 8000336:	fbb2 f0fe 	udiv	r0, r2, lr
 800033a:	fb0e 2210 	mls	r2, lr, r0, r2
 800033e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000342:	fb00 fc0c 	mul.w	ip, r0, ip
 8000346:	459c      	cmp	ip, r3
 8000348:	d909      	bls.n	800035e <__udivmoddi4+0x8e>
 800034a:	18fb      	adds	r3, r7, r3
 800034c:	f100 32ff 	add.w	r2, r0, #4294967295
 8000350:	f080 80d6 	bcs.w	8000500 <__udivmoddi4+0x230>
 8000354:	459c      	cmp	ip, r3
 8000356:	f240 80d3 	bls.w	8000500 <__udivmoddi4+0x230>
 800035a:	443b      	add	r3, r7
 800035c:	3802      	subs	r0, #2
 800035e:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000362:	eba3 030c 	sub.w	r3, r3, ip
 8000366:	2100      	movs	r1, #0
 8000368:	b11d      	cbz	r5, 8000372 <__udivmoddi4+0xa2>
 800036a:	40f3      	lsrs	r3, r6
 800036c:	2200      	movs	r2, #0
 800036e:	e9c5 3200 	strd	r3, r2, [r5]
 8000372:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000376:	428b      	cmp	r3, r1
 8000378:	d905      	bls.n	8000386 <__udivmoddi4+0xb6>
 800037a:	b10d      	cbz	r5, 8000380 <__udivmoddi4+0xb0>
 800037c:	e9c5 0100 	strd	r0, r1, [r5]
 8000380:	2100      	movs	r1, #0
 8000382:	4608      	mov	r0, r1
 8000384:	e7f5      	b.n	8000372 <__udivmoddi4+0xa2>
 8000386:	fab3 f183 	clz	r1, r3
 800038a:	2900      	cmp	r1, #0
 800038c:	d146      	bne.n	800041c <__udivmoddi4+0x14c>
 800038e:	4573      	cmp	r3, lr
 8000390:	d302      	bcc.n	8000398 <__udivmoddi4+0xc8>
 8000392:	4282      	cmp	r2, r0
 8000394:	f200 8105 	bhi.w	80005a2 <__udivmoddi4+0x2d2>
 8000398:	1a84      	subs	r4, r0, r2
 800039a:	eb6e 0203 	sbc.w	r2, lr, r3
 800039e:	2001      	movs	r0, #1
 80003a0:	4690      	mov	r8, r2
 80003a2:	2d00      	cmp	r5, #0
 80003a4:	d0e5      	beq.n	8000372 <__udivmoddi4+0xa2>
 80003a6:	e9c5 4800 	strd	r4, r8, [r5]
 80003aa:	e7e2      	b.n	8000372 <__udivmoddi4+0xa2>
 80003ac:	2a00      	cmp	r2, #0
 80003ae:	f000 8090 	beq.w	80004d2 <__udivmoddi4+0x202>
 80003b2:	fab2 f682 	clz	r6, r2
 80003b6:	2e00      	cmp	r6, #0
 80003b8:	f040 80a4 	bne.w	8000504 <__udivmoddi4+0x234>
 80003bc:	1a8a      	subs	r2, r1, r2
 80003be:	0c03      	lsrs	r3, r0, #16
 80003c0:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 80003c4:	b280      	uxth	r0, r0
 80003c6:	b2bc      	uxth	r4, r7
 80003c8:	2101      	movs	r1, #1
 80003ca:	fbb2 fcfe 	udiv	ip, r2, lr
 80003ce:	fb0e 221c 	mls	r2, lr, ip, r2
 80003d2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80003d6:	fb04 f20c 	mul.w	r2, r4, ip
 80003da:	429a      	cmp	r2, r3
 80003dc:	d907      	bls.n	80003ee <__udivmoddi4+0x11e>
 80003de:	18fb      	adds	r3, r7, r3
 80003e0:	f10c 38ff 	add.w	r8, ip, #4294967295
 80003e4:	d202      	bcs.n	80003ec <__udivmoddi4+0x11c>
 80003e6:	429a      	cmp	r2, r3
 80003e8:	f200 80e0 	bhi.w	80005ac <__udivmoddi4+0x2dc>
 80003ec:	46c4      	mov	ip, r8
 80003ee:	1a9b      	subs	r3, r3, r2
 80003f0:	fbb3 f2fe 	udiv	r2, r3, lr
 80003f4:	fb0e 3312 	mls	r3, lr, r2, r3
 80003f8:	ea40 4303 	orr.w	r3, r0, r3, lsl #16
 80003fc:	fb02 f404 	mul.w	r4, r2, r4
 8000400:	429c      	cmp	r4, r3
 8000402:	d907      	bls.n	8000414 <__udivmoddi4+0x144>
 8000404:	18fb      	adds	r3, r7, r3
 8000406:	f102 30ff 	add.w	r0, r2, #4294967295
 800040a:	d202      	bcs.n	8000412 <__udivmoddi4+0x142>
 800040c:	429c      	cmp	r4, r3
 800040e:	f200 80ca 	bhi.w	80005a6 <__udivmoddi4+0x2d6>
 8000412:	4602      	mov	r2, r0
 8000414:	1b1b      	subs	r3, r3, r4
 8000416:	ea42 400c 	orr.w	r0, r2, ip, lsl #16
 800041a:	e7a5      	b.n	8000368 <__udivmoddi4+0x98>
 800041c:	f1c1 0620 	rsb	r6, r1, #32
 8000420:	408b      	lsls	r3, r1
 8000422:	fa22 f706 	lsr.w	r7, r2, r6
 8000426:	431f      	orrs	r7, r3
 8000428:	fa0e f401 	lsl.w	r4, lr, r1
 800042c:	fa20 f306 	lsr.w	r3, r0, r6
 8000430:	fa2e fe06 	lsr.w	lr, lr, r6
 8000434:	ea4f 4917 	mov.w	r9, r7, lsr #16
 8000438:	4323      	orrs	r3, r4
 800043a:	fa00 f801 	lsl.w	r8, r0, r1
 800043e:	fa1f fc87 	uxth.w	ip, r7
 8000442:	fbbe f0f9 	udiv	r0, lr, r9
 8000446:	0c1c      	lsrs	r4, r3, #16
 8000448:	fb09 ee10 	mls	lr, r9, r0, lr
 800044c:	ea44 440e 	orr.w	r4, r4, lr, lsl #16
 8000450:	fb00 fe0c 	mul.w	lr, r0, ip
 8000454:	45a6      	cmp	lr, r4
 8000456:	fa02 f201 	lsl.w	r2, r2, r1
 800045a:	d909      	bls.n	8000470 <__udivmoddi4+0x1a0>
 800045c:	193c      	adds	r4, r7, r4
 800045e:	f100 3aff 	add.w	sl, r0, #4294967295
 8000462:	f080 809c 	bcs.w	800059e <__udivmoddi4+0x2ce>
 8000466:	45a6      	cmp	lr, r4
 8000468:	f240 8099 	bls.w	800059e <__udivmoddi4+0x2ce>
 800046c:	3802      	subs	r0, #2
 800046e:	443c      	add	r4, r7
 8000470:	eba4 040e 	sub.w	r4, r4, lr
 8000474:	fa1f fe83 	uxth.w	lr, r3
 8000478:	fbb4 f3f9 	udiv	r3, r4, r9
 800047c:	fb09 4413 	mls	r4, r9, r3, r4
 8000480:	ea4e 4404 	orr.w	r4, lr, r4, lsl #16
 8000484:	fb03 fc0c 	mul.w	ip, r3, ip
 8000488:	45a4      	cmp	ip, r4
 800048a:	d908      	bls.n	800049e <__udivmoddi4+0x1ce>
 800048c:	193c      	adds	r4, r7, r4
 800048e:	f103 3eff 	add.w	lr, r3, #4294967295
 8000492:	f080 8082 	bcs.w	800059a <__udivmoddi4+0x2ca>
 8000496:	45a4      	cmp	ip, r4
 8000498:	d97f      	bls.n	800059a <__udivmoddi4+0x2ca>
 800049a:	3b02      	subs	r3, #2
 800049c:	443c      	add	r4, r7
 800049e:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 80004a2:	eba4 040c 	sub.w	r4, r4, ip
 80004a6:	fba0 ec02 	umull	lr, ip, r0, r2
 80004aa:	4564      	cmp	r4, ip
 80004ac:	4673      	mov	r3, lr
 80004ae:	46e1      	mov	r9, ip
 80004b0:	d362      	bcc.n	8000578 <__udivmoddi4+0x2a8>
 80004b2:	d05f      	beq.n	8000574 <__udivmoddi4+0x2a4>
 80004b4:	b15d      	cbz	r5, 80004ce <__udivmoddi4+0x1fe>
 80004b6:	ebb8 0203 	subs.w	r2, r8, r3
 80004ba:	eb64 0409 	sbc.w	r4, r4, r9
 80004be:	fa04 f606 	lsl.w	r6, r4, r6
 80004c2:	fa22 f301 	lsr.w	r3, r2, r1
 80004c6:	431e      	orrs	r6, r3
 80004c8:	40cc      	lsrs	r4, r1
 80004ca:	e9c5 6400 	strd	r6, r4, [r5]
 80004ce:	2100      	movs	r1, #0
 80004d0:	e74f      	b.n	8000372 <__udivmoddi4+0xa2>
 80004d2:	fbb1 fcf2 	udiv	ip, r1, r2
 80004d6:	0c01      	lsrs	r1, r0, #16
 80004d8:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
 80004dc:	b280      	uxth	r0, r0
 80004de:	ea40 4201 	orr.w	r2, r0, r1, lsl #16
 80004e2:	463b      	mov	r3, r7
 80004e4:	4638      	mov	r0, r7
 80004e6:	463c      	mov	r4, r7
 80004e8:	46b8      	mov	r8, r7
 80004ea:	46be      	mov	lr, r7
 80004ec:	2620      	movs	r6, #32
 80004ee:	fbb1 f1f7 	udiv	r1, r1, r7
 80004f2:	eba2 0208 	sub.w	r2, r2, r8
 80004f6:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
 80004fa:	e766      	b.n	80003ca <__udivmoddi4+0xfa>
 80004fc:	4601      	mov	r1, r0
 80004fe:	e718      	b.n	8000332 <__udivmoddi4+0x62>
 8000500:	4610      	mov	r0, r2
 8000502:	e72c      	b.n	800035e <__udivmoddi4+0x8e>
 8000504:	f1c6 0220 	rsb	r2, r6, #32
 8000508:	fa2e f302 	lsr.w	r3, lr, r2
 800050c:	40b7      	lsls	r7, r6
 800050e:	40b1      	lsls	r1, r6
 8000510:	fa20 f202 	lsr.w	r2, r0, r2
 8000514:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000518:	430a      	orrs	r2, r1
 800051a:	fbb3 f8fe 	udiv	r8, r3, lr
 800051e:	b2bc      	uxth	r4, r7
 8000520:	fb0e 3318 	mls	r3, lr, r8, r3
 8000524:	0c11      	lsrs	r1, r2, #16
 8000526:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 800052a:	fb08 f904 	mul.w	r9, r8, r4
 800052e:	40b0      	lsls	r0, r6
 8000530:	4589      	cmp	r9, r1
 8000532:	ea4f 4310 	mov.w	r3, r0, lsr #16
 8000536:	b280      	uxth	r0, r0
 8000538:	d93e      	bls.n	80005b8 <__udivmoddi4+0x2e8>
 800053a:	1879      	adds	r1, r7, r1
 800053c:	f108 3cff 	add.w	ip, r8, #4294967295
 8000540:	d201      	bcs.n	8000546 <__udivmoddi4+0x276>
 8000542:	4589      	cmp	r9, r1
 8000544:	d81f      	bhi.n	8000586 <__udivmoddi4+0x2b6>
 8000546:	eba1 0109 	sub.w	r1, r1, r9
 800054a:	fbb1 f9fe 	udiv	r9, r1, lr
 800054e:	fb09 f804 	mul.w	r8, r9, r4
 8000552:	fb0e 1119 	mls	r1, lr, r9, r1
 8000556:	b292      	uxth	r2, r2
 8000558:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800055c:	4542      	cmp	r2, r8
 800055e:	d229      	bcs.n	80005b4 <__udivmoddi4+0x2e4>
 8000560:	18ba      	adds	r2, r7, r2
 8000562:	f109 31ff 	add.w	r1, r9, #4294967295
 8000566:	d2c4      	bcs.n	80004f2 <__udivmoddi4+0x222>
 8000568:	4542      	cmp	r2, r8
 800056a:	d2c2      	bcs.n	80004f2 <__udivmoddi4+0x222>
 800056c:	f1a9 0102 	sub.w	r1, r9, #2
 8000570:	443a      	add	r2, r7
 8000572:	e7be      	b.n	80004f2 <__udivmoddi4+0x222>
 8000574:	45f0      	cmp	r8, lr
 8000576:	d29d      	bcs.n	80004b4 <__udivmoddi4+0x1e4>
 8000578:	ebbe 0302 	subs.w	r3, lr, r2
 800057c:	eb6c 0c07 	sbc.w	ip, ip, r7
 8000580:	3801      	subs	r0, #1
 8000582:	46e1      	mov	r9, ip
 8000584:	e796      	b.n	80004b4 <__udivmoddi4+0x1e4>
 8000586:	eba7 0909 	sub.w	r9, r7, r9
 800058a:	4449      	add	r1, r9
 800058c:	f1a8 0c02 	sub.w	ip, r8, #2
 8000590:	fbb1 f9fe 	udiv	r9, r1, lr
 8000594:	fb09 f804 	mul.w	r8, r9, r4
 8000598:	e7db      	b.n	8000552 <__udivmoddi4+0x282>
 800059a:	4673      	mov	r3, lr
 800059c:	e77f      	b.n	800049e <__udivmoddi4+0x1ce>
 800059e:	4650      	mov	r0, sl
 80005a0:	e766      	b.n	8000470 <__udivmoddi4+0x1a0>
 80005a2:	4608      	mov	r0, r1
 80005a4:	e6fd      	b.n	80003a2 <__udivmoddi4+0xd2>
 80005a6:	443b      	add	r3, r7
 80005a8:	3a02      	subs	r2, #2
 80005aa:	e733      	b.n	8000414 <__udivmoddi4+0x144>
 80005ac:	f1ac 0c02 	sub.w	ip, ip, #2
 80005b0:	443b      	add	r3, r7
 80005b2:	e71c      	b.n	80003ee <__udivmoddi4+0x11e>
 80005b4:	4649      	mov	r1, r9
 80005b6:	e79c      	b.n	80004f2 <__udivmoddi4+0x222>
 80005b8:	eba1 0109 	sub.w	r1, r1, r9
 80005bc:	46c4      	mov	ip, r8
 80005be:	fbb1 f9fe 	udiv	r9, r1, lr
 80005c2:	fb09 f804 	mul.w	r8, r9, r4
 80005c6:	e7c4      	b.n	8000552 <__udivmoddi4+0x282>

080005c8 <__aeabi_idiv0>:
 80005c8:	4770      	bx	lr
 80005ca:	bf00      	nop

080005cc <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80005cc:	b580      	push	{r7, lr}
 80005ce:	b082      	sub	sp, #8
 80005d0:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80005d2:	f001 f800 	bl	80015d6 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80005d6:	f000 f85f 	bl	8000698 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80005da:	f000 f92f 	bl	800083c <MX_GPIO_Init>
  MX_LPUART1_UART_Init();
 80005de:	f000 f8d1 	bl	8000784 <MX_LPUART1_UART_Init>
  MX_USART2_UART_Init();
 80005e2:	f000 f8fb 	bl	80007dc <MX_USART2_UART_Init>
  MX_CRC_Init();
 80005e6:	f000 f8ab 	bl	8000740 <MX_CRC_Init>
  /* USER CODE BEGIN 2 */

  active_bank_number = fetch_active_bank_number();
 80005ea:	f000 fe5c 	bl	80012a6 <fetch_active_bank_number>
 80005ee:	4603      	mov	r3, r0
 80005f0:	461a      	mov	r2, r3
 80005f2:	4b20      	ldr	r3, [pc, #128]	@ (8000674 <main+0xa8>)
 80005f4:	701a      	strb	r2, [r3, #0]

  /*If button is pressed*/
  if(HAL_GPIO_ReadPin(B1_GPIO_Port, B1_Pin) == GPIO_PIN_SET)
 80005f6:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 80005fa:	481f      	ldr	r0, [pc, #124]	@ (8000678 <main+0xac>)
 80005fc:	f002 f8ba 	bl	8002774 <HAL_GPIO_ReadPin>
 8000600:	4603      	mov	r3, r0
 8000602:	2b01      	cmp	r3, #1
 8000604:	d12f      	bne.n	8000666 <main+0x9a>
  {
	  printmsg("BL_DEBUG_MSG: Button pressed. Checking for firmware updates.\n\r");
 8000606:	481d      	ldr	r0, [pc, #116]	@ (800067c <main+0xb0>)
 8000608:	f000 f9c4 	bl	8000994 <printmsg>

	  /* Function to return the version available on the host application */
	  uint8_t available_version = fetch_available_firmware_version();
 800060c:	f000 fe2c 	bl	8001268 <fetch_available_firmware_version>
 8000610:	4603      	mov	r3, r0
 8000612:	71fb      	strb	r3, [r7, #7]
	  printmsg("BL_DEBUG_MSG: Fetched version: %d \n\r", available_version);
 8000614:	79fb      	ldrb	r3, [r7, #7]
 8000616:	4619      	mov	r1, r3
 8000618:	4819      	ldr	r0, [pc, #100]	@ (8000680 <main+0xb4>)
 800061a:	f000 f9bb 	bl	8000994 <printmsg>

	  /* Check if the user needs to update firmware, get input via Debug UART */
	  printmsg("BL_DEBUG_MSG: Update Firmware? Y/n \n\r");
 800061e:	4819      	ldr	r0, [pc, #100]	@ (8000684 <main+0xb8>)
 8000620:	f000 f9b8 	bl	8000994 <printmsg>
	  uint8_t update_option;
	  HAL_UART_Receive(D_UART, &update_option, 1, HAL_MAX_DELAY);
 8000624:	1db9      	adds	r1, r7, #6
 8000626:	f04f 33ff 	mov.w	r3, #4294967295
 800062a:	2201      	movs	r2, #1
 800062c:	4816      	ldr	r0, [pc, #88]	@ (8000688 <main+0xbc>)
 800062e:	f003 fd24 	bl	800407a <HAL_UART_Receive>
	  if(update_option == 'Y' || update_option == 'y')
 8000632:	79bb      	ldrb	r3, [r7, #6]
 8000634:	2b59      	cmp	r3, #89	@ 0x59
 8000636:	d002      	beq.n	800063e <main+0x72>
 8000638:	79bb      	ldrb	r3, [r7, #6]
 800063a:	2b79      	cmp	r3, #121	@ 0x79
 800063c:	d102      	bne.n	8000644 <main+0x78>
	  {
		  /*User requires a  firmware update */
		  handle_firmware_update();
 800063e:	f000 fe2b 	bl	8001298 <handle_firmware_update>
 8000642:	e015      	b.n	8000670 <main+0xa4>

	  }else if(update_option == 'N' || update_option == 'n')
 8000644:	79bb      	ldrb	r3, [r7, #6]
 8000646:	2b4e      	cmp	r3, #78	@ 0x4e
 8000648:	d002      	beq.n	8000650 <main+0x84>
 800064a:	79bb      	ldrb	r3, [r7, #6]
 800064c:	2b6e      	cmp	r3, #110	@ 0x6e
 800064e:	d105      	bne.n	800065c <main+0x90>
	  {
		  /*User does not requires a firmware update, go to custom boot loader*/
		  printmsg("BL_DEBUG_MSG: Update not required, entering boot loader mode \n\r");
 8000650:	480e      	ldr	r0, [pc, #56]	@ (800068c <main+0xc0>)
 8000652:	f000 f99f 	bl	8000994 <printmsg>

		  /*Continuously check for user inputs to the boot loader*/
		  bootloader_uart_read_data();
 8000656:	f000 f9fd 	bl	8000a54 <bootloader_uart_read_data>
 800065a:	e009      	b.n	8000670 <main+0xa4>

	  }else{
		  printmsg("BL_DEBUG_MSG: Invalid option. Please reset the board. \n\r");
 800065c:	480c      	ldr	r0, [pc, #48]	@ (8000690 <main+0xc4>)
 800065e:	f000 f999 	bl	8000994 <printmsg>
		  while(1);
 8000662:	bf00      	nop
 8000664:	e7fd      	b.n	8000662 <main+0x96>

	  }

  }else{

	  printmsg("BL_DEBUG_MSG: Button not pressed. Executing user application\n\r");
 8000666:	480b      	ldr	r0, [pc, #44]	@ (8000694 <main+0xc8>)
 8000668:	f000 f994 	bl	8000994 <printmsg>

	  bootloader_jump_to_active_bank(); /*Jump to the active bank binaries*/
 800066c:	f000 f9b8 	bl	80009e0 <bootloader_jump_to_active_bank>

  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 8000670:	bf00      	nop
 8000672:	e7fd      	b.n	8000670 <main+0xa4>
 8000674:	200002a0 	.word	0x200002a0
 8000678:	48000800 	.word	0x48000800
 800067c:	08005508 	.word	0x08005508
 8000680:	08005548 	.word	0x08005548
 8000684:	08005570 	.word	0x08005570
 8000688:	200000c8 	.word	0x200000c8
 800068c:	08005598 	.word	0x08005598
 8000690:	080055d8 	.word	0x080055d8
 8000694:	08005614 	.word	0x08005614

08000698 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000698:	b580      	push	{r7, lr}
 800069a:	b096      	sub	sp, #88	@ 0x58
 800069c:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800069e:	f107 0314 	add.w	r3, r7, #20
 80006a2:	2244      	movs	r2, #68	@ 0x44
 80006a4:	2100      	movs	r1, #0
 80006a6:	4618      	mov	r0, r3
 80006a8:	f004 faa4 	bl	8004bf4 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80006ac:	463b      	mov	r3, r7
 80006ae:	2200      	movs	r2, #0
 80006b0:	601a      	str	r2, [r3, #0]
 80006b2:	605a      	str	r2, [r3, #4]
 80006b4:	609a      	str	r2, [r3, #8]
 80006b6:	60da      	str	r2, [r3, #12]
 80006b8:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 80006ba:	f44f 7000 	mov.w	r0, #512	@ 0x200
 80006be:	f002 f897 	bl	80027f0 <HAL_PWREx_ControlVoltageScaling>
 80006c2:	4603      	mov	r3, r0
 80006c4:	2b00      	cmp	r3, #0
 80006c6:	d001      	beq.n	80006cc <SystemClock_Config+0x34>
  {
    Error_Handler();
 80006c8:	f000 fdf5 	bl	80012b6 <Error_Handler>
  }

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_MSI;
 80006cc:	2310      	movs	r3, #16
 80006ce:	617b      	str	r3, [r7, #20]
  RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 80006d0:	2301      	movs	r3, #1
 80006d2:	62fb      	str	r3, [r7, #44]	@ 0x2c
  RCC_OscInitStruct.MSICalibrationValue = 0;
 80006d4:	2300      	movs	r3, #0
 80006d6:	633b      	str	r3, [r7, #48]	@ 0x30
  RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 80006d8:	2360      	movs	r3, #96	@ 0x60
 80006da:	637b      	str	r3, [r7, #52]	@ 0x34
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80006dc:	2302      	movs	r3, #2
 80006de:	63fb      	str	r3, [r7, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 80006e0:	2301      	movs	r3, #1
 80006e2:	643b      	str	r3, [r7, #64]	@ 0x40
  RCC_OscInitStruct.PLL.PLLM = 1;
 80006e4:	2301      	movs	r3, #1
 80006e6:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLN = 40;
 80006e8:	2328      	movs	r3, #40	@ 0x28
 80006ea:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80006ec:	2302      	movs	r3, #2
 80006ee:	64fb      	str	r3, [r7, #76]	@ 0x4c
  RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 80006f0:	2302      	movs	r3, #2
 80006f2:	653b      	str	r3, [r7, #80]	@ 0x50
  RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 80006f4:	2302      	movs	r3, #2
 80006f6:	657b      	str	r3, [r7, #84]	@ 0x54
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80006f8:	f107 0314 	add.w	r3, r7, #20
 80006fc:	4618      	mov	r0, r3
 80006fe:	f002 f8dd 	bl	80028bc <HAL_RCC_OscConfig>
 8000702:	4603      	mov	r3, r0
 8000704:	2b00      	cmp	r3, #0
 8000706:	d001      	beq.n	800070c <SystemClock_Config+0x74>
  {
    Error_Handler();
 8000708:	f000 fdd5 	bl	80012b6 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800070c:	230f      	movs	r3, #15
 800070e:	603b      	str	r3, [r7, #0]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000710:	2303      	movs	r3, #3
 8000712:	607b      	str	r3, [r7, #4]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000714:	2300      	movs	r3, #0
 8000716:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8000718:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800071c:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 800071e:	2300      	movs	r3, #0
 8000720:	613b      	str	r3, [r7, #16]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 8000722:	463b      	mov	r3, r7
 8000724:	2104      	movs	r1, #4
 8000726:	4618      	mov	r0, r3
 8000728:	f002 fce2 	bl	80030f0 <HAL_RCC_ClockConfig>
 800072c:	4603      	mov	r3, r0
 800072e:	2b00      	cmp	r3, #0
 8000730:	d001      	beq.n	8000736 <SystemClock_Config+0x9e>
  {
    Error_Handler();
 8000732:	f000 fdc0 	bl	80012b6 <Error_Handler>
  }
}
 8000736:	bf00      	nop
 8000738:	3758      	adds	r7, #88	@ 0x58
 800073a:	46bd      	mov	sp, r7
 800073c:	bd80      	pop	{r7, pc}
	...

08000740 <MX_CRC_Init>:
  * @brief CRC Initialization Function
  * @param None
  * @retval None
  */
static void MX_CRC_Init(void)
{
 8000740:	b580      	push	{r7, lr}
 8000742:	af00      	add	r7, sp, #0
  /* USER CODE END CRC_Init 0 */

  /* USER CODE BEGIN CRC_Init 1 */

  /* USER CODE END CRC_Init 1 */
  hcrc.Instance = CRC;
 8000744:	4b0d      	ldr	r3, [pc, #52]	@ (800077c <MX_CRC_Init+0x3c>)
 8000746:	4a0e      	ldr	r2, [pc, #56]	@ (8000780 <MX_CRC_Init+0x40>)
 8000748:	601a      	str	r2, [r3, #0]
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 800074a:	4b0c      	ldr	r3, [pc, #48]	@ (800077c <MX_CRC_Init+0x3c>)
 800074c:	2200      	movs	r2, #0
 800074e:	711a      	strb	r2, [r3, #4]
  hcrc.Init.DefaultInitValueUse = DEFAULT_INIT_VALUE_ENABLE;
 8000750:	4b0a      	ldr	r3, [pc, #40]	@ (800077c <MX_CRC_Init+0x3c>)
 8000752:	2200      	movs	r2, #0
 8000754:	715a      	strb	r2, [r3, #5]
  hcrc.Init.InputDataInversionMode = CRC_INPUTDATA_INVERSION_NONE;
 8000756:	4b09      	ldr	r3, [pc, #36]	@ (800077c <MX_CRC_Init+0x3c>)
 8000758:	2200      	movs	r2, #0
 800075a:	615a      	str	r2, [r3, #20]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 800075c:	4b07      	ldr	r3, [pc, #28]	@ (800077c <MX_CRC_Init+0x3c>)
 800075e:	2200      	movs	r2, #0
 8000760:	619a      	str	r2, [r3, #24]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_WORDS;
 8000762:	4b06      	ldr	r3, [pc, #24]	@ (800077c <MX_CRC_Init+0x3c>)
 8000764:	2203      	movs	r2, #3
 8000766:	621a      	str	r2, [r3, #32]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8000768:	4804      	ldr	r0, [pc, #16]	@ (800077c <MX_CRC_Init+0x3c>)
 800076a:	f001 f88f 	bl	800188c <HAL_CRC_Init>
 800076e:	4603      	mov	r3, r0
 8000770:	2b00      	cmp	r3, #0
 8000772:	d001      	beq.n	8000778 <MX_CRC_Init+0x38>
  {
    Error_Handler();
 8000774:	f000 fd9f 	bl	80012b6 <Error_Handler>
  }
  /* USER CODE BEGIN CRC_Init 2 */

  /* USER CODE END CRC_Init 2 */

}
 8000778:	bf00      	nop
 800077a:	bd80      	pop	{r7, pc}
 800077c:	200000a4 	.word	0x200000a4
 8000780:	40023000 	.word	0x40023000

08000784 <MX_LPUART1_UART_Init>:
  * @brief LPUART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_LPUART1_UART_Init(void)
{
 8000784:	b580      	push	{r7, lr}
 8000786:	af00      	add	r7, sp, #0
  /* USER CODE END LPUART1_Init 0 */

  /* USER CODE BEGIN LPUART1_Init 1 */

  /* USER CODE END LPUART1_Init 1 */
  hlpuart1.Instance = LPUART1;
 8000788:	4b12      	ldr	r3, [pc, #72]	@ (80007d4 <MX_LPUART1_UART_Init+0x50>)
 800078a:	4a13      	ldr	r2, [pc, #76]	@ (80007d8 <MX_LPUART1_UART_Init+0x54>)
 800078c:	601a      	str	r2, [r3, #0]
  hlpuart1.Init.BaudRate = 115200;
 800078e:	4b11      	ldr	r3, [pc, #68]	@ (80007d4 <MX_LPUART1_UART_Init+0x50>)
 8000790:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8000794:	605a      	str	r2, [r3, #4]
  hlpuart1.Init.WordLength = UART_WORDLENGTH_8B;
 8000796:	4b0f      	ldr	r3, [pc, #60]	@ (80007d4 <MX_LPUART1_UART_Init+0x50>)
 8000798:	2200      	movs	r2, #0
 800079a:	609a      	str	r2, [r3, #8]
  hlpuart1.Init.StopBits = UART_STOPBITS_1;
 800079c:	4b0d      	ldr	r3, [pc, #52]	@ (80007d4 <MX_LPUART1_UART_Init+0x50>)
 800079e:	2200      	movs	r2, #0
 80007a0:	60da      	str	r2, [r3, #12]
  hlpuart1.Init.Parity = UART_PARITY_NONE;
 80007a2:	4b0c      	ldr	r3, [pc, #48]	@ (80007d4 <MX_LPUART1_UART_Init+0x50>)
 80007a4:	2200      	movs	r2, #0
 80007a6:	611a      	str	r2, [r3, #16]
  hlpuart1.Init.Mode = UART_MODE_TX_RX;
 80007a8:	4b0a      	ldr	r3, [pc, #40]	@ (80007d4 <MX_LPUART1_UART_Init+0x50>)
 80007aa:	220c      	movs	r2, #12
 80007ac:	615a      	str	r2, [r3, #20]
  hlpuart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80007ae:	4b09      	ldr	r3, [pc, #36]	@ (80007d4 <MX_LPUART1_UART_Init+0x50>)
 80007b0:	2200      	movs	r2, #0
 80007b2:	619a      	str	r2, [r3, #24]
  hlpuart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 80007b4:	4b07      	ldr	r3, [pc, #28]	@ (80007d4 <MX_LPUART1_UART_Init+0x50>)
 80007b6:	2200      	movs	r2, #0
 80007b8:	621a      	str	r2, [r3, #32]
  hlpuart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 80007ba:	4b06      	ldr	r3, [pc, #24]	@ (80007d4 <MX_LPUART1_UART_Init+0x50>)
 80007bc:	2200      	movs	r2, #0
 80007be:	625a      	str	r2, [r3, #36]	@ 0x24
  if (HAL_UART_Init(&hlpuart1) != HAL_OK)
 80007c0:	4804      	ldr	r0, [pc, #16]	@ (80007d4 <MX_LPUART1_UART_Init+0x50>)
 80007c2:	f003 fb83 	bl	8003ecc <HAL_UART_Init>
 80007c6:	4603      	mov	r3, r0
 80007c8:	2b00      	cmp	r3, #0
 80007ca:	d001      	beq.n	80007d0 <MX_LPUART1_UART_Init+0x4c>
  {
    Error_Handler();
 80007cc:	f000 fd73 	bl	80012b6 <Error_Handler>
  }
  /* USER CODE BEGIN LPUART1_Init 2 */

  /* USER CODE END LPUART1_Init 2 */

}
 80007d0:	bf00      	nop
 80007d2:	bd80      	pop	{r7, pc}
 80007d4:	200000c8 	.word	0x200000c8
 80007d8:	40008000 	.word	0x40008000

080007dc <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 80007dc:	b580      	push	{r7, lr}
 80007de:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 80007e0:	4b14      	ldr	r3, [pc, #80]	@ (8000834 <MX_USART2_UART_Init+0x58>)
 80007e2:	4a15      	ldr	r2, [pc, #84]	@ (8000838 <MX_USART2_UART_Init+0x5c>)
 80007e4:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 80007e6:	4b13      	ldr	r3, [pc, #76]	@ (8000834 <MX_USART2_UART_Init+0x58>)
 80007e8:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 80007ec:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 80007ee:	4b11      	ldr	r3, [pc, #68]	@ (8000834 <MX_USART2_UART_Init+0x58>)
 80007f0:	2200      	movs	r2, #0
 80007f2:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 80007f4:	4b0f      	ldr	r3, [pc, #60]	@ (8000834 <MX_USART2_UART_Init+0x58>)
 80007f6:	2200      	movs	r2, #0
 80007f8:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 80007fa:	4b0e      	ldr	r3, [pc, #56]	@ (8000834 <MX_USART2_UART_Init+0x58>)
 80007fc:	2200      	movs	r2, #0
 80007fe:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8000800:	4b0c      	ldr	r3, [pc, #48]	@ (8000834 <MX_USART2_UART_Init+0x58>)
 8000802:	220c      	movs	r2, #12
 8000804:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8000806:	4b0b      	ldr	r3, [pc, #44]	@ (8000834 <MX_USART2_UART_Init+0x58>)
 8000808:	2200      	movs	r2, #0
 800080a:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 800080c:	4b09      	ldr	r3, [pc, #36]	@ (8000834 <MX_USART2_UART_Init+0x58>)
 800080e:	2200      	movs	r2, #0
 8000810:	61da      	str	r2, [r3, #28]
  huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8000812:	4b08      	ldr	r3, [pc, #32]	@ (8000834 <MX_USART2_UART_Init+0x58>)
 8000814:	2200      	movs	r2, #0
 8000816:	621a      	str	r2, [r3, #32]
  huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8000818:	4b06      	ldr	r3, [pc, #24]	@ (8000834 <MX_USART2_UART_Init+0x58>)
 800081a:	2200      	movs	r2, #0
 800081c:	625a      	str	r2, [r3, #36]	@ 0x24
  if (HAL_UART_Init(&huart2) != HAL_OK)
 800081e:	4805      	ldr	r0, [pc, #20]	@ (8000834 <MX_USART2_UART_Init+0x58>)
 8000820:	f003 fb54 	bl	8003ecc <HAL_UART_Init>
 8000824:	4603      	mov	r3, r0
 8000826:	2b00      	cmp	r3, #0
 8000828:	d001      	beq.n	800082e <MX_USART2_UART_Init+0x52>
  {
    Error_Handler();
 800082a:	f000 fd44 	bl	80012b6 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 800082e:	bf00      	nop
 8000830:	bd80      	pop	{r7, pc}
 8000832:	bf00      	nop
 8000834:	20000150 	.word	0x20000150
 8000838:	40004400 	.word	0x40004400

0800083c <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 800083c:	b580      	push	{r7, lr}
 800083e:	b08a      	sub	sp, #40	@ 0x28
 8000840:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000842:	f107 0314 	add.w	r3, r7, #20
 8000846:	2200      	movs	r2, #0
 8000848:	601a      	str	r2, [r3, #0]
 800084a:	605a      	str	r2, [r3, #4]
 800084c:	609a      	str	r2, [r3, #8]
 800084e:	60da      	str	r2, [r3, #12]
 8000850:	611a      	str	r2, [r3, #16]
  /* USER CODE BEGIN MX_GPIO_Init_1 */

  /* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000852:	4b4c      	ldr	r3, [pc, #304]	@ (8000984 <MX_GPIO_Init+0x148>)
 8000854:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000856:	4a4b      	ldr	r2, [pc, #300]	@ (8000984 <MX_GPIO_Init+0x148>)
 8000858:	f043 0304 	orr.w	r3, r3, #4
 800085c:	64d3      	str	r3, [r2, #76]	@ 0x4c
 800085e:	4b49      	ldr	r3, [pc, #292]	@ (8000984 <MX_GPIO_Init+0x148>)
 8000860:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000862:	f003 0304 	and.w	r3, r3, #4
 8000866:	613b      	str	r3, [r7, #16]
 8000868:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800086a:	4b46      	ldr	r3, [pc, #280]	@ (8000984 <MX_GPIO_Init+0x148>)
 800086c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800086e:	4a45      	ldr	r2, [pc, #276]	@ (8000984 <MX_GPIO_Init+0x148>)
 8000870:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000874:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8000876:	4b43      	ldr	r3, [pc, #268]	@ (8000984 <MX_GPIO_Init+0x148>)
 8000878:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800087a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800087e:	60fb      	str	r3, [r7, #12]
 8000880:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000882:	4b40      	ldr	r3, [pc, #256]	@ (8000984 <MX_GPIO_Init+0x148>)
 8000884:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000886:	4a3f      	ldr	r2, [pc, #252]	@ (8000984 <MX_GPIO_Init+0x148>)
 8000888:	f043 0301 	orr.w	r3, r3, #1
 800088c:	64d3      	str	r3, [r2, #76]	@ 0x4c
 800088e:	4b3d      	ldr	r3, [pc, #244]	@ (8000984 <MX_GPIO_Init+0x148>)
 8000890:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000892:	f003 0301 	and.w	r3, r3, #1
 8000896:	60bb      	str	r3, [r7, #8]
 8000898:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800089a:	4b3a      	ldr	r3, [pc, #232]	@ (8000984 <MX_GPIO_Init+0x148>)
 800089c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800089e:	4a39      	ldr	r2, [pc, #228]	@ (8000984 <MX_GPIO_Init+0x148>)
 80008a0:	f043 0302 	orr.w	r3, r3, #2
 80008a4:	64d3      	str	r3, [r2, #76]	@ 0x4c
 80008a6:	4b37      	ldr	r3, [pc, #220]	@ (8000984 <MX_GPIO_Init+0x148>)
 80008a8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80008aa:	f003 0302 	and.w	r3, r3, #2
 80008ae:	607b      	str	r3, [r7, #4]
 80008b0:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 80008b2:	4b34      	ldr	r3, [pc, #208]	@ (8000984 <MX_GPIO_Init+0x148>)
 80008b4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80008b6:	4a33      	ldr	r2, [pc, #204]	@ (8000984 <MX_GPIO_Init+0x148>)
 80008b8:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80008bc:	64d3      	str	r3, [r2, #76]	@ 0x4c
 80008be:	4b31      	ldr	r3, [pc, #196]	@ (8000984 <MX_GPIO_Init+0x148>)
 80008c0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80008c2:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80008c6:	603b      	str	r3, [r7, #0]
 80008c8:	683b      	ldr	r3, [r7, #0]
  HAL_PWREx_EnableVddIO2();
 80008ca:	f001 ffe7 	bl	800289c <HAL_PWREx_EnableVddIO2>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, LD3_Pin|LD2_Pin, GPIO_PIN_RESET);
 80008ce:	2200      	movs	r2, #0
 80008d0:	f44f 4181 	mov.w	r1, #16512	@ 0x4080
 80008d4:	482c      	ldr	r0, [pc, #176]	@ (8000988 <MX_GPIO_Init+0x14c>)
 80008d6:	f001 ff65 	bl	80027a4 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOG, USB_PowerSwitchOn_Pin|SMPS_V1_Pin|SMPS_EN_Pin|SMPS_SW_Pin, GPIO_PIN_RESET);
 80008da:	2200      	movs	r2, #0
 80008dc:	f44f 5131 	mov.w	r1, #11328	@ 0x2c40
 80008e0:	482a      	ldr	r0, [pc, #168]	@ (800098c <MX_GPIO_Init+0x150>)
 80008e2:	f001 ff5f 	bl	80027a4 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : B1_Pin */
  GPIO_InitStruct.Pin = B1_Pin;
 80008e6:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 80008ea:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 80008ec:	f44f 1388 	mov.w	r3, #1114112	@ 0x110000
 80008f0:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80008f2:	2300      	movs	r3, #0
 80008f4:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 80008f6:	f107 0314 	add.w	r3, r7, #20
 80008fa:	4619      	mov	r1, r3
 80008fc:	4824      	ldr	r0, [pc, #144]	@ (8000990 <MX_GPIO_Init+0x154>)
 80008fe:	f001 fda7 	bl	8002450 <HAL_GPIO_Init>

  /*Configure GPIO pins : LD3_Pin LD2_Pin */
  GPIO_InitStruct.Pin = LD3_Pin|LD2_Pin;
 8000902:	f44f 4381 	mov.w	r3, #16512	@ 0x4080
 8000906:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000908:	2301      	movs	r3, #1
 800090a:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800090c:	2300      	movs	r3, #0
 800090e:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000910:	2300      	movs	r3, #0
 8000912:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000914:	f107 0314 	add.w	r3, r7, #20
 8000918:	4619      	mov	r1, r3
 800091a:	481b      	ldr	r0, [pc, #108]	@ (8000988 <MX_GPIO_Init+0x14c>)
 800091c:	f001 fd98 	bl	8002450 <HAL_GPIO_Init>

  /*Configure GPIO pins : USB_OverCurrent_Pin SMPS_PG_Pin */
  GPIO_InitStruct.Pin = USB_OverCurrent_Pin|SMPS_PG_Pin;
 8000920:	f44f 5381 	mov.w	r3, #4128	@ 0x1020
 8000924:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000926:	2300      	movs	r3, #0
 8000928:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800092a:	2300      	movs	r3, #0
 800092c:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800092e:	f107 0314 	add.w	r3, r7, #20
 8000932:	4619      	mov	r1, r3
 8000934:	4815      	ldr	r0, [pc, #84]	@ (800098c <MX_GPIO_Init+0x150>)
 8000936:	f001 fd8b 	bl	8002450 <HAL_GPIO_Init>

  /*Configure GPIO pins : USB_PowerSwitchOn_Pin SMPS_V1_Pin SMPS_EN_Pin SMPS_SW_Pin */
  GPIO_InitStruct.Pin = USB_PowerSwitchOn_Pin|SMPS_V1_Pin|SMPS_EN_Pin|SMPS_SW_Pin;
 800093a:	f44f 5331 	mov.w	r3, #11328	@ 0x2c40
 800093e:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000940:	2301      	movs	r3, #1
 8000942:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000944:	2300      	movs	r3, #0
 8000946:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000948:	2300      	movs	r3, #0
 800094a:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800094c:	f107 0314 	add.w	r3, r7, #20
 8000950:	4619      	mov	r1, r3
 8000952:	480e      	ldr	r0, [pc, #56]	@ (800098c <MX_GPIO_Init+0x150>)
 8000954:	f001 fd7c 	bl	8002450 <HAL_GPIO_Init>

  /*Configure GPIO pins : USB_SOF_Pin USB_ID_Pin USB_DM_Pin USB_DP_Pin */
  GPIO_InitStruct.Pin = USB_SOF_Pin|USB_ID_Pin|USB_DM_Pin|USB_DP_Pin;
 8000958:	f44f 53e8 	mov.w	r3, #7424	@ 0x1d00
 800095c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800095e:	2302      	movs	r3, #2
 8000960:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000962:	2300      	movs	r3, #0
 8000964:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000966:	2303      	movs	r3, #3
 8000968:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Alternate = GPIO_AF10_OTG_FS;
 800096a:	230a      	movs	r3, #10
 800096c:	627b      	str	r3, [r7, #36]	@ 0x24
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800096e:	f107 0314 	add.w	r3, r7, #20
 8000972:	4619      	mov	r1, r3
 8000974:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8000978:	f001 fd6a 	bl	8002450 <HAL_GPIO_Init>

  /* USER CODE BEGIN MX_GPIO_Init_2 */

  /* USER CODE END MX_GPIO_Init_2 */
}
 800097c:	bf00      	nop
 800097e:	3728      	adds	r7, #40	@ 0x28
 8000980:	46bd      	mov	sp, r7
 8000982:	bd80      	pop	{r7, pc}
 8000984:	40021000 	.word	0x40021000
 8000988:	48000400 	.word	0x48000400
 800098c:	48001800 	.word	0x48001800
 8000990:	48000800 	.word	0x48000800

08000994 <printmsg>:

/* USER CODE BEGIN 4 */

void printmsg(char *format, ...){/* The ... (ellipsis) means that more arguments can follow */
 8000994:	b40f      	push	{r0, r1, r2, r3}
 8000996:	b580      	push	{r7, lr}
 8000998:	b096      	sub	sp, #88	@ 0x58
 800099a:	af00      	add	r7, sp, #0
#ifdef BL_DEBUG_MSG_EN

	char str[80];
	/*Extract the argument list using C VA APIs*/
	va_list args;
	va_start(args, format);
 800099c:	f107 0364 	add.w	r3, r7, #100	@ 0x64
 80009a0:	607b      	str	r3, [r7, #4]
	vsprintf(str, format, args);
 80009a2:	f107 0308 	add.w	r3, r7, #8
 80009a6:	687a      	ldr	r2, [r7, #4]
 80009a8:	6e39      	ldr	r1, [r7, #96]	@ 0x60
 80009aa:	4618      	mov	r0, r3
 80009ac:	f004 f918 	bl	8004be0 <vsiprintf>
	HAL_UART_Transmit(D_UART, (uint8_t*)str, strlen(str), HAL_MAX_DELAY);
 80009b0:	f107 0308 	add.w	r3, r7, #8
 80009b4:	4618      	mov	r0, r3
 80009b6:	f7ff fc1b 	bl	80001f0 <strlen>
 80009ba:	4603      	mov	r3, r0
 80009bc:	b29a      	uxth	r2, r3
 80009be:	f107 0108 	add.w	r1, r7, #8
 80009c2:	f04f 33ff 	mov.w	r3, #4294967295
 80009c6:	4805      	ldr	r0, [pc, #20]	@ (80009dc <printmsg+0x48>)
 80009c8:	f003 face 	bl	8003f68 <HAL_UART_Transmit>
	va_end(args);
#endif
}
 80009cc:	bf00      	nop
 80009ce:	3758      	adds	r7, #88	@ 0x58
 80009d0:	46bd      	mov	sp, r7
 80009d2:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80009d6:	b004      	add	sp, #16
 80009d8:	4770      	bx	lr
 80009da:	bf00      	nop
 80009dc:	200000c8 	.word	0x200000c8

080009e0 <bootloader_jump_to_active_bank>:

void bootloader_jump_to_active_bank()
{
 80009e0:	b580      	push	{r7, lr}
 80009e2:	b086      	sub	sp, #24
 80009e4:	af00      	add	r7, sp, #0
	 * 2. Redirects interrupts by re-mapping VTOR.
	 * 3. Fetches the application’s Reset_Handler address.
	 * 4. Calls it, effectively jumping to the user application.
	 */

	printmsg("BL_DEBUG_MSG:bootloader_jump_to_user_app\n");
 80009e6:	4815      	ldr	r0, [pc, #84]	@ (8000a3c <bootloader_jump_to_active_bank+0x5c>)
 80009e8:	f7ff ffd4 	bl	8000994 <printmsg>
	 * according to ARM-Cortex Architecture */

	/*1. Configure the Main Stack Pointer (MSP) by reading the value form the flash base address of desired sector*/
	/* Check which firmware bank is active and run active firmware bank*/

	if(active_bank_number == FLASH_ACTIVE_BANK1)
 80009ec:	4b14      	ldr	r3, [pc, #80]	@ (8000a40 <bootloader_jump_to_active_bank+0x60>)
 80009ee:	781b      	ldrb	r3, [r3, #0]
 80009f0:	2b01      	cmp	r3, #1
 80009f2:	d10c      	bne.n	8000a0e <bootloader_jump_to_active_bank+0x2e>
	{

		uint32_t msp_value = *(volatile uint32_t*)FLASH_FIRMWARE1;
 80009f4:	4b13      	ldr	r3, [pc, #76]	@ (8000a44 <bootloader_jump_to_active_bank+0x64>)
 80009f6:	681b      	ldr	r3, [r3, #0]
 80009f8:	613b      	str	r3, [r7, #16]
 80009fa:	693b      	ldr	r3, [r7, #16]
 80009fc:	607b      	str	r3, [r7, #4]
  \details Assigns the given value to the Main Stack Pointer (MSP).
  \param [in]    topOfMainStack  Main Stack Pointer value to set
 */
__STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
{
  __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 80009fe:	687b      	ldr	r3, [r7, #4]
 8000a00:	f383 8808 	msr	MSP, r3
}
 8000a04:	bf00      	nop

		/* Set MSP function from CMSIS*/
		__set_MSP(msp_value);

		/* Re-map vector table to user application base address */
		SCB->VTOR = FLASH_FIRMWARE1; /* System Control Block - Vector Table Offset Register */
 8000a06:	4b10      	ldr	r3, [pc, #64]	@ (8000a48 <bootloader_jump_to_active_bank+0x68>)
 8000a08:	4a0e      	ldr	r2, [pc, #56]	@ (8000a44 <bootloader_jump_to_active_bank+0x64>)
 8000a0a:	609a      	str	r2, [r3, #8]
 8000a0c:	e00b      	b.n	8000a26 <bootloader_jump_to_active_bank+0x46>

	}else{

		uint32_t msp_value = *(volatile uint32_t*)FLASH_FIRMWARE2;
 8000a0e:	4b0f      	ldr	r3, [pc, #60]	@ (8000a4c <bootloader_jump_to_active_bank+0x6c>)
 8000a10:	681b      	ldr	r3, [r3, #0]
 8000a12:	617b      	str	r3, [r7, #20]
 8000a14:	697b      	ldr	r3, [r7, #20]
 8000a16:	603b      	str	r3, [r7, #0]
  __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 8000a18:	683b      	ldr	r3, [r7, #0]
 8000a1a:	f383 8808 	msr	MSP, r3
}
 8000a1e:	bf00      	nop

		__set_MSP(msp_value);

		SCB->VTOR = FLASH_FIRMWARE2;
 8000a20:	4b09      	ldr	r3, [pc, #36]	@ (8000a48 <bootloader_jump_to_active_bank+0x68>)
 8000a22:	4a0a      	ldr	r2, [pc, #40]	@ (8000a4c <bootloader_jump_to_active_bank+0x6c>)
 8000a24:	609a      	str	r2, [r3, #8]
	}

	/* 2. Now fetch the reset handler address of the user application
	 * from the location FLASH_SECTOR2_BASE_ADDRESS + 4 (32bits)*/
	void (*app_reset_handler)(void); /*A function pointer to hold the address of reset handler*/
	uint32_t resethandler_address = *(volatile uint32_t*)(FLASH_FIRMWARE1 + 4);
 8000a26:	4b0a      	ldr	r3, [pc, #40]	@ (8000a50 <bootloader_jump_to_active_bank+0x70>)
 8000a28:	681b      	ldr	r3, [r3, #0]
 8000a2a:	60fb      	str	r3, [r7, #12]
	app_reset_handler = (void*) resethandler_address;
 8000a2c:	68fb      	ldr	r3, [r7, #12]
 8000a2e:	60bb      	str	r3, [r7, #8]

	/*3. Jumping to the reset handler of user application - Now this address will be loaded into the Program Counter*/
	app_reset_handler();
 8000a30:	68bb      	ldr	r3, [r7, #8]
 8000a32:	4798      	blx	r3

}
 8000a34:	bf00      	nop
 8000a36:	3718      	adds	r7, #24
 8000a38:	46bd      	mov	sp, r7
 8000a3a:	bd80      	pop	{r7, pc}
 8000a3c:	08005654 	.word	0x08005654
 8000a40:	200002a0 	.word	0x200002a0
 8000a44:	08008000 	.word	0x08008000
 8000a48:	e000ed00 	.word	0xe000ed00
 8000a4c:	08080000 	.word	0x08080000
 8000a50:	08008004 	.word	0x08008004

08000a54 <bootloader_uart_read_data>:

void bootloader_uart_read_data()
{
 8000a54:	b580      	push	{r7, lr}
 8000a56:	b082      	sub	sp, #8
 8000a58:	af00      	add	r7, sp, #0
	uint8_t rcv_len = 0;
 8000a5a:	2300      	movs	r3, #0
 8000a5c:	71fb      	strb	r3, [r7, #7]

	while(1)
	{
		memset(bl_rx_buffer, 0, BL_RX_LEN);
 8000a5e:	22c8      	movs	r2, #200	@ 0xc8
 8000a60:	2100      	movs	r1, #0
 8000a62:	482d      	ldr	r0, [pc, #180]	@ (8000b18 <bootloader_uart_read_data+0xc4>)
 8000a64:	f004 f8c6 	bl	8004bf4 <memset>

		/*First read only one byte, which is the length. Then read the other bytes from UART */
		HAL_UART_Receive(C_UART, (uint8_t*)&bl_rx_buffer, 1, HAL_MAX_DELAY);
 8000a68:	f04f 33ff 	mov.w	r3, #4294967295
 8000a6c:	2201      	movs	r2, #1
 8000a6e:	492a      	ldr	r1, [pc, #168]	@ (8000b18 <bootloader_uart_read_data+0xc4>)
 8000a70:	482a      	ldr	r0, [pc, #168]	@ (8000b1c <bootloader_uart_read_data+0xc8>)
 8000a72:	f003 fb02 	bl	800407a <HAL_UART_Receive>
		rcv_len = bl_rx_buffer[0];
 8000a76:	4b28      	ldr	r3, [pc, #160]	@ (8000b18 <bootloader_uart_read_data+0xc4>)
 8000a78:	781b      	ldrb	r3, [r3, #0]
 8000a7a:	71fb      	strb	r3, [r7, #7]
		/*Receive the command*/
		HAL_UART_Receive(C_UART, (uint8_t*)&bl_rx_buffer[1], rcv_len, HAL_MAX_DELAY);
 8000a7c:	79fb      	ldrb	r3, [r7, #7]
 8000a7e:	b29a      	uxth	r2, r3
 8000a80:	f04f 33ff 	mov.w	r3, #4294967295
 8000a84:	4926      	ldr	r1, [pc, #152]	@ (8000b20 <bootloader_uart_read_data+0xcc>)
 8000a86:	4825      	ldr	r0, [pc, #148]	@ (8000b1c <bootloader_uart_read_data+0xc8>)
 8000a88:	f003 faf7 	bl	800407a <HAL_UART_Receive>

		switch(bl_rx_buffer[1]) /* To check for command codes */
 8000a8c:	4b22      	ldr	r3, [pc, #136]	@ (8000b18 <bootloader_uart_read_data+0xc4>)
 8000a8e:	785b      	ldrb	r3, [r3, #1]
 8000a90:	3b51      	subs	r3, #81	@ 0x51
 8000a92:	2b0b      	cmp	r3, #11
 8000a94:	d83a      	bhi.n	8000b0c <bootloader_uart_read_data+0xb8>
 8000a96:	a201      	add	r2, pc, #4	@ (adr r2, 8000a9c <bootloader_uart_read_data+0x48>)
 8000a98:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000a9c:	08000acd 	.word	0x08000acd
 8000aa0:	08000ad5 	.word	0x08000ad5
 8000aa4:	08000add 	.word	0x08000add
 8000aa8:	08000ae5 	.word	0x08000ae5
 8000aac:	08000b0d 	.word	0x08000b0d
 8000ab0:	08000aed 	.word	0x08000aed
 8000ab4:	08000af5 	.word	0x08000af5
 8000ab8:	08000afd 	.word	0x08000afd
 8000abc:	08000b0d 	.word	0x08000b0d
 8000ac0:	08000b0d 	.word	0x08000b0d
 8000ac4:	08000b0d 	.word	0x08000b0d
 8000ac8:	08000b05 	.word	0x08000b05
		{
		case BL_GET_VER:
			bootloader_handle_getver_cmd(bl_rx_buffer);
 8000acc:	4812      	ldr	r0, [pc, #72]	@ (8000b18 <bootloader_uart_read_data+0xc4>)
 8000ace:	f000 f82b 	bl	8000b28 <bootloader_handle_getver_cmd>
			break;
 8000ad2:	e01f      	b.n	8000b14 <bootloader_uart_read_data+0xc0>
		case BL_GET_HELP:
			bootloader_handle_gethelp_cmd(bl_rx_buffer);
 8000ad4:	4810      	ldr	r0, [pc, #64]	@ (8000b18 <bootloader_uart_read_data+0xc4>)
 8000ad6:	f000 f86b 	bl	8000bb0 <bootloader_handle_gethelp_cmd>
			break;
 8000ada:	e01b      	b.n	8000b14 <bootloader_uart_read_data+0xc0>
		case BL_GET_CID:
			bootloader_handle_getcid_cmd(bl_rx_buffer);
 8000adc:	480e      	ldr	r0, [pc, #56]	@ (8000b18 <bootloader_uart_read_data+0xc4>)
 8000ade:	f000 f89f 	bl	8000c20 <bootloader_handle_getcid_cmd>
			break;
 8000ae2:	e017      	b.n	8000b14 <bootloader_uart_read_data+0xc0>
		case BL_GET_RDP_STATUS:
			bootloader_handle_getrdp_cmd(bl_rx_buffer);
 8000ae4:	480c      	ldr	r0, [pc, #48]	@ (8000b18 <bootloader_uart_read_data+0xc4>)
 8000ae6:	f000 f8e1 	bl	8000cac <bootloader_handle_getrdp_cmd>
			break;
 8000aea:	e013      	b.n	8000b14 <bootloader_uart_read_data+0xc0>
		case BL_FLASH_ERASE:
			bootloader_handle_flash_erase_cmd(bl_rx_buffer);
 8000aec:	480a      	ldr	r0, [pc, #40]	@ (8000b18 <bootloader_uart_read_data+0xc4>)
 8000aee:	f000 f923 	bl	8000d38 <bootloader_handle_flash_erase_cmd>
			break;
 8000af2:	e00f      	b.n	8000b14 <bootloader_uart_read_data+0xc0>
		case BL_MEM_WRITE:
			bootloader_handle_mem_write_cmd(bl_rx_buffer);
 8000af4:	4808      	ldr	r0, [pc, #32]	@ (8000b18 <bootloader_uart_read_data+0xc4>)
 8000af6:	f000 f989 	bl	8000e0c <bootloader_handle_mem_write_cmd>
			break;
 8000afa:	e00b      	b.n	8000b14 <bootloader_uart_read_data+0xc0>
		case BL_EN_RW_PROTECT:
			bootloader_handle_en_rw_protect(bl_rx_buffer);
 8000afc:	4806      	ldr	r0, [pc, #24]	@ (8000b18 <bootloader_uart_read_data+0xc4>)
 8000afe:	f000 f9fb 	bl	8000ef8 <bootloader_handle_en_rw_protect>
			break;
 8000b02:	e007      	b.n	8000b14 <bootloader_uart_read_data+0xc0>
		case BL_DIS_R_W_PROTECT:
			bootloader_handle_dis_rw_protect(bl_rx_buffer);
 8000b04:	4804      	ldr	r0, [pc, #16]	@ (8000b18 <bootloader_uart_read_data+0xc4>)
 8000b06:	f000 fa01 	bl	8000f0c <bootloader_handle_dis_rw_protect>
			break;
 8000b0a:	e003      	b.n	8000b14 <bootloader_uart_read_data+0xc0>
		default:
			printmsg("BL_DEBUG_MSG:Invalid command code received from host \n");
 8000b0c:	4805      	ldr	r0, [pc, #20]	@ (8000b24 <bootloader_uart_read_data+0xd0>)
 8000b0e:	f7ff ff41 	bl	8000994 <printmsg>
			break;
 8000b12:	bf00      	nop
		memset(bl_rx_buffer, 0, BL_RX_LEN);
 8000b14:	e7a3      	b.n	8000a5e <bootloader_uart_read_data+0xa>
 8000b16:	bf00      	nop
 8000b18:	200001d8 	.word	0x200001d8
 8000b1c:	20000150 	.word	0x20000150
 8000b20:	200001d9 	.word	0x200001d9
 8000b24:	08005680 	.word	0x08005680

08000b28 <bootloader_handle_getver_cmd>:
}

/******************* Boot loader handler functions *******************/

void bootloader_handle_getver_cmd(uint8_t *bl_rx_buffer)
{
 8000b28:	b580      	push	{r7, lr}
 8000b2a:	b086      	sub	sp, #24
 8000b2c:	af00      	add	r7, sp, #0
 8000b2e:	6078      	str	r0, [r7, #4]
    /* Handle "Get Version" command */
	uint8_t bl_version;

	uint32_t command_packet_len = bl_rx_buffer[0] + 1; /*Length to follow + First byte*/
 8000b30:	687b      	ldr	r3, [r7, #4]
 8000b32:	781b      	ldrb	r3, [r3, #0]
 8000b34:	3301      	adds	r3, #1
 8000b36:	617b      	str	r3, [r7, #20]

	/*Extract the 4 bytes of CRC32 sent by the host*/
	uint32_t host_crc = *((uint32_t*)(bl_rx_buffer + command_packet_len - 4)); /* CRC is always 32 bits (4 bytes) here */
 8000b38:	697b      	ldr	r3, [r7, #20]
 8000b3a:	3b04      	subs	r3, #4
 8000b3c:	687a      	ldr	r2, [r7, #4]
 8000b3e:	4413      	add	r3, r2
 8000b40:	681b      	ldr	r3, [r3, #0]
 8000b42:	613b      	str	r3, [r7, #16]

	/*Verify checksum*/
	printmsg("BL_DEBUG_MSG: bootloader_handle_getver_cmd\n\r");
 8000b44:	4816      	ldr	r0, [pc, #88]	@ (8000ba0 <bootloader_handle_getver_cmd+0x78>)
 8000b46:	f7ff ff25 	bl	8000994 <printmsg>
	if(! bootloader_verify_crc(&bl_rx_buffer[0], command_packet_len - 4, host_crc))
 8000b4a:	697b      	ldr	r3, [r7, #20]
 8000b4c:	3b04      	subs	r3, #4
 8000b4e:	693a      	ldr	r2, [r7, #16]
 8000b50:	4619      	mov	r1, r3
 8000b52:	6878      	ldr	r0, [r7, #4]
 8000b54:	f000 fa0e 	bl	8000f74 <bootloader_verify_crc>
 8000b58:	4603      	mov	r3, r0
 8000b5a:	2b00      	cmp	r3, #0
 8000b5c:	d117      	bne.n	8000b8e <bootloader_handle_getver_cmd+0x66>
	{
		/*Checksum is correct*/
		printmsg("BL_DEBUG_MSG: Checksum success...!\n");
 8000b5e:	4811      	ldr	r0, [pc, #68]	@ (8000ba4 <bootloader_handle_getver_cmd+0x7c>)
 8000b60:	f7ff ff18 	bl	8000994 <printmsg>
		bootloader_send_ack(1);
 8000b64:	2001      	movs	r0, #1
 8000b66:	f000 f9ed 	bl	8000f44 <bootloader_send_ack>
		bl_version = get_bootloader_version();
 8000b6a:	f000 fa4b 	bl	8001004 <get_bootloader_version>
 8000b6e:	4603      	mov	r3, r0
 8000b70:	73fb      	strb	r3, [r7, #15]
		printmsg("BL_DEBUG_MSG: BL_VER: %d &#x\n", bl_version, bl_version);
 8000b72:	7bfb      	ldrb	r3, [r7, #15]
 8000b74:	4619      	mov	r1, r3
 8000b76:	7bfb      	ldrb	r3, [r7, #15]
 8000b78:	461a      	mov	r2, r3
 8000b7a:	480b      	ldr	r0, [pc, #44]	@ (8000ba8 <bootloader_handle_getver_cmd+0x80>)
 8000b7c:	f7ff ff0a 	bl	8000994 <printmsg>
		bootloader_uart_write_data(&bl_version, 1); /* Sends data back to the HOST */
 8000b80:	f107 030f 	add.w	r3, r7, #15
 8000b84:	2101      	movs	r1, #1
 8000b86:	4618      	mov	r0, r3
 8000b88:	f000 fa28 	bl	8000fdc <bootloader_uart_write_data>
		printmsg("BL_DEBUG_MSG: Checksum failed...!\n");
		bootloader_send_nack();

	}

}
 8000b8c:	e004      	b.n	8000b98 <bootloader_handle_getver_cmd+0x70>
		printmsg("BL_DEBUG_MSG: Checksum failed...!\n");
 8000b8e:	4807      	ldr	r0, [pc, #28]	@ (8000bac <bootloader_handle_getver_cmd+0x84>)
 8000b90:	f7ff ff00 	bl	8000994 <printmsg>
		bootloader_send_nack();
 8000b94:	f000 f9c4 	bl	8000f20 <bootloader_send_nack>
}
 8000b98:	bf00      	nop
 8000b9a:	3718      	adds	r7, #24
 8000b9c:	46bd      	mov	sp, r7
 8000b9e:	bd80      	pop	{r7, pc}
 8000ba0:	080056b8 	.word	0x080056b8
 8000ba4:	080056e8 	.word	0x080056e8
 8000ba8:	0800570c 	.word	0x0800570c
 8000bac:	0800572c 	.word	0x0800572c

08000bb0 <bootloader_handle_gethelp_cmd>:

void bootloader_handle_gethelp_cmd(uint8_t *bl_rx_buffer)
{
 8000bb0:	b580      	push	{r7, lr}
 8000bb2:	b084      	sub	sp, #16
 8000bb4:	af00      	add	r7, sp, #0
 8000bb6:	6078      	str	r0, [r7, #4]
    /* Handle "Get Help" command */
	printmsg("BL_DEBUG_MSG:bootloader_handle_gethelp_cmd\n");
 8000bb8:	4815      	ldr	r0, [pc, #84]	@ (8000c10 <bootloader_handle_gethelp_cmd+0x60>)
 8000bba:	f7ff feeb 	bl	8000994 <printmsg>

	uint32_t command_packet_len = bl_rx_buffer[0] + 1;
 8000bbe:	687b      	ldr	r3, [r7, #4]
 8000bc0:	781b      	ldrb	r3, [r3, #0]
 8000bc2:	3301      	adds	r3, #1
 8000bc4:	60fb      	str	r3, [r7, #12]

	uint32_t host_crc = *((uint32_t*)(bl_rx_buffer + command_packet_len - 4));
 8000bc6:	68fb      	ldr	r3, [r7, #12]
 8000bc8:	3b04      	subs	r3, #4
 8000bca:	687a      	ldr	r2, [r7, #4]
 8000bcc:	4413      	add	r3, r2
 8000bce:	681b      	ldr	r3, [r3, #0]
 8000bd0:	60bb      	str	r3, [r7, #8]

	if(! bootloader_verify_crc(&bl_rx_buffer[0], command_packet_len - 4, host_crc))
 8000bd2:	68fb      	ldr	r3, [r7, #12]
 8000bd4:	3b04      	subs	r3, #4
 8000bd6:	68ba      	ldr	r2, [r7, #8]
 8000bd8:	4619      	mov	r1, r3
 8000bda:	6878      	ldr	r0, [r7, #4]
 8000bdc:	f000 f9ca 	bl	8000f74 <bootloader_verify_crc>
 8000be0:	4603      	mov	r3, r0
 8000be2:	2b00      	cmp	r3, #0
 8000be4:	d10a      	bne.n	8000bfc <bootloader_handle_gethelp_cmd+0x4c>
	{
		printmsg("BL_DEBUG_MSG:checksum success !!\n");
 8000be6:	480b      	ldr	r0, [pc, #44]	@ (8000c14 <bootloader_handle_gethelp_cmd+0x64>)
 8000be8:	f7ff fed4 	bl	8000994 <printmsg>
		bootloader_send_ack(sizeof(supported_commands));
 8000bec:	200a      	movs	r0, #10
 8000bee:	f000 f9a9 	bl	8000f44 <bootloader_send_ack>
		bootloader_uart_write_data(supported_commands, sizeof(supported_commands));
 8000bf2:	210a      	movs	r1, #10
 8000bf4:	4808      	ldr	r0, [pc, #32]	@ (8000c18 <bootloader_handle_gethelp_cmd+0x68>)
 8000bf6:	f000 f9f1 	bl	8000fdc <bootloader_uart_write_data>

	}else{
		printmsg("BL_DEBUG_MSG:checksum fail !!\n");
		bootloader_send_nack();
	}
}
 8000bfa:	e004      	b.n	8000c06 <bootloader_handle_gethelp_cmd+0x56>
		printmsg("BL_DEBUG_MSG:checksum fail !!\n");
 8000bfc:	4807      	ldr	r0, [pc, #28]	@ (8000c1c <bootloader_handle_gethelp_cmd+0x6c>)
 8000bfe:	f7ff fec9 	bl	8000994 <printmsg>
		bootloader_send_nack();
 8000c02:	f000 f98d 	bl	8000f20 <bootloader_send_nack>
}
 8000c06:	bf00      	nop
 8000c08:	3710      	adds	r7, #16
 8000c0a:	46bd      	mov	sp, r7
 8000c0c:	bd80      	pop	{r7, pc}
 8000c0e:	bf00      	nop
 8000c10:	08005750 	.word	0x08005750
 8000c14:	0800577c 	.word	0x0800577c
 8000c18:	20000000 	.word	0x20000000
 8000c1c:	080057a0 	.word	0x080057a0

08000c20 <bootloader_handle_getcid_cmd>:

void bootloader_handle_getcid_cmd(uint8_t *bl_rx_buffer)
{
 8000c20:	b580      	push	{r7, lr}
 8000c22:	b086      	sub	sp, #24
 8000c24:	af00      	add	r7, sp, #0
 8000c26:	6078      	str	r0, [r7, #4]
    /* Handle "Get Chip ID" command */
	printmsg("BL_DEBUG_MSG:bootloader_handle_getcid_cmd\n");
 8000c28:	481c      	ldr	r0, [pc, #112]	@ (8000c9c <bootloader_handle_getcid_cmd+0x7c>)
 8000c2a:	f7ff feb3 	bl	8000994 <printmsg>

	uint16_t bl_cid_num = 0;
 8000c2e:	2300      	movs	r3, #0
 8000c30:	81fb      	strh	r3, [r7, #14]

	uint32_t command_packet_len = bl_rx_buffer[0] + 1;
 8000c32:	687b      	ldr	r3, [r7, #4]
 8000c34:	781b      	ldrb	r3, [r3, #0]
 8000c36:	3301      	adds	r3, #1
 8000c38:	617b      	str	r3, [r7, #20]

	uint32_t host_crc = *((uint32_t*)(bl_rx_buffer + command_packet_len - 4));
 8000c3a:	697b      	ldr	r3, [r7, #20]
 8000c3c:	3b04      	subs	r3, #4
 8000c3e:	687a      	ldr	r2, [r7, #4]
 8000c40:	4413      	add	r3, r2
 8000c42:	681b      	ldr	r3, [r3, #0]
 8000c44:	613b      	str	r3, [r7, #16]

	if(! bootloader_verify_crc(&bl_rx_buffer[0], command_packet_len - 4, host_crc))
 8000c46:	697b      	ldr	r3, [r7, #20]
 8000c48:	3b04      	subs	r3, #4
 8000c4a:	693a      	ldr	r2, [r7, #16]
 8000c4c:	4619      	mov	r1, r3
 8000c4e:	6878      	ldr	r0, [r7, #4]
 8000c50:	f000 f990 	bl	8000f74 <bootloader_verify_crc>
 8000c54:	4603      	mov	r3, r0
 8000c56:	2b00      	cmp	r3, #0
 8000c58:	d117      	bne.n	8000c8a <bootloader_handle_getcid_cmd+0x6a>
	{
		printmsg("BL_DEBUG_MSG:checksum success !!\n");
 8000c5a:	4811      	ldr	r0, [pc, #68]	@ (8000ca0 <bootloader_handle_getcid_cmd+0x80>)
 8000c5c:	f7ff fe9a 	bl	8000994 <printmsg>
		bootloader_send_ack(2);
 8000c60:	2002      	movs	r0, #2
 8000c62:	f000 f96f 	bl	8000f44 <bootloader_send_ack>
		bl_cid_num = get_mcu_chip_id();
 8000c66:	f000 f9d5 	bl	8001014 <get_mcu_chip_id>
 8000c6a:	4603      	mov	r3, r0
 8000c6c:	81fb      	strh	r3, [r7, #14]
		printmsg("BL_DEBUG_MSG:MCU id : %d %#x !!\n",bl_cid_num, bl_cid_num);
 8000c6e:	89fb      	ldrh	r3, [r7, #14]
 8000c70:	4619      	mov	r1, r3
 8000c72:	89fb      	ldrh	r3, [r7, #14]
 8000c74:	461a      	mov	r2, r3
 8000c76:	480b      	ldr	r0, [pc, #44]	@ (8000ca4 <bootloader_handle_getcid_cmd+0x84>)
 8000c78:	f7ff fe8c 	bl	8000994 <printmsg>
		bootloader_uart_write_data((uint8_t*)&bl_cid_num, 2);
 8000c7c:	f107 030e 	add.w	r3, r7, #14
 8000c80:	2102      	movs	r1, #2
 8000c82:	4618      	mov	r0, r3
 8000c84:	f000 f9aa 	bl	8000fdc <bootloader_uart_write_data>
	}else{
		printmsg("BL_DEBUG_MSG:checksum fail !!\n");
		bootloader_send_nack();
	}
}
 8000c88:	e004      	b.n	8000c94 <bootloader_handle_getcid_cmd+0x74>
		printmsg("BL_DEBUG_MSG:checksum fail !!\n");
 8000c8a:	4807      	ldr	r0, [pc, #28]	@ (8000ca8 <bootloader_handle_getcid_cmd+0x88>)
 8000c8c:	f7ff fe82 	bl	8000994 <printmsg>
		bootloader_send_nack();
 8000c90:	f000 f946 	bl	8000f20 <bootloader_send_nack>
}
 8000c94:	bf00      	nop
 8000c96:	3718      	adds	r7, #24
 8000c98:	46bd      	mov	sp, r7
 8000c9a:	bd80      	pop	{r7, pc}
 8000c9c:	080057c0 	.word	0x080057c0
 8000ca0:	0800577c 	.word	0x0800577c
 8000ca4:	080057ec 	.word	0x080057ec
 8000ca8:	080057a0 	.word	0x080057a0

08000cac <bootloader_handle_getrdp_cmd>:

void bootloader_handle_getrdp_cmd(uint8_t *bl_rx_buffer)
{
 8000cac:	b580      	push	{r7, lr}
 8000cae:	b086      	sub	sp, #24
 8000cb0:	af00      	add	r7, sp, #0
 8000cb2:	6078      	str	r0, [r7, #4]
    /* Handle "Get Read Protection Level" command */
	printmsg("BL_DEBUG_MSG:bootloader_handle_getrdp_cmd\n");
 8000cb4:	481c      	ldr	r0, [pc, #112]	@ (8000d28 <bootloader_handle_getrdp_cmd+0x7c>)
 8000cb6:	f7ff fe6d 	bl	8000994 <printmsg>

	uint8_t rdp_level = 0x00;
 8000cba:	2300      	movs	r3, #0
 8000cbc:	73fb      	strb	r3, [r7, #15]

	//Total length of the command packet
	uint32_t command_packet_len = bl_rx_buffer[0]+1 ;
 8000cbe:	687b      	ldr	r3, [r7, #4]
 8000cc0:	781b      	ldrb	r3, [r3, #0]
 8000cc2:	3301      	adds	r3, #1
 8000cc4:	617b      	str	r3, [r7, #20]

	//extract the CRC32 sent by the Host
	uint32_t host_crc = *((uint32_t * ) (bl_rx_buffer+command_packet_len - 4) ) ;
 8000cc6:	697b      	ldr	r3, [r7, #20]
 8000cc8:	3b04      	subs	r3, #4
 8000cca:	687a      	ldr	r2, [r7, #4]
 8000ccc:	4413      	add	r3, r2
 8000cce:	681b      	ldr	r3, [r3, #0]
 8000cd0:	613b      	str	r3, [r7, #16]

	if (! bootloader_verify_crc(&bl_rx_buffer[0],command_packet_len-4,host_crc))
 8000cd2:	697b      	ldr	r3, [r7, #20]
 8000cd4:	3b04      	subs	r3, #4
 8000cd6:	693a      	ldr	r2, [r7, #16]
 8000cd8:	4619      	mov	r1, r3
 8000cda:	6878      	ldr	r0, [r7, #4]
 8000cdc:	f000 f94a 	bl	8000f74 <bootloader_verify_crc>
 8000ce0:	4603      	mov	r3, r0
 8000ce2:	2b00      	cmp	r3, #0
 8000ce4:	d117      	bne.n	8000d16 <bootloader_handle_getrdp_cmd+0x6a>
	{
		printmsg("BL_DEBUG_MSG:checksum success !!\n");
 8000ce6:	4811      	ldr	r0, [pc, #68]	@ (8000d2c <bootloader_handle_getrdp_cmd+0x80>)
 8000ce8:	f7ff fe54 	bl	8000994 <printmsg>
		bootloader_send_ack(1);
 8000cec:	2001      	movs	r0, #1
 8000cee:	f000 f929 	bl	8000f44 <bootloader_send_ack>
		rdp_level = get_flash_rdp_level();
 8000cf2:	f000 f9a1 	bl	8001038 <get_flash_rdp_level>
 8000cf6:	4603      	mov	r3, r0
 8000cf8:	73fb      	strb	r3, [r7, #15]
		printmsg("BL_DEBUG_MSG:RDP level: %d %#x\n",rdp_level, rdp_level);
 8000cfa:	7bfb      	ldrb	r3, [r7, #15]
 8000cfc:	4619      	mov	r1, r3
 8000cfe:	7bfb      	ldrb	r3, [r7, #15]
 8000d00:	461a      	mov	r2, r3
 8000d02:	480b      	ldr	r0, [pc, #44]	@ (8000d30 <bootloader_handle_getrdp_cmd+0x84>)
 8000d04:	f7ff fe46 	bl	8000994 <printmsg>
		bootloader_uart_write_data(&rdp_level, 1);
 8000d08:	f107 030f 	add.w	r3, r7, #15
 8000d0c:	2101      	movs	r1, #1
 8000d0e:	4618      	mov	r0, r3
 8000d10:	f000 f964 	bl	8000fdc <bootloader_uart_write_data>

	}else{
		printmsg("BL_DEBUG_MSG:checksum fail !!\n");
		bootloader_send_nack();
	}
}
 8000d14:	e004      	b.n	8000d20 <bootloader_handle_getrdp_cmd+0x74>
		printmsg("BL_DEBUG_MSG:checksum fail !!\n");
 8000d16:	4807      	ldr	r0, [pc, #28]	@ (8000d34 <bootloader_handle_getrdp_cmd+0x88>)
 8000d18:	f7ff fe3c 	bl	8000994 <printmsg>
		bootloader_send_nack();
 8000d1c:	f000 f900 	bl	8000f20 <bootloader_send_nack>
}
 8000d20:	bf00      	nop
 8000d22:	3718      	adds	r7, #24
 8000d24:	46bd      	mov	sp, r7
 8000d26:	bd80      	pop	{r7, pc}
 8000d28:	08005810 	.word	0x08005810
 8000d2c:	0800577c 	.word	0x0800577c
 8000d30:	0800583c 	.word	0x0800583c
 8000d34:	080057a0 	.word	0x080057a0

08000d38 <bootloader_handle_flash_erase_cmd>:

void bootloader_handle_flash_erase_cmd(uint8_t *pBuffer) {
 8000d38:	b580      	push	{r7, lr}
 8000d3a:	b086      	sub	sp, #24
 8000d3c:	af00      	add	r7, sp, #0
 8000d3e:	6078      	str	r0, [r7, #4]

  uint8_t erase_status = 0x00;
 8000d40:	2300      	movs	r3, #0
 8000d42:	73fb      	strb	r3, [r7, #15]
  printmsg("BL_DEBUG_MSG:bootloader_handle_flash_erase_cmd\n");
 8000d44:	482a      	ldr	r0, [pc, #168]	@ (8000df0 <bootloader_handle_flash_erase_cmd+0xb8>)
 8000d46:	f7ff fe25 	bl	8000994 <printmsg>

  //Total length of the command packet
  uint32_t command_packet_len = bl_rx_buffer[0]+1 ;
 8000d4a:	4b2a      	ldr	r3, [pc, #168]	@ (8000df4 <bootloader_handle_flash_erase_cmd+0xbc>)
 8000d4c:	781b      	ldrb	r3, [r3, #0]
 8000d4e:	3301      	adds	r3, #1
 8000d50:	617b      	str	r3, [r7, #20]

  //extract the CRC32 sent by the Host
  uint32_t host_crc = *((uint32_t * ) (bl_rx_buffer+command_packet_len - 4) ) ;
 8000d52:	697b      	ldr	r3, [r7, #20]
 8000d54:	3b04      	subs	r3, #4
 8000d56:	4a27      	ldr	r2, [pc, #156]	@ (8000df4 <bootloader_handle_flash_erase_cmd+0xbc>)
 8000d58:	4413      	add	r3, r2
 8000d5a:	681b      	ldr	r3, [r3, #0]
 8000d5c:	613b      	str	r3, [r7, #16]

  if (! bootloader_verify_crc(&bl_rx_buffer[0],command_packet_len-4,host_crc)) {
 8000d5e:	697b      	ldr	r3, [r7, #20]
 8000d60:	3b04      	subs	r3, #4
 8000d62:	693a      	ldr	r2, [r7, #16]
 8000d64:	4619      	mov	r1, r3
 8000d66:	4823      	ldr	r0, [pc, #140]	@ (8000df4 <bootloader_handle_flash_erase_cmd+0xbc>)
 8000d68:	f000 f904 	bl	8000f74 <bootloader_verify_crc>
 8000d6c:	4603      	mov	r3, r0
 8000d6e:	2b00      	cmp	r3, #0
 8000d70:	d134      	bne.n	8000ddc <bootloader_handle_flash_erase_cmd+0xa4>

    printmsg("BL_DEBUG_MSG:checksum success !!\n");
 8000d72:	4821      	ldr	r0, [pc, #132]	@ (8000df8 <bootloader_handle_flash_erase_cmd+0xc0>)
 8000d74:	f7ff fe0e 	bl	8000994 <printmsg>
    bootloader_send_ack(1);
 8000d78:	2001      	movs	r0, #1
 8000d7a:	f000 f8e3 	bl	8000f44 <bootloader_send_ack>
    printmsg("BL_DEBUG_MSG:initial_sector : %d  no_ofsectors: %d\n",pBuffer[2],pBuffer[3]);
 8000d7e:	687b      	ldr	r3, [r7, #4]
 8000d80:	3302      	adds	r3, #2
 8000d82:	781b      	ldrb	r3, [r3, #0]
 8000d84:	4619      	mov	r1, r3
 8000d86:	687b      	ldr	r3, [r7, #4]
 8000d88:	3303      	adds	r3, #3
 8000d8a:	781b      	ldrb	r3, [r3, #0]
 8000d8c:	461a      	mov	r2, r3
 8000d8e:	481b      	ldr	r0, [pc, #108]	@ (8000dfc <bootloader_handle_flash_erase_cmd+0xc4>)
 8000d90:	f7ff fe00 	bl	8000994 <printmsg>

    HAL_GPIO_WritePin(GPIOB, GPIO_PIN_14,1);
 8000d94:	2201      	movs	r2, #1
 8000d96:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8000d9a:	4819      	ldr	r0, [pc, #100]	@ (8000e00 <bootloader_handle_flash_erase_cmd+0xc8>)
 8000d9c:	f001 fd02 	bl	80027a4 <HAL_GPIO_WritePin>
    erase_status = execute_flash_erase(pBuffer[2] , pBuffer[3]);
 8000da0:	687b      	ldr	r3, [r7, #4]
 8000da2:	3302      	adds	r3, #2
 8000da4:	781a      	ldrb	r2, [r3, #0]
 8000da6:	687b      	ldr	r3, [r7, #4]
 8000da8:	3303      	adds	r3, #3
 8000daa:	781b      	ldrb	r3, [r3, #0]
 8000dac:	4619      	mov	r1, r3
 8000dae:	4610      	mov	r0, r2
 8000db0:	f000 f984 	bl	80010bc <execute_flash_erase>
 8000db4:	4603      	mov	r3, r0
 8000db6:	73fb      	strb	r3, [r7, #15]
    HAL_GPIO_WritePin(GPIOB, GPIO_PIN_14,0);
 8000db8:	2200      	movs	r2, #0
 8000dba:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8000dbe:	4810      	ldr	r0, [pc, #64]	@ (8000e00 <bootloader_handle_flash_erase_cmd+0xc8>)
 8000dc0:	f001 fcf0 	bl	80027a4 <HAL_GPIO_WritePin>

    printmsg("BL_DEBUG_MSG: flash erase status: %#x\n",erase_status);
 8000dc4:	7bfb      	ldrb	r3, [r7, #15]
 8000dc6:	4619      	mov	r1, r3
 8000dc8:	480e      	ldr	r0, [pc, #56]	@ (8000e04 <bootloader_handle_flash_erase_cmd+0xcc>)
 8000dca:	f7ff fde3 	bl	8000994 <printmsg>

    bootloader_uart_write_data(&erase_status,1);
 8000dce:	f107 030f 	add.w	r3, r7, #15
 8000dd2:	2101      	movs	r1, #1
 8000dd4:	4618      	mov	r0, r3
 8000dd6:	f000 f901 	bl	8000fdc <bootloader_uart_write_data>
  } else {

    printmsg("BL_DEBUG_MSG:checksum fail !!\n");
    bootloader_send_nack();
  }
}
 8000dda:	e004      	b.n	8000de6 <bootloader_handle_flash_erase_cmd+0xae>
    printmsg("BL_DEBUG_MSG:checksum fail !!\n");
 8000ddc:	480a      	ldr	r0, [pc, #40]	@ (8000e08 <bootloader_handle_flash_erase_cmd+0xd0>)
 8000dde:	f7ff fdd9 	bl	8000994 <printmsg>
    bootloader_send_nack();
 8000de2:	f000 f89d 	bl	8000f20 <bootloader_send_nack>
}
 8000de6:	bf00      	nop
 8000de8:	3718      	adds	r7, #24
 8000dea:	46bd      	mov	sp, r7
 8000dec:	bd80      	pop	{r7, pc}
 8000dee:	bf00      	nop
 8000df0:	0800585c 	.word	0x0800585c
 8000df4:	200001d8 	.word	0x200001d8
 8000df8:	0800577c 	.word	0x0800577c
 8000dfc:	0800588c 	.word	0x0800588c
 8000e00:	48000400 	.word	0x48000400
 8000e04:	080058c0 	.word	0x080058c0
 8000e08:	080057a0 	.word	0x080057a0

08000e0c <bootloader_handle_mem_write_cmd>:


void bootloader_handle_mem_write_cmd(uint8_t *bl_rx_buffer)
{
 8000e0c:	b580      	push	{r7, lr}
 8000e0e:	b088      	sub	sp, #32
 8000e10:	af00      	add	r7, sp, #0
 8000e12:	6078      	str	r0, [r7, #4]
	/* Handle "Memory Write" command */

	printmsg("BL_DEBUG_MSG:bootloader_handle_mem_write_cmd\n");
 8000e14:	4831      	ldr	r0, [pc, #196]	@ (8000edc <bootloader_handle_mem_write_cmd+0xd0>)
 8000e16:	f7ff fdbd 	bl	8000994 <printmsg>

	uint8_t write_status = 0x00;
 8000e1a:	2300      	movs	r3, #0
 8000e1c:	73fb      	strb	r3, [r7, #15]
	uint8_t payload_len = bl_rx_buffer[6];
 8000e1e:	687b      	ldr	r3, [r7, #4]
 8000e20:	799b      	ldrb	r3, [r3, #6]
 8000e22:	77fb      	strb	r3, [r7, #31]

	uint32_t mem_addr = *((uint32_t*)(&bl_rx_buffer[2]));
 8000e24:	687b      	ldr	r3, [r7, #4]
 8000e26:	f8d3 3002 	ldr.w	r3, [r3, #2]
 8000e2a:	61bb      	str	r3, [r7, #24]

	uint32_t command_packet_len = bl_rx_buffer[0] + 1 ;
 8000e2c:	687b      	ldr	r3, [r7, #4]
 8000e2e:	781b      	ldrb	r3, [r3, #0]
 8000e30:	3301      	adds	r3, #1
 8000e32:	617b      	str	r3, [r7, #20]
	uint32_t host_crc = *((uint32_t * ) (bl_rx_buffer + command_packet_len - 4));
 8000e34:	697b      	ldr	r3, [r7, #20]
 8000e36:	3b04      	subs	r3, #4
 8000e38:	687a      	ldr	r2, [r7, #4]
 8000e3a:	4413      	add	r3, r2
 8000e3c:	681b      	ldr	r3, [r3, #0]
 8000e3e:	613b      	str	r3, [r7, #16]

	if(! bootloader_verify_crc(&bl_rx_buffer[0], command_packet_len -4, host_crc))
 8000e40:	697b      	ldr	r3, [r7, #20]
 8000e42:	3b04      	subs	r3, #4
 8000e44:	693a      	ldr	r2, [r7, #16]
 8000e46:	4619      	mov	r1, r3
 8000e48:	6878      	ldr	r0, [r7, #4]
 8000e4a:	f000 f893 	bl	8000f74 <bootloader_verify_crc>
 8000e4e:	4603      	mov	r3, r0
 8000e50:	2b00      	cmp	r3, #0
 8000e52:	d13a      	bne.n	8000eca <bootloader_handle_mem_write_cmd+0xbe>
	{
		printmsg("BL_DEBUG_MSG:checksum success !!\n");
 8000e54:	4822      	ldr	r0, [pc, #136]	@ (8000ee0 <bootloader_handle_mem_write_cmd+0xd4>)
 8000e56:	f7ff fd9d 	bl	8000994 <printmsg>
		bootloader_send_ack(1);
 8000e5a:	2001      	movs	r0, #1
 8000e5c:	f000 f872 	bl	8000f44 <bootloader_send_ack>
		printmsg("BL_DEBUG_MSG: mem write address : %#x\n",mem_addr);
 8000e60:	69b9      	ldr	r1, [r7, #24]
 8000e62:	4820      	ldr	r0, [pc, #128]	@ (8000ee4 <bootloader_handle_mem_write_cmd+0xd8>)
 8000e64:	f7ff fd96 	bl	8000994 <printmsg>

		if( verify_address(mem_addr) == ADDR_VALID ) {
 8000e68:	69b8      	ldr	r0, [r7, #24]
 8000e6a:	f000 f8f9 	bl	8001060 <verify_address>
 8000e6e:	4603      	mov	r3, r0
 8000e70:	2b00      	cmp	r3, #0
 8000e72:	d11e      	bne.n	8000eb2 <bootloader_handle_mem_write_cmd+0xa6>


			printmsg("BL_DEBUG_MSG: valid mem write address\n");
 8000e74:	481c      	ldr	r0, [pc, #112]	@ (8000ee8 <bootloader_handle_mem_write_cmd+0xdc>)
 8000e76:	f7ff fd8d 	bl	8000994 <printmsg>

			//glow the led to indicate bootloader is currently writing to memory
			HAL_GPIO_WritePin(GPIOB, GPIO_PIN_14,1);
 8000e7a:	2201      	movs	r2, #1
 8000e7c:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8000e80:	481a      	ldr	r0, [pc, #104]	@ (8000eec <bootloader_handle_mem_write_cmd+0xe0>)
 8000e82:	f001 fc8f 	bl	80027a4 <HAL_GPIO_WritePin>

			/* Execute memory write*/
			write_status = execute_mem_write(&bl_rx_buffer[7], mem_addr, payload_len);
 8000e86:	687b      	ldr	r3, [r7, #4]
 8000e88:	3307      	adds	r3, #7
 8000e8a:	7ffa      	ldrb	r2, [r7, #31]
 8000e8c:	69b9      	ldr	r1, [r7, #24]
 8000e8e:	4618      	mov	r0, r3
 8000e90:	f000 f946 	bl	8001120 <execute_mem_write>
 8000e94:	4603      	mov	r3, r0
 8000e96:	73fb      	strb	r3, [r7, #15]

			HAL_GPIO_WritePin(GPIOB, GPIO_PIN_14,0);
 8000e98:	2200      	movs	r2, #0
 8000e9a:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8000e9e:	4813      	ldr	r0, [pc, #76]	@ (8000eec <bootloader_handle_mem_write_cmd+0xe0>)
 8000ea0:	f001 fc80 	bl	80027a4 <HAL_GPIO_WritePin>

			//inform host about the status
			bootloader_uart_write_data(&write_status,1);
 8000ea4:	f107 030f 	add.w	r3, r7, #15
 8000ea8:	2101      	movs	r1, #1
 8000eaa:	4618      	mov	r0, r3
 8000eac:	f000 f896 	bl	8000fdc <bootloader_uart_write_data>
		}
	}else{
		printmsg("BL_DEBUG_MSG:checksum fail !!\n");
		bootloader_send_nack();
	}
}
 8000eb0:	e010      	b.n	8000ed4 <bootloader_handle_mem_write_cmd+0xc8>
			printmsg("BL_DEBUG_MSG: invalid mem write address\n");
 8000eb2:	480f      	ldr	r0, [pc, #60]	@ (8000ef0 <bootloader_handle_mem_write_cmd+0xe4>)
 8000eb4:	f7ff fd6e 	bl	8000994 <printmsg>
			write_status = ADDR_INVALID;
 8000eb8:	2301      	movs	r3, #1
 8000eba:	73fb      	strb	r3, [r7, #15]
			bootloader_uart_write_data(&write_status,1);
 8000ebc:	f107 030f 	add.w	r3, r7, #15
 8000ec0:	2101      	movs	r1, #1
 8000ec2:	4618      	mov	r0, r3
 8000ec4:	f000 f88a 	bl	8000fdc <bootloader_uart_write_data>
}
 8000ec8:	e004      	b.n	8000ed4 <bootloader_handle_mem_write_cmd+0xc8>
		printmsg("BL_DEBUG_MSG:checksum fail !!\n");
 8000eca:	480a      	ldr	r0, [pc, #40]	@ (8000ef4 <bootloader_handle_mem_write_cmd+0xe8>)
 8000ecc:	f7ff fd62 	bl	8000994 <printmsg>
		bootloader_send_nack();
 8000ed0:	f000 f826 	bl	8000f20 <bootloader_send_nack>
}
 8000ed4:	bf00      	nop
 8000ed6:	3720      	adds	r7, #32
 8000ed8:	46bd      	mov	sp, r7
 8000eda:	bd80      	pop	{r7, pc}
 8000edc:	080058e8 	.word	0x080058e8
 8000ee0:	0800577c 	.word	0x0800577c
 8000ee4:	08005918 	.word	0x08005918
 8000ee8:	08005940 	.word	0x08005940
 8000eec:	48000400 	.word	0x48000400
 8000ef0:	08005968 	.word	0x08005968
 8000ef4:	080057a0 	.word	0x080057a0

08000ef8 <bootloader_handle_en_rw_protect>:


void bootloader_handle_en_rw_protect(uint8_t *bl_rx_buffer)
{
 8000ef8:	b480      	push	{r7}
 8000efa:	b083      	sub	sp, #12
 8000efc:	af00      	add	r7, sp, #0
 8000efe:	6078      	str	r0, [r7, #4]
    /* Handle "Enable Read/Write Protection" command */
}
 8000f00:	bf00      	nop
 8000f02:	370c      	adds	r7, #12
 8000f04:	46bd      	mov	sp, r7
 8000f06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f0a:	4770      	bx	lr

08000f0c <bootloader_handle_dis_rw_protect>:

void bootloader_handle_dis_rw_protect(uint8_t *bl_rx_buffer)
{
 8000f0c:	b480      	push	{r7}
 8000f0e:	b083      	sub	sp, #12
 8000f10:	af00      	add	r7, sp, #0
 8000f12:	6078      	str	r0, [r7, #4]
    /* Handle "Disable Read/Write Protection" command */
}
 8000f14:	bf00      	nop
 8000f16:	370c      	adds	r7, #12
 8000f18:	46bd      	mov	sp, r7
 8000f1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f1e:	4770      	bx	lr

08000f20 <bootloader_send_nack>:

void bootloader_send_nack(void)
{
 8000f20:	b580      	push	{r7, lr}
 8000f22:	b082      	sub	sp, #8
 8000f24:	af00      	add	r7, sp, #0
	uint8_t nack = BL_NACK;
 8000f26:	237f      	movs	r3, #127	@ 0x7f
 8000f28:	71fb      	strb	r3, [r7, #7]
	HAL_UART_Transmit(C_UART, (uint8_t*)&nack, 1, HAL_MAX_DELAY);
 8000f2a:	1df9      	adds	r1, r7, #7
 8000f2c:	f04f 33ff 	mov.w	r3, #4294967295
 8000f30:	2201      	movs	r2, #1
 8000f32:	4803      	ldr	r0, [pc, #12]	@ (8000f40 <bootloader_send_nack+0x20>)
 8000f34:	f003 f818 	bl	8003f68 <HAL_UART_Transmit>
}
 8000f38:	bf00      	nop
 8000f3a:	3708      	adds	r7, #8
 8000f3c:	46bd      	mov	sp, r7
 8000f3e:	bd80      	pop	{r7, pc}
 8000f40:	20000150 	.word	0x20000150

08000f44 <bootloader_send_ack>:

void bootloader_send_ack(uint8_t follow_len)
{
 8000f44:	b580      	push	{r7, lr}
 8000f46:	b084      	sub	sp, #16
 8000f48:	af00      	add	r7, sp, #0
 8000f4a:	4603      	mov	r3, r0
 8000f4c:	71fb      	strb	r3, [r7, #7]
	/* 2 Bytes are sent, first byte is ACK and second is the length value */
	uint8_t ack_buf[2];
	ack_buf[0] = BL_ACK;
 8000f4e:	23a5      	movs	r3, #165	@ 0xa5
 8000f50:	733b      	strb	r3, [r7, #12]
	ack_buf[1] = follow_len;
 8000f52:	79fb      	ldrb	r3, [r7, #7]
 8000f54:	737b      	strb	r3, [r7, #13]
	HAL_UART_Transmit(C_UART, (uint8_t*)&ack_buf, 2, HAL_MAX_DELAY);
 8000f56:	f107 010c 	add.w	r1, r7, #12
 8000f5a:	f04f 33ff 	mov.w	r3, #4294967295
 8000f5e:	2202      	movs	r2, #2
 8000f60:	4803      	ldr	r0, [pc, #12]	@ (8000f70 <bootloader_send_ack+0x2c>)
 8000f62:	f003 f801 	bl	8003f68 <HAL_UART_Transmit>

}
 8000f66:	bf00      	nop
 8000f68:	3710      	adds	r7, #16
 8000f6a:	46bd      	mov	sp, r7
 8000f6c:	bd80      	pop	{r7, pc}
 8000f6e:	bf00      	nop
 8000f70:	20000150 	.word	0x20000150

08000f74 <bootloader_verify_crc>:

uint8_t bootloader_verify_crc(uint8_t *pData, uint32_t len, uint32_t crc_host)
{
 8000f74:	b580      	push	{r7, lr}
 8000f76:	b088      	sub	sp, #32
 8000f78:	af00      	add	r7, sp, #0
 8000f7a:	60f8      	str	r0, [r7, #12]
 8000f7c:	60b9      	str	r1, [r7, #8]
 8000f7e:	607a      	str	r2, [r7, #4]
	uint32_t uwCRCValue = 0xff;
 8000f80:	23ff      	movs	r3, #255	@ 0xff
 8000f82:	61fb      	str	r3, [r7, #28]

	for(int i=0; i<len; i++)
 8000f84:	2300      	movs	r3, #0
 8000f86:	61bb      	str	r3, [r7, #24]
 8000f88:	e00f      	b.n	8000faa <bootloader_verify_crc+0x36>
	{
		uint32_t i_data = pData[i];
 8000f8a:	69bb      	ldr	r3, [r7, #24]
 8000f8c:	68fa      	ldr	r2, [r7, #12]
 8000f8e:	4413      	add	r3, r2
 8000f90:	781b      	ldrb	r3, [r3, #0]
 8000f92:	617b      	str	r3, [r7, #20]
		uwCRCValue = HAL_CRC_Accumulate(&hcrc, &i_data, 1);
 8000f94:	f107 0314 	add.w	r3, r7, #20
 8000f98:	2201      	movs	r2, #1
 8000f9a:	4619      	mov	r1, r3
 8000f9c:	480e      	ldr	r0, [pc, #56]	@ (8000fd8 <bootloader_verify_crc+0x64>)
 8000f9e:	f000 fcd9 	bl	8001954 <HAL_CRC_Accumulate>
 8000fa2:	61f8      	str	r0, [r7, #28]
	for(int i=0; i<len; i++)
 8000fa4:	69bb      	ldr	r3, [r7, #24]
 8000fa6:	3301      	adds	r3, #1
 8000fa8:	61bb      	str	r3, [r7, #24]
 8000faa:	69bb      	ldr	r3, [r7, #24]
 8000fac:	68ba      	ldr	r2, [r7, #8]
 8000fae:	429a      	cmp	r2, r3
 8000fb0:	d8eb      	bhi.n	8000f8a <bootloader_verify_crc+0x16>
	}

	/* Reset CRC Calculation Unit */
	__HAL_CRC_DR_RESET(&hcrc);
 8000fb2:	4b09      	ldr	r3, [pc, #36]	@ (8000fd8 <bootloader_verify_crc+0x64>)
 8000fb4:	681b      	ldr	r3, [r3, #0]
 8000fb6:	689a      	ldr	r2, [r3, #8]
 8000fb8:	4b07      	ldr	r3, [pc, #28]	@ (8000fd8 <bootloader_verify_crc+0x64>)
 8000fba:	681b      	ldr	r3, [r3, #0]
 8000fbc:	f042 0201 	orr.w	r2, r2, #1
 8000fc0:	609a      	str	r2, [r3, #8]

	if(uwCRCValue == crc_host)
 8000fc2:	69fa      	ldr	r2, [r7, #28]
 8000fc4:	687b      	ldr	r3, [r7, #4]
 8000fc6:	429a      	cmp	r2, r3
 8000fc8:	d101      	bne.n	8000fce <bootloader_verify_crc+0x5a>
		return VERIFY_CRC_SUCCESS;
 8000fca:	2300      	movs	r3, #0
 8000fcc:	e000      	b.n	8000fd0 <bootloader_verify_crc+0x5c>
	return VERIFY_CRC_FAIL;
 8000fce:	2301      	movs	r3, #1

}
 8000fd0:	4618      	mov	r0, r3
 8000fd2:	3720      	adds	r7, #32
 8000fd4:	46bd      	mov	sp, r7
 8000fd6:	bd80      	pop	{r7, pc}
 8000fd8:	200000a4 	.word	0x200000a4

08000fdc <bootloader_uart_write_data>:

void bootloader_uart_write_data(uint8_t *pBuffer,uint32_t len)
{
 8000fdc:	b580      	push	{r7, lr}
 8000fde:	b082      	sub	sp, #8
 8000fe0:	af00      	add	r7, sp, #0
 8000fe2:	6078      	str	r0, [r7, #4]
 8000fe4:	6039      	str	r1, [r7, #0]
	HAL_UART_Transmit(C_UART, pBuffer, len, HAL_MAX_DELAY);
 8000fe6:	683b      	ldr	r3, [r7, #0]
 8000fe8:	b29a      	uxth	r2, r3
 8000fea:	f04f 33ff 	mov.w	r3, #4294967295
 8000fee:	6879      	ldr	r1, [r7, #4]
 8000ff0:	4803      	ldr	r0, [pc, #12]	@ (8001000 <bootloader_uart_write_data+0x24>)
 8000ff2:	f002 ffb9 	bl	8003f68 <HAL_UART_Transmit>
}
 8000ff6:	bf00      	nop
 8000ff8:	3708      	adds	r7, #8
 8000ffa:	46bd      	mov	sp, r7
 8000ffc:	bd80      	pop	{r7, pc}
 8000ffe:	bf00      	nop
 8001000:	20000150 	.word	0x20000150

08001004 <get_bootloader_version>:

uint8_t get_bootloader_version()
{
 8001004:	b480      	push	{r7}
 8001006:	af00      	add	r7, sp, #0
	return (uint8_t)BL_VERSION;
 8001008:	2310      	movs	r3, #16
}
 800100a:	4618      	mov	r0, r3
 800100c:	46bd      	mov	sp, r7
 800100e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001012:	4770      	bx	lr

08001014 <get_mcu_chip_id>:

uint16_t get_mcu_chip_id(void)
{
 8001014:	b480      	push	{r7}
 8001016:	b083      	sub	sp, #12
 8001018:	af00      	add	r7, sp, #0
	   the user software. It is even accessible while the MCU is under system reset.
	 */

	uint16_t cid;
	/* Reading the register and masking the unnecessary bits */
	cid = (uint16_t)(DBGMCU->IDCODE) & 0x0FFF;
 800101a:	4b06      	ldr	r3, [pc, #24]	@ (8001034 <get_mcu_chip_id+0x20>)
 800101c:	681b      	ldr	r3, [r3, #0]
 800101e:	b29b      	uxth	r3, r3
 8001020:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001024:	80fb      	strh	r3, [r7, #6]
	return cid;
 8001026:	88fb      	ldrh	r3, [r7, #6]
}
 8001028:	4618      	mov	r0, r3
 800102a:	370c      	adds	r7, #12
 800102c:	46bd      	mov	sp, r7
 800102e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001032:	4770      	bx	lr
 8001034:	e0042000 	.word	0xe0042000

08001038 <get_flash_rdp_level>:

uint8_t get_flash_rdp_level(void)
{
 8001038:	b580      	push	{r7, lr}
 800103a:	b08c      	sub	sp, #48	@ 0x30
 800103c:	af00      	add	r7, sp, #0
	 *
	 * When decreased from 'Level 1 to Level 0', the FLASH goes into MASS ERASE.
	 *
	 * */
	/*HAL Implementation*/
	uint8_t rdp_status = 0;
 800103e:	2300      	movs	r3, #0
 8001040:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
	FLASH_OBProgramInitTypeDef ob_handle;
	HAL_FLASHEx_OBGetConfig(&ob_handle);
 8001044:	1d3b      	adds	r3, r7, #4
 8001046:	4618      	mov	r0, r3
 8001048:	f001 f80c 	bl	8002064 <HAL_FLASHEx_OBGetConfig>
	rdp_status = (uint8_t)ob_handle.RDPLevel;
 800104c:	697b      	ldr	r3, [r7, #20]
 800104e:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
	return rdp_status;
 8001052:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
}
 8001056:	4618      	mov	r0, r3
 8001058:	3730      	adds	r7, #48	@ 0x30
 800105a:	46bd      	mov	sp, r7
 800105c:	bd80      	pop	{r7, pc}
	...

08001060 <verify_address>:


uint8_t verify_address(uint32_t go_address)
{
 8001060:	b480      	push	{r7}
 8001062:	b083      	sub	sp, #12
 8001064:	af00      	add	r7, sp, #0
 8001066:	6078      	str	r0, [r7, #4]
	/*Jump to FLASH, System Memory, SRAM1, SRAM2, Backup SRAM allowed,
	 * others such as peripheral memory not allowed*/

	if ( go_address >= SRAM1_BASE && go_address <= SRAM1_END) {
 8001068:	687b      	ldr	r3, [r7, #4]
 800106a:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 800106e:	d305      	bcc.n	800107c <verify_address+0x1c>
 8001070:	687b      	ldr	r3, [r7, #4]
 8001072:	4a10      	ldr	r2, [pc, #64]	@ (80010b4 <verify_address+0x54>)
 8001074:	4293      	cmp	r3, r2
 8001076:	d801      	bhi.n	800107c <verify_address+0x1c>

		return ADDR_VALID;
 8001078:	2300      	movs	r3, #0
 800107a:	e014      	b.n	80010a6 <verify_address+0x46>
	} else if ( go_address >= SRAM2_BASE && go_address <= SRAM2_END) {
 800107c:	687b      	ldr	r3, [r7, #4]
 800107e:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8001082:	d305      	bcc.n	8001090 <verify_address+0x30>
 8001084:	687b      	ldr	r3, [r7, #4]
 8001086:	4a0c      	ldr	r2, [pc, #48]	@ (80010b8 <verify_address+0x58>)
 8001088:	4293      	cmp	r3, r2
 800108a:	d801      	bhi.n	8001090 <verify_address+0x30>

		return ADDR_VALID;
 800108c:	2300      	movs	r3, #0
 800108e:	e00a      	b.n	80010a6 <verify_address+0x46>
	} else if ( go_address >= FLASH_BASE && go_address <= FLASH_END) {
 8001090:	687b      	ldr	r3, [r7, #4]
 8001092:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 8001096:	d305      	bcc.n	80010a4 <verify_address+0x44>
 8001098:	687b      	ldr	r3, [r7, #4]
 800109a:	f1b3 6f01 	cmp.w	r3, #135266304	@ 0x8100000
 800109e:	d201      	bcs.n	80010a4 <verify_address+0x44>

		return ADDR_VALID;
 80010a0:	2300      	movs	r3, #0
 80010a2:	e000      	b.n	80010a6 <verify_address+0x46>
	}else
	return ADDR_INVALID;
 80010a4:	2301      	movs	r3, #1
}
 80010a6:	4618      	mov	r0, r3
 80010a8:	370c      	adds	r7, #12
 80010aa:	46bd      	mov	sp, r7
 80010ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010b0:	4770      	bx	lr
 80010b2:	bf00      	nop
 80010b4:	20040000 	.word	0x20040000
 80010b8:	10010000 	.word	0x10010000

080010bc <execute_flash_erase>:

uint8_t execute_flash_erase(uint8_t page_number , uint8_t number_of_pages) {
 80010bc:	b580      	push	{r7, lr}
 80010be:	b088      	sub	sp, #32
 80010c0:	af00      	add	r7, sp, #0
 80010c2:	4603      	mov	r3, r0
 80010c4:	460a      	mov	r2, r1
 80010c6:	71fb      	strb	r3, [r7, #7]
 80010c8:	4613      	mov	r3, r2
 80010ca:	71bb      	strb	r3, [r7, #6]

  if( number_of_pages > 511 )
    return INVALID_SECTOR;

  if( (page_number == 0xff ) || (page_number <= 511) ) {
    if(page_number == (uint8_t) 0xff) {
 80010cc:	79fb      	ldrb	r3, [r7, #7]
 80010ce:	2bff      	cmp	r3, #255	@ 0xff
 80010d0:	d102      	bne.n	80010d8 <execute_flash_erase+0x1c>
    flashErase_handle.TypeErase = FLASH_TYPEERASE_MASSERASE;
 80010d2:	2301      	movs	r3, #1
 80010d4:	60fb      	str	r3, [r7, #12]
 80010d6:	e00e      	b.n	80010f6 <execute_flash_erase+0x3a>

    } else {
      /*Here we are just calculating how many sectors needs to erased */
      uint8_t remanining_page = 511 - page_number;
 80010d8:	79fb      	ldrb	r3, [r7, #7]
 80010da:	43db      	mvns	r3, r3
 80010dc:	77fb      	strb	r3, [r7, #31]
      if( number_of_pages > remanining_page) {
 80010de:	79ba      	ldrb	r2, [r7, #6]
 80010e0:	7ffb      	ldrb	r3, [r7, #31]
 80010e2:	429a      	cmp	r2, r3
 80010e4:	d901      	bls.n	80010ea <execute_flash_erase+0x2e>

    	  number_of_pages = remanining_page;
 80010e6:	7ffb      	ldrb	r3, [r7, #31]
 80010e8:	71bb      	strb	r3, [r7, #6]
      }
      flashErase_handle.TypeErase = FLASH_TYPEERASE_PAGES; /*Macro from HAL*/
 80010ea:	2300      	movs	r3, #0
 80010ec:	60fb      	str	r3, [r7, #12]
      flashErase_handle.Page = page_number; // This is the initial page
 80010ee:	79fb      	ldrb	r3, [r7, #7]
 80010f0:	617b      	str	r3, [r7, #20]
      flashErase_handle.NbPages = number_of_pages;
 80010f2:	79bb      	ldrb	r3, [r7, #6]
 80010f4:	61bb      	str	r3, [r7, #24]
    }
    flashErase_handle.Banks = FLASH_BANK_1;
 80010f6:	2301      	movs	r3, #1
 80010f8:	613b      	str	r3, [r7, #16]

    /*Get access to the flash registers, unlock them first */
    HAL_FLASH_Unlock();
 80010fa:	f000 fe33 	bl	8001d64 <HAL_FLASH_Unlock>
    status = (uint8_t) HAL_FLASHEx_Erase(&flashErase_handle, &sectorError);
 80010fe:	f107 0208 	add.w	r2, r7, #8
 8001102:	f107 030c 	add.w	r3, r7, #12
 8001106:	4611      	mov	r1, r2
 8001108:	4618      	mov	r0, r3
 800110a:	f000 ff0f 	bl	8001f2c <HAL_FLASHEx_Erase>
 800110e:	4603      	mov	r3, r0
 8001110:	77bb      	strb	r3, [r7, #30]
    HAL_FLASH_Lock();
 8001112:	f000 fe49 	bl	8001da8 <HAL_FLASH_Lock>

    return status;
 8001116:	7fbb      	ldrb	r3, [r7, #30]
  }

  return INVALID_SECTOR;
}
 8001118:	4618      	mov	r0, r3
 800111a:	3720      	adds	r7, #32
 800111c:	46bd      	mov	sp, r7
 800111e:	bd80      	pop	{r7, pc}

08001120 <execute_mem_write>:

uint8_t execute_mem_write(uint8_t *pBuffer, uint32_t mem_address, uint32_t len)
{
 8001120:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001124:	b091      	sub	sp, #68	@ 0x44
 8001126:	af00      	add	r7, sp, #0
 8001128:	61f8      	str	r0, [r7, #28]
 800112a:	61b9      	str	r1, [r7, #24]
 800112c:	617a      	str	r2, [r7, #20]
	/* Below code is for FLASH_TYPEPROGRAM_DOUBLEWORD logic - host application sends single word */

    HAL_StatusTypeDef status = HAL_OK;
 800112e:	2300      	movs	r3, #0
 8001130:	f887 303f 	strb.w	r3, [r7, #63]	@ 0x3f

    if ((mem_address & 0x7U) != 0U) return (uint8_t)HAL_ERROR; /* must be 8-byte aligned */
 8001134:	69bb      	ldr	r3, [r7, #24]
 8001136:	f003 0307 	and.w	r3, r3, #7
 800113a:	2b00      	cmp	r3, #0
 800113c:	d001      	beq.n	8001142 <execute_mem_write+0x22>
 800113e:	2301      	movs	r3, #1
 8001140:	e08c      	b.n	800125c <execute_mem_write+0x13c>
    if (len == 0U) return (uint8_t)HAL_OK;
 8001142:	697b      	ldr	r3, [r7, #20]
 8001144:	2b00      	cmp	r3, #0
 8001146:	d101      	bne.n	800114c <execute_mem_write+0x2c>
 8001148:	2300      	movs	r3, #0
 800114a:	e087      	b.n	800125c <execute_mem_write+0x13c>

    HAL_FLASH_Unlock();
 800114c:	f000 fe0a 	bl	8001d64 <HAL_FLASH_Unlock>

    for (uint32_t offset = 0; offset < len; offset += 8U) {
 8001150:	2300      	movs	r3, #0
 8001152:	63bb      	str	r3, [r7, #56]	@ 0x38
 8001154:	e078      	b.n	8001248 <execute_mem_write+0x128>
        uint64_t data64 = 0ULL;
 8001156:	f04f 0200 	mov.w	r2, #0
 800115a:	f04f 0300 	mov.w	r3, #0
 800115e:	e9c7 230c 	strd	r2, r3, [r7, #48]	@ 0x30
        uint32_t chunk = ((len - offset) >= 8U) ? 8U : (len - offset);
 8001162:	697a      	ldr	r2, [r7, #20]
 8001164:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8001166:	1ad3      	subs	r3, r2, r3
 8001168:	2b08      	cmp	r3, #8
 800116a:	bf28      	it	cs
 800116c:	2308      	movcs	r3, #8
 800116e:	627b      	str	r3, [r7, #36]	@ 0x24

        /* pack available bytes (little-endian) */
        for (uint32_t b = 0U; b < chunk; ++b) {
 8001170:	2300      	movs	r3, #0
 8001172:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8001174:	e027      	b.n	80011c6 <execute_mem_write+0xa6>
            data64 |= ((uint64_t)pBuffer[offset + b]) << (8U * b);
 8001176:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 8001178:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800117a:	4413      	add	r3, r2
 800117c:	69fa      	ldr	r2, [r7, #28]
 800117e:	4413      	add	r3, r2
 8001180:	781b      	ldrb	r3, [r3, #0]
 8001182:	b2db      	uxtb	r3, r3
 8001184:	2200      	movs	r2, #0
 8001186:	469a      	mov	sl, r3
 8001188:	4693      	mov	fp, r2
 800118a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800118c:	00db      	lsls	r3, r3, #3
 800118e:	f1a3 0120 	sub.w	r1, r3, #32
 8001192:	f1c3 0220 	rsb	r2, r3, #32
 8001196:	fa0b f503 	lsl.w	r5, fp, r3
 800119a:	fa0a f101 	lsl.w	r1, sl, r1
 800119e:	430d      	orrs	r5, r1
 80011a0:	fa2a f202 	lsr.w	r2, sl, r2
 80011a4:	4315      	orrs	r5, r2
 80011a6:	fa0a f403 	lsl.w	r4, sl, r3
 80011aa:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	@ 0x30
 80011ae:	ea42 0104 	orr.w	r1, r2, r4
 80011b2:	60b9      	str	r1, [r7, #8]
 80011b4:	432b      	orrs	r3, r5
 80011b6:	60fb      	str	r3, [r7, #12]
 80011b8:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 80011bc:	e9c7 230c 	strd	r2, r3, [r7, #48]	@ 0x30
        for (uint32_t b = 0U; b < chunk; ++b) {
 80011c0:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80011c2:	3301      	adds	r3, #1
 80011c4:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80011c6:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 80011c8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80011ca:	429a      	cmp	r2, r3
 80011cc:	d3d3      	bcc.n	8001176 <execute_mem_write+0x56>
        }
        /* pad remaining bytes with 0xFF if needed */
        for (uint32_t b = chunk; b < 8U; ++b) {
 80011ce:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80011d0:	62bb      	str	r3, [r7, #40]	@ 0x28
 80011d2:	e024      	b.n	800121e <execute_mem_write+0xfe>
            data64 |= ((uint64_t)0xFFU) << (8U * b);
 80011d4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80011d6:	00d8      	lsls	r0, r3, #3
 80011d8:	f04f 02ff 	mov.w	r2, #255	@ 0xff
 80011dc:	f04f 0300 	mov.w	r3, #0
 80011e0:	f1a0 0620 	sub.w	r6, r0, #32
 80011e4:	f1c0 0120 	rsb	r1, r0, #32
 80011e8:	fa03 f900 	lsl.w	r9, r3, r0
 80011ec:	fa02 f606 	lsl.w	r6, r2, r6
 80011f0:	ea49 0906 	orr.w	r9, r9, r6
 80011f4:	fa22 f101 	lsr.w	r1, r2, r1
 80011f8:	ea49 0901 	orr.w	r9, r9, r1
 80011fc:	fa02 f800 	lsl.w	r8, r2, r0
 8001200:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	@ 0x30
 8001204:	ea42 0108 	orr.w	r1, r2, r8
 8001208:	6039      	str	r1, [r7, #0]
 800120a:	ea43 0309 	orr.w	r3, r3, r9
 800120e:	607b      	str	r3, [r7, #4]
 8001210:	e9d7 2300 	ldrd	r2, r3, [r7]
 8001214:	e9c7 230c 	strd	r2, r3, [r7, #48]	@ 0x30
        for (uint32_t b = chunk; b < 8U; ++b) {
 8001218:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800121a:	3301      	adds	r3, #1
 800121c:	62bb      	str	r3, [r7, #40]	@ 0x28
 800121e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8001220:	2b07      	cmp	r3, #7
 8001222:	d9d7      	bls.n	80011d4 <execute_mem_write+0xb4>
        }

        status = HAL_FLASH_Program(FLASH_TYPEPROGRAM_DOUBLEWORD, mem_address + offset, data64);
 8001224:	69ba      	ldr	r2, [r7, #24]
 8001226:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8001228:	18d1      	adds	r1, r2, r3
 800122a:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	@ 0x30
 800122e:	2000      	movs	r0, #0
 8001230:	f000 fd2c 	bl	8001c8c <HAL_FLASH_Program>
 8001234:	4603      	mov	r3, r0
 8001236:	f887 303f 	strb.w	r3, [r7, #63]	@ 0x3f
        if (status != HAL_OK) break;
 800123a:	f897 303f 	ldrb.w	r3, [r7, #63]	@ 0x3f
 800123e:	2b00      	cmp	r3, #0
 8001240:	d107      	bne.n	8001252 <execute_mem_write+0x132>
    for (uint32_t offset = 0; offset < len; offset += 8U) {
 8001242:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8001244:	3308      	adds	r3, #8
 8001246:	63bb      	str	r3, [r7, #56]	@ 0x38
 8001248:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 800124a:	697b      	ldr	r3, [r7, #20]
 800124c:	429a      	cmp	r2, r3
 800124e:	d382      	bcc.n	8001156 <execute_mem_write+0x36>
 8001250:	e000      	b.n	8001254 <execute_mem_write+0x134>
        if (status != HAL_OK) break;
 8001252:	bf00      	nop
    }

    HAL_FLASH_Lock();
 8001254:	f000 fda8 	bl	8001da8 <HAL_FLASH_Lock>
    return (uint8_t)status; /* 0 = HAL_OK */
 8001258:	f897 303f 	ldrb.w	r3, [r7, #63]	@ 0x3f
}
 800125c:	4618      	mov	r0, r3
 800125e:	3744      	adds	r7, #68	@ 0x44
 8001260:	46bd      	mov	sp, r7
 8001262:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08001268 <fetch_available_firmware_version>:

uint8_t fetch_available_firmware_version(void)
{
 8001268:	b580      	push	{r7, lr}
 800126a:	b082      	sub	sp, #8
 800126c:	af00      	add	r7, sp, #0
	uint8_t version_request_command = 0x99;
 800126e:	2399      	movs	r3, #153	@ 0x99
 8001270:	71fb      	strb	r3, [r7, #7]
	uint8_t available_version;
	bootloader_uart_write_data(&version_request_command, 1);
 8001272:	1dfb      	adds	r3, r7, #7
 8001274:	2101      	movs	r1, #1
 8001276:	4618      	mov	r0, r3
 8001278:	f7ff feb0 	bl	8000fdc <bootloader_uart_write_data>
	HAL_UART_Receive(C_UART, &available_version, 1, HAL_MAX_DELAY);
 800127c:	1db9      	adds	r1, r7, #6
 800127e:	f04f 33ff 	mov.w	r3, #4294967295
 8001282:	2201      	movs	r2, #1
 8001284:	4803      	ldr	r0, [pc, #12]	@ (8001294 <fetch_available_firmware_version+0x2c>)
 8001286:	f002 fef8 	bl	800407a <HAL_UART_Receive>
	/*TODO: Add CRC verification for the received function*/
	return available_version;
 800128a:	79bb      	ldrb	r3, [r7, #6]
}
 800128c:	4618      	mov	r0, r3
 800128e:	3708      	adds	r7, #8
 8001290:	46bd      	mov	sp, r7
 8001292:	bd80      	pop	{r7, pc}
 8001294:	20000150 	.word	0x20000150

08001298 <handle_firmware_update>:

void handle_firmware_update(void)
{
 8001298:	b480      	push	{r7}
 800129a:	af00      	add	r7, sp, #0
	 *
	 * TODO: Use boot loader memory write function*/



}
 800129c:	bf00      	nop
 800129e:	46bd      	mov	sp, r7
 80012a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80012a4:	4770      	bx	lr

080012a6 <fetch_active_bank_number>:

uint8_t fetch_active_bank_number(void)
{
 80012a6:	b480      	push	{r7}
 80012a8:	af00      	add	r7, sp, #0
	/*Fetch the active bank details from dedicated FLASH meta data page*/
	return 0;
 80012aa:	2300      	movs	r3, #0
}
 80012ac:	4618      	mov	r0, r3
 80012ae:	46bd      	mov	sp, r7
 80012b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80012b4:	4770      	bx	lr

080012b6 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80012b6:	b480      	push	{r7}
 80012b8:	af00      	add	r7, sp, #0
  __ASM volatile ("cpsid i" : : : "memory");
 80012ba:	b672      	cpsid	i
}
 80012bc:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 80012be:	bf00      	nop
 80012c0:	e7fd      	b.n	80012be <Error_Handler+0x8>
	...

080012c4 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80012c4:	b480      	push	{r7}
 80012c6:	b083      	sub	sp, #12
 80012c8:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80012ca:	4b0f      	ldr	r3, [pc, #60]	@ (8001308 <HAL_MspInit+0x44>)
 80012cc:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80012ce:	4a0e      	ldr	r2, [pc, #56]	@ (8001308 <HAL_MspInit+0x44>)
 80012d0:	f043 0301 	orr.w	r3, r3, #1
 80012d4:	6613      	str	r3, [r2, #96]	@ 0x60
 80012d6:	4b0c      	ldr	r3, [pc, #48]	@ (8001308 <HAL_MspInit+0x44>)
 80012d8:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80012da:	f003 0301 	and.w	r3, r3, #1
 80012de:	607b      	str	r3, [r7, #4]
 80012e0:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 80012e2:	4b09      	ldr	r3, [pc, #36]	@ (8001308 <HAL_MspInit+0x44>)
 80012e4:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80012e6:	4a08      	ldr	r2, [pc, #32]	@ (8001308 <HAL_MspInit+0x44>)
 80012e8:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80012ec:	6593      	str	r3, [r2, #88]	@ 0x58
 80012ee:	4b06      	ldr	r3, [pc, #24]	@ (8001308 <HAL_MspInit+0x44>)
 80012f0:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80012f2:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80012f6:	603b      	str	r3, [r7, #0]
 80012f8:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80012fa:	bf00      	nop
 80012fc:	370c      	adds	r7, #12
 80012fe:	46bd      	mov	sp, r7
 8001300:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001304:	4770      	bx	lr
 8001306:	bf00      	nop
 8001308:	40021000 	.word	0x40021000

0800130c <HAL_CRC_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hcrc: CRC handle pointer
  * @retval None
  */
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
 800130c:	b480      	push	{r7}
 800130e:	b085      	sub	sp, #20
 8001310:	af00      	add	r7, sp, #0
 8001312:	6078      	str	r0, [r7, #4]
  if(hcrc->Instance==CRC)
 8001314:	687b      	ldr	r3, [r7, #4]
 8001316:	681b      	ldr	r3, [r3, #0]
 8001318:	4a0a      	ldr	r2, [pc, #40]	@ (8001344 <HAL_CRC_MspInit+0x38>)
 800131a:	4293      	cmp	r3, r2
 800131c:	d10b      	bne.n	8001336 <HAL_CRC_MspInit+0x2a>
  {
    /* USER CODE BEGIN CRC_MspInit 0 */

    /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 800131e:	4b0a      	ldr	r3, [pc, #40]	@ (8001348 <HAL_CRC_MspInit+0x3c>)
 8001320:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8001322:	4a09      	ldr	r2, [pc, #36]	@ (8001348 <HAL_CRC_MspInit+0x3c>)
 8001324:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8001328:	6493      	str	r3, [r2, #72]	@ 0x48
 800132a:	4b07      	ldr	r3, [pc, #28]	@ (8001348 <HAL_CRC_MspInit+0x3c>)
 800132c:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800132e:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8001332:	60fb      	str	r3, [r7, #12]
 8001334:	68fb      	ldr	r3, [r7, #12]

    /* USER CODE END CRC_MspInit 1 */

  }

}
 8001336:	bf00      	nop
 8001338:	3714      	adds	r7, #20
 800133a:	46bd      	mov	sp, r7
 800133c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001340:	4770      	bx	lr
 8001342:	bf00      	nop
 8001344:	40023000 	.word	0x40023000
 8001348:	40021000 	.word	0x40021000

0800134c <HAL_UART_MspInit>:
  * This function configures the hardware resources used in this example
  * @param huart: UART handle pointer
  * @retval None
  */
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 800134c:	b580      	push	{r7, lr}
 800134e:	b0ae      	sub	sp, #184	@ 0xb8
 8001350:	af00      	add	r7, sp, #0
 8001352:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001354:	f107 03a4 	add.w	r3, r7, #164	@ 0xa4
 8001358:	2200      	movs	r2, #0
 800135a:	601a      	str	r2, [r3, #0]
 800135c:	605a      	str	r2, [r3, #4]
 800135e:	609a      	str	r2, [r3, #8]
 8001360:	60da      	str	r2, [r3, #12]
 8001362:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8001364:	f107 0318 	add.w	r3, r7, #24
 8001368:	228c      	movs	r2, #140	@ 0x8c
 800136a:	2100      	movs	r1, #0
 800136c:	4618      	mov	r0, r3
 800136e:	f003 fc41 	bl	8004bf4 <memset>
  if(huart->Instance==LPUART1)
 8001372:	687b      	ldr	r3, [r7, #4]
 8001374:	681b      	ldr	r3, [r3, #0]
 8001376:	4a43      	ldr	r2, [pc, #268]	@ (8001484 <HAL_UART_MspInit+0x138>)
 8001378:	4293      	cmp	r3, r2
 800137a:	d13e      	bne.n	80013fa <HAL_UART_MspInit+0xae>

    /* USER CODE END LPUART1_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_LPUART1;
 800137c:	2320      	movs	r3, #32
 800137e:	61bb      	str	r3, [r7, #24]
    PeriphClkInit.Lpuart1ClockSelection = RCC_LPUART1CLKSOURCE_PCLK1;
 8001380:	2300      	movs	r3, #0
 8001382:	667b      	str	r3, [r7, #100]	@ 0x64
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8001384:	f107 0318 	add.w	r3, r7, #24
 8001388:	4618      	mov	r0, r3
 800138a:	f002 f8d5 	bl	8003538 <HAL_RCCEx_PeriphCLKConfig>
 800138e:	4603      	mov	r3, r0
 8001390:	2b00      	cmp	r3, #0
 8001392:	d001      	beq.n	8001398 <HAL_UART_MspInit+0x4c>
    {
      Error_Handler();
 8001394:	f7ff ff8f 	bl	80012b6 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LPUART1_CLK_ENABLE();
 8001398:	4b3b      	ldr	r3, [pc, #236]	@ (8001488 <HAL_UART_MspInit+0x13c>)
 800139a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800139c:	4a3a      	ldr	r2, [pc, #232]	@ (8001488 <HAL_UART_MspInit+0x13c>)
 800139e:	f043 0301 	orr.w	r3, r3, #1
 80013a2:	65d3      	str	r3, [r2, #92]	@ 0x5c
 80013a4:	4b38      	ldr	r3, [pc, #224]	@ (8001488 <HAL_UART_MspInit+0x13c>)
 80013a6:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80013a8:	f003 0301 	and.w	r3, r3, #1
 80013ac:	617b      	str	r3, [r7, #20]
 80013ae:	697b      	ldr	r3, [r7, #20]

    __HAL_RCC_GPIOG_CLK_ENABLE();
 80013b0:	4b35      	ldr	r3, [pc, #212]	@ (8001488 <HAL_UART_MspInit+0x13c>)
 80013b2:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80013b4:	4a34      	ldr	r2, [pc, #208]	@ (8001488 <HAL_UART_MspInit+0x13c>)
 80013b6:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80013ba:	64d3      	str	r3, [r2, #76]	@ 0x4c
 80013bc:	4b32      	ldr	r3, [pc, #200]	@ (8001488 <HAL_UART_MspInit+0x13c>)
 80013be:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80013c0:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80013c4:	613b      	str	r3, [r7, #16]
 80013c6:	693b      	ldr	r3, [r7, #16]
    HAL_PWREx_EnableVddIO2();
 80013c8:	f001 fa68 	bl	800289c <HAL_PWREx_EnableVddIO2>
    /**LPUART1 GPIO Configuration
    PG7     ------> LPUART1_TX
    PG8     ------> LPUART1_RX
    */
    GPIO_InitStruct.Pin = STLK_RX_Pin|STLK_TX_Pin;
 80013cc:	f44f 73c0 	mov.w	r3, #384	@ 0x180
 80013d0:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80013d4:	2302      	movs	r3, #2
 80013d6:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80013da:	2300      	movs	r3, #0
 80013dc:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80013e0:	2303      	movs	r3, #3
 80013e2:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
    GPIO_InitStruct.Alternate = GPIO_AF8_LPUART1;
 80013e6:	2308      	movs	r3, #8
 80013e8:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80013ec:	f107 03a4 	add.w	r3, r7, #164	@ 0xa4
 80013f0:	4619      	mov	r1, r3
 80013f2:	4826      	ldr	r0, [pc, #152]	@ (800148c <HAL_UART_MspInit+0x140>)
 80013f4:	f001 f82c 	bl	8002450 <HAL_GPIO_Init>
    /* USER CODE BEGIN USART2_MspInit 1 */

    /* USER CODE END USART2_MspInit 1 */
  }

}
 80013f8:	e040      	b.n	800147c <HAL_UART_MspInit+0x130>
  else if(huart->Instance==USART2)
 80013fa:	687b      	ldr	r3, [r7, #4]
 80013fc:	681b      	ldr	r3, [r3, #0]
 80013fe:	4a24      	ldr	r2, [pc, #144]	@ (8001490 <HAL_UART_MspInit+0x144>)
 8001400:	4293      	cmp	r3, r2
 8001402:	d13b      	bne.n	800147c <HAL_UART_MspInit+0x130>
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART2;
 8001404:	2302      	movs	r3, #2
 8001406:	61bb      	str	r3, [r7, #24]
    PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 8001408:	2300      	movs	r3, #0
 800140a:	657b      	str	r3, [r7, #84]	@ 0x54
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 800140c:	f107 0318 	add.w	r3, r7, #24
 8001410:	4618      	mov	r0, r3
 8001412:	f002 f891 	bl	8003538 <HAL_RCCEx_PeriphCLKConfig>
 8001416:	4603      	mov	r3, r0
 8001418:	2b00      	cmp	r3, #0
 800141a:	d001      	beq.n	8001420 <HAL_UART_MspInit+0xd4>
      Error_Handler();
 800141c:	f7ff ff4b 	bl	80012b6 <Error_Handler>
    __HAL_RCC_USART2_CLK_ENABLE();
 8001420:	4b19      	ldr	r3, [pc, #100]	@ (8001488 <HAL_UART_MspInit+0x13c>)
 8001422:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001424:	4a18      	ldr	r2, [pc, #96]	@ (8001488 <HAL_UART_MspInit+0x13c>)
 8001426:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800142a:	6593      	str	r3, [r2, #88]	@ 0x58
 800142c:	4b16      	ldr	r3, [pc, #88]	@ (8001488 <HAL_UART_MspInit+0x13c>)
 800142e:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001430:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001434:	60fb      	str	r3, [r7, #12]
 8001436:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001438:	4b13      	ldr	r3, [pc, #76]	@ (8001488 <HAL_UART_MspInit+0x13c>)
 800143a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800143c:	4a12      	ldr	r2, [pc, #72]	@ (8001488 <HAL_UART_MspInit+0x13c>)
 800143e:	f043 0301 	orr.w	r3, r3, #1
 8001442:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8001444:	4b10      	ldr	r3, [pc, #64]	@ (8001488 <HAL_UART_MspInit+0x13c>)
 8001446:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001448:	f003 0301 	and.w	r3, r3, #1
 800144c:	60bb      	str	r3, [r7, #8]
 800144e:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 8001450:	230c      	movs	r3, #12
 8001452:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001456:	2302      	movs	r3, #2
 8001458:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800145c:	2300      	movs	r3, #0
 800145e:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001462:	2303      	movs	r3, #3
 8001464:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 8001468:	2307      	movs	r3, #7
 800146a:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800146e:	f107 03a4 	add.w	r3, r7, #164	@ 0xa4
 8001472:	4619      	mov	r1, r3
 8001474:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8001478:	f000 ffea 	bl	8002450 <HAL_GPIO_Init>
}
 800147c:	bf00      	nop
 800147e:	37b8      	adds	r7, #184	@ 0xb8
 8001480:	46bd      	mov	sp, r7
 8001482:	bd80      	pop	{r7, pc}
 8001484:	40008000 	.word	0x40008000
 8001488:	40021000 	.word	0x40021000
 800148c:	48001800 	.word	0x48001800
 8001490:	40004400 	.word	0x40004400

08001494 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001494:	b480      	push	{r7}
 8001496:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8001498:	bf00      	nop
 800149a:	e7fd      	b.n	8001498 <NMI_Handler+0x4>

0800149c <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 800149c:	b480      	push	{r7}
 800149e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80014a0:	bf00      	nop
 80014a2:	e7fd      	b.n	80014a0 <HardFault_Handler+0x4>

080014a4 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 80014a4:	b480      	push	{r7}
 80014a6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80014a8:	bf00      	nop
 80014aa:	e7fd      	b.n	80014a8 <MemManage_Handler+0x4>

080014ac <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 80014ac:	b480      	push	{r7}
 80014ae:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80014b0:	bf00      	nop
 80014b2:	e7fd      	b.n	80014b0 <BusFault_Handler+0x4>

080014b4 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 80014b4:	b480      	push	{r7}
 80014b6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80014b8:	bf00      	nop
 80014ba:	e7fd      	b.n	80014b8 <UsageFault_Handler+0x4>

080014bc <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 80014bc:	b480      	push	{r7}
 80014be:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 80014c0:	bf00      	nop
 80014c2:	46bd      	mov	sp, r7
 80014c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80014c8:	4770      	bx	lr

080014ca <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 80014ca:	b480      	push	{r7}
 80014cc:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 80014ce:	bf00      	nop
 80014d0:	46bd      	mov	sp, r7
 80014d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80014d6:	4770      	bx	lr

080014d8 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 80014d8:	b480      	push	{r7}
 80014da:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 80014dc:	bf00      	nop
 80014de:	46bd      	mov	sp, r7
 80014e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80014e4:	4770      	bx	lr

080014e6 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 80014e6:	b580      	push	{r7, lr}
 80014e8:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80014ea:	f000 f8c9 	bl	8001680 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 80014ee:	bf00      	nop
 80014f0:	bd80      	pop	{r7, pc}
	...

080014f4 <_sbrk>:
 80014f4:	b580      	push	{r7, lr}
 80014f6:	b086      	sub	sp, #24
 80014f8:	af00      	add	r7, sp, #0
 80014fa:	6078      	str	r0, [r7, #4]
 80014fc:	4a14      	ldr	r2, [pc, #80]	@ (8001550 <_sbrk+0x5c>)
 80014fe:	4b15      	ldr	r3, [pc, #84]	@ (8001554 <_sbrk+0x60>)
 8001500:	1ad3      	subs	r3, r2, r3
 8001502:	617b      	str	r3, [r7, #20]
 8001504:	697b      	ldr	r3, [r7, #20]
 8001506:	613b      	str	r3, [r7, #16]
 8001508:	4b13      	ldr	r3, [pc, #76]	@ (8001558 <_sbrk+0x64>)
 800150a:	681b      	ldr	r3, [r3, #0]
 800150c:	2b00      	cmp	r3, #0
 800150e:	d102      	bne.n	8001516 <_sbrk+0x22>
 8001510:	4b11      	ldr	r3, [pc, #68]	@ (8001558 <_sbrk+0x64>)
 8001512:	4a12      	ldr	r2, [pc, #72]	@ (800155c <_sbrk+0x68>)
 8001514:	601a      	str	r2, [r3, #0]
 8001516:	4b10      	ldr	r3, [pc, #64]	@ (8001558 <_sbrk+0x64>)
 8001518:	681a      	ldr	r2, [r3, #0]
 800151a:	687b      	ldr	r3, [r7, #4]
 800151c:	4413      	add	r3, r2
 800151e:	693a      	ldr	r2, [r7, #16]
 8001520:	429a      	cmp	r2, r3
 8001522:	d207      	bcs.n	8001534 <_sbrk+0x40>
 8001524:	f003 fb6e 	bl	8004c04 <__errno>
 8001528:	4603      	mov	r3, r0
 800152a:	220c      	movs	r2, #12
 800152c:	601a      	str	r2, [r3, #0]
 800152e:	f04f 33ff 	mov.w	r3, #4294967295
 8001532:	e009      	b.n	8001548 <_sbrk+0x54>
 8001534:	4b08      	ldr	r3, [pc, #32]	@ (8001558 <_sbrk+0x64>)
 8001536:	681b      	ldr	r3, [r3, #0]
 8001538:	60fb      	str	r3, [r7, #12]
 800153a:	4b07      	ldr	r3, [pc, #28]	@ (8001558 <_sbrk+0x64>)
 800153c:	681a      	ldr	r2, [r3, #0]
 800153e:	687b      	ldr	r3, [r7, #4]
 8001540:	4413      	add	r3, r2
 8001542:	4a05      	ldr	r2, [pc, #20]	@ (8001558 <_sbrk+0x64>)
 8001544:	6013      	str	r3, [r2, #0]
 8001546:	68fb      	ldr	r3, [r7, #12]
 8001548:	4618      	mov	r0, r3
 800154a:	3718      	adds	r7, #24
 800154c:	46bd      	mov	sp, r7
 800154e:	bd80      	pop	{r7, pc}
 8001550:	20040000 	.word	0x20040000
 8001554:	00000400 	.word	0x00000400
 8001558:	200002a4 	.word	0x200002a4
 800155c:	200003f8 	.word	0x200003f8

08001560 <SystemInit>:
 8001560:	b480      	push	{r7}
 8001562:	af00      	add	r7, sp, #0
 8001564:	4b06      	ldr	r3, [pc, #24]	@ (8001580 <SystemInit+0x20>)
 8001566:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800156a:	4a05      	ldr	r2, [pc, #20]	@ (8001580 <SystemInit+0x20>)
 800156c:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8001570:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 8001574:	bf00      	nop
 8001576:	46bd      	mov	sp, r7
 8001578:	f85d 7b04 	ldr.w	r7, [sp], #4
 800157c:	4770      	bx	lr
 800157e:	bf00      	nop
 8001580:	e000ed00 	.word	0xe000ed00

08001584 <Reset_Handler>:
 8001584:	f8df d034 	ldr.w	sp, [pc, #52]	@ 80015bc <LoopForever+0x2>
 8001588:	f7ff ffea 	bl	8001560 <SystemInit>
 800158c:	480c      	ldr	r0, [pc, #48]	@ (80015c0 <LoopForever+0x6>)
 800158e:	490d      	ldr	r1, [pc, #52]	@ (80015c4 <LoopForever+0xa>)
 8001590:	4a0d      	ldr	r2, [pc, #52]	@ (80015c8 <LoopForever+0xe>)
 8001592:	2300      	movs	r3, #0
 8001594:	e002      	b.n	800159c <LoopCopyDataInit>

08001596 <CopyDataInit>:
 8001596:	58d4      	ldr	r4, [r2, r3]
 8001598:	50c4      	str	r4, [r0, r3]
 800159a:	3304      	adds	r3, #4

0800159c <LoopCopyDataInit>:
 800159c:	18c4      	adds	r4, r0, r3
 800159e:	428c      	cmp	r4, r1
 80015a0:	d3f9      	bcc.n	8001596 <CopyDataInit>
 80015a2:	4a0a      	ldr	r2, [pc, #40]	@ (80015cc <LoopForever+0x12>)
 80015a4:	4c0a      	ldr	r4, [pc, #40]	@ (80015d0 <LoopForever+0x16>)
 80015a6:	2300      	movs	r3, #0
 80015a8:	e001      	b.n	80015ae <LoopFillZerobss>

080015aa <FillZerobss>:
 80015aa:	6013      	str	r3, [r2, #0]
 80015ac:	3204      	adds	r2, #4

080015ae <LoopFillZerobss>:
 80015ae:	42a2      	cmp	r2, r4
 80015b0:	d3fb      	bcc.n	80015aa <FillZerobss>
 80015b2:	f003 fb2d 	bl	8004c10 <__libc_init_array>
 80015b6:	f7ff f809 	bl	80005cc <main>

080015ba <LoopForever>:
 80015ba:	e7fe      	b.n	80015ba <LoopForever>
 80015bc:	20040000 	.word	0x20040000
 80015c0:	20000000 	.word	0x20000000
 80015c4:	20000088 	.word	0x20000088
 80015c8:	08005a20 	.word	0x08005a20
 80015cc:	20000088 	.word	0x20000088
 80015d0:	200003f4 	.word	0x200003f4

080015d4 <ADC1_2_IRQHandler>:
 80015d4:	e7fe      	b.n	80015d4 <ADC1_2_IRQHandler>

080015d6 <HAL_Init>:
 80015d6:	b580      	push	{r7, lr}
 80015d8:	b082      	sub	sp, #8
 80015da:	af00      	add	r7, sp, #0
 80015dc:	2300      	movs	r3, #0
 80015de:	71fb      	strb	r3, [r7, #7]
 80015e0:	2003      	movs	r0, #3
 80015e2:	f000 f91f 	bl	8001824 <HAL_NVIC_SetPriorityGrouping>
 80015e6:	2000      	movs	r0, #0
 80015e8:	f000 f80e 	bl	8001608 <HAL_InitTick>
 80015ec:	4603      	mov	r3, r0
 80015ee:	2b00      	cmp	r3, #0
 80015f0:	d002      	beq.n	80015f8 <HAL_Init+0x22>
 80015f2:	2301      	movs	r3, #1
 80015f4:	71fb      	strb	r3, [r7, #7]
 80015f6:	e001      	b.n	80015fc <HAL_Init+0x26>
 80015f8:	f7ff fe64 	bl	80012c4 <HAL_MspInit>
 80015fc:	79fb      	ldrb	r3, [r7, #7]
 80015fe:	4618      	mov	r0, r3
 8001600:	3708      	adds	r7, #8
 8001602:	46bd      	mov	sp, r7
 8001604:	bd80      	pop	{r7, pc}
	...

08001608 <HAL_InitTick>:
 8001608:	b580      	push	{r7, lr}
 800160a:	b084      	sub	sp, #16
 800160c:	af00      	add	r7, sp, #0
 800160e:	6078      	str	r0, [r7, #4]
 8001610:	2300      	movs	r3, #0
 8001612:	73fb      	strb	r3, [r7, #15]
 8001614:	4b17      	ldr	r3, [pc, #92]	@ (8001674 <HAL_InitTick+0x6c>)
 8001616:	781b      	ldrb	r3, [r3, #0]
 8001618:	2b00      	cmp	r3, #0
 800161a:	d023      	beq.n	8001664 <HAL_InitTick+0x5c>
 800161c:	4b16      	ldr	r3, [pc, #88]	@ (8001678 <HAL_InitTick+0x70>)
 800161e:	681a      	ldr	r2, [r3, #0]
 8001620:	4b14      	ldr	r3, [pc, #80]	@ (8001674 <HAL_InitTick+0x6c>)
 8001622:	781b      	ldrb	r3, [r3, #0]
 8001624:	4619      	mov	r1, r3
 8001626:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 800162a:	fbb3 f3f1 	udiv	r3, r3, r1
 800162e:	fbb2 f3f3 	udiv	r3, r2, r3
 8001632:	4618      	mov	r0, r3
 8001634:	f000 f91d 	bl	8001872 <HAL_SYSTICK_Config>
 8001638:	4603      	mov	r3, r0
 800163a:	2b00      	cmp	r3, #0
 800163c:	d10f      	bne.n	800165e <HAL_InitTick+0x56>
 800163e:	687b      	ldr	r3, [r7, #4]
 8001640:	2b0f      	cmp	r3, #15
 8001642:	d809      	bhi.n	8001658 <HAL_InitTick+0x50>
 8001644:	2200      	movs	r2, #0
 8001646:	6879      	ldr	r1, [r7, #4]
 8001648:	f04f 30ff 	mov.w	r0, #4294967295
 800164c:	f000 f8f5 	bl	800183a <HAL_NVIC_SetPriority>
 8001650:	4a0a      	ldr	r2, [pc, #40]	@ (800167c <HAL_InitTick+0x74>)
 8001652:	687b      	ldr	r3, [r7, #4]
 8001654:	6013      	str	r3, [r2, #0]
 8001656:	e007      	b.n	8001668 <HAL_InitTick+0x60>
 8001658:	2301      	movs	r3, #1
 800165a:	73fb      	strb	r3, [r7, #15]
 800165c:	e004      	b.n	8001668 <HAL_InitTick+0x60>
 800165e:	2301      	movs	r3, #1
 8001660:	73fb      	strb	r3, [r7, #15]
 8001662:	e001      	b.n	8001668 <HAL_InitTick+0x60>
 8001664:	2301      	movs	r3, #1
 8001666:	73fb      	strb	r3, [r7, #15]
 8001668:	7bfb      	ldrb	r3, [r7, #15]
 800166a:	4618      	mov	r0, r3
 800166c:	3710      	adds	r7, #16
 800166e:	46bd      	mov	sp, r7
 8001670:	bd80      	pop	{r7, pc}
 8001672:	bf00      	nop
 8001674:	20000014 	.word	0x20000014
 8001678:	2000000c 	.word	0x2000000c
 800167c:	20000010 	.word	0x20000010

08001680 <HAL_IncTick>:
 8001680:	b480      	push	{r7}
 8001682:	af00      	add	r7, sp, #0
 8001684:	4b06      	ldr	r3, [pc, #24]	@ (80016a0 <HAL_IncTick+0x20>)
 8001686:	781b      	ldrb	r3, [r3, #0]
 8001688:	461a      	mov	r2, r3
 800168a:	4b06      	ldr	r3, [pc, #24]	@ (80016a4 <HAL_IncTick+0x24>)
 800168c:	681b      	ldr	r3, [r3, #0]
 800168e:	4413      	add	r3, r2
 8001690:	4a04      	ldr	r2, [pc, #16]	@ (80016a4 <HAL_IncTick+0x24>)
 8001692:	6013      	str	r3, [r2, #0]
 8001694:	bf00      	nop
 8001696:	46bd      	mov	sp, r7
 8001698:	f85d 7b04 	ldr.w	r7, [sp], #4
 800169c:	4770      	bx	lr
 800169e:	bf00      	nop
 80016a0:	20000014 	.word	0x20000014
 80016a4:	200002a8 	.word	0x200002a8

080016a8 <HAL_GetTick>:
 80016a8:	b480      	push	{r7}
 80016aa:	af00      	add	r7, sp, #0
 80016ac:	4b03      	ldr	r3, [pc, #12]	@ (80016bc <HAL_GetTick+0x14>)
 80016ae:	681b      	ldr	r3, [r3, #0]
 80016b0:	4618      	mov	r0, r3
 80016b2:	46bd      	mov	sp, r7
 80016b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016b8:	4770      	bx	lr
 80016ba:	bf00      	nop
 80016bc:	200002a8 	.word	0x200002a8

080016c0 <__NVIC_SetPriorityGrouping>:
 80016c0:	b480      	push	{r7}
 80016c2:	b085      	sub	sp, #20
 80016c4:	af00      	add	r7, sp, #0
 80016c6:	6078      	str	r0, [r7, #4]
 80016c8:	687b      	ldr	r3, [r7, #4]
 80016ca:	f003 0307 	and.w	r3, r3, #7
 80016ce:	60fb      	str	r3, [r7, #12]
 80016d0:	4b0c      	ldr	r3, [pc, #48]	@ (8001704 <__NVIC_SetPriorityGrouping+0x44>)
 80016d2:	68db      	ldr	r3, [r3, #12]
 80016d4:	60bb      	str	r3, [r7, #8]
 80016d6:	68ba      	ldr	r2, [r7, #8]
 80016d8:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 80016dc:	4013      	ands	r3, r2
 80016de:	60bb      	str	r3, [r7, #8]
 80016e0:	68fb      	ldr	r3, [r7, #12]
 80016e2:	021a      	lsls	r2, r3, #8
 80016e4:	68bb      	ldr	r3, [r7, #8]
 80016e6:	4313      	orrs	r3, r2
 80016e8:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 80016ec:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80016f0:	60bb      	str	r3, [r7, #8]
 80016f2:	4a04      	ldr	r2, [pc, #16]	@ (8001704 <__NVIC_SetPriorityGrouping+0x44>)
 80016f4:	68bb      	ldr	r3, [r7, #8]
 80016f6:	60d3      	str	r3, [r2, #12]
 80016f8:	bf00      	nop
 80016fa:	3714      	adds	r7, #20
 80016fc:	46bd      	mov	sp, r7
 80016fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001702:	4770      	bx	lr
 8001704:	e000ed00 	.word	0xe000ed00

08001708 <__NVIC_GetPriorityGrouping>:
 8001708:	b480      	push	{r7}
 800170a:	af00      	add	r7, sp, #0
 800170c:	4b04      	ldr	r3, [pc, #16]	@ (8001720 <__NVIC_GetPriorityGrouping+0x18>)
 800170e:	68db      	ldr	r3, [r3, #12]
 8001710:	0a1b      	lsrs	r3, r3, #8
 8001712:	f003 0307 	and.w	r3, r3, #7
 8001716:	4618      	mov	r0, r3
 8001718:	46bd      	mov	sp, r7
 800171a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800171e:	4770      	bx	lr
 8001720:	e000ed00 	.word	0xe000ed00

08001724 <__NVIC_SetPriority>:
 8001724:	b480      	push	{r7}
 8001726:	b083      	sub	sp, #12
 8001728:	af00      	add	r7, sp, #0
 800172a:	4603      	mov	r3, r0
 800172c:	6039      	str	r1, [r7, #0]
 800172e:	71fb      	strb	r3, [r7, #7]
 8001730:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001734:	2b00      	cmp	r3, #0
 8001736:	db0a      	blt.n	800174e <__NVIC_SetPriority+0x2a>
 8001738:	683b      	ldr	r3, [r7, #0]
 800173a:	b2da      	uxtb	r2, r3
 800173c:	490c      	ldr	r1, [pc, #48]	@ (8001770 <__NVIC_SetPriority+0x4c>)
 800173e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001742:	0112      	lsls	r2, r2, #4
 8001744:	b2d2      	uxtb	r2, r2
 8001746:	440b      	add	r3, r1
 8001748:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 800174c:	e00a      	b.n	8001764 <__NVIC_SetPriority+0x40>
 800174e:	683b      	ldr	r3, [r7, #0]
 8001750:	b2da      	uxtb	r2, r3
 8001752:	4908      	ldr	r1, [pc, #32]	@ (8001774 <__NVIC_SetPriority+0x50>)
 8001754:	79fb      	ldrb	r3, [r7, #7]
 8001756:	f003 030f 	and.w	r3, r3, #15
 800175a:	3b04      	subs	r3, #4
 800175c:	0112      	lsls	r2, r2, #4
 800175e:	b2d2      	uxtb	r2, r2
 8001760:	440b      	add	r3, r1
 8001762:	761a      	strb	r2, [r3, #24]
 8001764:	bf00      	nop
 8001766:	370c      	adds	r7, #12
 8001768:	46bd      	mov	sp, r7
 800176a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800176e:	4770      	bx	lr
 8001770:	e000e100 	.word	0xe000e100
 8001774:	e000ed00 	.word	0xe000ed00

08001778 <NVIC_EncodePriority>:
 8001778:	b480      	push	{r7}
 800177a:	b089      	sub	sp, #36	@ 0x24
 800177c:	af00      	add	r7, sp, #0
 800177e:	60f8      	str	r0, [r7, #12]
 8001780:	60b9      	str	r1, [r7, #8]
 8001782:	607a      	str	r2, [r7, #4]
 8001784:	68fb      	ldr	r3, [r7, #12]
 8001786:	f003 0307 	and.w	r3, r3, #7
 800178a:	61fb      	str	r3, [r7, #28]
 800178c:	69fb      	ldr	r3, [r7, #28]
 800178e:	f1c3 0307 	rsb	r3, r3, #7
 8001792:	2b04      	cmp	r3, #4
 8001794:	bf28      	it	cs
 8001796:	2304      	movcs	r3, #4
 8001798:	61bb      	str	r3, [r7, #24]
 800179a:	69fb      	ldr	r3, [r7, #28]
 800179c:	3304      	adds	r3, #4
 800179e:	2b06      	cmp	r3, #6
 80017a0:	d902      	bls.n	80017a8 <NVIC_EncodePriority+0x30>
 80017a2:	69fb      	ldr	r3, [r7, #28]
 80017a4:	3b03      	subs	r3, #3
 80017a6:	e000      	b.n	80017aa <NVIC_EncodePriority+0x32>
 80017a8:	2300      	movs	r3, #0
 80017aa:	617b      	str	r3, [r7, #20]
 80017ac:	f04f 32ff 	mov.w	r2, #4294967295
 80017b0:	69bb      	ldr	r3, [r7, #24]
 80017b2:	fa02 f303 	lsl.w	r3, r2, r3
 80017b6:	43da      	mvns	r2, r3
 80017b8:	68bb      	ldr	r3, [r7, #8]
 80017ba:	401a      	ands	r2, r3
 80017bc:	697b      	ldr	r3, [r7, #20]
 80017be:	409a      	lsls	r2, r3
 80017c0:	f04f 31ff 	mov.w	r1, #4294967295
 80017c4:	697b      	ldr	r3, [r7, #20]
 80017c6:	fa01 f303 	lsl.w	r3, r1, r3
 80017ca:	43d9      	mvns	r1, r3
 80017cc:	687b      	ldr	r3, [r7, #4]
 80017ce:	400b      	ands	r3, r1
 80017d0:	4313      	orrs	r3, r2
 80017d2:	4618      	mov	r0, r3
 80017d4:	3724      	adds	r7, #36	@ 0x24
 80017d6:	46bd      	mov	sp, r7
 80017d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017dc:	4770      	bx	lr
	...

080017e0 <SysTick_Config>:
 80017e0:	b580      	push	{r7, lr}
 80017e2:	b082      	sub	sp, #8
 80017e4:	af00      	add	r7, sp, #0
 80017e6:	6078      	str	r0, [r7, #4]
 80017e8:	687b      	ldr	r3, [r7, #4]
 80017ea:	3b01      	subs	r3, #1
 80017ec:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 80017f0:	d301      	bcc.n	80017f6 <SysTick_Config+0x16>
 80017f2:	2301      	movs	r3, #1
 80017f4:	e00f      	b.n	8001816 <SysTick_Config+0x36>
 80017f6:	4a0a      	ldr	r2, [pc, #40]	@ (8001820 <SysTick_Config+0x40>)
 80017f8:	687b      	ldr	r3, [r7, #4]
 80017fa:	3b01      	subs	r3, #1
 80017fc:	6053      	str	r3, [r2, #4]
 80017fe:	210f      	movs	r1, #15
 8001800:	f04f 30ff 	mov.w	r0, #4294967295
 8001804:	f7ff ff8e 	bl	8001724 <__NVIC_SetPriority>
 8001808:	4b05      	ldr	r3, [pc, #20]	@ (8001820 <SysTick_Config+0x40>)
 800180a:	2200      	movs	r2, #0
 800180c:	609a      	str	r2, [r3, #8]
 800180e:	4b04      	ldr	r3, [pc, #16]	@ (8001820 <SysTick_Config+0x40>)
 8001810:	2207      	movs	r2, #7
 8001812:	601a      	str	r2, [r3, #0]
 8001814:	2300      	movs	r3, #0
 8001816:	4618      	mov	r0, r3
 8001818:	3708      	adds	r7, #8
 800181a:	46bd      	mov	sp, r7
 800181c:	bd80      	pop	{r7, pc}
 800181e:	bf00      	nop
 8001820:	e000e010 	.word	0xe000e010

08001824 <HAL_NVIC_SetPriorityGrouping>:
 8001824:	b580      	push	{r7, lr}
 8001826:	b082      	sub	sp, #8
 8001828:	af00      	add	r7, sp, #0
 800182a:	6078      	str	r0, [r7, #4]
 800182c:	6878      	ldr	r0, [r7, #4]
 800182e:	f7ff ff47 	bl	80016c0 <__NVIC_SetPriorityGrouping>
 8001832:	bf00      	nop
 8001834:	3708      	adds	r7, #8
 8001836:	46bd      	mov	sp, r7
 8001838:	bd80      	pop	{r7, pc}

0800183a <HAL_NVIC_SetPriority>:
 800183a:	b580      	push	{r7, lr}
 800183c:	b086      	sub	sp, #24
 800183e:	af00      	add	r7, sp, #0
 8001840:	4603      	mov	r3, r0
 8001842:	60b9      	str	r1, [r7, #8]
 8001844:	607a      	str	r2, [r7, #4]
 8001846:	73fb      	strb	r3, [r7, #15]
 8001848:	2300      	movs	r3, #0
 800184a:	617b      	str	r3, [r7, #20]
 800184c:	f7ff ff5c 	bl	8001708 <__NVIC_GetPriorityGrouping>
 8001850:	6178      	str	r0, [r7, #20]
 8001852:	687a      	ldr	r2, [r7, #4]
 8001854:	68b9      	ldr	r1, [r7, #8]
 8001856:	6978      	ldr	r0, [r7, #20]
 8001858:	f7ff ff8e 	bl	8001778 <NVIC_EncodePriority>
 800185c:	4602      	mov	r2, r0
 800185e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001862:	4611      	mov	r1, r2
 8001864:	4618      	mov	r0, r3
 8001866:	f7ff ff5d 	bl	8001724 <__NVIC_SetPriority>
 800186a:	bf00      	nop
 800186c:	3718      	adds	r7, #24
 800186e:	46bd      	mov	sp, r7
 8001870:	bd80      	pop	{r7, pc}

08001872 <HAL_SYSTICK_Config>:
 8001872:	b580      	push	{r7, lr}
 8001874:	b082      	sub	sp, #8
 8001876:	af00      	add	r7, sp, #0
 8001878:	6078      	str	r0, [r7, #4]
 800187a:	6878      	ldr	r0, [r7, #4]
 800187c:	f7ff ffb0 	bl	80017e0 <SysTick_Config>
 8001880:	4603      	mov	r3, r0
 8001882:	4618      	mov	r0, r3
 8001884:	3708      	adds	r7, #8
 8001886:	46bd      	mov	sp, r7
 8001888:	bd80      	pop	{r7, pc}
	...

0800188c <HAL_CRC_Init>:
 800188c:	b580      	push	{r7, lr}
 800188e:	b082      	sub	sp, #8
 8001890:	af00      	add	r7, sp, #0
 8001892:	6078      	str	r0, [r7, #4]
 8001894:	687b      	ldr	r3, [r7, #4]
 8001896:	2b00      	cmp	r3, #0
 8001898:	d101      	bne.n	800189e <HAL_CRC_Init+0x12>
 800189a:	2301      	movs	r3, #1
 800189c:	e054      	b.n	8001948 <HAL_CRC_Init+0xbc>
 800189e:	687b      	ldr	r3, [r7, #4]
 80018a0:	7f5b      	ldrb	r3, [r3, #29]
 80018a2:	b2db      	uxtb	r3, r3
 80018a4:	2b00      	cmp	r3, #0
 80018a6:	d105      	bne.n	80018b4 <HAL_CRC_Init+0x28>
 80018a8:	687b      	ldr	r3, [r7, #4]
 80018aa:	2200      	movs	r2, #0
 80018ac:	771a      	strb	r2, [r3, #28]
 80018ae:	6878      	ldr	r0, [r7, #4]
 80018b0:	f7ff fd2c 	bl	800130c <HAL_CRC_MspInit>
 80018b4:	687b      	ldr	r3, [r7, #4]
 80018b6:	2202      	movs	r2, #2
 80018b8:	775a      	strb	r2, [r3, #29]
 80018ba:	687b      	ldr	r3, [r7, #4]
 80018bc:	791b      	ldrb	r3, [r3, #4]
 80018be:	2b00      	cmp	r3, #0
 80018c0:	d10c      	bne.n	80018dc <HAL_CRC_Init+0x50>
 80018c2:	687b      	ldr	r3, [r7, #4]
 80018c4:	681b      	ldr	r3, [r3, #0]
 80018c6:	4a22      	ldr	r2, [pc, #136]	@ (8001950 <HAL_CRC_Init+0xc4>)
 80018c8:	615a      	str	r2, [r3, #20]
 80018ca:	687b      	ldr	r3, [r7, #4]
 80018cc:	681b      	ldr	r3, [r3, #0]
 80018ce:	689a      	ldr	r2, [r3, #8]
 80018d0:	687b      	ldr	r3, [r7, #4]
 80018d2:	681b      	ldr	r3, [r3, #0]
 80018d4:	f022 0218 	bic.w	r2, r2, #24
 80018d8:	609a      	str	r2, [r3, #8]
 80018da:	e00c      	b.n	80018f6 <HAL_CRC_Init+0x6a>
 80018dc:	687b      	ldr	r3, [r7, #4]
 80018de:	6899      	ldr	r1, [r3, #8]
 80018e0:	687b      	ldr	r3, [r7, #4]
 80018e2:	68db      	ldr	r3, [r3, #12]
 80018e4:	461a      	mov	r2, r3
 80018e6:	6878      	ldr	r0, [r7, #4]
 80018e8:	f000 f942 	bl	8001b70 <HAL_CRCEx_Polynomial_Set>
 80018ec:	4603      	mov	r3, r0
 80018ee:	2b00      	cmp	r3, #0
 80018f0:	d001      	beq.n	80018f6 <HAL_CRC_Init+0x6a>
 80018f2:	2301      	movs	r3, #1
 80018f4:	e028      	b.n	8001948 <HAL_CRC_Init+0xbc>
 80018f6:	687b      	ldr	r3, [r7, #4]
 80018f8:	795b      	ldrb	r3, [r3, #5]
 80018fa:	2b00      	cmp	r3, #0
 80018fc:	d105      	bne.n	800190a <HAL_CRC_Init+0x7e>
 80018fe:	687b      	ldr	r3, [r7, #4]
 8001900:	681b      	ldr	r3, [r3, #0]
 8001902:	f04f 32ff 	mov.w	r2, #4294967295
 8001906:	611a      	str	r2, [r3, #16]
 8001908:	e004      	b.n	8001914 <HAL_CRC_Init+0x88>
 800190a:	687b      	ldr	r3, [r7, #4]
 800190c:	681b      	ldr	r3, [r3, #0]
 800190e:	687a      	ldr	r2, [r7, #4]
 8001910:	6912      	ldr	r2, [r2, #16]
 8001912:	611a      	str	r2, [r3, #16]
 8001914:	687b      	ldr	r3, [r7, #4]
 8001916:	681b      	ldr	r3, [r3, #0]
 8001918:	689b      	ldr	r3, [r3, #8]
 800191a:	f023 0160 	bic.w	r1, r3, #96	@ 0x60
 800191e:	687b      	ldr	r3, [r7, #4]
 8001920:	695a      	ldr	r2, [r3, #20]
 8001922:	687b      	ldr	r3, [r7, #4]
 8001924:	681b      	ldr	r3, [r3, #0]
 8001926:	430a      	orrs	r2, r1
 8001928:	609a      	str	r2, [r3, #8]
 800192a:	687b      	ldr	r3, [r7, #4]
 800192c:	681b      	ldr	r3, [r3, #0]
 800192e:	689b      	ldr	r3, [r3, #8]
 8001930:	f023 0180 	bic.w	r1, r3, #128	@ 0x80
 8001934:	687b      	ldr	r3, [r7, #4]
 8001936:	699a      	ldr	r2, [r3, #24]
 8001938:	687b      	ldr	r3, [r7, #4]
 800193a:	681b      	ldr	r3, [r3, #0]
 800193c:	430a      	orrs	r2, r1
 800193e:	609a      	str	r2, [r3, #8]
 8001940:	687b      	ldr	r3, [r7, #4]
 8001942:	2201      	movs	r2, #1
 8001944:	775a      	strb	r2, [r3, #29]
 8001946:	2300      	movs	r3, #0
 8001948:	4618      	mov	r0, r3
 800194a:	3708      	adds	r7, #8
 800194c:	46bd      	mov	sp, r7
 800194e:	bd80      	pop	{r7, pc}
 8001950:	04c11db7 	.word	0x04c11db7

08001954 <HAL_CRC_Accumulate>:
 8001954:	b580      	push	{r7, lr}
 8001956:	b086      	sub	sp, #24
 8001958:	af00      	add	r7, sp, #0
 800195a:	60f8      	str	r0, [r7, #12]
 800195c:	60b9      	str	r1, [r7, #8]
 800195e:	607a      	str	r2, [r7, #4]
 8001960:	2300      	movs	r3, #0
 8001962:	613b      	str	r3, [r7, #16]
 8001964:	68fb      	ldr	r3, [r7, #12]
 8001966:	2202      	movs	r2, #2
 8001968:	775a      	strb	r2, [r3, #29]
 800196a:	68fb      	ldr	r3, [r7, #12]
 800196c:	6a1b      	ldr	r3, [r3, #32]
 800196e:	2b03      	cmp	r3, #3
 8001970:	d006      	beq.n	8001980 <HAL_CRC_Accumulate+0x2c>
 8001972:	2b03      	cmp	r3, #3
 8001974:	d829      	bhi.n	80019ca <HAL_CRC_Accumulate+0x76>
 8001976:	2b01      	cmp	r3, #1
 8001978:	d019      	beq.n	80019ae <HAL_CRC_Accumulate+0x5a>
 800197a:	2b02      	cmp	r3, #2
 800197c:	d01e      	beq.n	80019bc <HAL_CRC_Accumulate+0x68>
 800197e:	e024      	b.n	80019ca <HAL_CRC_Accumulate+0x76>
 8001980:	2300      	movs	r3, #0
 8001982:	617b      	str	r3, [r7, #20]
 8001984:	e00a      	b.n	800199c <HAL_CRC_Accumulate+0x48>
 8001986:	697b      	ldr	r3, [r7, #20]
 8001988:	009b      	lsls	r3, r3, #2
 800198a:	68ba      	ldr	r2, [r7, #8]
 800198c:	441a      	add	r2, r3
 800198e:	68fb      	ldr	r3, [r7, #12]
 8001990:	681b      	ldr	r3, [r3, #0]
 8001992:	6812      	ldr	r2, [r2, #0]
 8001994:	601a      	str	r2, [r3, #0]
 8001996:	697b      	ldr	r3, [r7, #20]
 8001998:	3301      	adds	r3, #1
 800199a:	617b      	str	r3, [r7, #20]
 800199c:	697a      	ldr	r2, [r7, #20]
 800199e:	687b      	ldr	r3, [r7, #4]
 80019a0:	429a      	cmp	r2, r3
 80019a2:	d3f0      	bcc.n	8001986 <HAL_CRC_Accumulate+0x32>
 80019a4:	68fb      	ldr	r3, [r7, #12]
 80019a6:	681b      	ldr	r3, [r3, #0]
 80019a8:	681b      	ldr	r3, [r3, #0]
 80019aa:	613b      	str	r3, [r7, #16]
 80019ac:	e00e      	b.n	80019cc <HAL_CRC_Accumulate+0x78>
 80019ae:	687a      	ldr	r2, [r7, #4]
 80019b0:	68b9      	ldr	r1, [r7, #8]
 80019b2:	68f8      	ldr	r0, [r7, #12]
 80019b4:	f000 f812 	bl	80019dc <CRC_Handle_8>
 80019b8:	6138      	str	r0, [r7, #16]
 80019ba:	e007      	b.n	80019cc <HAL_CRC_Accumulate+0x78>
 80019bc:	687a      	ldr	r2, [r7, #4]
 80019be:	68b9      	ldr	r1, [r7, #8]
 80019c0:	68f8      	ldr	r0, [r7, #12]
 80019c2:	f000 f89b 	bl	8001afc <CRC_Handle_16>
 80019c6:	6138      	str	r0, [r7, #16]
 80019c8:	e000      	b.n	80019cc <HAL_CRC_Accumulate+0x78>
 80019ca:	bf00      	nop
 80019cc:	68fb      	ldr	r3, [r7, #12]
 80019ce:	2201      	movs	r2, #1
 80019d0:	775a      	strb	r2, [r3, #29]
 80019d2:	693b      	ldr	r3, [r7, #16]
 80019d4:	4618      	mov	r0, r3
 80019d6:	3718      	adds	r7, #24
 80019d8:	46bd      	mov	sp, r7
 80019da:	bd80      	pop	{r7, pc}

080019dc <CRC_Handle_8>:
 80019dc:	b480      	push	{r7}
 80019de:	b089      	sub	sp, #36	@ 0x24
 80019e0:	af00      	add	r7, sp, #0
 80019e2:	60f8      	str	r0, [r7, #12]
 80019e4:	60b9      	str	r1, [r7, #8]
 80019e6:	607a      	str	r2, [r7, #4]
 80019e8:	2300      	movs	r3, #0
 80019ea:	61fb      	str	r3, [r7, #28]
 80019ec:	e023      	b.n	8001a36 <CRC_Handle_8+0x5a>
 80019ee:	69fb      	ldr	r3, [r7, #28]
 80019f0:	009b      	lsls	r3, r3, #2
 80019f2:	68ba      	ldr	r2, [r7, #8]
 80019f4:	4413      	add	r3, r2
 80019f6:	781b      	ldrb	r3, [r3, #0]
 80019f8:	061a      	lsls	r2, r3, #24
 80019fa:	69fb      	ldr	r3, [r7, #28]
 80019fc:	009b      	lsls	r3, r3, #2
 80019fe:	3301      	adds	r3, #1
 8001a00:	68b9      	ldr	r1, [r7, #8]
 8001a02:	440b      	add	r3, r1
 8001a04:	781b      	ldrb	r3, [r3, #0]
 8001a06:	041b      	lsls	r3, r3, #16
 8001a08:	431a      	orrs	r2, r3
 8001a0a:	69fb      	ldr	r3, [r7, #28]
 8001a0c:	009b      	lsls	r3, r3, #2
 8001a0e:	3302      	adds	r3, #2
 8001a10:	68b9      	ldr	r1, [r7, #8]
 8001a12:	440b      	add	r3, r1
 8001a14:	781b      	ldrb	r3, [r3, #0]
 8001a16:	021b      	lsls	r3, r3, #8
 8001a18:	431a      	orrs	r2, r3
 8001a1a:	69fb      	ldr	r3, [r7, #28]
 8001a1c:	009b      	lsls	r3, r3, #2
 8001a1e:	3303      	adds	r3, #3
 8001a20:	68b9      	ldr	r1, [r7, #8]
 8001a22:	440b      	add	r3, r1
 8001a24:	781b      	ldrb	r3, [r3, #0]
 8001a26:	4619      	mov	r1, r3
 8001a28:	68fb      	ldr	r3, [r7, #12]
 8001a2a:	681b      	ldr	r3, [r3, #0]
 8001a2c:	430a      	orrs	r2, r1
 8001a2e:	601a      	str	r2, [r3, #0]
 8001a30:	69fb      	ldr	r3, [r7, #28]
 8001a32:	3301      	adds	r3, #1
 8001a34:	61fb      	str	r3, [r7, #28]
 8001a36:	687b      	ldr	r3, [r7, #4]
 8001a38:	089b      	lsrs	r3, r3, #2
 8001a3a:	69fa      	ldr	r2, [r7, #28]
 8001a3c:	429a      	cmp	r2, r3
 8001a3e:	d3d6      	bcc.n	80019ee <CRC_Handle_8+0x12>
 8001a40:	687b      	ldr	r3, [r7, #4]
 8001a42:	f003 0303 	and.w	r3, r3, #3
 8001a46:	2b00      	cmp	r3, #0
 8001a48:	d04f      	beq.n	8001aea <CRC_Handle_8+0x10e>
 8001a4a:	687b      	ldr	r3, [r7, #4]
 8001a4c:	f003 0303 	and.w	r3, r3, #3
 8001a50:	2b01      	cmp	r3, #1
 8001a52:	d107      	bne.n	8001a64 <CRC_Handle_8+0x88>
 8001a54:	69fb      	ldr	r3, [r7, #28]
 8001a56:	009b      	lsls	r3, r3, #2
 8001a58:	68ba      	ldr	r2, [r7, #8]
 8001a5a:	4413      	add	r3, r2
 8001a5c:	68fa      	ldr	r2, [r7, #12]
 8001a5e:	6812      	ldr	r2, [r2, #0]
 8001a60:	781b      	ldrb	r3, [r3, #0]
 8001a62:	7013      	strb	r3, [r2, #0]
 8001a64:	687b      	ldr	r3, [r7, #4]
 8001a66:	f003 0303 	and.w	r3, r3, #3
 8001a6a:	2b02      	cmp	r3, #2
 8001a6c:	d117      	bne.n	8001a9e <CRC_Handle_8+0xc2>
 8001a6e:	69fb      	ldr	r3, [r7, #28]
 8001a70:	009b      	lsls	r3, r3, #2
 8001a72:	68ba      	ldr	r2, [r7, #8]
 8001a74:	4413      	add	r3, r2
 8001a76:	781b      	ldrb	r3, [r3, #0]
 8001a78:	b21b      	sxth	r3, r3
 8001a7a:	021b      	lsls	r3, r3, #8
 8001a7c:	b21a      	sxth	r2, r3
 8001a7e:	69fb      	ldr	r3, [r7, #28]
 8001a80:	009b      	lsls	r3, r3, #2
 8001a82:	3301      	adds	r3, #1
 8001a84:	68b9      	ldr	r1, [r7, #8]
 8001a86:	440b      	add	r3, r1
 8001a88:	781b      	ldrb	r3, [r3, #0]
 8001a8a:	b21b      	sxth	r3, r3
 8001a8c:	4313      	orrs	r3, r2
 8001a8e:	b21b      	sxth	r3, r3
 8001a90:	837b      	strh	r3, [r7, #26]
 8001a92:	68fb      	ldr	r3, [r7, #12]
 8001a94:	681b      	ldr	r3, [r3, #0]
 8001a96:	617b      	str	r3, [r7, #20]
 8001a98:	697b      	ldr	r3, [r7, #20]
 8001a9a:	8b7a      	ldrh	r2, [r7, #26]
 8001a9c:	801a      	strh	r2, [r3, #0]
 8001a9e:	687b      	ldr	r3, [r7, #4]
 8001aa0:	f003 0303 	and.w	r3, r3, #3
 8001aa4:	2b03      	cmp	r3, #3
 8001aa6:	d120      	bne.n	8001aea <CRC_Handle_8+0x10e>
 8001aa8:	69fb      	ldr	r3, [r7, #28]
 8001aaa:	009b      	lsls	r3, r3, #2
 8001aac:	68ba      	ldr	r2, [r7, #8]
 8001aae:	4413      	add	r3, r2
 8001ab0:	781b      	ldrb	r3, [r3, #0]
 8001ab2:	b21b      	sxth	r3, r3
 8001ab4:	021b      	lsls	r3, r3, #8
 8001ab6:	b21a      	sxth	r2, r3
 8001ab8:	69fb      	ldr	r3, [r7, #28]
 8001aba:	009b      	lsls	r3, r3, #2
 8001abc:	3301      	adds	r3, #1
 8001abe:	68b9      	ldr	r1, [r7, #8]
 8001ac0:	440b      	add	r3, r1
 8001ac2:	781b      	ldrb	r3, [r3, #0]
 8001ac4:	b21b      	sxth	r3, r3
 8001ac6:	4313      	orrs	r3, r2
 8001ac8:	b21b      	sxth	r3, r3
 8001aca:	837b      	strh	r3, [r7, #26]
 8001acc:	68fb      	ldr	r3, [r7, #12]
 8001ace:	681b      	ldr	r3, [r3, #0]
 8001ad0:	617b      	str	r3, [r7, #20]
 8001ad2:	697b      	ldr	r3, [r7, #20]
 8001ad4:	8b7a      	ldrh	r2, [r7, #26]
 8001ad6:	801a      	strh	r2, [r3, #0]
 8001ad8:	69fb      	ldr	r3, [r7, #28]
 8001ada:	009b      	lsls	r3, r3, #2
 8001adc:	3302      	adds	r3, #2
 8001ade:	68ba      	ldr	r2, [r7, #8]
 8001ae0:	4413      	add	r3, r2
 8001ae2:	68fa      	ldr	r2, [r7, #12]
 8001ae4:	6812      	ldr	r2, [r2, #0]
 8001ae6:	781b      	ldrb	r3, [r3, #0]
 8001ae8:	7013      	strb	r3, [r2, #0]
 8001aea:	68fb      	ldr	r3, [r7, #12]
 8001aec:	681b      	ldr	r3, [r3, #0]
 8001aee:	681b      	ldr	r3, [r3, #0]
 8001af0:	4618      	mov	r0, r3
 8001af2:	3724      	adds	r7, #36	@ 0x24
 8001af4:	46bd      	mov	sp, r7
 8001af6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001afa:	4770      	bx	lr

08001afc <CRC_Handle_16>:
 8001afc:	b480      	push	{r7}
 8001afe:	b087      	sub	sp, #28
 8001b00:	af00      	add	r7, sp, #0
 8001b02:	60f8      	str	r0, [r7, #12]
 8001b04:	60b9      	str	r1, [r7, #8]
 8001b06:	607a      	str	r2, [r7, #4]
 8001b08:	2300      	movs	r3, #0
 8001b0a:	617b      	str	r3, [r7, #20]
 8001b0c:	e013      	b.n	8001b36 <CRC_Handle_16+0x3a>
 8001b0e:	697b      	ldr	r3, [r7, #20]
 8001b10:	009b      	lsls	r3, r3, #2
 8001b12:	68ba      	ldr	r2, [r7, #8]
 8001b14:	4413      	add	r3, r2
 8001b16:	881b      	ldrh	r3, [r3, #0]
 8001b18:	041a      	lsls	r2, r3, #16
 8001b1a:	697b      	ldr	r3, [r7, #20]
 8001b1c:	009b      	lsls	r3, r3, #2
 8001b1e:	3302      	adds	r3, #2
 8001b20:	68b9      	ldr	r1, [r7, #8]
 8001b22:	440b      	add	r3, r1
 8001b24:	881b      	ldrh	r3, [r3, #0]
 8001b26:	4619      	mov	r1, r3
 8001b28:	68fb      	ldr	r3, [r7, #12]
 8001b2a:	681b      	ldr	r3, [r3, #0]
 8001b2c:	430a      	orrs	r2, r1
 8001b2e:	601a      	str	r2, [r3, #0]
 8001b30:	697b      	ldr	r3, [r7, #20]
 8001b32:	3301      	adds	r3, #1
 8001b34:	617b      	str	r3, [r7, #20]
 8001b36:	687b      	ldr	r3, [r7, #4]
 8001b38:	085b      	lsrs	r3, r3, #1
 8001b3a:	697a      	ldr	r2, [r7, #20]
 8001b3c:	429a      	cmp	r2, r3
 8001b3e:	d3e6      	bcc.n	8001b0e <CRC_Handle_16+0x12>
 8001b40:	687b      	ldr	r3, [r7, #4]
 8001b42:	f003 0301 	and.w	r3, r3, #1
 8001b46:	2b00      	cmp	r3, #0
 8001b48:	d009      	beq.n	8001b5e <CRC_Handle_16+0x62>
 8001b4a:	68fb      	ldr	r3, [r7, #12]
 8001b4c:	681b      	ldr	r3, [r3, #0]
 8001b4e:	613b      	str	r3, [r7, #16]
 8001b50:	697b      	ldr	r3, [r7, #20]
 8001b52:	009b      	lsls	r3, r3, #2
 8001b54:	68ba      	ldr	r2, [r7, #8]
 8001b56:	4413      	add	r3, r2
 8001b58:	881a      	ldrh	r2, [r3, #0]
 8001b5a:	693b      	ldr	r3, [r7, #16]
 8001b5c:	801a      	strh	r2, [r3, #0]
 8001b5e:	68fb      	ldr	r3, [r7, #12]
 8001b60:	681b      	ldr	r3, [r3, #0]
 8001b62:	681b      	ldr	r3, [r3, #0]
 8001b64:	4618      	mov	r0, r3
 8001b66:	371c      	adds	r7, #28
 8001b68:	46bd      	mov	sp, r7
 8001b6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b6e:	4770      	bx	lr

08001b70 <HAL_CRCEx_Polynomial_Set>:
 8001b70:	b480      	push	{r7}
 8001b72:	b087      	sub	sp, #28
 8001b74:	af00      	add	r7, sp, #0
 8001b76:	60f8      	str	r0, [r7, #12]
 8001b78:	60b9      	str	r1, [r7, #8]
 8001b7a:	607a      	str	r2, [r7, #4]
 8001b7c:	2300      	movs	r3, #0
 8001b7e:	75fb      	strb	r3, [r7, #23]
 8001b80:	231f      	movs	r3, #31
 8001b82:	613b      	str	r3, [r7, #16]
 8001b84:	68bb      	ldr	r3, [r7, #8]
 8001b86:	f003 0301 	and.w	r3, r3, #1
 8001b8a:	2b00      	cmp	r3, #0
 8001b8c:	d102      	bne.n	8001b94 <HAL_CRCEx_Polynomial_Set+0x24>
 8001b8e:	2301      	movs	r3, #1
 8001b90:	75fb      	strb	r3, [r7, #23]
 8001b92:	e063      	b.n	8001c5c <HAL_CRCEx_Polynomial_Set+0xec>
 8001b94:	bf00      	nop
 8001b96:	693b      	ldr	r3, [r7, #16]
 8001b98:	1e5a      	subs	r2, r3, #1
 8001b9a:	613a      	str	r2, [r7, #16]
 8001b9c:	2b00      	cmp	r3, #0
 8001b9e:	d009      	beq.n	8001bb4 <HAL_CRCEx_Polynomial_Set+0x44>
 8001ba0:	693b      	ldr	r3, [r7, #16]
 8001ba2:	f003 031f 	and.w	r3, r3, #31
 8001ba6:	68ba      	ldr	r2, [r7, #8]
 8001ba8:	fa22 f303 	lsr.w	r3, r2, r3
 8001bac:	f003 0301 	and.w	r3, r3, #1
 8001bb0:	2b00      	cmp	r3, #0
 8001bb2:	d0f0      	beq.n	8001b96 <HAL_CRCEx_Polynomial_Set+0x26>
 8001bb4:	687b      	ldr	r3, [r7, #4]
 8001bb6:	2b18      	cmp	r3, #24
 8001bb8:	d846      	bhi.n	8001c48 <HAL_CRCEx_Polynomial_Set+0xd8>
 8001bba:	a201      	add	r2, pc, #4	@ (adr r2, 8001bc0 <HAL_CRCEx_Polynomial_Set+0x50>)
 8001bbc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001bc0:	08001c4f 	.word	0x08001c4f
 8001bc4:	08001c49 	.word	0x08001c49
 8001bc8:	08001c49 	.word	0x08001c49
 8001bcc:	08001c49 	.word	0x08001c49
 8001bd0:	08001c49 	.word	0x08001c49
 8001bd4:	08001c49 	.word	0x08001c49
 8001bd8:	08001c49 	.word	0x08001c49
 8001bdc:	08001c49 	.word	0x08001c49
 8001be0:	08001c3d 	.word	0x08001c3d
 8001be4:	08001c49 	.word	0x08001c49
 8001be8:	08001c49 	.word	0x08001c49
 8001bec:	08001c49 	.word	0x08001c49
 8001bf0:	08001c49 	.word	0x08001c49
 8001bf4:	08001c49 	.word	0x08001c49
 8001bf8:	08001c49 	.word	0x08001c49
 8001bfc:	08001c49 	.word	0x08001c49
 8001c00:	08001c31 	.word	0x08001c31
 8001c04:	08001c49 	.word	0x08001c49
 8001c08:	08001c49 	.word	0x08001c49
 8001c0c:	08001c49 	.word	0x08001c49
 8001c10:	08001c49 	.word	0x08001c49
 8001c14:	08001c49 	.word	0x08001c49
 8001c18:	08001c49 	.word	0x08001c49
 8001c1c:	08001c49 	.word	0x08001c49
 8001c20:	08001c25 	.word	0x08001c25
 8001c24:	693b      	ldr	r3, [r7, #16]
 8001c26:	2b06      	cmp	r3, #6
 8001c28:	d913      	bls.n	8001c52 <HAL_CRCEx_Polynomial_Set+0xe2>
 8001c2a:	2301      	movs	r3, #1
 8001c2c:	75fb      	strb	r3, [r7, #23]
 8001c2e:	e010      	b.n	8001c52 <HAL_CRCEx_Polynomial_Set+0xe2>
 8001c30:	693b      	ldr	r3, [r7, #16]
 8001c32:	2b07      	cmp	r3, #7
 8001c34:	d90f      	bls.n	8001c56 <HAL_CRCEx_Polynomial_Set+0xe6>
 8001c36:	2301      	movs	r3, #1
 8001c38:	75fb      	strb	r3, [r7, #23]
 8001c3a:	e00c      	b.n	8001c56 <HAL_CRCEx_Polynomial_Set+0xe6>
 8001c3c:	693b      	ldr	r3, [r7, #16]
 8001c3e:	2b0f      	cmp	r3, #15
 8001c40:	d90b      	bls.n	8001c5a <HAL_CRCEx_Polynomial_Set+0xea>
 8001c42:	2301      	movs	r3, #1
 8001c44:	75fb      	strb	r3, [r7, #23]
 8001c46:	e008      	b.n	8001c5a <HAL_CRCEx_Polynomial_Set+0xea>
 8001c48:	2301      	movs	r3, #1
 8001c4a:	75fb      	strb	r3, [r7, #23]
 8001c4c:	e006      	b.n	8001c5c <HAL_CRCEx_Polynomial_Set+0xec>
 8001c4e:	bf00      	nop
 8001c50:	e004      	b.n	8001c5c <HAL_CRCEx_Polynomial_Set+0xec>
 8001c52:	bf00      	nop
 8001c54:	e002      	b.n	8001c5c <HAL_CRCEx_Polynomial_Set+0xec>
 8001c56:	bf00      	nop
 8001c58:	e000      	b.n	8001c5c <HAL_CRCEx_Polynomial_Set+0xec>
 8001c5a:	bf00      	nop
 8001c5c:	7dfb      	ldrb	r3, [r7, #23]
 8001c5e:	2b00      	cmp	r3, #0
 8001c60:	d10d      	bne.n	8001c7e <HAL_CRCEx_Polynomial_Set+0x10e>
 8001c62:	68fb      	ldr	r3, [r7, #12]
 8001c64:	681b      	ldr	r3, [r3, #0]
 8001c66:	68ba      	ldr	r2, [r7, #8]
 8001c68:	615a      	str	r2, [r3, #20]
 8001c6a:	68fb      	ldr	r3, [r7, #12]
 8001c6c:	681b      	ldr	r3, [r3, #0]
 8001c6e:	689b      	ldr	r3, [r3, #8]
 8001c70:	f023 0118 	bic.w	r1, r3, #24
 8001c74:	68fb      	ldr	r3, [r7, #12]
 8001c76:	681b      	ldr	r3, [r3, #0]
 8001c78:	687a      	ldr	r2, [r7, #4]
 8001c7a:	430a      	orrs	r2, r1
 8001c7c:	609a      	str	r2, [r3, #8]
 8001c7e:	7dfb      	ldrb	r3, [r7, #23]
 8001c80:	4618      	mov	r0, r3
 8001c82:	371c      	adds	r7, #28
 8001c84:	46bd      	mov	sp, r7
 8001c86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c8a:	4770      	bx	lr

08001c8c <HAL_FLASH_Program>:
 8001c8c:	b580      	push	{r7, lr}
 8001c8e:	b086      	sub	sp, #24
 8001c90:	af00      	add	r7, sp, #0
 8001c92:	60f8      	str	r0, [r7, #12]
 8001c94:	60b9      	str	r1, [r7, #8]
 8001c96:	e9c7 2300 	strd	r2, r3, [r7]
 8001c9a:	2300      	movs	r3, #0
 8001c9c:	613b      	str	r3, [r7, #16]
 8001c9e:	4b2f      	ldr	r3, [pc, #188]	@ (8001d5c <HAL_FLASH_Program+0xd0>)
 8001ca0:	781b      	ldrb	r3, [r3, #0]
 8001ca2:	2b01      	cmp	r3, #1
 8001ca4:	d101      	bne.n	8001caa <HAL_FLASH_Program+0x1e>
 8001ca6:	2302      	movs	r3, #2
 8001ca8:	e053      	b.n	8001d52 <HAL_FLASH_Program+0xc6>
 8001caa:	4b2c      	ldr	r3, [pc, #176]	@ (8001d5c <HAL_FLASH_Program+0xd0>)
 8001cac:	2201      	movs	r2, #1
 8001cae:	701a      	strb	r2, [r3, #0]
 8001cb0:	f24c 3050 	movw	r0, #50000	@ 0xc350
 8001cb4:	f000 f888 	bl	8001dc8 <FLASH_WaitForLastOperation>
 8001cb8:	4603      	mov	r3, r0
 8001cba:	75fb      	strb	r3, [r7, #23]
 8001cbc:	7dfb      	ldrb	r3, [r7, #23]
 8001cbe:	2b00      	cmp	r3, #0
 8001cc0:	d143      	bne.n	8001d4a <HAL_FLASH_Program+0xbe>
 8001cc2:	4b26      	ldr	r3, [pc, #152]	@ (8001d5c <HAL_FLASH_Program+0xd0>)
 8001cc4:	2200      	movs	r2, #0
 8001cc6:	605a      	str	r2, [r3, #4]
 8001cc8:	4b25      	ldr	r3, [pc, #148]	@ (8001d60 <HAL_FLASH_Program+0xd4>)
 8001cca:	681b      	ldr	r3, [r3, #0]
 8001ccc:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8001cd0:	2b00      	cmp	r3, #0
 8001cd2:	d009      	beq.n	8001ce8 <HAL_FLASH_Program+0x5c>
 8001cd4:	4b22      	ldr	r3, [pc, #136]	@ (8001d60 <HAL_FLASH_Program+0xd4>)
 8001cd6:	681b      	ldr	r3, [r3, #0]
 8001cd8:	4a21      	ldr	r2, [pc, #132]	@ (8001d60 <HAL_FLASH_Program+0xd4>)
 8001cda:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8001cde:	6013      	str	r3, [r2, #0]
 8001ce0:	4b1e      	ldr	r3, [pc, #120]	@ (8001d5c <HAL_FLASH_Program+0xd0>)
 8001ce2:	2202      	movs	r2, #2
 8001ce4:	771a      	strb	r2, [r3, #28]
 8001ce6:	e002      	b.n	8001cee <HAL_FLASH_Program+0x62>
 8001ce8:	4b1c      	ldr	r3, [pc, #112]	@ (8001d5c <HAL_FLASH_Program+0xd0>)
 8001cea:	2200      	movs	r2, #0
 8001cec:	771a      	strb	r2, [r3, #28]
 8001cee:	68fb      	ldr	r3, [r7, #12]
 8001cf0:	2b00      	cmp	r3, #0
 8001cf2:	d107      	bne.n	8001d04 <HAL_FLASH_Program+0x78>
 8001cf4:	e9d7 2300 	ldrd	r2, r3, [r7]
 8001cf8:	68b8      	ldr	r0, [r7, #8]
 8001cfa:	f000 f8bb 	bl	8001e74 <FLASH_Program_DoubleWord>
 8001cfe:	2301      	movs	r3, #1
 8001d00:	613b      	str	r3, [r7, #16]
 8001d02:	e010      	b.n	8001d26 <HAL_FLASH_Program+0x9a>
 8001d04:	68fb      	ldr	r3, [r7, #12]
 8001d06:	2b01      	cmp	r3, #1
 8001d08:	d002      	beq.n	8001d10 <HAL_FLASH_Program+0x84>
 8001d0a:	68fb      	ldr	r3, [r7, #12]
 8001d0c:	2b02      	cmp	r3, #2
 8001d0e:	d10a      	bne.n	8001d26 <HAL_FLASH_Program+0x9a>
 8001d10:	683b      	ldr	r3, [r7, #0]
 8001d12:	4619      	mov	r1, r3
 8001d14:	68b8      	ldr	r0, [r7, #8]
 8001d16:	f000 f8d3 	bl	8001ec0 <FLASH_Program_Fast>
 8001d1a:	68fb      	ldr	r3, [r7, #12]
 8001d1c:	2b02      	cmp	r3, #2
 8001d1e:	d102      	bne.n	8001d26 <HAL_FLASH_Program+0x9a>
 8001d20:	f44f 2380 	mov.w	r3, #262144	@ 0x40000
 8001d24:	613b      	str	r3, [r7, #16]
 8001d26:	f24c 3050 	movw	r0, #50000	@ 0xc350
 8001d2a:	f000 f84d 	bl	8001dc8 <FLASH_WaitForLastOperation>
 8001d2e:	4603      	mov	r3, r0
 8001d30:	75fb      	strb	r3, [r7, #23]
 8001d32:	693b      	ldr	r3, [r7, #16]
 8001d34:	2b00      	cmp	r3, #0
 8001d36:	d006      	beq.n	8001d46 <HAL_FLASH_Program+0xba>
 8001d38:	4b09      	ldr	r3, [pc, #36]	@ (8001d60 <HAL_FLASH_Program+0xd4>)
 8001d3a:	695a      	ldr	r2, [r3, #20]
 8001d3c:	693b      	ldr	r3, [r7, #16]
 8001d3e:	43db      	mvns	r3, r3
 8001d40:	4907      	ldr	r1, [pc, #28]	@ (8001d60 <HAL_FLASH_Program+0xd4>)
 8001d42:	4013      	ands	r3, r2
 8001d44:	614b      	str	r3, [r1, #20]
 8001d46:	f000 fa39 	bl	80021bc <FLASH_FlushCaches>
 8001d4a:	4b04      	ldr	r3, [pc, #16]	@ (8001d5c <HAL_FLASH_Program+0xd0>)
 8001d4c:	2200      	movs	r2, #0
 8001d4e:	701a      	strb	r2, [r3, #0]
 8001d50:	7dfb      	ldrb	r3, [r7, #23]
 8001d52:	4618      	mov	r0, r3
 8001d54:	3718      	adds	r7, #24
 8001d56:	46bd      	mov	sp, r7
 8001d58:	bd80      	pop	{r7, pc}
 8001d5a:	bf00      	nop
 8001d5c:	20000018 	.word	0x20000018
 8001d60:	40022000 	.word	0x40022000

08001d64 <HAL_FLASH_Unlock>:
 8001d64:	b480      	push	{r7}
 8001d66:	b083      	sub	sp, #12
 8001d68:	af00      	add	r7, sp, #0
 8001d6a:	2300      	movs	r3, #0
 8001d6c:	71fb      	strb	r3, [r7, #7]
 8001d6e:	4b0b      	ldr	r3, [pc, #44]	@ (8001d9c <HAL_FLASH_Unlock+0x38>)
 8001d70:	695b      	ldr	r3, [r3, #20]
 8001d72:	2b00      	cmp	r3, #0
 8001d74:	da0b      	bge.n	8001d8e <HAL_FLASH_Unlock+0x2a>
 8001d76:	4b09      	ldr	r3, [pc, #36]	@ (8001d9c <HAL_FLASH_Unlock+0x38>)
 8001d78:	4a09      	ldr	r2, [pc, #36]	@ (8001da0 <HAL_FLASH_Unlock+0x3c>)
 8001d7a:	609a      	str	r2, [r3, #8]
 8001d7c:	4b07      	ldr	r3, [pc, #28]	@ (8001d9c <HAL_FLASH_Unlock+0x38>)
 8001d7e:	4a09      	ldr	r2, [pc, #36]	@ (8001da4 <HAL_FLASH_Unlock+0x40>)
 8001d80:	609a      	str	r2, [r3, #8]
 8001d82:	4b06      	ldr	r3, [pc, #24]	@ (8001d9c <HAL_FLASH_Unlock+0x38>)
 8001d84:	695b      	ldr	r3, [r3, #20]
 8001d86:	2b00      	cmp	r3, #0
 8001d88:	da01      	bge.n	8001d8e <HAL_FLASH_Unlock+0x2a>
 8001d8a:	2301      	movs	r3, #1
 8001d8c:	71fb      	strb	r3, [r7, #7]
 8001d8e:	79fb      	ldrb	r3, [r7, #7]
 8001d90:	4618      	mov	r0, r3
 8001d92:	370c      	adds	r7, #12
 8001d94:	46bd      	mov	sp, r7
 8001d96:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d9a:	4770      	bx	lr
 8001d9c:	40022000 	.word	0x40022000
 8001da0:	45670123 	.word	0x45670123
 8001da4:	cdef89ab 	.word	0xcdef89ab

08001da8 <HAL_FLASH_Lock>:
 8001da8:	b480      	push	{r7}
 8001daa:	af00      	add	r7, sp, #0
 8001dac:	4b05      	ldr	r3, [pc, #20]	@ (8001dc4 <HAL_FLASH_Lock+0x1c>)
 8001dae:	695b      	ldr	r3, [r3, #20]
 8001db0:	4a04      	ldr	r2, [pc, #16]	@ (8001dc4 <HAL_FLASH_Lock+0x1c>)
 8001db2:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8001db6:	6153      	str	r3, [r2, #20]
 8001db8:	2300      	movs	r3, #0
 8001dba:	4618      	mov	r0, r3
 8001dbc:	46bd      	mov	sp, r7
 8001dbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001dc2:	4770      	bx	lr
 8001dc4:	40022000 	.word	0x40022000

08001dc8 <FLASH_WaitForLastOperation>:
 8001dc8:	b580      	push	{r7, lr}
 8001dca:	b084      	sub	sp, #16
 8001dcc:	af00      	add	r7, sp, #0
 8001dce:	6078      	str	r0, [r7, #4]
 8001dd0:	f7ff fc6a 	bl	80016a8 <HAL_GetTick>
 8001dd4:	60f8      	str	r0, [r7, #12]
 8001dd6:	e00d      	b.n	8001df4 <FLASH_WaitForLastOperation+0x2c>
 8001dd8:	687b      	ldr	r3, [r7, #4]
 8001dda:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001dde:	d009      	beq.n	8001df4 <FLASH_WaitForLastOperation+0x2c>
 8001de0:	f7ff fc62 	bl	80016a8 <HAL_GetTick>
 8001de4:	4602      	mov	r2, r0
 8001de6:	68fb      	ldr	r3, [r7, #12]
 8001de8:	1ad3      	subs	r3, r2, r3
 8001dea:	687a      	ldr	r2, [r7, #4]
 8001dec:	429a      	cmp	r2, r3
 8001dee:	d801      	bhi.n	8001df4 <FLASH_WaitForLastOperation+0x2c>
 8001df0:	2303      	movs	r3, #3
 8001df2:	e036      	b.n	8001e62 <FLASH_WaitForLastOperation+0x9a>
 8001df4:	4b1d      	ldr	r3, [pc, #116]	@ (8001e6c <FLASH_WaitForLastOperation+0xa4>)
 8001df6:	691b      	ldr	r3, [r3, #16]
 8001df8:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8001dfc:	2b00      	cmp	r3, #0
 8001dfe:	d1eb      	bne.n	8001dd8 <FLASH_WaitForLastOperation+0x10>
 8001e00:	4b1a      	ldr	r3, [pc, #104]	@ (8001e6c <FLASH_WaitForLastOperation+0xa4>)
 8001e02:	691a      	ldr	r2, [r3, #16]
 8001e04:	f24c 33fa 	movw	r3, #50170	@ 0xc3fa
 8001e08:	4013      	ands	r3, r2
 8001e0a:	60bb      	str	r3, [r7, #8]
 8001e0c:	68bb      	ldr	r3, [r7, #8]
 8001e0e:	2b00      	cmp	r3, #0
 8001e10:	d01d      	beq.n	8001e4e <FLASH_WaitForLastOperation+0x86>
 8001e12:	4b17      	ldr	r3, [pc, #92]	@ (8001e70 <FLASH_WaitForLastOperation+0xa8>)
 8001e14:	685a      	ldr	r2, [r3, #4]
 8001e16:	68bb      	ldr	r3, [r7, #8]
 8001e18:	4313      	orrs	r3, r2
 8001e1a:	4a15      	ldr	r2, [pc, #84]	@ (8001e70 <FLASH_WaitForLastOperation+0xa8>)
 8001e1c:	6053      	str	r3, [r2, #4]
 8001e1e:	68bb      	ldr	r3, [r7, #8]
 8001e20:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8001e24:	d307      	bcc.n	8001e36 <FLASH_WaitForLastOperation+0x6e>
 8001e26:	4b11      	ldr	r3, [pc, #68]	@ (8001e6c <FLASH_WaitForLastOperation+0xa4>)
 8001e28:	699a      	ldr	r2, [r3, #24]
 8001e2a:	68bb      	ldr	r3, [r7, #8]
 8001e2c:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
 8001e30:	490e      	ldr	r1, [pc, #56]	@ (8001e6c <FLASH_WaitForLastOperation+0xa4>)
 8001e32:	4313      	orrs	r3, r2
 8001e34:	618b      	str	r3, [r1, #24]
 8001e36:	68bb      	ldr	r3, [r7, #8]
 8001e38:	f023 4340 	bic.w	r3, r3, #3221225472	@ 0xc0000000
 8001e3c:	2b00      	cmp	r3, #0
 8001e3e:	d004      	beq.n	8001e4a <FLASH_WaitForLastOperation+0x82>
 8001e40:	4a0a      	ldr	r2, [pc, #40]	@ (8001e6c <FLASH_WaitForLastOperation+0xa4>)
 8001e42:	68bb      	ldr	r3, [r7, #8]
 8001e44:	f023 4340 	bic.w	r3, r3, #3221225472	@ 0xc0000000
 8001e48:	6113      	str	r3, [r2, #16]
 8001e4a:	2301      	movs	r3, #1
 8001e4c:	e009      	b.n	8001e62 <FLASH_WaitForLastOperation+0x9a>
 8001e4e:	4b07      	ldr	r3, [pc, #28]	@ (8001e6c <FLASH_WaitForLastOperation+0xa4>)
 8001e50:	691b      	ldr	r3, [r3, #16]
 8001e52:	f003 0301 	and.w	r3, r3, #1
 8001e56:	2b00      	cmp	r3, #0
 8001e58:	d002      	beq.n	8001e60 <FLASH_WaitForLastOperation+0x98>
 8001e5a:	4b04      	ldr	r3, [pc, #16]	@ (8001e6c <FLASH_WaitForLastOperation+0xa4>)
 8001e5c:	2201      	movs	r2, #1
 8001e5e:	611a      	str	r2, [r3, #16]
 8001e60:	2300      	movs	r3, #0
 8001e62:	4618      	mov	r0, r3
 8001e64:	3710      	adds	r7, #16
 8001e66:	46bd      	mov	sp, r7
 8001e68:	bd80      	pop	{r7, pc}
 8001e6a:	bf00      	nop
 8001e6c:	40022000 	.word	0x40022000
 8001e70:	20000018 	.word	0x20000018

08001e74 <FLASH_Program_DoubleWord>:
 8001e74:	b480      	push	{r7}
 8001e76:	b085      	sub	sp, #20
 8001e78:	af00      	add	r7, sp, #0
 8001e7a:	60f8      	str	r0, [r7, #12]
 8001e7c:	e9c7 2300 	strd	r2, r3, [r7]
 8001e80:	4b0e      	ldr	r3, [pc, #56]	@ (8001ebc <FLASH_Program_DoubleWord+0x48>)
 8001e82:	695b      	ldr	r3, [r3, #20]
 8001e84:	4a0d      	ldr	r2, [pc, #52]	@ (8001ebc <FLASH_Program_DoubleWord+0x48>)
 8001e86:	f043 0301 	orr.w	r3, r3, #1
 8001e8a:	6153      	str	r3, [r2, #20]
 8001e8c:	68fb      	ldr	r3, [r7, #12]
 8001e8e:	683a      	ldr	r2, [r7, #0]
 8001e90:	601a      	str	r2, [r3, #0]
 8001e92:	f3bf 8f6f 	isb	sy
 8001e96:	bf00      	nop
 8001e98:	e9d7 0100 	ldrd	r0, r1, [r7]
 8001e9c:	f04f 0200 	mov.w	r2, #0
 8001ea0:	f04f 0300 	mov.w	r3, #0
 8001ea4:	000a      	movs	r2, r1
 8001ea6:	2300      	movs	r3, #0
 8001ea8:	68f9      	ldr	r1, [r7, #12]
 8001eaa:	3104      	adds	r1, #4
 8001eac:	4613      	mov	r3, r2
 8001eae:	600b      	str	r3, [r1, #0]
 8001eb0:	bf00      	nop
 8001eb2:	3714      	adds	r7, #20
 8001eb4:	46bd      	mov	sp, r7
 8001eb6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001eba:	4770      	bx	lr
 8001ebc:	40022000 	.word	0x40022000

08001ec0 <FLASH_Program_Fast>:
 8001ec0:	b480      	push	{r7}
 8001ec2:	b089      	sub	sp, #36	@ 0x24
 8001ec4:	af00      	add	r7, sp, #0
 8001ec6:	6078      	str	r0, [r7, #4]
 8001ec8:	6039      	str	r1, [r7, #0]
 8001eca:	2340      	movs	r3, #64	@ 0x40
 8001ecc:	77fb      	strb	r3, [r7, #31]
 8001ece:	687b      	ldr	r3, [r7, #4]
 8001ed0:	61bb      	str	r3, [r7, #24]
 8001ed2:	683b      	ldr	r3, [r7, #0]
 8001ed4:	617b      	str	r3, [r7, #20]
 8001ed6:	4b14      	ldr	r3, [pc, #80]	@ (8001f28 <FLASH_Program_Fast+0x68>)
 8001ed8:	695b      	ldr	r3, [r3, #20]
 8001eda:	4a13      	ldr	r2, [pc, #76]	@ (8001f28 <FLASH_Program_Fast+0x68>)
 8001edc:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8001ee0:	6153      	str	r3, [r2, #20]
 8001ee2:	f3ef 8310 	mrs	r3, PRIMASK
 8001ee6:	60fb      	str	r3, [r7, #12]
 8001ee8:	68fb      	ldr	r3, [r7, #12]
 8001eea:	613b      	str	r3, [r7, #16]
 8001eec:	b672      	cpsid	i
 8001eee:	bf00      	nop
 8001ef0:	697b      	ldr	r3, [r7, #20]
 8001ef2:	681a      	ldr	r2, [r3, #0]
 8001ef4:	69bb      	ldr	r3, [r7, #24]
 8001ef6:	601a      	str	r2, [r3, #0]
 8001ef8:	69bb      	ldr	r3, [r7, #24]
 8001efa:	3304      	adds	r3, #4
 8001efc:	61bb      	str	r3, [r7, #24]
 8001efe:	697b      	ldr	r3, [r7, #20]
 8001f00:	3304      	adds	r3, #4
 8001f02:	617b      	str	r3, [r7, #20]
 8001f04:	7ffb      	ldrb	r3, [r7, #31]
 8001f06:	3b01      	subs	r3, #1
 8001f08:	77fb      	strb	r3, [r7, #31]
 8001f0a:	7ffb      	ldrb	r3, [r7, #31]
 8001f0c:	2b00      	cmp	r3, #0
 8001f0e:	d1ef      	bne.n	8001ef0 <FLASH_Program_Fast+0x30>
 8001f10:	693b      	ldr	r3, [r7, #16]
 8001f12:	60bb      	str	r3, [r7, #8]
 8001f14:	68bb      	ldr	r3, [r7, #8]
 8001f16:	f383 8810 	msr	PRIMASK, r3
 8001f1a:	bf00      	nop
 8001f1c:	bf00      	nop
 8001f1e:	3724      	adds	r7, #36	@ 0x24
 8001f20:	46bd      	mov	sp, r7
 8001f22:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f26:	4770      	bx	lr
 8001f28:	40022000 	.word	0x40022000

08001f2c <HAL_FLASHEx_Erase>:
 8001f2c:	b580      	push	{r7, lr}
 8001f2e:	b084      	sub	sp, #16
 8001f30:	af00      	add	r7, sp, #0
 8001f32:	6078      	str	r0, [r7, #4]
 8001f34:	6039      	str	r1, [r7, #0]
 8001f36:	4b49      	ldr	r3, [pc, #292]	@ (800205c <HAL_FLASHEx_Erase+0x130>)
 8001f38:	781b      	ldrb	r3, [r3, #0]
 8001f3a:	2b01      	cmp	r3, #1
 8001f3c:	d101      	bne.n	8001f42 <HAL_FLASHEx_Erase+0x16>
 8001f3e:	2302      	movs	r3, #2
 8001f40:	e087      	b.n	8002052 <HAL_FLASHEx_Erase+0x126>
 8001f42:	4b46      	ldr	r3, [pc, #280]	@ (800205c <HAL_FLASHEx_Erase+0x130>)
 8001f44:	2201      	movs	r2, #1
 8001f46:	701a      	strb	r2, [r3, #0]
 8001f48:	f24c 3050 	movw	r0, #50000	@ 0xc350
 8001f4c:	f7ff ff3c 	bl	8001dc8 <FLASH_WaitForLastOperation>
 8001f50:	4603      	mov	r3, r0
 8001f52:	73fb      	strb	r3, [r7, #15]
 8001f54:	7bfb      	ldrb	r3, [r7, #15]
 8001f56:	2b00      	cmp	r3, #0
 8001f58:	d177      	bne.n	800204a <HAL_FLASHEx_Erase+0x11e>
 8001f5a:	4b40      	ldr	r3, [pc, #256]	@ (800205c <HAL_FLASHEx_Erase+0x130>)
 8001f5c:	2200      	movs	r2, #0
 8001f5e:	605a      	str	r2, [r3, #4]
 8001f60:	4b3f      	ldr	r3, [pc, #252]	@ (8002060 <HAL_FLASHEx_Erase+0x134>)
 8001f62:	681b      	ldr	r3, [r3, #0]
 8001f64:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8001f68:	2b00      	cmp	r3, #0
 8001f6a:	d013      	beq.n	8001f94 <HAL_FLASHEx_Erase+0x68>
 8001f6c:	4b3c      	ldr	r3, [pc, #240]	@ (8002060 <HAL_FLASHEx_Erase+0x134>)
 8001f6e:	681b      	ldr	r3, [r3, #0]
 8001f70:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8001f74:	2b00      	cmp	r3, #0
 8001f76:	d009      	beq.n	8001f8c <HAL_FLASHEx_Erase+0x60>
 8001f78:	4b39      	ldr	r3, [pc, #228]	@ (8002060 <HAL_FLASHEx_Erase+0x134>)
 8001f7a:	681b      	ldr	r3, [r3, #0]
 8001f7c:	4a38      	ldr	r2, [pc, #224]	@ (8002060 <HAL_FLASHEx_Erase+0x134>)
 8001f7e:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8001f82:	6013      	str	r3, [r2, #0]
 8001f84:	4b35      	ldr	r3, [pc, #212]	@ (800205c <HAL_FLASHEx_Erase+0x130>)
 8001f86:	2203      	movs	r2, #3
 8001f88:	771a      	strb	r2, [r3, #28]
 8001f8a:	e016      	b.n	8001fba <HAL_FLASHEx_Erase+0x8e>
 8001f8c:	4b33      	ldr	r3, [pc, #204]	@ (800205c <HAL_FLASHEx_Erase+0x130>)
 8001f8e:	2201      	movs	r2, #1
 8001f90:	771a      	strb	r2, [r3, #28]
 8001f92:	e012      	b.n	8001fba <HAL_FLASHEx_Erase+0x8e>
 8001f94:	4b32      	ldr	r3, [pc, #200]	@ (8002060 <HAL_FLASHEx_Erase+0x134>)
 8001f96:	681b      	ldr	r3, [r3, #0]
 8001f98:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8001f9c:	2b00      	cmp	r3, #0
 8001f9e:	d009      	beq.n	8001fb4 <HAL_FLASHEx_Erase+0x88>
 8001fa0:	4b2f      	ldr	r3, [pc, #188]	@ (8002060 <HAL_FLASHEx_Erase+0x134>)
 8001fa2:	681b      	ldr	r3, [r3, #0]
 8001fa4:	4a2e      	ldr	r2, [pc, #184]	@ (8002060 <HAL_FLASHEx_Erase+0x134>)
 8001fa6:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8001faa:	6013      	str	r3, [r2, #0]
 8001fac:	4b2b      	ldr	r3, [pc, #172]	@ (800205c <HAL_FLASHEx_Erase+0x130>)
 8001fae:	2202      	movs	r2, #2
 8001fb0:	771a      	strb	r2, [r3, #28]
 8001fb2:	e002      	b.n	8001fba <HAL_FLASHEx_Erase+0x8e>
 8001fb4:	4b29      	ldr	r3, [pc, #164]	@ (800205c <HAL_FLASHEx_Erase+0x130>)
 8001fb6:	2200      	movs	r2, #0
 8001fb8:	771a      	strb	r2, [r3, #28]
 8001fba:	687b      	ldr	r3, [r7, #4]
 8001fbc:	681b      	ldr	r3, [r3, #0]
 8001fbe:	2b01      	cmp	r3, #1
 8001fc0:	d113      	bne.n	8001fea <HAL_FLASHEx_Erase+0xbe>
 8001fc2:	687b      	ldr	r3, [r7, #4]
 8001fc4:	685b      	ldr	r3, [r3, #4]
 8001fc6:	4618      	mov	r0, r3
 8001fc8:	f000 f89a 	bl	8002100 <FLASH_MassErase>
 8001fcc:	f24c 3050 	movw	r0, #50000	@ 0xc350
 8001fd0:	f7ff fefa 	bl	8001dc8 <FLASH_WaitForLastOperation>
 8001fd4:	4603      	mov	r3, r0
 8001fd6:	73fb      	strb	r3, [r7, #15]
 8001fd8:	4b21      	ldr	r3, [pc, #132]	@ (8002060 <HAL_FLASHEx_Erase+0x134>)
 8001fda:	695b      	ldr	r3, [r3, #20]
 8001fdc:	4a20      	ldr	r2, [pc, #128]	@ (8002060 <HAL_FLASHEx_Erase+0x134>)
 8001fde:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 8001fe2:	f023 0304 	bic.w	r3, r3, #4
 8001fe6:	6153      	str	r3, [r2, #20]
 8001fe8:	e02d      	b.n	8002046 <HAL_FLASHEx_Erase+0x11a>
 8001fea:	683b      	ldr	r3, [r7, #0]
 8001fec:	f04f 32ff 	mov.w	r2, #4294967295
 8001ff0:	601a      	str	r2, [r3, #0]
 8001ff2:	687b      	ldr	r3, [r7, #4]
 8001ff4:	689b      	ldr	r3, [r3, #8]
 8001ff6:	60bb      	str	r3, [r7, #8]
 8001ff8:	e01d      	b.n	8002036 <HAL_FLASHEx_Erase+0x10a>
 8001ffa:	687b      	ldr	r3, [r7, #4]
 8001ffc:	685b      	ldr	r3, [r3, #4]
 8001ffe:	4619      	mov	r1, r3
 8002000:	68b8      	ldr	r0, [r7, #8]
 8002002:	f000 f8a5 	bl	8002150 <FLASH_PageErase>
 8002006:	f24c 3050 	movw	r0, #50000	@ 0xc350
 800200a:	f7ff fedd 	bl	8001dc8 <FLASH_WaitForLastOperation>
 800200e:	4603      	mov	r3, r0
 8002010:	73fb      	strb	r3, [r7, #15]
 8002012:	4b13      	ldr	r3, [pc, #76]	@ (8002060 <HAL_FLASHEx_Erase+0x134>)
 8002014:	695b      	ldr	r3, [r3, #20]
 8002016:	4a12      	ldr	r2, [pc, #72]	@ (8002060 <HAL_FLASHEx_Erase+0x134>)
 8002018:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 800201c:	f023 0302 	bic.w	r3, r3, #2
 8002020:	6153      	str	r3, [r2, #20]
 8002022:	7bfb      	ldrb	r3, [r7, #15]
 8002024:	2b00      	cmp	r3, #0
 8002026:	d003      	beq.n	8002030 <HAL_FLASHEx_Erase+0x104>
 8002028:	683b      	ldr	r3, [r7, #0]
 800202a:	68ba      	ldr	r2, [r7, #8]
 800202c:	601a      	str	r2, [r3, #0]
 800202e:	e00a      	b.n	8002046 <HAL_FLASHEx_Erase+0x11a>
 8002030:	68bb      	ldr	r3, [r7, #8]
 8002032:	3301      	adds	r3, #1
 8002034:	60bb      	str	r3, [r7, #8]
 8002036:	687b      	ldr	r3, [r7, #4]
 8002038:	689a      	ldr	r2, [r3, #8]
 800203a:	687b      	ldr	r3, [r7, #4]
 800203c:	68db      	ldr	r3, [r3, #12]
 800203e:	4413      	add	r3, r2
 8002040:	68ba      	ldr	r2, [r7, #8]
 8002042:	429a      	cmp	r2, r3
 8002044:	d3d9      	bcc.n	8001ffa <HAL_FLASHEx_Erase+0xce>
 8002046:	f000 f8b9 	bl	80021bc <FLASH_FlushCaches>
 800204a:	4b04      	ldr	r3, [pc, #16]	@ (800205c <HAL_FLASHEx_Erase+0x130>)
 800204c:	2200      	movs	r2, #0
 800204e:	701a      	strb	r2, [r3, #0]
 8002050:	7bfb      	ldrb	r3, [r7, #15]
 8002052:	4618      	mov	r0, r3
 8002054:	3710      	adds	r7, #16
 8002056:	46bd      	mov	sp, r7
 8002058:	bd80      	pop	{r7, pc}
 800205a:	bf00      	nop
 800205c:	20000018 	.word	0x20000018
 8002060:	40022000 	.word	0x40022000

08002064 <HAL_FLASHEx_OBGetConfig>:
 8002064:	b580      	push	{r7, lr}
 8002066:	b082      	sub	sp, #8
 8002068:	af00      	add	r7, sp, #0
 800206a:	6078      	str	r0, [r7, #4]
 800206c:	687b      	ldr	r3, [r7, #4]
 800206e:	2206      	movs	r2, #6
 8002070:	601a      	str	r2, [r3, #0]
 8002072:	687b      	ldr	r3, [r7, #4]
 8002074:	685b      	ldr	r3, [r3, #4]
 8002076:	2b00      	cmp	r3, #0
 8002078:	d00b      	beq.n	8002092 <HAL_FLASHEx_OBGetConfig+0x2e>
 800207a:	687b      	ldr	r3, [r7, #4]
 800207c:	685b      	ldr	r3, [r3, #4]
 800207e:	2b01      	cmp	r3, #1
 8002080:	d007      	beq.n	8002092 <HAL_FLASHEx_OBGetConfig+0x2e>
 8002082:	687b      	ldr	r3, [r7, #4]
 8002084:	685b      	ldr	r3, [r3, #4]
 8002086:	2b02      	cmp	r3, #2
 8002088:	d003      	beq.n	8002092 <HAL_FLASHEx_OBGetConfig+0x2e>
 800208a:	687b      	ldr	r3, [r7, #4]
 800208c:	685b      	ldr	r3, [r3, #4]
 800208e:	2b04      	cmp	r3, #4
 8002090:	d10f      	bne.n	80020b2 <HAL_FLASHEx_OBGetConfig+0x4e>
 8002092:	687b      	ldr	r3, [r7, #4]
 8002094:	681b      	ldr	r3, [r3, #0]
 8002096:	f043 0201 	orr.w	r2, r3, #1
 800209a:	687b      	ldr	r3, [r7, #4]
 800209c:	601a      	str	r2, [r3, #0]
 800209e:	687b      	ldr	r3, [r7, #4]
 80020a0:	6858      	ldr	r0, [r3, #4]
 80020a2:	687b      	ldr	r3, [r7, #4]
 80020a4:	f103 0108 	add.w	r1, r3, #8
 80020a8:	687b      	ldr	r3, [r7, #4]
 80020aa:	330c      	adds	r3, #12
 80020ac:	461a      	mov	r2, r3
 80020ae:	f000 f8cf 	bl	8002250 <FLASH_OB_GetWRP>
 80020b2:	f000 f917 	bl	80022e4 <FLASH_OB_GetRDP>
 80020b6:	4602      	mov	r2, r0
 80020b8:	687b      	ldr	r3, [r7, #4]
 80020ba:	611a      	str	r2, [r3, #16]
 80020bc:	f000 f92c 	bl	8002318 <FLASH_OB_GetUser>
 80020c0:	4602      	mov	r2, r0
 80020c2:	687b      	ldr	r3, [r7, #4]
 80020c4:	619a      	str	r2, [r3, #24]
 80020c6:	687b      	ldr	r3, [r7, #4]
 80020c8:	69db      	ldr	r3, [r3, #28]
 80020ca:	2b01      	cmp	r3, #1
 80020cc:	d003      	beq.n	80020d6 <HAL_FLASHEx_OBGetConfig+0x72>
 80020ce:	687b      	ldr	r3, [r7, #4]
 80020d0:	69db      	ldr	r3, [r3, #28]
 80020d2:	2b02      	cmp	r3, #2
 80020d4:	d110      	bne.n	80020f8 <HAL_FLASHEx_OBGetConfig+0x94>
 80020d6:	687b      	ldr	r3, [r7, #4]
 80020d8:	681b      	ldr	r3, [r3, #0]
 80020da:	f043 0208 	orr.w	r2, r3, #8
 80020de:	687b      	ldr	r3, [r7, #4]
 80020e0:	601a      	str	r2, [r3, #0]
 80020e2:	687b      	ldr	r3, [r7, #4]
 80020e4:	f103 001c 	add.w	r0, r3, #28
 80020e8:	687b      	ldr	r3, [r7, #4]
 80020ea:	f103 0120 	add.w	r1, r3, #32
 80020ee:	687b      	ldr	r3, [r7, #4]
 80020f0:	3324      	adds	r3, #36	@ 0x24
 80020f2:	461a      	mov	r2, r3
 80020f4:	f000 f924 	bl	8002340 <FLASH_OB_GetPCROP>
 80020f8:	bf00      	nop
 80020fa:	3708      	adds	r7, #8
 80020fc:	46bd      	mov	sp, r7
 80020fe:	bd80      	pop	{r7, pc}

08002100 <FLASH_MassErase>:
 8002100:	b480      	push	{r7}
 8002102:	b083      	sub	sp, #12
 8002104:	af00      	add	r7, sp, #0
 8002106:	6078      	str	r0, [r7, #4]
 8002108:	687b      	ldr	r3, [r7, #4]
 800210a:	f003 0301 	and.w	r3, r3, #1
 800210e:	2b00      	cmp	r3, #0
 8002110:	d005      	beq.n	800211e <FLASH_MassErase+0x1e>
 8002112:	4b0e      	ldr	r3, [pc, #56]	@ (800214c <FLASH_MassErase+0x4c>)
 8002114:	695b      	ldr	r3, [r3, #20]
 8002116:	4a0d      	ldr	r2, [pc, #52]	@ (800214c <FLASH_MassErase+0x4c>)
 8002118:	f043 0304 	orr.w	r3, r3, #4
 800211c:	6153      	str	r3, [r2, #20]
 800211e:	687b      	ldr	r3, [r7, #4]
 8002120:	f003 0302 	and.w	r3, r3, #2
 8002124:	2b00      	cmp	r3, #0
 8002126:	d005      	beq.n	8002134 <FLASH_MassErase+0x34>
 8002128:	4b08      	ldr	r3, [pc, #32]	@ (800214c <FLASH_MassErase+0x4c>)
 800212a:	695b      	ldr	r3, [r3, #20]
 800212c:	4a07      	ldr	r2, [pc, #28]	@ (800214c <FLASH_MassErase+0x4c>)
 800212e:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8002132:	6153      	str	r3, [r2, #20]
 8002134:	4b05      	ldr	r3, [pc, #20]	@ (800214c <FLASH_MassErase+0x4c>)
 8002136:	695b      	ldr	r3, [r3, #20]
 8002138:	4a04      	ldr	r2, [pc, #16]	@ (800214c <FLASH_MassErase+0x4c>)
 800213a:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800213e:	6153      	str	r3, [r2, #20]
 8002140:	bf00      	nop
 8002142:	370c      	adds	r7, #12
 8002144:	46bd      	mov	sp, r7
 8002146:	f85d 7b04 	ldr.w	r7, [sp], #4
 800214a:	4770      	bx	lr
 800214c:	40022000 	.word	0x40022000

08002150 <FLASH_PageErase>:
 8002150:	b480      	push	{r7}
 8002152:	b083      	sub	sp, #12
 8002154:	af00      	add	r7, sp, #0
 8002156:	6078      	str	r0, [r7, #4]
 8002158:	6039      	str	r1, [r7, #0]
 800215a:	683b      	ldr	r3, [r7, #0]
 800215c:	f003 0301 	and.w	r3, r3, #1
 8002160:	2b00      	cmp	r3, #0
 8002162:	d006      	beq.n	8002172 <FLASH_PageErase+0x22>
 8002164:	4b14      	ldr	r3, [pc, #80]	@ (80021b8 <FLASH_PageErase+0x68>)
 8002166:	695b      	ldr	r3, [r3, #20]
 8002168:	4a13      	ldr	r2, [pc, #76]	@ (80021b8 <FLASH_PageErase+0x68>)
 800216a:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 800216e:	6153      	str	r3, [r2, #20]
 8002170:	e005      	b.n	800217e <FLASH_PageErase+0x2e>
 8002172:	4b11      	ldr	r3, [pc, #68]	@ (80021b8 <FLASH_PageErase+0x68>)
 8002174:	695b      	ldr	r3, [r3, #20]
 8002176:	4a10      	ldr	r2, [pc, #64]	@ (80021b8 <FLASH_PageErase+0x68>)
 8002178:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 800217c:	6153      	str	r3, [r2, #20]
 800217e:	4b0e      	ldr	r3, [pc, #56]	@ (80021b8 <FLASH_PageErase+0x68>)
 8002180:	695b      	ldr	r3, [r3, #20]
 8002182:	f423 62ff 	bic.w	r2, r3, #2040	@ 0x7f8
 8002186:	687b      	ldr	r3, [r7, #4]
 8002188:	00db      	lsls	r3, r3, #3
 800218a:	f403 63ff 	and.w	r3, r3, #2040	@ 0x7f8
 800218e:	490a      	ldr	r1, [pc, #40]	@ (80021b8 <FLASH_PageErase+0x68>)
 8002190:	4313      	orrs	r3, r2
 8002192:	614b      	str	r3, [r1, #20]
 8002194:	4b08      	ldr	r3, [pc, #32]	@ (80021b8 <FLASH_PageErase+0x68>)
 8002196:	695b      	ldr	r3, [r3, #20]
 8002198:	4a07      	ldr	r2, [pc, #28]	@ (80021b8 <FLASH_PageErase+0x68>)
 800219a:	f043 0302 	orr.w	r3, r3, #2
 800219e:	6153      	str	r3, [r2, #20]
 80021a0:	4b05      	ldr	r3, [pc, #20]	@ (80021b8 <FLASH_PageErase+0x68>)
 80021a2:	695b      	ldr	r3, [r3, #20]
 80021a4:	4a04      	ldr	r2, [pc, #16]	@ (80021b8 <FLASH_PageErase+0x68>)
 80021a6:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80021aa:	6153      	str	r3, [r2, #20]
 80021ac:	bf00      	nop
 80021ae:	370c      	adds	r7, #12
 80021b0:	46bd      	mov	sp, r7
 80021b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80021b6:	4770      	bx	lr
 80021b8:	40022000 	.word	0x40022000

080021bc <FLASH_FlushCaches>:
 80021bc:	b480      	push	{r7}
 80021be:	b083      	sub	sp, #12
 80021c0:	af00      	add	r7, sp, #0
 80021c2:	4b21      	ldr	r3, [pc, #132]	@ (8002248 <FLASH_FlushCaches+0x8c>)
 80021c4:	7f1b      	ldrb	r3, [r3, #28]
 80021c6:	71fb      	strb	r3, [r7, #7]
 80021c8:	79fb      	ldrb	r3, [r7, #7]
 80021ca:	2b01      	cmp	r3, #1
 80021cc:	d002      	beq.n	80021d4 <FLASH_FlushCaches+0x18>
 80021ce:	79fb      	ldrb	r3, [r7, #7]
 80021d0:	2b03      	cmp	r3, #3
 80021d2:	d117      	bne.n	8002204 <FLASH_FlushCaches+0x48>
 80021d4:	4b1d      	ldr	r3, [pc, #116]	@ (800224c <FLASH_FlushCaches+0x90>)
 80021d6:	681b      	ldr	r3, [r3, #0]
 80021d8:	4a1c      	ldr	r2, [pc, #112]	@ (800224c <FLASH_FlushCaches+0x90>)
 80021da:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 80021de:	6013      	str	r3, [r2, #0]
 80021e0:	4b1a      	ldr	r3, [pc, #104]	@ (800224c <FLASH_FlushCaches+0x90>)
 80021e2:	681b      	ldr	r3, [r3, #0]
 80021e4:	4a19      	ldr	r2, [pc, #100]	@ (800224c <FLASH_FlushCaches+0x90>)
 80021e6:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 80021ea:	6013      	str	r3, [r2, #0]
 80021ec:	4b17      	ldr	r3, [pc, #92]	@ (800224c <FLASH_FlushCaches+0x90>)
 80021ee:	681b      	ldr	r3, [r3, #0]
 80021f0:	4a16      	ldr	r2, [pc, #88]	@ (800224c <FLASH_FlushCaches+0x90>)
 80021f2:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 80021f6:	6013      	str	r3, [r2, #0]
 80021f8:	4b14      	ldr	r3, [pc, #80]	@ (800224c <FLASH_FlushCaches+0x90>)
 80021fa:	681b      	ldr	r3, [r3, #0]
 80021fc:	4a13      	ldr	r2, [pc, #76]	@ (800224c <FLASH_FlushCaches+0x90>)
 80021fe:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8002202:	6013      	str	r3, [r2, #0]
 8002204:	79fb      	ldrb	r3, [r7, #7]
 8002206:	2b02      	cmp	r3, #2
 8002208:	d002      	beq.n	8002210 <FLASH_FlushCaches+0x54>
 800220a:	79fb      	ldrb	r3, [r7, #7]
 800220c:	2b03      	cmp	r3, #3
 800220e:	d111      	bne.n	8002234 <FLASH_FlushCaches+0x78>
 8002210:	4b0e      	ldr	r3, [pc, #56]	@ (800224c <FLASH_FlushCaches+0x90>)
 8002212:	681b      	ldr	r3, [r3, #0]
 8002214:	4a0d      	ldr	r2, [pc, #52]	@ (800224c <FLASH_FlushCaches+0x90>)
 8002216:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 800221a:	6013      	str	r3, [r2, #0]
 800221c:	4b0b      	ldr	r3, [pc, #44]	@ (800224c <FLASH_FlushCaches+0x90>)
 800221e:	681b      	ldr	r3, [r3, #0]
 8002220:	4a0a      	ldr	r2, [pc, #40]	@ (800224c <FLASH_FlushCaches+0x90>)
 8002222:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8002226:	6013      	str	r3, [r2, #0]
 8002228:	4b08      	ldr	r3, [pc, #32]	@ (800224c <FLASH_FlushCaches+0x90>)
 800222a:	681b      	ldr	r3, [r3, #0]
 800222c:	4a07      	ldr	r2, [pc, #28]	@ (800224c <FLASH_FlushCaches+0x90>)
 800222e:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8002232:	6013      	str	r3, [r2, #0]
 8002234:	4b04      	ldr	r3, [pc, #16]	@ (8002248 <FLASH_FlushCaches+0x8c>)
 8002236:	2200      	movs	r2, #0
 8002238:	771a      	strb	r2, [r3, #28]
 800223a:	bf00      	nop
 800223c:	370c      	adds	r7, #12
 800223e:	46bd      	mov	sp, r7
 8002240:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002244:	4770      	bx	lr
 8002246:	bf00      	nop
 8002248:	20000018 	.word	0x20000018
 800224c:	40022000 	.word	0x40022000

08002250 <FLASH_OB_GetWRP>:
 8002250:	b480      	push	{r7}
 8002252:	b085      	sub	sp, #20
 8002254:	af00      	add	r7, sp, #0
 8002256:	60f8      	str	r0, [r7, #12]
 8002258:	60b9      	str	r1, [r7, #8]
 800225a:	607a      	str	r2, [r7, #4]
 800225c:	68fb      	ldr	r3, [r7, #12]
 800225e:	2b00      	cmp	r3, #0
 8002260:	d10b      	bne.n	800227a <FLASH_OB_GetWRP+0x2a>
 8002262:	4b1f      	ldr	r3, [pc, #124]	@ (80022e0 <FLASH_OB_GetWRP+0x90>)
 8002264:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002266:	b2da      	uxtb	r2, r3
 8002268:	68bb      	ldr	r3, [r7, #8]
 800226a:	601a      	str	r2, [r3, #0]
 800226c:	4b1c      	ldr	r3, [pc, #112]	@ (80022e0 <FLASH_OB_GetWRP+0x90>)
 800226e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002270:	0c1b      	lsrs	r3, r3, #16
 8002272:	b2da      	uxtb	r2, r3
 8002274:	687b      	ldr	r3, [r7, #4]
 8002276:	601a      	str	r2, [r3, #0]
 8002278:	e02b      	b.n	80022d2 <FLASH_OB_GetWRP+0x82>
 800227a:	68fb      	ldr	r3, [r7, #12]
 800227c:	2b01      	cmp	r3, #1
 800227e:	d10b      	bne.n	8002298 <FLASH_OB_GetWRP+0x48>
 8002280:	4b17      	ldr	r3, [pc, #92]	@ (80022e0 <FLASH_OB_GetWRP+0x90>)
 8002282:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002284:	b2da      	uxtb	r2, r3
 8002286:	68bb      	ldr	r3, [r7, #8]
 8002288:	601a      	str	r2, [r3, #0]
 800228a:	4b15      	ldr	r3, [pc, #84]	@ (80022e0 <FLASH_OB_GetWRP+0x90>)
 800228c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800228e:	0c1b      	lsrs	r3, r3, #16
 8002290:	b2da      	uxtb	r2, r3
 8002292:	687b      	ldr	r3, [r7, #4]
 8002294:	601a      	str	r2, [r3, #0]
 8002296:	e01c      	b.n	80022d2 <FLASH_OB_GetWRP+0x82>
 8002298:	68fb      	ldr	r3, [r7, #12]
 800229a:	2b02      	cmp	r3, #2
 800229c:	d10b      	bne.n	80022b6 <FLASH_OB_GetWRP+0x66>
 800229e:	4b10      	ldr	r3, [pc, #64]	@ (80022e0 <FLASH_OB_GetWRP+0x90>)
 80022a0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80022a2:	b2da      	uxtb	r2, r3
 80022a4:	68bb      	ldr	r3, [r7, #8]
 80022a6:	601a      	str	r2, [r3, #0]
 80022a8:	4b0d      	ldr	r3, [pc, #52]	@ (80022e0 <FLASH_OB_GetWRP+0x90>)
 80022aa:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80022ac:	0c1b      	lsrs	r3, r3, #16
 80022ae:	b2da      	uxtb	r2, r3
 80022b0:	687b      	ldr	r3, [r7, #4]
 80022b2:	601a      	str	r2, [r3, #0]
 80022b4:	e00d      	b.n	80022d2 <FLASH_OB_GetWRP+0x82>
 80022b6:	68fb      	ldr	r3, [r7, #12]
 80022b8:	2b04      	cmp	r3, #4
 80022ba:	d10a      	bne.n	80022d2 <FLASH_OB_GetWRP+0x82>
 80022bc:	4b08      	ldr	r3, [pc, #32]	@ (80022e0 <FLASH_OB_GetWRP+0x90>)
 80022be:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80022c0:	b2da      	uxtb	r2, r3
 80022c2:	68bb      	ldr	r3, [r7, #8]
 80022c4:	601a      	str	r2, [r3, #0]
 80022c6:	4b06      	ldr	r3, [pc, #24]	@ (80022e0 <FLASH_OB_GetWRP+0x90>)
 80022c8:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80022ca:	0c1b      	lsrs	r3, r3, #16
 80022cc:	b2da      	uxtb	r2, r3
 80022ce:	687b      	ldr	r3, [r7, #4]
 80022d0:	601a      	str	r2, [r3, #0]
 80022d2:	bf00      	nop
 80022d4:	3714      	adds	r7, #20
 80022d6:	46bd      	mov	sp, r7
 80022d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80022dc:	4770      	bx	lr
 80022de:	bf00      	nop
 80022e0:	40022000 	.word	0x40022000

080022e4 <FLASH_OB_GetRDP>:
 80022e4:	b480      	push	{r7}
 80022e6:	b083      	sub	sp, #12
 80022e8:	af00      	add	r7, sp, #0
 80022ea:	4b0a      	ldr	r3, [pc, #40]	@ (8002314 <FLASH_OB_GetRDP+0x30>)
 80022ec:	6a1b      	ldr	r3, [r3, #32]
 80022ee:	b2db      	uxtb	r3, r3
 80022f0:	607b      	str	r3, [r7, #4]
 80022f2:	687b      	ldr	r3, [r7, #4]
 80022f4:	2baa      	cmp	r3, #170	@ 0xaa
 80022f6:	d004      	beq.n	8002302 <FLASH_OB_GetRDP+0x1e>
 80022f8:	687b      	ldr	r3, [r7, #4]
 80022fa:	2bcc      	cmp	r3, #204	@ 0xcc
 80022fc:	d001      	beq.n	8002302 <FLASH_OB_GetRDP+0x1e>
 80022fe:	23bb      	movs	r3, #187	@ 0xbb
 8002300:	e002      	b.n	8002308 <FLASH_OB_GetRDP+0x24>
 8002302:	4b04      	ldr	r3, [pc, #16]	@ (8002314 <FLASH_OB_GetRDP+0x30>)
 8002304:	6a1b      	ldr	r3, [r3, #32]
 8002306:	b2db      	uxtb	r3, r3
 8002308:	4618      	mov	r0, r3
 800230a:	370c      	adds	r7, #12
 800230c:	46bd      	mov	sp, r7
 800230e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002312:	4770      	bx	lr
 8002314:	40022000 	.word	0x40022000

08002318 <FLASH_OB_GetUser>:
 8002318:	b480      	push	{r7}
 800231a:	b083      	sub	sp, #12
 800231c:	af00      	add	r7, sp, #0
 800231e:	4b07      	ldr	r3, [pc, #28]	@ (800233c <FLASH_OB_GetUser+0x24>)
 8002320:	6a1b      	ldr	r3, [r3, #32]
 8002322:	607b      	str	r3, [r7, #4]
 8002324:	687b      	ldr	r3, [r7, #4]
 8002326:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 800232a:	607b      	str	r3, [r7, #4]
 800232c:	687b      	ldr	r3, [r7, #4]
 800232e:	4618      	mov	r0, r3
 8002330:	370c      	adds	r7, #12
 8002332:	46bd      	mov	sp, r7
 8002334:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002338:	4770      	bx	lr
 800233a:	bf00      	nop
 800233c:	40022000 	.word	0x40022000

08002340 <FLASH_OB_GetPCROP>:
 8002340:	b480      	push	{r7}
 8002342:	b089      	sub	sp, #36	@ 0x24
 8002344:	af00      	add	r7, sp, #0
 8002346:	60f8      	str	r0, [r7, #12]
 8002348:	60b9      	str	r1, [r7, #8]
 800234a:	607a      	str	r2, [r7, #4]
 800234c:	4b3b      	ldr	r3, [pc, #236]	@ (800243c <FLASH_OB_GetPCROP+0xfc>)
 800234e:	681b      	ldr	r3, [r3, #0]
 8002350:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002354:	2b00      	cmp	r3, #0
 8002356:	d115      	bne.n	8002384 <FLASH_OB_GetPCROP+0x44>
 8002358:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 800235c:	61fb      	str	r3, [r7, #28]
 800235e:	4b38      	ldr	r3, [pc, #224]	@ (8002440 <FLASH_OB_GetPCROP+0x100>)
 8002360:	681b      	ldr	r3, [r3, #0]
 8002362:	b29b      	uxth	r3, r3
 8002364:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8002368:	4293      	cmp	r3, r2
 800236a:	d008      	beq.n	800237e <FLASH_OB_GetPCROP+0x3e>
 800236c:	4b34      	ldr	r3, [pc, #208]	@ (8002440 <FLASH_OB_GetPCROP+0x100>)
 800236e:	681b      	ldr	r3, [r3, #0]
 8002370:	029b      	lsls	r3, r3, #10
 8002372:	085a      	lsrs	r2, r3, #1
 8002374:	4b33      	ldr	r3, [pc, #204]	@ (8002444 <FLASH_OB_GetPCROP+0x104>)
 8002376:	4013      	ands	r3, r2
 8002378:	f103 6300 	add.w	r3, r3, #134217728	@ 0x8000000
 800237c:	e000      	b.n	8002380 <FLASH_OB_GetPCROP+0x40>
 800237e:	4b32      	ldr	r3, [pc, #200]	@ (8002448 <FLASH_OB_GetPCROP+0x108>)
 8002380:	61bb      	str	r3, [r7, #24]
 8002382:	e014      	b.n	80023ae <FLASH_OB_GetPCROP+0x6e>
 8002384:	4b2e      	ldr	r3, [pc, #184]	@ (8002440 <FLASH_OB_GetPCROP+0x100>)
 8002386:	681b      	ldr	r3, [r3, #0]
 8002388:	b29b      	uxth	r3, r3
 800238a:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800238e:	4293      	cmp	r3, r2
 8002390:	d008      	beq.n	80023a4 <FLASH_OB_GetPCROP+0x64>
 8002392:	4b2b      	ldr	r3, [pc, #172]	@ (8002440 <FLASH_OB_GetPCROP+0x100>)
 8002394:	681b      	ldr	r3, [r3, #0]
 8002396:	029b      	lsls	r3, r3, #10
 8002398:	085a      	lsrs	r2, r3, #1
 800239a:	4b2a      	ldr	r3, [pc, #168]	@ (8002444 <FLASH_OB_GetPCROP+0x104>)
 800239c:	4013      	ands	r3, r2
 800239e:	f103 6300 	add.w	r3, r3, #134217728	@ 0x8000000
 80023a2:	e000      	b.n	80023a6 <FLASH_OB_GetPCROP+0x66>
 80023a4:	4b28      	ldr	r3, [pc, #160]	@ (8002448 <FLASH_OB_GetPCROP+0x108>)
 80023a6:	61fb      	str	r3, [r7, #28]
 80023a8:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 80023ac:	61bb      	str	r3, [r7, #24]
 80023ae:	68fb      	ldr	r3, [r7, #12]
 80023b0:	681b      	ldr	r3, [r3, #0]
 80023b2:	f003 0303 	and.w	r3, r3, #3
 80023b6:	2b01      	cmp	r3, #1
 80023b8:	d115      	bne.n	80023e6 <FLASH_OB_GetPCROP+0xa6>
 80023ba:	4b24      	ldr	r3, [pc, #144]	@ (800244c <FLASH_OB_GetPCROP+0x10c>)
 80023bc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80023be:	b29b      	uxth	r3, r3
 80023c0:	617b      	str	r3, [r7, #20]
 80023c2:	697b      	ldr	r3, [r7, #20]
 80023c4:	00da      	lsls	r2, r3, #3
 80023c6:	69fb      	ldr	r3, [r7, #28]
 80023c8:	441a      	add	r2, r3
 80023ca:	68bb      	ldr	r3, [r7, #8]
 80023cc:	601a      	str	r2, [r3, #0]
 80023ce:	4b1f      	ldr	r3, [pc, #124]	@ (800244c <FLASH_OB_GetPCROP+0x10c>)
 80023d0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80023d2:	b29b      	uxth	r3, r3
 80023d4:	617b      	str	r3, [r7, #20]
 80023d6:	697b      	ldr	r3, [r7, #20]
 80023d8:	00da      	lsls	r2, r3, #3
 80023da:	69fb      	ldr	r3, [r7, #28]
 80023dc:	4413      	add	r3, r2
 80023de:	1dda      	adds	r2, r3, #7
 80023e0:	687b      	ldr	r3, [r7, #4]
 80023e2:	601a      	str	r2, [r3, #0]
 80023e4:	e01a      	b.n	800241c <FLASH_OB_GetPCROP+0xdc>
 80023e6:	68fb      	ldr	r3, [r7, #12]
 80023e8:	681b      	ldr	r3, [r3, #0]
 80023ea:	f003 0303 	and.w	r3, r3, #3
 80023ee:	2b02      	cmp	r3, #2
 80023f0:	d114      	bne.n	800241c <FLASH_OB_GetPCROP+0xdc>
 80023f2:	4b16      	ldr	r3, [pc, #88]	@ (800244c <FLASH_OB_GetPCROP+0x10c>)
 80023f4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80023f6:	b29b      	uxth	r3, r3
 80023f8:	617b      	str	r3, [r7, #20]
 80023fa:	697b      	ldr	r3, [r7, #20]
 80023fc:	00da      	lsls	r2, r3, #3
 80023fe:	69bb      	ldr	r3, [r7, #24]
 8002400:	441a      	add	r2, r3
 8002402:	68bb      	ldr	r3, [r7, #8]
 8002404:	601a      	str	r2, [r3, #0]
 8002406:	4b11      	ldr	r3, [pc, #68]	@ (800244c <FLASH_OB_GetPCROP+0x10c>)
 8002408:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800240a:	b29b      	uxth	r3, r3
 800240c:	617b      	str	r3, [r7, #20]
 800240e:	697b      	ldr	r3, [r7, #20]
 8002410:	00da      	lsls	r2, r3, #3
 8002412:	69bb      	ldr	r3, [r7, #24]
 8002414:	4413      	add	r3, r2
 8002416:	1dda      	adds	r2, r3, #7
 8002418:	687b      	ldr	r3, [r7, #4]
 800241a:	601a      	str	r2, [r3, #0]
 800241c:	4b0b      	ldr	r3, [pc, #44]	@ (800244c <FLASH_OB_GetPCROP+0x10c>)
 800241e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002420:	f003 4200 	and.w	r2, r3, #2147483648	@ 0x80000000
 8002424:	68fb      	ldr	r3, [r7, #12]
 8002426:	681b      	ldr	r3, [r3, #0]
 8002428:	431a      	orrs	r2, r3
 800242a:	68fb      	ldr	r3, [r7, #12]
 800242c:	601a      	str	r2, [r3, #0]
 800242e:	bf00      	nop
 8002430:	3724      	adds	r7, #36	@ 0x24
 8002432:	46bd      	mov	sp, r7
 8002434:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002438:	4770      	bx	lr
 800243a:	bf00      	nop
 800243c:	40010000 	.word	0x40010000
 8002440:	1fff75e0 	.word	0x1fff75e0
 8002444:	01fffe00 	.word	0x01fffe00
 8002448:	08080000 	.word	0x08080000
 800244c:	40022000 	.word	0x40022000

08002450 <HAL_GPIO_Init>:
 8002450:	b480      	push	{r7}
 8002452:	b087      	sub	sp, #28
 8002454:	af00      	add	r7, sp, #0
 8002456:	6078      	str	r0, [r7, #4]
 8002458:	6039      	str	r1, [r7, #0]
 800245a:	2300      	movs	r3, #0
 800245c:	617b      	str	r3, [r7, #20]
 800245e:	e166      	b.n	800272e <HAL_GPIO_Init+0x2de>
 8002460:	683b      	ldr	r3, [r7, #0]
 8002462:	681a      	ldr	r2, [r3, #0]
 8002464:	2101      	movs	r1, #1
 8002466:	697b      	ldr	r3, [r7, #20]
 8002468:	fa01 f303 	lsl.w	r3, r1, r3
 800246c:	4013      	ands	r3, r2
 800246e:	60fb      	str	r3, [r7, #12]
 8002470:	68fb      	ldr	r3, [r7, #12]
 8002472:	2b00      	cmp	r3, #0
 8002474:	f000 8158 	beq.w	8002728 <HAL_GPIO_Init+0x2d8>
 8002478:	683b      	ldr	r3, [r7, #0]
 800247a:	685b      	ldr	r3, [r3, #4]
 800247c:	f003 0303 	and.w	r3, r3, #3
 8002480:	2b01      	cmp	r3, #1
 8002482:	d005      	beq.n	8002490 <HAL_GPIO_Init+0x40>
 8002484:	683b      	ldr	r3, [r7, #0]
 8002486:	685b      	ldr	r3, [r3, #4]
 8002488:	f003 0303 	and.w	r3, r3, #3
 800248c:	2b02      	cmp	r3, #2
 800248e:	d130      	bne.n	80024f2 <HAL_GPIO_Init+0xa2>
 8002490:	687b      	ldr	r3, [r7, #4]
 8002492:	689b      	ldr	r3, [r3, #8]
 8002494:	613b      	str	r3, [r7, #16]
 8002496:	697b      	ldr	r3, [r7, #20]
 8002498:	005b      	lsls	r3, r3, #1
 800249a:	2203      	movs	r2, #3
 800249c:	fa02 f303 	lsl.w	r3, r2, r3
 80024a0:	43db      	mvns	r3, r3
 80024a2:	693a      	ldr	r2, [r7, #16]
 80024a4:	4013      	ands	r3, r2
 80024a6:	613b      	str	r3, [r7, #16]
 80024a8:	683b      	ldr	r3, [r7, #0]
 80024aa:	68da      	ldr	r2, [r3, #12]
 80024ac:	697b      	ldr	r3, [r7, #20]
 80024ae:	005b      	lsls	r3, r3, #1
 80024b0:	fa02 f303 	lsl.w	r3, r2, r3
 80024b4:	693a      	ldr	r2, [r7, #16]
 80024b6:	4313      	orrs	r3, r2
 80024b8:	613b      	str	r3, [r7, #16]
 80024ba:	687b      	ldr	r3, [r7, #4]
 80024bc:	693a      	ldr	r2, [r7, #16]
 80024be:	609a      	str	r2, [r3, #8]
 80024c0:	687b      	ldr	r3, [r7, #4]
 80024c2:	685b      	ldr	r3, [r3, #4]
 80024c4:	613b      	str	r3, [r7, #16]
 80024c6:	2201      	movs	r2, #1
 80024c8:	697b      	ldr	r3, [r7, #20]
 80024ca:	fa02 f303 	lsl.w	r3, r2, r3
 80024ce:	43db      	mvns	r3, r3
 80024d0:	693a      	ldr	r2, [r7, #16]
 80024d2:	4013      	ands	r3, r2
 80024d4:	613b      	str	r3, [r7, #16]
 80024d6:	683b      	ldr	r3, [r7, #0]
 80024d8:	685b      	ldr	r3, [r3, #4]
 80024da:	091b      	lsrs	r3, r3, #4
 80024dc:	f003 0201 	and.w	r2, r3, #1
 80024e0:	697b      	ldr	r3, [r7, #20]
 80024e2:	fa02 f303 	lsl.w	r3, r2, r3
 80024e6:	693a      	ldr	r2, [r7, #16]
 80024e8:	4313      	orrs	r3, r2
 80024ea:	613b      	str	r3, [r7, #16]
 80024ec:	687b      	ldr	r3, [r7, #4]
 80024ee:	693a      	ldr	r2, [r7, #16]
 80024f0:	605a      	str	r2, [r3, #4]
 80024f2:	683b      	ldr	r3, [r7, #0]
 80024f4:	685b      	ldr	r3, [r3, #4]
 80024f6:	f003 0303 	and.w	r3, r3, #3
 80024fa:	2b03      	cmp	r3, #3
 80024fc:	d017      	beq.n	800252e <HAL_GPIO_Init+0xde>
 80024fe:	687b      	ldr	r3, [r7, #4]
 8002500:	68db      	ldr	r3, [r3, #12]
 8002502:	613b      	str	r3, [r7, #16]
 8002504:	697b      	ldr	r3, [r7, #20]
 8002506:	005b      	lsls	r3, r3, #1
 8002508:	2203      	movs	r2, #3
 800250a:	fa02 f303 	lsl.w	r3, r2, r3
 800250e:	43db      	mvns	r3, r3
 8002510:	693a      	ldr	r2, [r7, #16]
 8002512:	4013      	ands	r3, r2
 8002514:	613b      	str	r3, [r7, #16]
 8002516:	683b      	ldr	r3, [r7, #0]
 8002518:	689a      	ldr	r2, [r3, #8]
 800251a:	697b      	ldr	r3, [r7, #20]
 800251c:	005b      	lsls	r3, r3, #1
 800251e:	fa02 f303 	lsl.w	r3, r2, r3
 8002522:	693a      	ldr	r2, [r7, #16]
 8002524:	4313      	orrs	r3, r2
 8002526:	613b      	str	r3, [r7, #16]
 8002528:	687b      	ldr	r3, [r7, #4]
 800252a:	693a      	ldr	r2, [r7, #16]
 800252c:	60da      	str	r2, [r3, #12]
 800252e:	683b      	ldr	r3, [r7, #0]
 8002530:	685b      	ldr	r3, [r3, #4]
 8002532:	f003 0303 	and.w	r3, r3, #3
 8002536:	2b02      	cmp	r3, #2
 8002538:	d123      	bne.n	8002582 <HAL_GPIO_Init+0x132>
 800253a:	697b      	ldr	r3, [r7, #20]
 800253c:	08da      	lsrs	r2, r3, #3
 800253e:	687b      	ldr	r3, [r7, #4]
 8002540:	3208      	adds	r2, #8
 8002542:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8002546:	613b      	str	r3, [r7, #16]
 8002548:	697b      	ldr	r3, [r7, #20]
 800254a:	f003 0307 	and.w	r3, r3, #7
 800254e:	009b      	lsls	r3, r3, #2
 8002550:	220f      	movs	r2, #15
 8002552:	fa02 f303 	lsl.w	r3, r2, r3
 8002556:	43db      	mvns	r3, r3
 8002558:	693a      	ldr	r2, [r7, #16]
 800255a:	4013      	ands	r3, r2
 800255c:	613b      	str	r3, [r7, #16]
 800255e:	683b      	ldr	r3, [r7, #0]
 8002560:	691a      	ldr	r2, [r3, #16]
 8002562:	697b      	ldr	r3, [r7, #20]
 8002564:	f003 0307 	and.w	r3, r3, #7
 8002568:	009b      	lsls	r3, r3, #2
 800256a:	fa02 f303 	lsl.w	r3, r2, r3
 800256e:	693a      	ldr	r2, [r7, #16]
 8002570:	4313      	orrs	r3, r2
 8002572:	613b      	str	r3, [r7, #16]
 8002574:	697b      	ldr	r3, [r7, #20]
 8002576:	08da      	lsrs	r2, r3, #3
 8002578:	687b      	ldr	r3, [r7, #4]
 800257a:	3208      	adds	r2, #8
 800257c:	6939      	ldr	r1, [r7, #16]
 800257e:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8002582:	687b      	ldr	r3, [r7, #4]
 8002584:	681b      	ldr	r3, [r3, #0]
 8002586:	613b      	str	r3, [r7, #16]
 8002588:	697b      	ldr	r3, [r7, #20]
 800258a:	005b      	lsls	r3, r3, #1
 800258c:	2203      	movs	r2, #3
 800258e:	fa02 f303 	lsl.w	r3, r2, r3
 8002592:	43db      	mvns	r3, r3
 8002594:	693a      	ldr	r2, [r7, #16]
 8002596:	4013      	ands	r3, r2
 8002598:	613b      	str	r3, [r7, #16]
 800259a:	683b      	ldr	r3, [r7, #0]
 800259c:	685b      	ldr	r3, [r3, #4]
 800259e:	f003 0203 	and.w	r2, r3, #3
 80025a2:	697b      	ldr	r3, [r7, #20]
 80025a4:	005b      	lsls	r3, r3, #1
 80025a6:	fa02 f303 	lsl.w	r3, r2, r3
 80025aa:	693a      	ldr	r2, [r7, #16]
 80025ac:	4313      	orrs	r3, r2
 80025ae:	613b      	str	r3, [r7, #16]
 80025b0:	687b      	ldr	r3, [r7, #4]
 80025b2:	693a      	ldr	r2, [r7, #16]
 80025b4:	601a      	str	r2, [r3, #0]
 80025b6:	683b      	ldr	r3, [r7, #0]
 80025b8:	685b      	ldr	r3, [r3, #4]
 80025ba:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 80025be:	2b00      	cmp	r3, #0
 80025c0:	f000 80b2 	beq.w	8002728 <HAL_GPIO_Init+0x2d8>
 80025c4:	4b61      	ldr	r3, [pc, #388]	@ (800274c <HAL_GPIO_Init+0x2fc>)
 80025c6:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80025c8:	4a60      	ldr	r2, [pc, #384]	@ (800274c <HAL_GPIO_Init+0x2fc>)
 80025ca:	f043 0301 	orr.w	r3, r3, #1
 80025ce:	6613      	str	r3, [r2, #96]	@ 0x60
 80025d0:	4b5e      	ldr	r3, [pc, #376]	@ (800274c <HAL_GPIO_Init+0x2fc>)
 80025d2:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80025d4:	f003 0301 	and.w	r3, r3, #1
 80025d8:	60bb      	str	r3, [r7, #8]
 80025da:	68bb      	ldr	r3, [r7, #8]
 80025dc:	4a5c      	ldr	r2, [pc, #368]	@ (8002750 <HAL_GPIO_Init+0x300>)
 80025de:	697b      	ldr	r3, [r7, #20]
 80025e0:	089b      	lsrs	r3, r3, #2
 80025e2:	3302      	adds	r3, #2
 80025e4:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80025e8:	613b      	str	r3, [r7, #16]
 80025ea:	697b      	ldr	r3, [r7, #20]
 80025ec:	f003 0303 	and.w	r3, r3, #3
 80025f0:	009b      	lsls	r3, r3, #2
 80025f2:	220f      	movs	r2, #15
 80025f4:	fa02 f303 	lsl.w	r3, r2, r3
 80025f8:	43db      	mvns	r3, r3
 80025fa:	693a      	ldr	r2, [r7, #16]
 80025fc:	4013      	ands	r3, r2
 80025fe:	613b      	str	r3, [r7, #16]
 8002600:	687b      	ldr	r3, [r7, #4]
 8002602:	f1b3 4f90 	cmp.w	r3, #1207959552	@ 0x48000000
 8002606:	d02b      	beq.n	8002660 <HAL_GPIO_Init+0x210>
 8002608:	687b      	ldr	r3, [r7, #4]
 800260a:	4a52      	ldr	r2, [pc, #328]	@ (8002754 <HAL_GPIO_Init+0x304>)
 800260c:	4293      	cmp	r3, r2
 800260e:	d025      	beq.n	800265c <HAL_GPIO_Init+0x20c>
 8002610:	687b      	ldr	r3, [r7, #4]
 8002612:	4a51      	ldr	r2, [pc, #324]	@ (8002758 <HAL_GPIO_Init+0x308>)
 8002614:	4293      	cmp	r3, r2
 8002616:	d01f      	beq.n	8002658 <HAL_GPIO_Init+0x208>
 8002618:	687b      	ldr	r3, [r7, #4]
 800261a:	4a50      	ldr	r2, [pc, #320]	@ (800275c <HAL_GPIO_Init+0x30c>)
 800261c:	4293      	cmp	r3, r2
 800261e:	d019      	beq.n	8002654 <HAL_GPIO_Init+0x204>
 8002620:	687b      	ldr	r3, [r7, #4]
 8002622:	4a4f      	ldr	r2, [pc, #316]	@ (8002760 <HAL_GPIO_Init+0x310>)
 8002624:	4293      	cmp	r3, r2
 8002626:	d013      	beq.n	8002650 <HAL_GPIO_Init+0x200>
 8002628:	687b      	ldr	r3, [r7, #4]
 800262a:	4a4e      	ldr	r2, [pc, #312]	@ (8002764 <HAL_GPIO_Init+0x314>)
 800262c:	4293      	cmp	r3, r2
 800262e:	d00d      	beq.n	800264c <HAL_GPIO_Init+0x1fc>
 8002630:	687b      	ldr	r3, [r7, #4]
 8002632:	4a4d      	ldr	r2, [pc, #308]	@ (8002768 <HAL_GPIO_Init+0x318>)
 8002634:	4293      	cmp	r3, r2
 8002636:	d007      	beq.n	8002648 <HAL_GPIO_Init+0x1f8>
 8002638:	687b      	ldr	r3, [r7, #4]
 800263a:	4a4c      	ldr	r2, [pc, #304]	@ (800276c <HAL_GPIO_Init+0x31c>)
 800263c:	4293      	cmp	r3, r2
 800263e:	d101      	bne.n	8002644 <HAL_GPIO_Init+0x1f4>
 8002640:	2307      	movs	r3, #7
 8002642:	e00e      	b.n	8002662 <HAL_GPIO_Init+0x212>
 8002644:	2308      	movs	r3, #8
 8002646:	e00c      	b.n	8002662 <HAL_GPIO_Init+0x212>
 8002648:	2306      	movs	r3, #6
 800264a:	e00a      	b.n	8002662 <HAL_GPIO_Init+0x212>
 800264c:	2305      	movs	r3, #5
 800264e:	e008      	b.n	8002662 <HAL_GPIO_Init+0x212>
 8002650:	2304      	movs	r3, #4
 8002652:	e006      	b.n	8002662 <HAL_GPIO_Init+0x212>
 8002654:	2303      	movs	r3, #3
 8002656:	e004      	b.n	8002662 <HAL_GPIO_Init+0x212>
 8002658:	2302      	movs	r3, #2
 800265a:	e002      	b.n	8002662 <HAL_GPIO_Init+0x212>
 800265c:	2301      	movs	r3, #1
 800265e:	e000      	b.n	8002662 <HAL_GPIO_Init+0x212>
 8002660:	2300      	movs	r3, #0
 8002662:	697a      	ldr	r2, [r7, #20]
 8002664:	f002 0203 	and.w	r2, r2, #3
 8002668:	0092      	lsls	r2, r2, #2
 800266a:	4093      	lsls	r3, r2
 800266c:	693a      	ldr	r2, [r7, #16]
 800266e:	4313      	orrs	r3, r2
 8002670:	613b      	str	r3, [r7, #16]
 8002672:	4937      	ldr	r1, [pc, #220]	@ (8002750 <HAL_GPIO_Init+0x300>)
 8002674:	697b      	ldr	r3, [r7, #20]
 8002676:	089b      	lsrs	r3, r3, #2
 8002678:	3302      	adds	r3, #2
 800267a:	693a      	ldr	r2, [r7, #16]
 800267c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002680:	4b3b      	ldr	r3, [pc, #236]	@ (8002770 <HAL_GPIO_Init+0x320>)
 8002682:	689b      	ldr	r3, [r3, #8]
 8002684:	613b      	str	r3, [r7, #16]
 8002686:	68fb      	ldr	r3, [r7, #12]
 8002688:	43db      	mvns	r3, r3
 800268a:	693a      	ldr	r2, [r7, #16]
 800268c:	4013      	ands	r3, r2
 800268e:	613b      	str	r3, [r7, #16]
 8002690:	683b      	ldr	r3, [r7, #0]
 8002692:	685b      	ldr	r3, [r3, #4]
 8002694:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8002698:	2b00      	cmp	r3, #0
 800269a:	d003      	beq.n	80026a4 <HAL_GPIO_Init+0x254>
 800269c:	693a      	ldr	r2, [r7, #16]
 800269e:	68fb      	ldr	r3, [r7, #12]
 80026a0:	4313      	orrs	r3, r2
 80026a2:	613b      	str	r3, [r7, #16]
 80026a4:	4a32      	ldr	r2, [pc, #200]	@ (8002770 <HAL_GPIO_Init+0x320>)
 80026a6:	693b      	ldr	r3, [r7, #16]
 80026a8:	6093      	str	r3, [r2, #8]
 80026aa:	4b31      	ldr	r3, [pc, #196]	@ (8002770 <HAL_GPIO_Init+0x320>)
 80026ac:	68db      	ldr	r3, [r3, #12]
 80026ae:	613b      	str	r3, [r7, #16]
 80026b0:	68fb      	ldr	r3, [r7, #12]
 80026b2:	43db      	mvns	r3, r3
 80026b4:	693a      	ldr	r2, [r7, #16]
 80026b6:	4013      	ands	r3, r2
 80026b8:	613b      	str	r3, [r7, #16]
 80026ba:	683b      	ldr	r3, [r7, #0]
 80026bc:	685b      	ldr	r3, [r3, #4]
 80026be:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 80026c2:	2b00      	cmp	r3, #0
 80026c4:	d003      	beq.n	80026ce <HAL_GPIO_Init+0x27e>
 80026c6:	693a      	ldr	r2, [r7, #16]
 80026c8:	68fb      	ldr	r3, [r7, #12]
 80026ca:	4313      	orrs	r3, r2
 80026cc:	613b      	str	r3, [r7, #16]
 80026ce:	4a28      	ldr	r2, [pc, #160]	@ (8002770 <HAL_GPIO_Init+0x320>)
 80026d0:	693b      	ldr	r3, [r7, #16]
 80026d2:	60d3      	str	r3, [r2, #12]
 80026d4:	4b26      	ldr	r3, [pc, #152]	@ (8002770 <HAL_GPIO_Init+0x320>)
 80026d6:	685b      	ldr	r3, [r3, #4]
 80026d8:	613b      	str	r3, [r7, #16]
 80026da:	68fb      	ldr	r3, [r7, #12]
 80026dc:	43db      	mvns	r3, r3
 80026de:	693a      	ldr	r2, [r7, #16]
 80026e0:	4013      	ands	r3, r2
 80026e2:	613b      	str	r3, [r7, #16]
 80026e4:	683b      	ldr	r3, [r7, #0]
 80026e6:	685b      	ldr	r3, [r3, #4]
 80026e8:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80026ec:	2b00      	cmp	r3, #0
 80026ee:	d003      	beq.n	80026f8 <HAL_GPIO_Init+0x2a8>
 80026f0:	693a      	ldr	r2, [r7, #16]
 80026f2:	68fb      	ldr	r3, [r7, #12]
 80026f4:	4313      	orrs	r3, r2
 80026f6:	613b      	str	r3, [r7, #16]
 80026f8:	4a1d      	ldr	r2, [pc, #116]	@ (8002770 <HAL_GPIO_Init+0x320>)
 80026fa:	693b      	ldr	r3, [r7, #16]
 80026fc:	6053      	str	r3, [r2, #4]
 80026fe:	4b1c      	ldr	r3, [pc, #112]	@ (8002770 <HAL_GPIO_Init+0x320>)
 8002700:	681b      	ldr	r3, [r3, #0]
 8002702:	613b      	str	r3, [r7, #16]
 8002704:	68fb      	ldr	r3, [r7, #12]
 8002706:	43db      	mvns	r3, r3
 8002708:	693a      	ldr	r2, [r7, #16]
 800270a:	4013      	ands	r3, r2
 800270c:	613b      	str	r3, [r7, #16]
 800270e:	683b      	ldr	r3, [r7, #0]
 8002710:	685b      	ldr	r3, [r3, #4]
 8002712:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8002716:	2b00      	cmp	r3, #0
 8002718:	d003      	beq.n	8002722 <HAL_GPIO_Init+0x2d2>
 800271a:	693a      	ldr	r2, [r7, #16]
 800271c:	68fb      	ldr	r3, [r7, #12]
 800271e:	4313      	orrs	r3, r2
 8002720:	613b      	str	r3, [r7, #16]
 8002722:	4a13      	ldr	r2, [pc, #76]	@ (8002770 <HAL_GPIO_Init+0x320>)
 8002724:	693b      	ldr	r3, [r7, #16]
 8002726:	6013      	str	r3, [r2, #0]
 8002728:	697b      	ldr	r3, [r7, #20]
 800272a:	3301      	adds	r3, #1
 800272c:	617b      	str	r3, [r7, #20]
 800272e:	683b      	ldr	r3, [r7, #0]
 8002730:	681a      	ldr	r2, [r3, #0]
 8002732:	697b      	ldr	r3, [r7, #20]
 8002734:	fa22 f303 	lsr.w	r3, r2, r3
 8002738:	2b00      	cmp	r3, #0
 800273a:	f47f ae91 	bne.w	8002460 <HAL_GPIO_Init+0x10>
 800273e:	bf00      	nop
 8002740:	bf00      	nop
 8002742:	371c      	adds	r7, #28
 8002744:	46bd      	mov	sp, r7
 8002746:	f85d 7b04 	ldr.w	r7, [sp], #4
 800274a:	4770      	bx	lr
 800274c:	40021000 	.word	0x40021000
 8002750:	40010000 	.word	0x40010000
 8002754:	48000400 	.word	0x48000400
 8002758:	48000800 	.word	0x48000800
 800275c:	48000c00 	.word	0x48000c00
 8002760:	48001000 	.word	0x48001000
 8002764:	48001400 	.word	0x48001400
 8002768:	48001800 	.word	0x48001800
 800276c:	48001c00 	.word	0x48001c00
 8002770:	40010400 	.word	0x40010400

08002774 <HAL_GPIO_ReadPin>:
 8002774:	b480      	push	{r7}
 8002776:	b085      	sub	sp, #20
 8002778:	af00      	add	r7, sp, #0
 800277a:	6078      	str	r0, [r7, #4]
 800277c:	460b      	mov	r3, r1
 800277e:	807b      	strh	r3, [r7, #2]
 8002780:	687b      	ldr	r3, [r7, #4]
 8002782:	691a      	ldr	r2, [r3, #16]
 8002784:	887b      	ldrh	r3, [r7, #2]
 8002786:	4013      	ands	r3, r2
 8002788:	2b00      	cmp	r3, #0
 800278a:	d002      	beq.n	8002792 <HAL_GPIO_ReadPin+0x1e>
 800278c:	2301      	movs	r3, #1
 800278e:	73fb      	strb	r3, [r7, #15]
 8002790:	e001      	b.n	8002796 <HAL_GPIO_ReadPin+0x22>
 8002792:	2300      	movs	r3, #0
 8002794:	73fb      	strb	r3, [r7, #15]
 8002796:	7bfb      	ldrb	r3, [r7, #15]
 8002798:	4618      	mov	r0, r3
 800279a:	3714      	adds	r7, #20
 800279c:	46bd      	mov	sp, r7
 800279e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027a2:	4770      	bx	lr

080027a4 <HAL_GPIO_WritePin>:
 80027a4:	b480      	push	{r7}
 80027a6:	b083      	sub	sp, #12
 80027a8:	af00      	add	r7, sp, #0
 80027aa:	6078      	str	r0, [r7, #4]
 80027ac:	460b      	mov	r3, r1
 80027ae:	807b      	strh	r3, [r7, #2]
 80027b0:	4613      	mov	r3, r2
 80027b2:	707b      	strb	r3, [r7, #1]
 80027b4:	787b      	ldrb	r3, [r7, #1]
 80027b6:	2b00      	cmp	r3, #0
 80027b8:	d003      	beq.n	80027c2 <HAL_GPIO_WritePin+0x1e>
 80027ba:	887a      	ldrh	r2, [r7, #2]
 80027bc:	687b      	ldr	r3, [r7, #4]
 80027be:	619a      	str	r2, [r3, #24]
 80027c0:	e002      	b.n	80027c8 <HAL_GPIO_WritePin+0x24>
 80027c2:	887a      	ldrh	r2, [r7, #2]
 80027c4:	687b      	ldr	r3, [r7, #4]
 80027c6:	629a      	str	r2, [r3, #40]	@ 0x28
 80027c8:	bf00      	nop
 80027ca:	370c      	adds	r7, #12
 80027cc:	46bd      	mov	sp, r7
 80027ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027d2:	4770      	bx	lr

080027d4 <HAL_PWREx_GetVoltageRange>:
 80027d4:	b480      	push	{r7}
 80027d6:	af00      	add	r7, sp, #0
 80027d8:	4b04      	ldr	r3, [pc, #16]	@ (80027ec <HAL_PWREx_GetVoltageRange+0x18>)
 80027da:	681b      	ldr	r3, [r3, #0]
 80027dc:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 80027e0:	4618      	mov	r0, r3
 80027e2:	46bd      	mov	sp, r7
 80027e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027e8:	4770      	bx	lr
 80027ea:	bf00      	nop
 80027ec:	40007000 	.word	0x40007000

080027f0 <HAL_PWREx_ControlVoltageScaling>:
 80027f0:	b480      	push	{r7}
 80027f2:	b085      	sub	sp, #20
 80027f4:	af00      	add	r7, sp, #0
 80027f6:	6078      	str	r0, [r7, #4]
 80027f8:	687b      	ldr	r3, [r7, #4]
 80027fa:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80027fe:	d130      	bne.n	8002862 <HAL_PWREx_ControlVoltageScaling+0x72>
 8002800:	4b23      	ldr	r3, [pc, #140]	@ (8002890 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8002802:	681b      	ldr	r3, [r3, #0]
 8002804:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 8002808:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800280c:	d038      	beq.n	8002880 <HAL_PWREx_ControlVoltageScaling+0x90>
 800280e:	4b20      	ldr	r3, [pc, #128]	@ (8002890 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8002810:	681b      	ldr	r3, [r3, #0]
 8002812:	f423 63c0 	bic.w	r3, r3, #1536	@ 0x600
 8002816:	4a1e      	ldr	r2, [pc, #120]	@ (8002890 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8002818:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800281c:	6013      	str	r3, [r2, #0]
 800281e:	4b1d      	ldr	r3, [pc, #116]	@ (8002894 <HAL_PWREx_ControlVoltageScaling+0xa4>)
 8002820:	681b      	ldr	r3, [r3, #0]
 8002822:	2232      	movs	r2, #50	@ 0x32
 8002824:	fb02 f303 	mul.w	r3, r2, r3
 8002828:	4a1b      	ldr	r2, [pc, #108]	@ (8002898 <HAL_PWREx_ControlVoltageScaling+0xa8>)
 800282a:	fba2 2303 	umull	r2, r3, r2, r3
 800282e:	0c9b      	lsrs	r3, r3, #18
 8002830:	3301      	adds	r3, #1
 8002832:	60fb      	str	r3, [r7, #12]
 8002834:	e002      	b.n	800283c <HAL_PWREx_ControlVoltageScaling+0x4c>
 8002836:	68fb      	ldr	r3, [r7, #12]
 8002838:	3b01      	subs	r3, #1
 800283a:	60fb      	str	r3, [r7, #12]
 800283c:	4b14      	ldr	r3, [pc, #80]	@ (8002890 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 800283e:	695b      	ldr	r3, [r3, #20]
 8002840:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8002844:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8002848:	d102      	bne.n	8002850 <HAL_PWREx_ControlVoltageScaling+0x60>
 800284a:	68fb      	ldr	r3, [r7, #12]
 800284c:	2b00      	cmp	r3, #0
 800284e:	d1f2      	bne.n	8002836 <HAL_PWREx_ControlVoltageScaling+0x46>
 8002850:	4b0f      	ldr	r3, [pc, #60]	@ (8002890 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8002852:	695b      	ldr	r3, [r3, #20]
 8002854:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8002858:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800285c:	d110      	bne.n	8002880 <HAL_PWREx_ControlVoltageScaling+0x90>
 800285e:	2303      	movs	r3, #3
 8002860:	e00f      	b.n	8002882 <HAL_PWREx_ControlVoltageScaling+0x92>
 8002862:	4b0b      	ldr	r3, [pc, #44]	@ (8002890 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8002864:	681b      	ldr	r3, [r3, #0]
 8002866:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 800286a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800286e:	d007      	beq.n	8002880 <HAL_PWREx_ControlVoltageScaling+0x90>
 8002870:	4b07      	ldr	r3, [pc, #28]	@ (8002890 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8002872:	681b      	ldr	r3, [r3, #0]
 8002874:	f423 63c0 	bic.w	r3, r3, #1536	@ 0x600
 8002878:	4a05      	ldr	r2, [pc, #20]	@ (8002890 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 800287a:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 800287e:	6013      	str	r3, [r2, #0]
 8002880:	2300      	movs	r3, #0
 8002882:	4618      	mov	r0, r3
 8002884:	3714      	adds	r7, #20
 8002886:	46bd      	mov	sp, r7
 8002888:	f85d 7b04 	ldr.w	r7, [sp], #4
 800288c:	4770      	bx	lr
 800288e:	bf00      	nop
 8002890:	40007000 	.word	0x40007000
 8002894:	2000000c 	.word	0x2000000c
 8002898:	431bde83 	.word	0x431bde83

0800289c <HAL_PWREx_EnableVddIO2>:
 800289c:	b480      	push	{r7}
 800289e:	af00      	add	r7, sp, #0
 80028a0:	4b05      	ldr	r3, [pc, #20]	@ (80028b8 <HAL_PWREx_EnableVddIO2+0x1c>)
 80028a2:	685b      	ldr	r3, [r3, #4]
 80028a4:	4a04      	ldr	r2, [pc, #16]	@ (80028b8 <HAL_PWREx_EnableVddIO2+0x1c>)
 80028a6:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 80028aa:	6053      	str	r3, [r2, #4]
 80028ac:	bf00      	nop
 80028ae:	46bd      	mov	sp, r7
 80028b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80028b4:	4770      	bx	lr
 80028b6:	bf00      	nop
 80028b8:	40007000 	.word	0x40007000

080028bc <HAL_RCC_OscConfig>:
 80028bc:	b580      	push	{r7, lr}
 80028be:	b088      	sub	sp, #32
 80028c0:	af00      	add	r7, sp, #0
 80028c2:	6078      	str	r0, [r7, #4]
 80028c4:	687b      	ldr	r3, [r7, #4]
 80028c6:	2b00      	cmp	r3, #0
 80028c8:	d102      	bne.n	80028d0 <HAL_RCC_OscConfig+0x14>
 80028ca:	2301      	movs	r3, #1
 80028cc:	f000 bc08 	b.w	80030e0 <HAL_RCC_OscConfig+0x824>
 80028d0:	4b96      	ldr	r3, [pc, #600]	@ (8002b2c <HAL_RCC_OscConfig+0x270>)
 80028d2:	689b      	ldr	r3, [r3, #8]
 80028d4:	f003 030c 	and.w	r3, r3, #12
 80028d8:	61bb      	str	r3, [r7, #24]
 80028da:	4b94      	ldr	r3, [pc, #592]	@ (8002b2c <HAL_RCC_OscConfig+0x270>)
 80028dc:	68db      	ldr	r3, [r3, #12]
 80028de:	f003 0303 	and.w	r3, r3, #3
 80028e2:	617b      	str	r3, [r7, #20]
 80028e4:	687b      	ldr	r3, [r7, #4]
 80028e6:	681b      	ldr	r3, [r3, #0]
 80028e8:	f003 0310 	and.w	r3, r3, #16
 80028ec:	2b00      	cmp	r3, #0
 80028ee:	f000 80e4 	beq.w	8002aba <HAL_RCC_OscConfig+0x1fe>
 80028f2:	69bb      	ldr	r3, [r7, #24]
 80028f4:	2b00      	cmp	r3, #0
 80028f6:	d007      	beq.n	8002908 <HAL_RCC_OscConfig+0x4c>
 80028f8:	69bb      	ldr	r3, [r7, #24]
 80028fa:	2b0c      	cmp	r3, #12
 80028fc:	f040 808b 	bne.w	8002a16 <HAL_RCC_OscConfig+0x15a>
 8002900:	697b      	ldr	r3, [r7, #20]
 8002902:	2b01      	cmp	r3, #1
 8002904:	f040 8087 	bne.w	8002a16 <HAL_RCC_OscConfig+0x15a>
 8002908:	4b88      	ldr	r3, [pc, #544]	@ (8002b2c <HAL_RCC_OscConfig+0x270>)
 800290a:	681b      	ldr	r3, [r3, #0]
 800290c:	f003 0302 	and.w	r3, r3, #2
 8002910:	2b00      	cmp	r3, #0
 8002912:	d005      	beq.n	8002920 <HAL_RCC_OscConfig+0x64>
 8002914:	687b      	ldr	r3, [r7, #4]
 8002916:	699b      	ldr	r3, [r3, #24]
 8002918:	2b00      	cmp	r3, #0
 800291a:	d101      	bne.n	8002920 <HAL_RCC_OscConfig+0x64>
 800291c:	2301      	movs	r3, #1
 800291e:	e3df      	b.n	80030e0 <HAL_RCC_OscConfig+0x824>
 8002920:	687b      	ldr	r3, [r7, #4]
 8002922:	6a1a      	ldr	r2, [r3, #32]
 8002924:	4b81      	ldr	r3, [pc, #516]	@ (8002b2c <HAL_RCC_OscConfig+0x270>)
 8002926:	681b      	ldr	r3, [r3, #0]
 8002928:	f003 0308 	and.w	r3, r3, #8
 800292c:	2b00      	cmp	r3, #0
 800292e:	d004      	beq.n	800293a <HAL_RCC_OscConfig+0x7e>
 8002930:	4b7e      	ldr	r3, [pc, #504]	@ (8002b2c <HAL_RCC_OscConfig+0x270>)
 8002932:	681b      	ldr	r3, [r3, #0]
 8002934:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8002938:	e005      	b.n	8002946 <HAL_RCC_OscConfig+0x8a>
 800293a:	4b7c      	ldr	r3, [pc, #496]	@ (8002b2c <HAL_RCC_OscConfig+0x270>)
 800293c:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8002940:	091b      	lsrs	r3, r3, #4
 8002942:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8002946:	4293      	cmp	r3, r2
 8002948:	d223      	bcs.n	8002992 <HAL_RCC_OscConfig+0xd6>
 800294a:	687b      	ldr	r3, [r7, #4]
 800294c:	6a1b      	ldr	r3, [r3, #32]
 800294e:	4618      	mov	r0, r3
 8002950:	f000 fd92 	bl	8003478 <RCC_SetFlashLatencyFromMSIRange>
 8002954:	4603      	mov	r3, r0
 8002956:	2b00      	cmp	r3, #0
 8002958:	d001      	beq.n	800295e <HAL_RCC_OscConfig+0xa2>
 800295a:	2301      	movs	r3, #1
 800295c:	e3c0      	b.n	80030e0 <HAL_RCC_OscConfig+0x824>
 800295e:	4b73      	ldr	r3, [pc, #460]	@ (8002b2c <HAL_RCC_OscConfig+0x270>)
 8002960:	681b      	ldr	r3, [r3, #0]
 8002962:	4a72      	ldr	r2, [pc, #456]	@ (8002b2c <HAL_RCC_OscConfig+0x270>)
 8002964:	f043 0308 	orr.w	r3, r3, #8
 8002968:	6013      	str	r3, [r2, #0]
 800296a:	4b70      	ldr	r3, [pc, #448]	@ (8002b2c <HAL_RCC_OscConfig+0x270>)
 800296c:	681b      	ldr	r3, [r3, #0]
 800296e:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8002972:	687b      	ldr	r3, [r7, #4]
 8002974:	6a1b      	ldr	r3, [r3, #32]
 8002976:	496d      	ldr	r1, [pc, #436]	@ (8002b2c <HAL_RCC_OscConfig+0x270>)
 8002978:	4313      	orrs	r3, r2
 800297a:	600b      	str	r3, [r1, #0]
 800297c:	4b6b      	ldr	r3, [pc, #428]	@ (8002b2c <HAL_RCC_OscConfig+0x270>)
 800297e:	685b      	ldr	r3, [r3, #4]
 8002980:	f423 427f 	bic.w	r2, r3, #65280	@ 0xff00
 8002984:	687b      	ldr	r3, [r7, #4]
 8002986:	69db      	ldr	r3, [r3, #28]
 8002988:	021b      	lsls	r3, r3, #8
 800298a:	4968      	ldr	r1, [pc, #416]	@ (8002b2c <HAL_RCC_OscConfig+0x270>)
 800298c:	4313      	orrs	r3, r2
 800298e:	604b      	str	r3, [r1, #4]
 8002990:	e025      	b.n	80029de <HAL_RCC_OscConfig+0x122>
 8002992:	4b66      	ldr	r3, [pc, #408]	@ (8002b2c <HAL_RCC_OscConfig+0x270>)
 8002994:	681b      	ldr	r3, [r3, #0]
 8002996:	4a65      	ldr	r2, [pc, #404]	@ (8002b2c <HAL_RCC_OscConfig+0x270>)
 8002998:	f043 0308 	orr.w	r3, r3, #8
 800299c:	6013      	str	r3, [r2, #0]
 800299e:	4b63      	ldr	r3, [pc, #396]	@ (8002b2c <HAL_RCC_OscConfig+0x270>)
 80029a0:	681b      	ldr	r3, [r3, #0]
 80029a2:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 80029a6:	687b      	ldr	r3, [r7, #4]
 80029a8:	6a1b      	ldr	r3, [r3, #32]
 80029aa:	4960      	ldr	r1, [pc, #384]	@ (8002b2c <HAL_RCC_OscConfig+0x270>)
 80029ac:	4313      	orrs	r3, r2
 80029ae:	600b      	str	r3, [r1, #0]
 80029b0:	4b5e      	ldr	r3, [pc, #376]	@ (8002b2c <HAL_RCC_OscConfig+0x270>)
 80029b2:	685b      	ldr	r3, [r3, #4]
 80029b4:	f423 427f 	bic.w	r2, r3, #65280	@ 0xff00
 80029b8:	687b      	ldr	r3, [r7, #4]
 80029ba:	69db      	ldr	r3, [r3, #28]
 80029bc:	021b      	lsls	r3, r3, #8
 80029be:	495b      	ldr	r1, [pc, #364]	@ (8002b2c <HAL_RCC_OscConfig+0x270>)
 80029c0:	4313      	orrs	r3, r2
 80029c2:	604b      	str	r3, [r1, #4]
 80029c4:	69bb      	ldr	r3, [r7, #24]
 80029c6:	2b00      	cmp	r3, #0
 80029c8:	d109      	bne.n	80029de <HAL_RCC_OscConfig+0x122>
 80029ca:	687b      	ldr	r3, [r7, #4]
 80029cc:	6a1b      	ldr	r3, [r3, #32]
 80029ce:	4618      	mov	r0, r3
 80029d0:	f000 fd52 	bl	8003478 <RCC_SetFlashLatencyFromMSIRange>
 80029d4:	4603      	mov	r3, r0
 80029d6:	2b00      	cmp	r3, #0
 80029d8:	d001      	beq.n	80029de <HAL_RCC_OscConfig+0x122>
 80029da:	2301      	movs	r3, #1
 80029dc:	e380      	b.n	80030e0 <HAL_RCC_OscConfig+0x824>
 80029de:	f000 fc87 	bl	80032f0 <HAL_RCC_GetSysClockFreq>
 80029e2:	4602      	mov	r2, r0
 80029e4:	4b51      	ldr	r3, [pc, #324]	@ (8002b2c <HAL_RCC_OscConfig+0x270>)
 80029e6:	689b      	ldr	r3, [r3, #8]
 80029e8:	091b      	lsrs	r3, r3, #4
 80029ea:	f003 030f 	and.w	r3, r3, #15
 80029ee:	4950      	ldr	r1, [pc, #320]	@ (8002b30 <HAL_RCC_OscConfig+0x274>)
 80029f0:	5ccb      	ldrb	r3, [r1, r3]
 80029f2:	f003 031f 	and.w	r3, r3, #31
 80029f6:	fa22 f303 	lsr.w	r3, r2, r3
 80029fa:	4a4e      	ldr	r2, [pc, #312]	@ (8002b34 <HAL_RCC_OscConfig+0x278>)
 80029fc:	6013      	str	r3, [r2, #0]
 80029fe:	4b4e      	ldr	r3, [pc, #312]	@ (8002b38 <HAL_RCC_OscConfig+0x27c>)
 8002a00:	681b      	ldr	r3, [r3, #0]
 8002a02:	4618      	mov	r0, r3
 8002a04:	f7fe fe00 	bl	8001608 <HAL_InitTick>
 8002a08:	4603      	mov	r3, r0
 8002a0a:	73fb      	strb	r3, [r7, #15]
 8002a0c:	7bfb      	ldrb	r3, [r7, #15]
 8002a0e:	2b00      	cmp	r3, #0
 8002a10:	d052      	beq.n	8002ab8 <HAL_RCC_OscConfig+0x1fc>
 8002a12:	7bfb      	ldrb	r3, [r7, #15]
 8002a14:	e364      	b.n	80030e0 <HAL_RCC_OscConfig+0x824>
 8002a16:	687b      	ldr	r3, [r7, #4]
 8002a18:	699b      	ldr	r3, [r3, #24]
 8002a1a:	2b00      	cmp	r3, #0
 8002a1c:	d032      	beq.n	8002a84 <HAL_RCC_OscConfig+0x1c8>
 8002a1e:	4b43      	ldr	r3, [pc, #268]	@ (8002b2c <HAL_RCC_OscConfig+0x270>)
 8002a20:	681b      	ldr	r3, [r3, #0]
 8002a22:	4a42      	ldr	r2, [pc, #264]	@ (8002b2c <HAL_RCC_OscConfig+0x270>)
 8002a24:	f043 0301 	orr.w	r3, r3, #1
 8002a28:	6013      	str	r3, [r2, #0]
 8002a2a:	f7fe fe3d 	bl	80016a8 <HAL_GetTick>
 8002a2e:	6138      	str	r0, [r7, #16]
 8002a30:	e008      	b.n	8002a44 <HAL_RCC_OscConfig+0x188>
 8002a32:	f7fe fe39 	bl	80016a8 <HAL_GetTick>
 8002a36:	4602      	mov	r2, r0
 8002a38:	693b      	ldr	r3, [r7, #16]
 8002a3a:	1ad3      	subs	r3, r2, r3
 8002a3c:	2b02      	cmp	r3, #2
 8002a3e:	d901      	bls.n	8002a44 <HAL_RCC_OscConfig+0x188>
 8002a40:	2303      	movs	r3, #3
 8002a42:	e34d      	b.n	80030e0 <HAL_RCC_OscConfig+0x824>
 8002a44:	4b39      	ldr	r3, [pc, #228]	@ (8002b2c <HAL_RCC_OscConfig+0x270>)
 8002a46:	681b      	ldr	r3, [r3, #0]
 8002a48:	f003 0302 	and.w	r3, r3, #2
 8002a4c:	2b00      	cmp	r3, #0
 8002a4e:	d0f0      	beq.n	8002a32 <HAL_RCC_OscConfig+0x176>
 8002a50:	4b36      	ldr	r3, [pc, #216]	@ (8002b2c <HAL_RCC_OscConfig+0x270>)
 8002a52:	681b      	ldr	r3, [r3, #0]
 8002a54:	4a35      	ldr	r2, [pc, #212]	@ (8002b2c <HAL_RCC_OscConfig+0x270>)
 8002a56:	f043 0308 	orr.w	r3, r3, #8
 8002a5a:	6013      	str	r3, [r2, #0]
 8002a5c:	4b33      	ldr	r3, [pc, #204]	@ (8002b2c <HAL_RCC_OscConfig+0x270>)
 8002a5e:	681b      	ldr	r3, [r3, #0]
 8002a60:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8002a64:	687b      	ldr	r3, [r7, #4]
 8002a66:	6a1b      	ldr	r3, [r3, #32]
 8002a68:	4930      	ldr	r1, [pc, #192]	@ (8002b2c <HAL_RCC_OscConfig+0x270>)
 8002a6a:	4313      	orrs	r3, r2
 8002a6c:	600b      	str	r3, [r1, #0]
 8002a6e:	4b2f      	ldr	r3, [pc, #188]	@ (8002b2c <HAL_RCC_OscConfig+0x270>)
 8002a70:	685b      	ldr	r3, [r3, #4]
 8002a72:	f423 427f 	bic.w	r2, r3, #65280	@ 0xff00
 8002a76:	687b      	ldr	r3, [r7, #4]
 8002a78:	69db      	ldr	r3, [r3, #28]
 8002a7a:	021b      	lsls	r3, r3, #8
 8002a7c:	492b      	ldr	r1, [pc, #172]	@ (8002b2c <HAL_RCC_OscConfig+0x270>)
 8002a7e:	4313      	orrs	r3, r2
 8002a80:	604b      	str	r3, [r1, #4]
 8002a82:	e01a      	b.n	8002aba <HAL_RCC_OscConfig+0x1fe>
 8002a84:	4b29      	ldr	r3, [pc, #164]	@ (8002b2c <HAL_RCC_OscConfig+0x270>)
 8002a86:	681b      	ldr	r3, [r3, #0]
 8002a88:	4a28      	ldr	r2, [pc, #160]	@ (8002b2c <HAL_RCC_OscConfig+0x270>)
 8002a8a:	f023 0301 	bic.w	r3, r3, #1
 8002a8e:	6013      	str	r3, [r2, #0]
 8002a90:	f7fe fe0a 	bl	80016a8 <HAL_GetTick>
 8002a94:	6138      	str	r0, [r7, #16]
 8002a96:	e008      	b.n	8002aaa <HAL_RCC_OscConfig+0x1ee>
 8002a98:	f7fe fe06 	bl	80016a8 <HAL_GetTick>
 8002a9c:	4602      	mov	r2, r0
 8002a9e:	693b      	ldr	r3, [r7, #16]
 8002aa0:	1ad3      	subs	r3, r2, r3
 8002aa2:	2b02      	cmp	r3, #2
 8002aa4:	d901      	bls.n	8002aaa <HAL_RCC_OscConfig+0x1ee>
 8002aa6:	2303      	movs	r3, #3
 8002aa8:	e31a      	b.n	80030e0 <HAL_RCC_OscConfig+0x824>
 8002aaa:	4b20      	ldr	r3, [pc, #128]	@ (8002b2c <HAL_RCC_OscConfig+0x270>)
 8002aac:	681b      	ldr	r3, [r3, #0]
 8002aae:	f003 0302 	and.w	r3, r3, #2
 8002ab2:	2b00      	cmp	r3, #0
 8002ab4:	d1f0      	bne.n	8002a98 <HAL_RCC_OscConfig+0x1dc>
 8002ab6:	e000      	b.n	8002aba <HAL_RCC_OscConfig+0x1fe>
 8002ab8:	bf00      	nop
 8002aba:	687b      	ldr	r3, [r7, #4]
 8002abc:	681b      	ldr	r3, [r3, #0]
 8002abe:	f003 0301 	and.w	r3, r3, #1
 8002ac2:	2b00      	cmp	r3, #0
 8002ac4:	d073      	beq.n	8002bae <HAL_RCC_OscConfig+0x2f2>
 8002ac6:	69bb      	ldr	r3, [r7, #24]
 8002ac8:	2b08      	cmp	r3, #8
 8002aca:	d005      	beq.n	8002ad8 <HAL_RCC_OscConfig+0x21c>
 8002acc:	69bb      	ldr	r3, [r7, #24]
 8002ace:	2b0c      	cmp	r3, #12
 8002ad0:	d10e      	bne.n	8002af0 <HAL_RCC_OscConfig+0x234>
 8002ad2:	697b      	ldr	r3, [r7, #20]
 8002ad4:	2b03      	cmp	r3, #3
 8002ad6:	d10b      	bne.n	8002af0 <HAL_RCC_OscConfig+0x234>
 8002ad8:	4b14      	ldr	r3, [pc, #80]	@ (8002b2c <HAL_RCC_OscConfig+0x270>)
 8002ada:	681b      	ldr	r3, [r3, #0]
 8002adc:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002ae0:	2b00      	cmp	r3, #0
 8002ae2:	d063      	beq.n	8002bac <HAL_RCC_OscConfig+0x2f0>
 8002ae4:	687b      	ldr	r3, [r7, #4]
 8002ae6:	685b      	ldr	r3, [r3, #4]
 8002ae8:	2b00      	cmp	r3, #0
 8002aea:	d15f      	bne.n	8002bac <HAL_RCC_OscConfig+0x2f0>
 8002aec:	2301      	movs	r3, #1
 8002aee:	e2f7      	b.n	80030e0 <HAL_RCC_OscConfig+0x824>
 8002af0:	687b      	ldr	r3, [r7, #4]
 8002af2:	685b      	ldr	r3, [r3, #4]
 8002af4:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8002af8:	d106      	bne.n	8002b08 <HAL_RCC_OscConfig+0x24c>
 8002afa:	4b0c      	ldr	r3, [pc, #48]	@ (8002b2c <HAL_RCC_OscConfig+0x270>)
 8002afc:	681b      	ldr	r3, [r3, #0]
 8002afe:	4a0b      	ldr	r2, [pc, #44]	@ (8002b2c <HAL_RCC_OscConfig+0x270>)
 8002b00:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8002b04:	6013      	str	r3, [r2, #0]
 8002b06:	e025      	b.n	8002b54 <HAL_RCC_OscConfig+0x298>
 8002b08:	687b      	ldr	r3, [r7, #4]
 8002b0a:	685b      	ldr	r3, [r3, #4]
 8002b0c:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8002b10:	d114      	bne.n	8002b3c <HAL_RCC_OscConfig+0x280>
 8002b12:	4b06      	ldr	r3, [pc, #24]	@ (8002b2c <HAL_RCC_OscConfig+0x270>)
 8002b14:	681b      	ldr	r3, [r3, #0]
 8002b16:	4a05      	ldr	r2, [pc, #20]	@ (8002b2c <HAL_RCC_OscConfig+0x270>)
 8002b18:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8002b1c:	6013      	str	r3, [r2, #0]
 8002b1e:	4b03      	ldr	r3, [pc, #12]	@ (8002b2c <HAL_RCC_OscConfig+0x270>)
 8002b20:	681b      	ldr	r3, [r3, #0]
 8002b22:	4a02      	ldr	r2, [pc, #8]	@ (8002b2c <HAL_RCC_OscConfig+0x270>)
 8002b24:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8002b28:	6013      	str	r3, [r2, #0]
 8002b2a:	e013      	b.n	8002b54 <HAL_RCC_OscConfig+0x298>
 8002b2c:	40021000 	.word	0x40021000
 8002b30:	08005994 	.word	0x08005994
 8002b34:	2000000c 	.word	0x2000000c
 8002b38:	20000010 	.word	0x20000010
 8002b3c:	4ba0      	ldr	r3, [pc, #640]	@ (8002dc0 <HAL_RCC_OscConfig+0x504>)
 8002b3e:	681b      	ldr	r3, [r3, #0]
 8002b40:	4a9f      	ldr	r2, [pc, #636]	@ (8002dc0 <HAL_RCC_OscConfig+0x504>)
 8002b42:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8002b46:	6013      	str	r3, [r2, #0]
 8002b48:	4b9d      	ldr	r3, [pc, #628]	@ (8002dc0 <HAL_RCC_OscConfig+0x504>)
 8002b4a:	681b      	ldr	r3, [r3, #0]
 8002b4c:	4a9c      	ldr	r2, [pc, #624]	@ (8002dc0 <HAL_RCC_OscConfig+0x504>)
 8002b4e:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8002b52:	6013      	str	r3, [r2, #0]
 8002b54:	687b      	ldr	r3, [r7, #4]
 8002b56:	685b      	ldr	r3, [r3, #4]
 8002b58:	2b00      	cmp	r3, #0
 8002b5a:	d013      	beq.n	8002b84 <HAL_RCC_OscConfig+0x2c8>
 8002b5c:	f7fe fda4 	bl	80016a8 <HAL_GetTick>
 8002b60:	6138      	str	r0, [r7, #16]
 8002b62:	e008      	b.n	8002b76 <HAL_RCC_OscConfig+0x2ba>
 8002b64:	f7fe fda0 	bl	80016a8 <HAL_GetTick>
 8002b68:	4602      	mov	r2, r0
 8002b6a:	693b      	ldr	r3, [r7, #16]
 8002b6c:	1ad3      	subs	r3, r2, r3
 8002b6e:	2b64      	cmp	r3, #100	@ 0x64
 8002b70:	d901      	bls.n	8002b76 <HAL_RCC_OscConfig+0x2ba>
 8002b72:	2303      	movs	r3, #3
 8002b74:	e2b4      	b.n	80030e0 <HAL_RCC_OscConfig+0x824>
 8002b76:	4b92      	ldr	r3, [pc, #584]	@ (8002dc0 <HAL_RCC_OscConfig+0x504>)
 8002b78:	681b      	ldr	r3, [r3, #0]
 8002b7a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002b7e:	2b00      	cmp	r3, #0
 8002b80:	d0f0      	beq.n	8002b64 <HAL_RCC_OscConfig+0x2a8>
 8002b82:	e014      	b.n	8002bae <HAL_RCC_OscConfig+0x2f2>
 8002b84:	f7fe fd90 	bl	80016a8 <HAL_GetTick>
 8002b88:	6138      	str	r0, [r7, #16]
 8002b8a:	e008      	b.n	8002b9e <HAL_RCC_OscConfig+0x2e2>
 8002b8c:	f7fe fd8c 	bl	80016a8 <HAL_GetTick>
 8002b90:	4602      	mov	r2, r0
 8002b92:	693b      	ldr	r3, [r7, #16]
 8002b94:	1ad3      	subs	r3, r2, r3
 8002b96:	2b64      	cmp	r3, #100	@ 0x64
 8002b98:	d901      	bls.n	8002b9e <HAL_RCC_OscConfig+0x2e2>
 8002b9a:	2303      	movs	r3, #3
 8002b9c:	e2a0      	b.n	80030e0 <HAL_RCC_OscConfig+0x824>
 8002b9e:	4b88      	ldr	r3, [pc, #544]	@ (8002dc0 <HAL_RCC_OscConfig+0x504>)
 8002ba0:	681b      	ldr	r3, [r3, #0]
 8002ba2:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002ba6:	2b00      	cmp	r3, #0
 8002ba8:	d1f0      	bne.n	8002b8c <HAL_RCC_OscConfig+0x2d0>
 8002baa:	e000      	b.n	8002bae <HAL_RCC_OscConfig+0x2f2>
 8002bac:	bf00      	nop
 8002bae:	687b      	ldr	r3, [r7, #4]
 8002bb0:	681b      	ldr	r3, [r3, #0]
 8002bb2:	f003 0302 	and.w	r3, r3, #2
 8002bb6:	2b00      	cmp	r3, #0
 8002bb8:	d060      	beq.n	8002c7c <HAL_RCC_OscConfig+0x3c0>
 8002bba:	69bb      	ldr	r3, [r7, #24]
 8002bbc:	2b04      	cmp	r3, #4
 8002bbe:	d005      	beq.n	8002bcc <HAL_RCC_OscConfig+0x310>
 8002bc0:	69bb      	ldr	r3, [r7, #24]
 8002bc2:	2b0c      	cmp	r3, #12
 8002bc4:	d119      	bne.n	8002bfa <HAL_RCC_OscConfig+0x33e>
 8002bc6:	697b      	ldr	r3, [r7, #20]
 8002bc8:	2b02      	cmp	r3, #2
 8002bca:	d116      	bne.n	8002bfa <HAL_RCC_OscConfig+0x33e>
 8002bcc:	4b7c      	ldr	r3, [pc, #496]	@ (8002dc0 <HAL_RCC_OscConfig+0x504>)
 8002bce:	681b      	ldr	r3, [r3, #0]
 8002bd0:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8002bd4:	2b00      	cmp	r3, #0
 8002bd6:	d005      	beq.n	8002be4 <HAL_RCC_OscConfig+0x328>
 8002bd8:	687b      	ldr	r3, [r7, #4]
 8002bda:	68db      	ldr	r3, [r3, #12]
 8002bdc:	2b00      	cmp	r3, #0
 8002bde:	d101      	bne.n	8002be4 <HAL_RCC_OscConfig+0x328>
 8002be0:	2301      	movs	r3, #1
 8002be2:	e27d      	b.n	80030e0 <HAL_RCC_OscConfig+0x824>
 8002be4:	4b76      	ldr	r3, [pc, #472]	@ (8002dc0 <HAL_RCC_OscConfig+0x504>)
 8002be6:	685b      	ldr	r3, [r3, #4]
 8002be8:	f023 42fe 	bic.w	r2, r3, #2130706432	@ 0x7f000000
 8002bec:	687b      	ldr	r3, [r7, #4]
 8002bee:	691b      	ldr	r3, [r3, #16]
 8002bf0:	061b      	lsls	r3, r3, #24
 8002bf2:	4973      	ldr	r1, [pc, #460]	@ (8002dc0 <HAL_RCC_OscConfig+0x504>)
 8002bf4:	4313      	orrs	r3, r2
 8002bf6:	604b      	str	r3, [r1, #4]
 8002bf8:	e040      	b.n	8002c7c <HAL_RCC_OscConfig+0x3c0>
 8002bfa:	687b      	ldr	r3, [r7, #4]
 8002bfc:	68db      	ldr	r3, [r3, #12]
 8002bfe:	2b00      	cmp	r3, #0
 8002c00:	d023      	beq.n	8002c4a <HAL_RCC_OscConfig+0x38e>
 8002c02:	4b6f      	ldr	r3, [pc, #444]	@ (8002dc0 <HAL_RCC_OscConfig+0x504>)
 8002c04:	681b      	ldr	r3, [r3, #0]
 8002c06:	4a6e      	ldr	r2, [pc, #440]	@ (8002dc0 <HAL_RCC_OscConfig+0x504>)
 8002c08:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8002c0c:	6013      	str	r3, [r2, #0]
 8002c0e:	f7fe fd4b 	bl	80016a8 <HAL_GetTick>
 8002c12:	6138      	str	r0, [r7, #16]
 8002c14:	e008      	b.n	8002c28 <HAL_RCC_OscConfig+0x36c>
 8002c16:	f7fe fd47 	bl	80016a8 <HAL_GetTick>
 8002c1a:	4602      	mov	r2, r0
 8002c1c:	693b      	ldr	r3, [r7, #16]
 8002c1e:	1ad3      	subs	r3, r2, r3
 8002c20:	2b02      	cmp	r3, #2
 8002c22:	d901      	bls.n	8002c28 <HAL_RCC_OscConfig+0x36c>
 8002c24:	2303      	movs	r3, #3
 8002c26:	e25b      	b.n	80030e0 <HAL_RCC_OscConfig+0x824>
 8002c28:	4b65      	ldr	r3, [pc, #404]	@ (8002dc0 <HAL_RCC_OscConfig+0x504>)
 8002c2a:	681b      	ldr	r3, [r3, #0]
 8002c2c:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8002c30:	2b00      	cmp	r3, #0
 8002c32:	d0f0      	beq.n	8002c16 <HAL_RCC_OscConfig+0x35a>
 8002c34:	4b62      	ldr	r3, [pc, #392]	@ (8002dc0 <HAL_RCC_OscConfig+0x504>)
 8002c36:	685b      	ldr	r3, [r3, #4]
 8002c38:	f023 42fe 	bic.w	r2, r3, #2130706432	@ 0x7f000000
 8002c3c:	687b      	ldr	r3, [r7, #4]
 8002c3e:	691b      	ldr	r3, [r3, #16]
 8002c40:	061b      	lsls	r3, r3, #24
 8002c42:	495f      	ldr	r1, [pc, #380]	@ (8002dc0 <HAL_RCC_OscConfig+0x504>)
 8002c44:	4313      	orrs	r3, r2
 8002c46:	604b      	str	r3, [r1, #4]
 8002c48:	e018      	b.n	8002c7c <HAL_RCC_OscConfig+0x3c0>
 8002c4a:	4b5d      	ldr	r3, [pc, #372]	@ (8002dc0 <HAL_RCC_OscConfig+0x504>)
 8002c4c:	681b      	ldr	r3, [r3, #0]
 8002c4e:	4a5c      	ldr	r2, [pc, #368]	@ (8002dc0 <HAL_RCC_OscConfig+0x504>)
 8002c50:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8002c54:	6013      	str	r3, [r2, #0]
 8002c56:	f7fe fd27 	bl	80016a8 <HAL_GetTick>
 8002c5a:	6138      	str	r0, [r7, #16]
 8002c5c:	e008      	b.n	8002c70 <HAL_RCC_OscConfig+0x3b4>
 8002c5e:	f7fe fd23 	bl	80016a8 <HAL_GetTick>
 8002c62:	4602      	mov	r2, r0
 8002c64:	693b      	ldr	r3, [r7, #16]
 8002c66:	1ad3      	subs	r3, r2, r3
 8002c68:	2b02      	cmp	r3, #2
 8002c6a:	d901      	bls.n	8002c70 <HAL_RCC_OscConfig+0x3b4>
 8002c6c:	2303      	movs	r3, #3
 8002c6e:	e237      	b.n	80030e0 <HAL_RCC_OscConfig+0x824>
 8002c70:	4b53      	ldr	r3, [pc, #332]	@ (8002dc0 <HAL_RCC_OscConfig+0x504>)
 8002c72:	681b      	ldr	r3, [r3, #0]
 8002c74:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8002c78:	2b00      	cmp	r3, #0
 8002c7a:	d1f0      	bne.n	8002c5e <HAL_RCC_OscConfig+0x3a2>
 8002c7c:	687b      	ldr	r3, [r7, #4]
 8002c7e:	681b      	ldr	r3, [r3, #0]
 8002c80:	f003 0308 	and.w	r3, r3, #8
 8002c84:	2b00      	cmp	r3, #0
 8002c86:	d03c      	beq.n	8002d02 <HAL_RCC_OscConfig+0x446>
 8002c88:	687b      	ldr	r3, [r7, #4]
 8002c8a:	695b      	ldr	r3, [r3, #20]
 8002c8c:	2b00      	cmp	r3, #0
 8002c8e:	d01c      	beq.n	8002cca <HAL_RCC_OscConfig+0x40e>
 8002c90:	4b4b      	ldr	r3, [pc, #300]	@ (8002dc0 <HAL_RCC_OscConfig+0x504>)
 8002c92:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8002c96:	4a4a      	ldr	r2, [pc, #296]	@ (8002dc0 <HAL_RCC_OscConfig+0x504>)
 8002c98:	f043 0301 	orr.w	r3, r3, #1
 8002c9c:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
 8002ca0:	f7fe fd02 	bl	80016a8 <HAL_GetTick>
 8002ca4:	6138      	str	r0, [r7, #16]
 8002ca6:	e008      	b.n	8002cba <HAL_RCC_OscConfig+0x3fe>
 8002ca8:	f7fe fcfe 	bl	80016a8 <HAL_GetTick>
 8002cac:	4602      	mov	r2, r0
 8002cae:	693b      	ldr	r3, [r7, #16]
 8002cb0:	1ad3      	subs	r3, r2, r3
 8002cb2:	2b02      	cmp	r3, #2
 8002cb4:	d901      	bls.n	8002cba <HAL_RCC_OscConfig+0x3fe>
 8002cb6:	2303      	movs	r3, #3
 8002cb8:	e212      	b.n	80030e0 <HAL_RCC_OscConfig+0x824>
 8002cba:	4b41      	ldr	r3, [pc, #260]	@ (8002dc0 <HAL_RCC_OscConfig+0x504>)
 8002cbc:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8002cc0:	f003 0302 	and.w	r3, r3, #2
 8002cc4:	2b00      	cmp	r3, #0
 8002cc6:	d0ef      	beq.n	8002ca8 <HAL_RCC_OscConfig+0x3ec>
 8002cc8:	e01b      	b.n	8002d02 <HAL_RCC_OscConfig+0x446>
 8002cca:	4b3d      	ldr	r3, [pc, #244]	@ (8002dc0 <HAL_RCC_OscConfig+0x504>)
 8002ccc:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8002cd0:	4a3b      	ldr	r2, [pc, #236]	@ (8002dc0 <HAL_RCC_OscConfig+0x504>)
 8002cd2:	f023 0301 	bic.w	r3, r3, #1
 8002cd6:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
 8002cda:	f7fe fce5 	bl	80016a8 <HAL_GetTick>
 8002cde:	6138      	str	r0, [r7, #16]
 8002ce0:	e008      	b.n	8002cf4 <HAL_RCC_OscConfig+0x438>
 8002ce2:	f7fe fce1 	bl	80016a8 <HAL_GetTick>
 8002ce6:	4602      	mov	r2, r0
 8002ce8:	693b      	ldr	r3, [r7, #16]
 8002cea:	1ad3      	subs	r3, r2, r3
 8002cec:	2b02      	cmp	r3, #2
 8002cee:	d901      	bls.n	8002cf4 <HAL_RCC_OscConfig+0x438>
 8002cf0:	2303      	movs	r3, #3
 8002cf2:	e1f5      	b.n	80030e0 <HAL_RCC_OscConfig+0x824>
 8002cf4:	4b32      	ldr	r3, [pc, #200]	@ (8002dc0 <HAL_RCC_OscConfig+0x504>)
 8002cf6:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8002cfa:	f003 0302 	and.w	r3, r3, #2
 8002cfe:	2b00      	cmp	r3, #0
 8002d00:	d1ef      	bne.n	8002ce2 <HAL_RCC_OscConfig+0x426>
 8002d02:	687b      	ldr	r3, [r7, #4]
 8002d04:	681b      	ldr	r3, [r3, #0]
 8002d06:	f003 0304 	and.w	r3, r3, #4
 8002d0a:	2b00      	cmp	r3, #0
 8002d0c:	f000 80a6 	beq.w	8002e5c <HAL_RCC_OscConfig+0x5a0>
 8002d10:	2300      	movs	r3, #0
 8002d12:	77fb      	strb	r3, [r7, #31]
 8002d14:	4b2a      	ldr	r3, [pc, #168]	@ (8002dc0 <HAL_RCC_OscConfig+0x504>)
 8002d16:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002d18:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002d1c:	2b00      	cmp	r3, #0
 8002d1e:	d10d      	bne.n	8002d3c <HAL_RCC_OscConfig+0x480>
 8002d20:	4b27      	ldr	r3, [pc, #156]	@ (8002dc0 <HAL_RCC_OscConfig+0x504>)
 8002d22:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002d24:	4a26      	ldr	r2, [pc, #152]	@ (8002dc0 <HAL_RCC_OscConfig+0x504>)
 8002d26:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8002d2a:	6593      	str	r3, [r2, #88]	@ 0x58
 8002d2c:	4b24      	ldr	r3, [pc, #144]	@ (8002dc0 <HAL_RCC_OscConfig+0x504>)
 8002d2e:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002d30:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002d34:	60bb      	str	r3, [r7, #8]
 8002d36:	68bb      	ldr	r3, [r7, #8]
 8002d38:	2301      	movs	r3, #1
 8002d3a:	77fb      	strb	r3, [r7, #31]
 8002d3c:	4b21      	ldr	r3, [pc, #132]	@ (8002dc4 <HAL_RCC_OscConfig+0x508>)
 8002d3e:	681b      	ldr	r3, [r3, #0]
 8002d40:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002d44:	2b00      	cmp	r3, #0
 8002d46:	d118      	bne.n	8002d7a <HAL_RCC_OscConfig+0x4be>
 8002d48:	4b1e      	ldr	r3, [pc, #120]	@ (8002dc4 <HAL_RCC_OscConfig+0x508>)
 8002d4a:	681b      	ldr	r3, [r3, #0]
 8002d4c:	4a1d      	ldr	r2, [pc, #116]	@ (8002dc4 <HAL_RCC_OscConfig+0x508>)
 8002d4e:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8002d52:	6013      	str	r3, [r2, #0]
 8002d54:	f7fe fca8 	bl	80016a8 <HAL_GetTick>
 8002d58:	6138      	str	r0, [r7, #16]
 8002d5a:	e008      	b.n	8002d6e <HAL_RCC_OscConfig+0x4b2>
 8002d5c:	f7fe fca4 	bl	80016a8 <HAL_GetTick>
 8002d60:	4602      	mov	r2, r0
 8002d62:	693b      	ldr	r3, [r7, #16]
 8002d64:	1ad3      	subs	r3, r2, r3
 8002d66:	2b02      	cmp	r3, #2
 8002d68:	d901      	bls.n	8002d6e <HAL_RCC_OscConfig+0x4b2>
 8002d6a:	2303      	movs	r3, #3
 8002d6c:	e1b8      	b.n	80030e0 <HAL_RCC_OscConfig+0x824>
 8002d6e:	4b15      	ldr	r3, [pc, #84]	@ (8002dc4 <HAL_RCC_OscConfig+0x508>)
 8002d70:	681b      	ldr	r3, [r3, #0]
 8002d72:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002d76:	2b00      	cmp	r3, #0
 8002d78:	d0f0      	beq.n	8002d5c <HAL_RCC_OscConfig+0x4a0>
 8002d7a:	687b      	ldr	r3, [r7, #4]
 8002d7c:	689b      	ldr	r3, [r3, #8]
 8002d7e:	2b01      	cmp	r3, #1
 8002d80:	d108      	bne.n	8002d94 <HAL_RCC_OscConfig+0x4d8>
 8002d82:	4b0f      	ldr	r3, [pc, #60]	@ (8002dc0 <HAL_RCC_OscConfig+0x504>)
 8002d84:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8002d88:	4a0d      	ldr	r2, [pc, #52]	@ (8002dc0 <HAL_RCC_OscConfig+0x504>)
 8002d8a:	f043 0301 	orr.w	r3, r3, #1
 8002d8e:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8002d92:	e029      	b.n	8002de8 <HAL_RCC_OscConfig+0x52c>
 8002d94:	687b      	ldr	r3, [r7, #4]
 8002d96:	689b      	ldr	r3, [r3, #8]
 8002d98:	2b05      	cmp	r3, #5
 8002d9a:	d115      	bne.n	8002dc8 <HAL_RCC_OscConfig+0x50c>
 8002d9c:	4b08      	ldr	r3, [pc, #32]	@ (8002dc0 <HAL_RCC_OscConfig+0x504>)
 8002d9e:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8002da2:	4a07      	ldr	r2, [pc, #28]	@ (8002dc0 <HAL_RCC_OscConfig+0x504>)
 8002da4:	f043 0304 	orr.w	r3, r3, #4
 8002da8:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8002dac:	4b04      	ldr	r3, [pc, #16]	@ (8002dc0 <HAL_RCC_OscConfig+0x504>)
 8002dae:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8002db2:	4a03      	ldr	r2, [pc, #12]	@ (8002dc0 <HAL_RCC_OscConfig+0x504>)
 8002db4:	f043 0301 	orr.w	r3, r3, #1
 8002db8:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8002dbc:	e014      	b.n	8002de8 <HAL_RCC_OscConfig+0x52c>
 8002dbe:	bf00      	nop
 8002dc0:	40021000 	.word	0x40021000
 8002dc4:	40007000 	.word	0x40007000
 8002dc8:	4b9d      	ldr	r3, [pc, #628]	@ (8003040 <HAL_RCC_OscConfig+0x784>)
 8002dca:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8002dce:	4a9c      	ldr	r2, [pc, #624]	@ (8003040 <HAL_RCC_OscConfig+0x784>)
 8002dd0:	f023 0301 	bic.w	r3, r3, #1
 8002dd4:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8002dd8:	4b99      	ldr	r3, [pc, #612]	@ (8003040 <HAL_RCC_OscConfig+0x784>)
 8002dda:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8002dde:	4a98      	ldr	r2, [pc, #608]	@ (8003040 <HAL_RCC_OscConfig+0x784>)
 8002de0:	f023 0304 	bic.w	r3, r3, #4
 8002de4:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8002de8:	687b      	ldr	r3, [r7, #4]
 8002dea:	689b      	ldr	r3, [r3, #8]
 8002dec:	2b00      	cmp	r3, #0
 8002dee:	d016      	beq.n	8002e1e <HAL_RCC_OscConfig+0x562>
 8002df0:	f7fe fc5a 	bl	80016a8 <HAL_GetTick>
 8002df4:	6138      	str	r0, [r7, #16]
 8002df6:	e00a      	b.n	8002e0e <HAL_RCC_OscConfig+0x552>
 8002df8:	f7fe fc56 	bl	80016a8 <HAL_GetTick>
 8002dfc:	4602      	mov	r2, r0
 8002dfe:	693b      	ldr	r3, [r7, #16]
 8002e00:	1ad3      	subs	r3, r2, r3
 8002e02:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002e06:	4293      	cmp	r3, r2
 8002e08:	d901      	bls.n	8002e0e <HAL_RCC_OscConfig+0x552>
 8002e0a:	2303      	movs	r3, #3
 8002e0c:	e168      	b.n	80030e0 <HAL_RCC_OscConfig+0x824>
 8002e0e:	4b8c      	ldr	r3, [pc, #560]	@ (8003040 <HAL_RCC_OscConfig+0x784>)
 8002e10:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8002e14:	f003 0302 	and.w	r3, r3, #2
 8002e18:	2b00      	cmp	r3, #0
 8002e1a:	d0ed      	beq.n	8002df8 <HAL_RCC_OscConfig+0x53c>
 8002e1c:	e015      	b.n	8002e4a <HAL_RCC_OscConfig+0x58e>
 8002e1e:	f7fe fc43 	bl	80016a8 <HAL_GetTick>
 8002e22:	6138      	str	r0, [r7, #16]
 8002e24:	e00a      	b.n	8002e3c <HAL_RCC_OscConfig+0x580>
 8002e26:	f7fe fc3f 	bl	80016a8 <HAL_GetTick>
 8002e2a:	4602      	mov	r2, r0
 8002e2c:	693b      	ldr	r3, [r7, #16]
 8002e2e:	1ad3      	subs	r3, r2, r3
 8002e30:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002e34:	4293      	cmp	r3, r2
 8002e36:	d901      	bls.n	8002e3c <HAL_RCC_OscConfig+0x580>
 8002e38:	2303      	movs	r3, #3
 8002e3a:	e151      	b.n	80030e0 <HAL_RCC_OscConfig+0x824>
 8002e3c:	4b80      	ldr	r3, [pc, #512]	@ (8003040 <HAL_RCC_OscConfig+0x784>)
 8002e3e:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8002e42:	f003 0302 	and.w	r3, r3, #2
 8002e46:	2b00      	cmp	r3, #0
 8002e48:	d1ed      	bne.n	8002e26 <HAL_RCC_OscConfig+0x56a>
 8002e4a:	7ffb      	ldrb	r3, [r7, #31]
 8002e4c:	2b01      	cmp	r3, #1
 8002e4e:	d105      	bne.n	8002e5c <HAL_RCC_OscConfig+0x5a0>
 8002e50:	4b7b      	ldr	r3, [pc, #492]	@ (8003040 <HAL_RCC_OscConfig+0x784>)
 8002e52:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002e54:	4a7a      	ldr	r2, [pc, #488]	@ (8003040 <HAL_RCC_OscConfig+0x784>)
 8002e56:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8002e5a:	6593      	str	r3, [r2, #88]	@ 0x58
 8002e5c:	687b      	ldr	r3, [r7, #4]
 8002e5e:	681b      	ldr	r3, [r3, #0]
 8002e60:	f003 0320 	and.w	r3, r3, #32
 8002e64:	2b00      	cmp	r3, #0
 8002e66:	d03c      	beq.n	8002ee2 <HAL_RCC_OscConfig+0x626>
 8002e68:	687b      	ldr	r3, [r7, #4]
 8002e6a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002e6c:	2b00      	cmp	r3, #0
 8002e6e:	d01c      	beq.n	8002eaa <HAL_RCC_OscConfig+0x5ee>
 8002e70:	4b73      	ldr	r3, [pc, #460]	@ (8003040 <HAL_RCC_OscConfig+0x784>)
 8002e72:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8002e76:	4a72      	ldr	r2, [pc, #456]	@ (8003040 <HAL_RCC_OscConfig+0x784>)
 8002e78:	f043 0301 	orr.w	r3, r3, #1
 8002e7c:	f8c2 3098 	str.w	r3, [r2, #152]	@ 0x98
 8002e80:	f7fe fc12 	bl	80016a8 <HAL_GetTick>
 8002e84:	6138      	str	r0, [r7, #16]
 8002e86:	e008      	b.n	8002e9a <HAL_RCC_OscConfig+0x5de>
 8002e88:	f7fe fc0e 	bl	80016a8 <HAL_GetTick>
 8002e8c:	4602      	mov	r2, r0
 8002e8e:	693b      	ldr	r3, [r7, #16]
 8002e90:	1ad3      	subs	r3, r2, r3
 8002e92:	2b02      	cmp	r3, #2
 8002e94:	d901      	bls.n	8002e9a <HAL_RCC_OscConfig+0x5de>
 8002e96:	2303      	movs	r3, #3
 8002e98:	e122      	b.n	80030e0 <HAL_RCC_OscConfig+0x824>
 8002e9a:	4b69      	ldr	r3, [pc, #420]	@ (8003040 <HAL_RCC_OscConfig+0x784>)
 8002e9c:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8002ea0:	f003 0302 	and.w	r3, r3, #2
 8002ea4:	2b00      	cmp	r3, #0
 8002ea6:	d0ef      	beq.n	8002e88 <HAL_RCC_OscConfig+0x5cc>
 8002ea8:	e01b      	b.n	8002ee2 <HAL_RCC_OscConfig+0x626>
 8002eaa:	4b65      	ldr	r3, [pc, #404]	@ (8003040 <HAL_RCC_OscConfig+0x784>)
 8002eac:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8002eb0:	4a63      	ldr	r2, [pc, #396]	@ (8003040 <HAL_RCC_OscConfig+0x784>)
 8002eb2:	f023 0301 	bic.w	r3, r3, #1
 8002eb6:	f8c2 3098 	str.w	r3, [r2, #152]	@ 0x98
 8002eba:	f7fe fbf5 	bl	80016a8 <HAL_GetTick>
 8002ebe:	6138      	str	r0, [r7, #16]
 8002ec0:	e008      	b.n	8002ed4 <HAL_RCC_OscConfig+0x618>
 8002ec2:	f7fe fbf1 	bl	80016a8 <HAL_GetTick>
 8002ec6:	4602      	mov	r2, r0
 8002ec8:	693b      	ldr	r3, [r7, #16]
 8002eca:	1ad3      	subs	r3, r2, r3
 8002ecc:	2b02      	cmp	r3, #2
 8002ece:	d901      	bls.n	8002ed4 <HAL_RCC_OscConfig+0x618>
 8002ed0:	2303      	movs	r3, #3
 8002ed2:	e105      	b.n	80030e0 <HAL_RCC_OscConfig+0x824>
 8002ed4:	4b5a      	ldr	r3, [pc, #360]	@ (8003040 <HAL_RCC_OscConfig+0x784>)
 8002ed6:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8002eda:	f003 0302 	and.w	r3, r3, #2
 8002ede:	2b00      	cmp	r3, #0
 8002ee0:	d1ef      	bne.n	8002ec2 <HAL_RCC_OscConfig+0x606>
 8002ee2:	687b      	ldr	r3, [r7, #4]
 8002ee4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002ee6:	2b00      	cmp	r3, #0
 8002ee8:	f000 80f9 	beq.w	80030de <HAL_RCC_OscConfig+0x822>
 8002eec:	687b      	ldr	r3, [r7, #4]
 8002eee:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002ef0:	2b02      	cmp	r3, #2
 8002ef2:	f040 80cf 	bne.w	8003094 <HAL_RCC_OscConfig+0x7d8>
 8002ef6:	4b52      	ldr	r3, [pc, #328]	@ (8003040 <HAL_RCC_OscConfig+0x784>)
 8002ef8:	68db      	ldr	r3, [r3, #12]
 8002efa:	617b      	str	r3, [r7, #20]
 8002efc:	697b      	ldr	r3, [r7, #20]
 8002efe:	f003 0203 	and.w	r2, r3, #3
 8002f02:	687b      	ldr	r3, [r7, #4]
 8002f04:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002f06:	429a      	cmp	r2, r3
 8002f08:	d12c      	bne.n	8002f64 <HAL_RCC_OscConfig+0x6a8>
 8002f0a:	697b      	ldr	r3, [r7, #20]
 8002f0c:	f003 0270 	and.w	r2, r3, #112	@ 0x70
 8002f10:	687b      	ldr	r3, [r7, #4]
 8002f12:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002f14:	3b01      	subs	r3, #1
 8002f16:	011b      	lsls	r3, r3, #4
 8002f18:	429a      	cmp	r2, r3
 8002f1a:	d123      	bne.n	8002f64 <HAL_RCC_OscConfig+0x6a8>
 8002f1c:	697b      	ldr	r3, [r7, #20]
 8002f1e:	f403 42fe 	and.w	r2, r3, #32512	@ 0x7f00
 8002f22:	687b      	ldr	r3, [r7, #4]
 8002f24:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8002f26:	021b      	lsls	r3, r3, #8
 8002f28:	429a      	cmp	r2, r3
 8002f2a:	d11b      	bne.n	8002f64 <HAL_RCC_OscConfig+0x6a8>
 8002f2c:	697b      	ldr	r3, [r7, #20]
 8002f2e:	f003 4278 	and.w	r2, r3, #4160749568	@ 0xf8000000
 8002f32:	687b      	ldr	r3, [r7, #4]
 8002f34:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002f36:	06db      	lsls	r3, r3, #27
 8002f38:	429a      	cmp	r2, r3
 8002f3a:	d113      	bne.n	8002f64 <HAL_RCC_OscConfig+0x6a8>
 8002f3c:	697b      	ldr	r3, [r7, #20]
 8002f3e:	f403 02c0 	and.w	r2, r3, #6291456	@ 0x600000
 8002f42:	687b      	ldr	r3, [r7, #4]
 8002f44:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002f46:	085b      	lsrs	r3, r3, #1
 8002f48:	3b01      	subs	r3, #1
 8002f4a:	055b      	lsls	r3, r3, #21
 8002f4c:	429a      	cmp	r2, r3
 8002f4e:	d109      	bne.n	8002f64 <HAL_RCC_OscConfig+0x6a8>
 8002f50:	697b      	ldr	r3, [r7, #20]
 8002f52:	f003 62c0 	and.w	r2, r3, #100663296	@ 0x6000000
 8002f56:	687b      	ldr	r3, [r7, #4]
 8002f58:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002f5a:	085b      	lsrs	r3, r3, #1
 8002f5c:	3b01      	subs	r3, #1
 8002f5e:	065b      	lsls	r3, r3, #25
 8002f60:	429a      	cmp	r2, r3
 8002f62:	d071      	beq.n	8003048 <HAL_RCC_OscConfig+0x78c>
 8002f64:	69bb      	ldr	r3, [r7, #24]
 8002f66:	2b0c      	cmp	r3, #12
 8002f68:	d068      	beq.n	800303c <HAL_RCC_OscConfig+0x780>
 8002f6a:	4b35      	ldr	r3, [pc, #212]	@ (8003040 <HAL_RCC_OscConfig+0x784>)
 8002f6c:	681b      	ldr	r3, [r3, #0]
 8002f6e:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 8002f72:	2b00      	cmp	r3, #0
 8002f74:	d105      	bne.n	8002f82 <HAL_RCC_OscConfig+0x6c6>
 8002f76:	4b32      	ldr	r3, [pc, #200]	@ (8003040 <HAL_RCC_OscConfig+0x784>)
 8002f78:	681b      	ldr	r3, [r3, #0]
 8002f7a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002f7e:	2b00      	cmp	r3, #0
 8002f80:	d001      	beq.n	8002f86 <HAL_RCC_OscConfig+0x6ca>
 8002f82:	2301      	movs	r3, #1
 8002f84:	e0ac      	b.n	80030e0 <HAL_RCC_OscConfig+0x824>
 8002f86:	4b2e      	ldr	r3, [pc, #184]	@ (8003040 <HAL_RCC_OscConfig+0x784>)
 8002f88:	681b      	ldr	r3, [r3, #0]
 8002f8a:	4a2d      	ldr	r2, [pc, #180]	@ (8003040 <HAL_RCC_OscConfig+0x784>)
 8002f8c:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8002f90:	6013      	str	r3, [r2, #0]
 8002f92:	f7fe fb89 	bl	80016a8 <HAL_GetTick>
 8002f96:	6138      	str	r0, [r7, #16]
 8002f98:	e008      	b.n	8002fac <HAL_RCC_OscConfig+0x6f0>
 8002f9a:	f7fe fb85 	bl	80016a8 <HAL_GetTick>
 8002f9e:	4602      	mov	r2, r0
 8002fa0:	693b      	ldr	r3, [r7, #16]
 8002fa2:	1ad3      	subs	r3, r2, r3
 8002fa4:	2b02      	cmp	r3, #2
 8002fa6:	d901      	bls.n	8002fac <HAL_RCC_OscConfig+0x6f0>
 8002fa8:	2303      	movs	r3, #3
 8002faa:	e099      	b.n	80030e0 <HAL_RCC_OscConfig+0x824>
 8002fac:	4b24      	ldr	r3, [pc, #144]	@ (8003040 <HAL_RCC_OscConfig+0x784>)
 8002fae:	681b      	ldr	r3, [r3, #0]
 8002fb0:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002fb4:	2b00      	cmp	r3, #0
 8002fb6:	d1f0      	bne.n	8002f9a <HAL_RCC_OscConfig+0x6de>
 8002fb8:	4b21      	ldr	r3, [pc, #132]	@ (8003040 <HAL_RCC_OscConfig+0x784>)
 8002fba:	68da      	ldr	r2, [r3, #12]
 8002fbc:	4b21      	ldr	r3, [pc, #132]	@ (8003044 <HAL_RCC_OscConfig+0x788>)
 8002fbe:	4013      	ands	r3, r2
 8002fc0:	687a      	ldr	r2, [r7, #4]
 8002fc2:	6ad1      	ldr	r1, [r2, #44]	@ 0x2c
 8002fc4:	687a      	ldr	r2, [r7, #4]
 8002fc6:	6b12      	ldr	r2, [r2, #48]	@ 0x30
 8002fc8:	3a01      	subs	r2, #1
 8002fca:	0112      	lsls	r2, r2, #4
 8002fcc:	4311      	orrs	r1, r2
 8002fce:	687a      	ldr	r2, [r7, #4]
 8002fd0:	6b52      	ldr	r2, [r2, #52]	@ 0x34
 8002fd2:	0212      	lsls	r2, r2, #8
 8002fd4:	4311      	orrs	r1, r2
 8002fd6:	687a      	ldr	r2, [r7, #4]
 8002fd8:	6bd2      	ldr	r2, [r2, #60]	@ 0x3c
 8002fda:	0852      	lsrs	r2, r2, #1
 8002fdc:	3a01      	subs	r2, #1
 8002fde:	0552      	lsls	r2, r2, #21
 8002fe0:	4311      	orrs	r1, r2
 8002fe2:	687a      	ldr	r2, [r7, #4]
 8002fe4:	6c12      	ldr	r2, [r2, #64]	@ 0x40
 8002fe6:	0852      	lsrs	r2, r2, #1
 8002fe8:	3a01      	subs	r2, #1
 8002fea:	0652      	lsls	r2, r2, #25
 8002fec:	4311      	orrs	r1, r2
 8002fee:	687a      	ldr	r2, [r7, #4]
 8002ff0:	6b92      	ldr	r2, [r2, #56]	@ 0x38
 8002ff2:	06d2      	lsls	r2, r2, #27
 8002ff4:	430a      	orrs	r2, r1
 8002ff6:	4912      	ldr	r1, [pc, #72]	@ (8003040 <HAL_RCC_OscConfig+0x784>)
 8002ff8:	4313      	orrs	r3, r2
 8002ffa:	60cb      	str	r3, [r1, #12]
 8002ffc:	4b10      	ldr	r3, [pc, #64]	@ (8003040 <HAL_RCC_OscConfig+0x784>)
 8002ffe:	681b      	ldr	r3, [r3, #0]
 8003000:	4a0f      	ldr	r2, [pc, #60]	@ (8003040 <HAL_RCC_OscConfig+0x784>)
 8003002:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8003006:	6013      	str	r3, [r2, #0]
 8003008:	4b0d      	ldr	r3, [pc, #52]	@ (8003040 <HAL_RCC_OscConfig+0x784>)
 800300a:	68db      	ldr	r3, [r3, #12]
 800300c:	4a0c      	ldr	r2, [pc, #48]	@ (8003040 <HAL_RCC_OscConfig+0x784>)
 800300e:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8003012:	60d3      	str	r3, [r2, #12]
 8003014:	f7fe fb48 	bl	80016a8 <HAL_GetTick>
 8003018:	6138      	str	r0, [r7, #16]
 800301a:	e008      	b.n	800302e <HAL_RCC_OscConfig+0x772>
 800301c:	f7fe fb44 	bl	80016a8 <HAL_GetTick>
 8003020:	4602      	mov	r2, r0
 8003022:	693b      	ldr	r3, [r7, #16]
 8003024:	1ad3      	subs	r3, r2, r3
 8003026:	2b02      	cmp	r3, #2
 8003028:	d901      	bls.n	800302e <HAL_RCC_OscConfig+0x772>
 800302a:	2303      	movs	r3, #3
 800302c:	e058      	b.n	80030e0 <HAL_RCC_OscConfig+0x824>
 800302e:	4b04      	ldr	r3, [pc, #16]	@ (8003040 <HAL_RCC_OscConfig+0x784>)
 8003030:	681b      	ldr	r3, [r3, #0]
 8003032:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003036:	2b00      	cmp	r3, #0
 8003038:	d0f0      	beq.n	800301c <HAL_RCC_OscConfig+0x760>
 800303a:	e050      	b.n	80030de <HAL_RCC_OscConfig+0x822>
 800303c:	2301      	movs	r3, #1
 800303e:	e04f      	b.n	80030e0 <HAL_RCC_OscConfig+0x824>
 8003040:	40021000 	.word	0x40021000
 8003044:	019d808c 	.word	0x019d808c
 8003048:	4b27      	ldr	r3, [pc, #156]	@ (80030e8 <HAL_RCC_OscConfig+0x82c>)
 800304a:	681b      	ldr	r3, [r3, #0]
 800304c:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003050:	2b00      	cmp	r3, #0
 8003052:	d144      	bne.n	80030de <HAL_RCC_OscConfig+0x822>
 8003054:	4b24      	ldr	r3, [pc, #144]	@ (80030e8 <HAL_RCC_OscConfig+0x82c>)
 8003056:	681b      	ldr	r3, [r3, #0]
 8003058:	4a23      	ldr	r2, [pc, #140]	@ (80030e8 <HAL_RCC_OscConfig+0x82c>)
 800305a:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 800305e:	6013      	str	r3, [r2, #0]
 8003060:	4b21      	ldr	r3, [pc, #132]	@ (80030e8 <HAL_RCC_OscConfig+0x82c>)
 8003062:	68db      	ldr	r3, [r3, #12]
 8003064:	4a20      	ldr	r2, [pc, #128]	@ (80030e8 <HAL_RCC_OscConfig+0x82c>)
 8003066:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 800306a:	60d3      	str	r3, [r2, #12]
 800306c:	f7fe fb1c 	bl	80016a8 <HAL_GetTick>
 8003070:	6138      	str	r0, [r7, #16]
 8003072:	e008      	b.n	8003086 <HAL_RCC_OscConfig+0x7ca>
 8003074:	f7fe fb18 	bl	80016a8 <HAL_GetTick>
 8003078:	4602      	mov	r2, r0
 800307a:	693b      	ldr	r3, [r7, #16]
 800307c:	1ad3      	subs	r3, r2, r3
 800307e:	2b02      	cmp	r3, #2
 8003080:	d901      	bls.n	8003086 <HAL_RCC_OscConfig+0x7ca>
 8003082:	2303      	movs	r3, #3
 8003084:	e02c      	b.n	80030e0 <HAL_RCC_OscConfig+0x824>
 8003086:	4b18      	ldr	r3, [pc, #96]	@ (80030e8 <HAL_RCC_OscConfig+0x82c>)
 8003088:	681b      	ldr	r3, [r3, #0]
 800308a:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800308e:	2b00      	cmp	r3, #0
 8003090:	d0f0      	beq.n	8003074 <HAL_RCC_OscConfig+0x7b8>
 8003092:	e024      	b.n	80030de <HAL_RCC_OscConfig+0x822>
 8003094:	69bb      	ldr	r3, [r7, #24]
 8003096:	2b0c      	cmp	r3, #12
 8003098:	d01f      	beq.n	80030da <HAL_RCC_OscConfig+0x81e>
 800309a:	4b13      	ldr	r3, [pc, #76]	@ (80030e8 <HAL_RCC_OscConfig+0x82c>)
 800309c:	681b      	ldr	r3, [r3, #0]
 800309e:	4a12      	ldr	r2, [pc, #72]	@ (80030e8 <HAL_RCC_OscConfig+0x82c>)
 80030a0:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 80030a4:	6013      	str	r3, [r2, #0]
 80030a6:	f7fe faff 	bl	80016a8 <HAL_GetTick>
 80030aa:	6138      	str	r0, [r7, #16]
 80030ac:	e008      	b.n	80030c0 <HAL_RCC_OscConfig+0x804>
 80030ae:	f7fe fafb 	bl	80016a8 <HAL_GetTick>
 80030b2:	4602      	mov	r2, r0
 80030b4:	693b      	ldr	r3, [r7, #16]
 80030b6:	1ad3      	subs	r3, r2, r3
 80030b8:	2b02      	cmp	r3, #2
 80030ba:	d901      	bls.n	80030c0 <HAL_RCC_OscConfig+0x804>
 80030bc:	2303      	movs	r3, #3
 80030be:	e00f      	b.n	80030e0 <HAL_RCC_OscConfig+0x824>
 80030c0:	4b09      	ldr	r3, [pc, #36]	@ (80030e8 <HAL_RCC_OscConfig+0x82c>)
 80030c2:	681b      	ldr	r3, [r3, #0]
 80030c4:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80030c8:	2b00      	cmp	r3, #0
 80030ca:	d1f0      	bne.n	80030ae <HAL_RCC_OscConfig+0x7f2>
 80030cc:	4b06      	ldr	r3, [pc, #24]	@ (80030e8 <HAL_RCC_OscConfig+0x82c>)
 80030ce:	68da      	ldr	r2, [r3, #12]
 80030d0:	4905      	ldr	r1, [pc, #20]	@ (80030e8 <HAL_RCC_OscConfig+0x82c>)
 80030d2:	4b06      	ldr	r3, [pc, #24]	@ (80030ec <HAL_RCC_OscConfig+0x830>)
 80030d4:	4013      	ands	r3, r2
 80030d6:	60cb      	str	r3, [r1, #12]
 80030d8:	e001      	b.n	80030de <HAL_RCC_OscConfig+0x822>
 80030da:	2301      	movs	r3, #1
 80030dc:	e000      	b.n	80030e0 <HAL_RCC_OscConfig+0x824>
 80030de:	2300      	movs	r3, #0
 80030e0:	4618      	mov	r0, r3
 80030e2:	3720      	adds	r7, #32
 80030e4:	46bd      	mov	sp, r7
 80030e6:	bd80      	pop	{r7, pc}
 80030e8:	40021000 	.word	0x40021000
 80030ec:	feeefffc 	.word	0xfeeefffc

080030f0 <HAL_RCC_ClockConfig>:
 80030f0:	b580      	push	{r7, lr}
 80030f2:	b084      	sub	sp, #16
 80030f4:	af00      	add	r7, sp, #0
 80030f6:	6078      	str	r0, [r7, #4]
 80030f8:	6039      	str	r1, [r7, #0]
 80030fa:	687b      	ldr	r3, [r7, #4]
 80030fc:	2b00      	cmp	r3, #0
 80030fe:	d101      	bne.n	8003104 <HAL_RCC_ClockConfig+0x14>
 8003100:	2301      	movs	r3, #1
 8003102:	e0e7      	b.n	80032d4 <HAL_RCC_ClockConfig+0x1e4>
 8003104:	4b75      	ldr	r3, [pc, #468]	@ (80032dc <HAL_RCC_ClockConfig+0x1ec>)
 8003106:	681b      	ldr	r3, [r3, #0]
 8003108:	f003 0307 	and.w	r3, r3, #7
 800310c:	683a      	ldr	r2, [r7, #0]
 800310e:	429a      	cmp	r2, r3
 8003110:	d910      	bls.n	8003134 <HAL_RCC_ClockConfig+0x44>
 8003112:	4b72      	ldr	r3, [pc, #456]	@ (80032dc <HAL_RCC_ClockConfig+0x1ec>)
 8003114:	681b      	ldr	r3, [r3, #0]
 8003116:	f023 0207 	bic.w	r2, r3, #7
 800311a:	4970      	ldr	r1, [pc, #448]	@ (80032dc <HAL_RCC_ClockConfig+0x1ec>)
 800311c:	683b      	ldr	r3, [r7, #0]
 800311e:	4313      	orrs	r3, r2
 8003120:	600b      	str	r3, [r1, #0]
 8003122:	4b6e      	ldr	r3, [pc, #440]	@ (80032dc <HAL_RCC_ClockConfig+0x1ec>)
 8003124:	681b      	ldr	r3, [r3, #0]
 8003126:	f003 0307 	and.w	r3, r3, #7
 800312a:	683a      	ldr	r2, [r7, #0]
 800312c:	429a      	cmp	r2, r3
 800312e:	d001      	beq.n	8003134 <HAL_RCC_ClockConfig+0x44>
 8003130:	2301      	movs	r3, #1
 8003132:	e0cf      	b.n	80032d4 <HAL_RCC_ClockConfig+0x1e4>
 8003134:	687b      	ldr	r3, [r7, #4]
 8003136:	681b      	ldr	r3, [r3, #0]
 8003138:	f003 0302 	and.w	r3, r3, #2
 800313c:	2b00      	cmp	r3, #0
 800313e:	d010      	beq.n	8003162 <HAL_RCC_ClockConfig+0x72>
 8003140:	687b      	ldr	r3, [r7, #4]
 8003142:	689a      	ldr	r2, [r3, #8]
 8003144:	4b66      	ldr	r3, [pc, #408]	@ (80032e0 <HAL_RCC_ClockConfig+0x1f0>)
 8003146:	689b      	ldr	r3, [r3, #8]
 8003148:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 800314c:	429a      	cmp	r2, r3
 800314e:	d908      	bls.n	8003162 <HAL_RCC_ClockConfig+0x72>
 8003150:	4b63      	ldr	r3, [pc, #396]	@ (80032e0 <HAL_RCC_ClockConfig+0x1f0>)
 8003152:	689b      	ldr	r3, [r3, #8]
 8003154:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8003158:	687b      	ldr	r3, [r7, #4]
 800315a:	689b      	ldr	r3, [r3, #8]
 800315c:	4960      	ldr	r1, [pc, #384]	@ (80032e0 <HAL_RCC_ClockConfig+0x1f0>)
 800315e:	4313      	orrs	r3, r2
 8003160:	608b      	str	r3, [r1, #8]
 8003162:	687b      	ldr	r3, [r7, #4]
 8003164:	681b      	ldr	r3, [r3, #0]
 8003166:	f003 0301 	and.w	r3, r3, #1
 800316a:	2b00      	cmp	r3, #0
 800316c:	d04c      	beq.n	8003208 <HAL_RCC_ClockConfig+0x118>
 800316e:	687b      	ldr	r3, [r7, #4]
 8003170:	685b      	ldr	r3, [r3, #4]
 8003172:	2b03      	cmp	r3, #3
 8003174:	d107      	bne.n	8003186 <HAL_RCC_ClockConfig+0x96>
 8003176:	4b5a      	ldr	r3, [pc, #360]	@ (80032e0 <HAL_RCC_ClockConfig+0x1f0>)
 8003178:	681b      	ldr	r3, [r3, #0]
 800317a:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800317e:	2b00      	cmp	r3, #0
 8003180:	d121      	bne.n	80031c6 <HAL_RCC_ClockConfig+0xd6>
 8003182:	2301      	movs	r3, #1
 8003184:	e0a6      	b.n	80032d4 <HAL_RCC_ClockConfig+0x1e4>
 8003186:	687b      	ldr	r3, [r7, #4]
 8003188:	685b      	ldr	r3, [r3, #4]
 800318a:	2b02      	cmp	r3, #2
 800318c:	d107      	bne.n	800319e <HAL_RCC_ClockConfig+0xae>
 800318e:	4b54      	ldr	r3, [pc, #336]	@ (80032e0 <HAL_RCC_ClockConfig+0x1f0>)
 8003190:	681b      	ldr	r3, [r3, #0]
 8003192:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003196:	2b00      	cmp	r3, #0
 8003198:	d115      	bne.n	80031c6 <HAL_RCC_ClockConfig+0xd6>
 800319a:	2301      	movs	r3, #1
 800319c:	e09a      	b.n	80032d4 <HAL_RCC_ClockConfig+0x1e4>
 800319e:	687b      	ldr	r3, [r7, #4]
 80031a0:	685b      	ldr	r3, [r3, #4]
 80031a2:	2b00      	cmp	r3, #0
 80031a4:	d107      	bne.n	80031b6 <HAL_RCC_ClockConfig+0xc6>
 80031a6:	4b4e      	ldr	r3, [pc, #312]	@ (80032e0 <HAL_RCC_ClockConfig+0x1f0>)
 80031a8:	681b      	ldr	r3, [r3, #0]
 80031aa:	f003 0302 	and.w	r3, r3, #2
 80031ae:	2b00      	cmp	r3, #0
 80031b0:	d109      	bne.n	80031c6 <HAL_RCC_ClockConfig+0xd6>
 80031b2:	2301      	movs	r3, #1
 80031b4:	e08e      	b.n	80032d4 <HAL_RCC_ClockConfig+0x1e4>
 80031b6:	4b4a      	ldr	r3, [pc, #296]	@ (80032e0 <HAL_RCC_ClockConfig+0x1f0>)
 80031b8:	681b      	ldr	r3, [r3, #0]
 80031ba:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80031be:	2b00      	cmp	r3, #0
 80031c0:	d101      	bne.n	80031c6 <HAL_RCC_ClockConfig+0xd6>
 80031c2:	2301      	movs	r3, #1
 80031c4:	e086      	b.n	80032d4 <HAL_RCC_ClockConfig+0x1e4>
 80031c6:	4b46      	ldr	r3, [pc, #280]	@ (80032e0 <HAL_RCC_ClockConfig+0x1f0>)
 80031c8:	689b      	ldr	r3, [r3, #8]
 80031ca:	f023 0203 	bic.w	r2, r3, #3
 80031ce:	687b      	ldr	r3, [r7, #4]
 80031d0:	685b      	ldr	r3, [r3, #4]
 80031d2:	4943      	ldr	r1, [pc, #268]	@ (80032e0 <HAL_RCC_ClockConfig+0x1f0>)
 80031d4:	4313      	orrs	r3, r2
 80031d6:	608b      	str	r3, [r1, #8]
 80031d8:	f7fe fa66 	bl	80016a8 <HAL_GetTick>
 80031dc:	60f8      	str	r0, [r7, #12]
 80031de:	e00a      	b.n	80031f6 <HAL_RCC_ClockConfig+0x106>
 80031e0:	f7fe fa62 	bl	80016a8 <HAL_GetTick>
 80031e4:	4602      	mov	r2, r0
 80031e6:	68fb      	ldr	r3, [r7, #12]
 80031e8:	1ad3      	subs	r3, r2, r3
 80031ea:	f241 3288 	movw	r2, #5000	@ 0x1388
 80031ee:	4293      	cmp	r3, r2
 80031f0:	d901      	bls.n	80031f6 <HAL_RCC_ClockConfig+0x106>
 80031f2:	2303      	movs	r3, #3
 80031f4:	e06e      	b.n	80032d4 <HAL_RCC_ClockConfig+0x1e4>
 80031f6:	4b3a      	ldr	r3, [pc, #232]	@ (80032e0 <HAL_RCC_ClockConfig+0x1f0>)
 80031f8:	689b      	ldr	r3, [r3, #8]
 80031fa:	f003 020c 	and.w	r2, r3, #12
 80031fe:	687b      	ldr	r3, [r7, #4]
 8003200:	685b      	ldr	r3, [r3, #4]
 8003202:	009b      	lsls	r3, r3, #2
 8003204:	429a      	cmp	r2, r3
 8003206:	d1eb      	bne.n	80031e0 <HAL_RCC_ClockConfig+0xf0>
 8003208:	687b      	ldr	r3, [r7, #4]
 800320a:	681b      	ldr	r3, [r3, #0]
 800320c:	f003 0302 	and.w	r3, r3, #2
 8003210:	2b00      	cmp	r3, #0
 8003212:	d010      	beq.n	8003236 <HAL_RCC_ClockConfig+0x146>
 8003214:	687b      	ldr	r3, [r7, #4]
 8003216:	689a      	ldr	r2, [r3, #8]
 8003218:	4b31      	ldr	r3, [pc, #196]	@ (80032e0 <HAL_RCC_ClockConfig+0x1f0>)
 800321a:	689b      	ldr	r3, [r3, #8]
 800321c:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8003220:	429a      	cmp	r2, r3
 8003222:	d208      	bcs.n	8003236 <HAL_RCC_ClockConfig+0x146>
 8003224:	4b2e      	ldr	r3, [pc, #184]	@ (80032e0 <HAL_RCC_ClockConfig+0x1f0>)
 8003226:	689b      	ldr	r3, [r3, #8]
 8003228:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 800322c:	687b      	ldr	r3, [r7, #4]
 800322e:	689b      	ldr	r3, [r3, #8]
 8003230:	492b      	ldr	r1, [pc, #172]	@ (80032e0 <HAL_RCC_ClockConfig+0x1f0>)
 8003232:	4313      	orrs	r3, r2
 8003234:	608b      	str	r3, [r1, #8]
 8003236:	4b29      	ldr	r3, [pc, #164]	@ (80032dc <HAL_RCC_ClockConfig+0x1ec>)
 8003238:	681b      	ldr	r3, [r3, #0]
 800323a:	f003 0307 	and.w	r3, r3, #7
 800323e:	683a      	ldr	r2, [r7, #0]
 8003240:	429a      	cmp	r2, r3
 8003242:	d210      	bcs.n	8003266 <HAL_RCC_ClockConfig+0x176>
 8003244:	4b25      	ldr	r3, [pc, #148]	@ (80032dc <HAL_RCC_ClockConfig+0x1ec>)
 8003246:	681b      	ldr	r3, [r3, #0]
 8003248:	f023 0207 	bic.w	r2, r3, #7
 800324c:	4923      	ldr	r1, [pc, #140]	@ (80032dc <HAL_RCC_ClockConfig+0x1ec>)
 800324e:	683b      	ldr	r3, [r7, #0]
 8003250:	4313      	orrs	r3, r2
 8003252:	600b      	str	r3, [r1, #0]
 8003254:	4b21      	ldr	r3, [pc, #132]	@ (80032dc <HAL_RCC_ClockConfig+0x1ec>)
 8003256:	681b      	ldr	r3, [r3, #0]
 8003258:	f003 0307 	and.w	r3, r3, #7
 800325c:	683a      	ldr	r2, [r7, #0]
 800325e:	429a      	cmp	r2, r3
 8003260:	d001      	beq.n	8003266 <HAL_RCC_ClockConfig+0x176>
 8003262:	2301      	movs	r3, #1
 8003264:	e036      	b.n	80032d4 <HAL_RCC_ClockConfig+0x1e4>
 8003266:	687b      	ldr	r3, [r7, #4]
 8003268:	681b      	ldr	r3, [r3, #0]
 800326a:	f003 0304 	and.w	r3, r3, #4
 800326e:	2b00      	cmp	r3, #0
 8003270:	d008      	beq.n	8003284 <HAL_RCC_ClockConfig+0x194>
 8003272:	4b1b      	ldr	r3, [pc, #108]	@ (80032e0 <HAL_RCC_ClockConfig+0x1f0>)
 8003274:	689b      	ldr	r3, [r3, #8]
 8003276:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 800327a:	687b      	ldr	r3, [r7, #4]
 800327c:	68db      	ldr	r3, [r3, #12]
 800327e:	4918      	ldr	r1, [pc, #96]	@ (80032e0 <HAL_RCC_ClockConfig+0x1f0>)
 8003280:	4313      	orrs	r3, r2
 8003282:	608b      	str	r3, [r1, #8]
 8003284:	687b      	ldr	r3, [r7, #4]
 8003286:	681b      	ldr	r3, [r3, #0]
 8003288:	f003 0308 	and.w	r3, r3, #8
 800328c:	2b00      	cmp	r3, #0
 800328e:	d009      	beq.n	80032a4 <HAL_RCC_ClockConfig+0x1b4>
 8003290:	4b13      	ldr	r3, [pc, #76]	@ (80032e0 <HAL_RCC_ClockConfig+0x1f0>)
 8003292:	689b      	ldr	r3, [r3, #8]
 8003294:	f423 5260 	bic.w	r2, r3, #14336	@ 0x3800
 8003298:	687b      	ldr	r3, [r7, #4]
 800329a:	691b      	ldr	r3, [r3, #16]
 800329c:	00db      	lsls	r3, r3, #3
 800329e:	4910      	ldr	r1, [pc, #64]	@ (80032e0 <HAL_RCC_ClockConfig+0x1f0>)
 80032a0:	4313      	orrs	r3, r2
 80032a2:	608b      	str	r3, [r1, #8]
 80032a4:	f000 f824 	bl	80032f0 <HAL_RCC_GetSysClockFreq>
 80032a8:	4602      	mov	r2, r0
 80032aa:	4b0d      	ldr	r3, [pc, #52]	@ (80032e0 <HAL_RCC_ClockConfig+0x1f0>)
 80032ac:	689b      	ldr	r3, [r3, #8]
 80032ae:	091b      	lsrs	r3, r3, #4
 80032b0:	f003 030f 	and.w	r3, r3, #15
 80032b4:	490b      	ldr	r1, [pc, #44]	@ (80032e4 <HAL_RCC_ClockConfig+0x1f4>)
 80032b6:	5ccb      	ldrb	r3, [r1, r3]
 80032b8:	f003 031f 	and.w	r3, r3, #31
 80032bc:	fa22 f303 	lsr.w	r3, r2, r3
 80032c0:	4a09      	ldr	r2, [pc, #36]	@ (80032e8 <HAL_RCC_ClockConfig+0x1f8>)
 80032c2:	6013      	str	r3, [r2, #0]
 80032c4:	4b09      	ldr	r3, [pc, #36]	@ (80032ec <HAL_RCC_ClockConfig+0x1fc>)
 80032c6:	681b      	ldr	r3, [r3, #0]
 80032c8:	4618      	mov	r0, r3
 80032ca:	f7fe f99d 	bl	8001608 <HAL_InitTick>
 80032ce:	4603      	mov	r3, r0
 80032d0:	72fb      	strb	r3, [r7, #11]
 80032d2:	7afb      	ldrb	r3, [r7, #11]
 80032d4:	4618      	mov	r0, r3
 80032d6:	3710      	adds	r7, #16
 80032d8:	46bd      	mov	sp, r7
 80032da:	bd80      	pop	{r7, pc}
 80032dc:	40022000 	.word	0x40022000
 80032e0:	40021000 	.word	0x40021000
 80032e4:	08005994 	.word	0x08005994
 80032e8:	2000000c 	.word	0x2000000c
 80032ec:	20000010 	.word	0x20000010

080032f0 <HAL_RCC_GetSysClockFreq>:
 80032f0:	b480      	push	{r7}
 80032f2:	b089      	sub	sp, #36	@ 0x24
 80032f4:	af00      	add	r7, sp, #0
 80032f6:	2300      	movs	r3, #0
 80032f8:	61fb      	str	r3, [r7, #28]
 80032fa:	2300      	movs	r3, #0
 80032fc:	61bb      	str	r3, [r7, #24]
 80032fe:	4b3e      	ldr	r3, [pc, #248]	@ (80033f8 <HAL_RCC_GetSysClockFreq+0x108>)
 8003300:	689b      	ldr	r3, [r3, #8]
 8003302:	f003 030c 	and.w	r3, r3, #12
 8003306:	613b      	str	r3, [r7, #16]
 8003308:	4b3b      	ldr	r3, [pc, #236]	@ (80033f8 <HAL_RCC_GetSysClockFreq+0x108>)
 800330a:	68db      	ldr	r3, [r3, #12]
 800330c:	f003 0303 	and.w	r3, r3, #3
 8003310:	60fb      	str	r3, [r7, #12]
 8003312:	693b      	ldr	r3, [r7, #16]
 8003314:	2b00      	cmp	r3, #0
 8003316:	d005      	beq.n	8003324 <HAL_RCC_GetSysClockFreq+0x34>
 8003318:	693b      	ldr	r3, [r7, #16]
 800331a:	2b0c      	cmp	r3, #12
 800331c:	d121      	bne.n	8003362 <HAL_RCC_GetSysClockFreq+0x72>
 800331e:	68fb      	ldr	r3, [r7, #12]
 8003320:	2b01      	cmp	r3, #1
 8003322:	d11e      	bne.n	8003362 <HAL_RCC_GetSysClockFreq+0x72>
 8003324:	4b34      	ldr	r3, [pc, #208]	@ (80033f8 <HAL_RCC_GetSysClockFreq+0x108>)
 8003326:	681b      	ldr	r3, [r3, #0]
 8003328:	f003 0308 	and.w	r3, r3, #8
 800332c:	2b00      	cmp	r3, #0
 800332e:	d107      	bne.n	8003340 <HAL_RCC_GetSysClockFreq+0x50>
 8003330:	4b31      	ldr	r3, [pc, #196]	@ (80033f8 <HAL_RCC_GetSysClockFreq+0x108>)
 8003332:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8003336:	0a1b      	lsrs	r3, r3, #8
 8003338:	f003 030f 	and.w	r3, r3, #15
 800333c:	61fb      	str	r3, [r7, #28]
 800333e:	e005      	b.n	800334c <HAL_RCC_GetSysClockFreq+0x5c>
 8003340:	4b2d      	ldr	r3, [pc, #180]	@ (80033f8 <HAL_RCC_GetSysClockFreq+0x108>)
 8003342:	681b      	ldr	r3, [r3, #0]
 8003344:	091b      	lsrs	r3, r3, #4
 8003346:	f003 030f 	and.w	r3, r3, #15
 800334a:	61fb      	str	r3, [r7, #28]
 800334c:	4a2b      	ldr	r2, [pc, #172]	@ (80033fc <HAL_RCC_GetSysClockFreq+0x10c>)
 800334e:	69fb      	ldr	r3, [r7, #28]
 8003350:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8003354:	61fb      	str	r3, [r7, #28]
 8003356:	693b      	ldr	r3, [r7, #16]
 8003358:	2b00      	cmp	r3, #0
 800335a:	d10d      	bne.n	8003378 <HAL_RCC_GetSysClockFreq+0x88>
 800335c:	69fb      	ldr	r3, [r7, #28]
 800335e:	61bb      	str	r3, [r7, #24]
 8003360:	e00a      	b.n	8003378 <HAL_RCC_GetSysClockFreq+0x88>
 8003362:	693b      	ldr	r3, [r7, #16]
 8003364:	2b04      	cmp	r3, #4
 8003366:	d102      	bne.n	800336e <HAL_RCC_GetSysClockFreq+0x7e>
 8003368:	4b25      	ldr	r3, [pc, #148]	@ (8003400 <HAL_RCC_GetSysClockFreq+0x110>)
 800336a:	61bb      	str	r3, [r7, #24]
 800336c:	e004      	b.n	8003378 <HAL_RCC_GetSysClockFreq+0x88>
 800336e:	693b      	ldr	r3, [r7, #16]
 8003370:	2b08      	cmp	r3, #8
 8003372:	d101      	bne.n	8003378 <HAL_RCC_GetSysClockFreq+0x88>
 8003374:	4b23      	ldr	r3, [pc, #140]	@ (8003404 <HAL_RCC_GetSysClockFreq+0x114>)
 8003376:	61bb      	str	r3, [r7, #24]
 8003378:	693b      	ldr	r3, [r7, #16]
 800337a:	2b0c      	cmp	r3, #12
 800337c:	d134      	bne.n	80033e8 <HAL_RCC_GetSysClockFreq+0xf8>
 800337e:	4b1e      	ldr	r3, [pc, #120]	@ (80033f8 <HAL_RCC_GetSysClockFreq+0x108>)
 8003380:	68db      	ldr	r3, [r3, #12]
 8003382:	f003 0303 	and.w	r3, r3, #3
 8003386:	60bb      	str	r3, [r7, #8]
 8003388:	68bb      	ldr	r3, [r7, #8]
 800338a:	2b02      	cmp	r3, #2
 800338c:	d003      	beq.n	8003396 <HAL_RCC_GetSysClockFreq+0xa6>
 800338e:	68bb      	ldr	r3, [r7, #8]
 8003390:	2b03      	cmp	r3, #3
 8003392:	d003      	beq.n	800339c <HAL_RCC_GetSysClockFreq+0xac>
 8003394:	e005      	b.n	80033a2 <HAL_RCC_GetSysClockFreq+0xb2>
 8003396:	4b1a      	ldr	r3, [pc, #104]	@ (8003400 <HAL_RCC_GetSysClockFreq+0x110>)
 8003398:	617b      	str	r3, [r7, #20]
 800339a:	e005      	b.n	80033a8 <HAL_RCC_GetSysClockFreq+0xb8>
 800339c:	4b19      	ldr	r3, [pc, #100]	@ (8003404 <HAL_RCC_GetSysClockFreq+0x114>)
 800339e:	617b      	str	r3, [r7, #20]
 80033a0:	e002      	b.n	80033a8 <HAL_RCC_GetSysClockFreq+0xb8>
 80033a2:	69fb      	ldr	r3, [r7, #28]
 80033a4:	617b      	str	r3, [r7, #20]
 80033a6:	bf00      	nop
 80033a8:	4b13      	ldr	r3, [pc, #76]	@ (80033f8 <HAL_RCC_GetSysClockFreq+0x108>)
 80033aa:	68db      	ldr	r3, [r3, #12]
 80033ac:	091b      	lsrs	r3, r3, #4
 80033ae:	f003 0307 	and.w	r3, r3, #7
 80033b2:	3301      	adds	r3, #1
 80033b4:	607b      	str	r3, [r7, #4]
 80033b6:	4b10      	ldr	r3, [pc, #64]	@ (80033f8 <HAL_RCC_GetSysClockFreq+0x108>)
 80033b8:	68db      	ldr	r3, [r3, #12]
 80033ba:	0a1b      	lsrs	r3, r3, #8
 80033bc:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 80033c0:	697a      	ldr	r2, [r7, #20]
 80033c2:	fb03 f202 	mul.w	r2, r3, r2
 80033c6:	687b      	ldr	r3, [r7, #4]
 80033c8:	fbb2 f3f3 	udiv	r3, r2, r3
 80033cc:	617b      	str	r3, [r7, #20]
 80033ce:	4b0a      	ldr	r3, [pc, #40]	@ (80033f8 <HAL_RCC_GetSysClockFreq+0x108>)
 80033d0:	68db      	ldr	r3, [r3, #12]
 80033d2:	0e5b      	lsrs	r3, r3, #25
 80033d4:	f003 0303 	and.w	r3, r3, #3
 80033d8:	3301      	adds	r3, #1
 80033da:	005b      	lsls	r3, r3, #1
 80033dc:	603b      	str	r3, [r7, #0]
 80033de:	697a      	ldr	r2, [r7, #20]
 80033e0:	683b      	ldr	r3, [r7, #0]
 80033e2:	fbb2 f3f3 	udiv	r3, r2, r3
 80033e6:	61bb      	str	r3, [r7, #24]
 80033e8:	69bb      	ldr	r3, [r7, #24]
 80033ea:	4618      	mov	r0, r3
 80033ec:	3724      	adds	r7, #36	@ 0x24
 80033ee:	46bd      	mov	sp, r7
 80033f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80033f4:	4770      	bx	lr
 80033f6:	bf00      	nop
 80033f8:	40021000 	.word	0x40021000
 80033fc:	080059ac 	.word	0x080059ac
 8003400:	00f42400 	.word	0x00f42400
 8003404:	007a1200 	.word	0x007a1200

08003408 <HAL_RCC_GetHCLKFreq>:
 8003408:	b480      	push	{r7}
 800340a:	af00      	add	r7, sp, #0
 800340c:	4b03      	ldr	r3, [pc, #12]	@ (800341c <HAL_RCC_GetHCLKFreq+0x14>)
 800340e:	681b      	ldr	r3, [r3, #0]
 8003410:	4618      	mov	r0, r3
 8003412:	46bd      	mov	sp, r7
 8003414:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003418:	4770      	bx	lr
 800341a:	bf00      	nop
 800341c:	2000000c 	.word	0x2000000c

08003420 <HAL_RCC_GetPCLK1Freq>:
 8003420:	b580      	push	{r7, lr}
 8003422:	af00      	add	r7, sp, #0
 8003424:	f7ff fff0 	bl	8003408 <HAL_RCC_GetHCLKFreq>
 8003428:	4602      	mov	r2, r0
 800342a:	4b06      	ldr	r3, [pc, #24]	@ (8003444 <HAL_RCC_GetPCLK1Freq+0x24>)
 800342c:	689b      	ldr	r3, [r3, #8]
 800342e:	0a1b      	lsrs	r3, r3, #8
 8003430:	f003 0307 	and.w	r3, r3, #7
 8003434:	4904      	ldr	r1, [pc, #16]	@ (8003448 <HAL_RCC_GetPCLK1Freq+0x28>)
 8003436:	5ccb      	ldrb	r3, [r1, r3]
 8003438:	f003 031f 	and.w	r3, r3, #31
 800343c:	fa22 f303 	lsr.w	r3, r2, r3
 8003440:	4618      	mov	r0, r3
 8003442:	bd80      	pop	{r7, pc}
 8003444:	40021000 	.word	0x40021000
 8003448:	080059a4 	.word	0x080059a4

0800344c <HAL_RCC_GetPCLK2Freq>:
 800344c:	b580      	push	{r7, lr}
 800344e:	af00      	add	r7, sp, #0
 8003450:	f7ff ffda 	bl	8003408 <HAL_RCC_GetHCLKFreq>
 8003454:	4602      	mov	r2, r0
 8003456:	4b06      	ldr	r3, [pc, #24]	@ (8003470 <HAL_RCC_GetPCLK2Freq+0x24>)
 8003458:	689b      	ldr	r3, [r3, #8]
 800345a:	0adb      	lsrs	r3, r3, #11
 800345c:	f003 0307 	and.w	r3, r3, #7
 8003460:	4904      	ldr	r1, [pc, #16]	@ (8003474 <HAL_RCC_GetPCLK2Freq+0x28>)
 8003462:	5ccb      	ldrb	r3, [r1, r3]
 8003464:	f003 031f 	and.w	r3, r3, #31
 8003468:	fa22 f303 	lsr.w	r3, r2, r3
 800346c:	4618      	mov	r0, r3
 800346e:	bd80      	pop	{r7, pc}
 8003470:	40021000 	.word	0x40021000
 8003474:	080059a4 	.word	0x080059a4

08003478 <RCC_SetFlashLatencyFromMSIRange>:
 8003478:	b580      	push	{r7, lr}
 800347a:	b086      	sub	sp, #24
 800347c:	af00      	add	r7, sp, #0
 800347e:	6078      	str	r0, [r7, #4]
 8003480:	2300      	movs	r3, #0
 8003482:	613b      	str	r3, [r7, #16]
 8003484:	4b2a      	ldr	r3, [pc, #168]	@ (8003530 <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 8003486:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003488:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800348c:	2b00      	cmp	r3, #0
 800348e:	d003      	beq.n	8003498 <RCC_SetFlashLatencyFromMSIRange+0x20>
 8003490:	f7ff f9a0 	bl	80027d4 <HAL_PWREx_GetVoltageRange>
 8003494:	6178      	str	r0, [r7, #20]
 8003496:	e014      	b.n	80034c2 <RCC_SetFlashLatencyFromMSIRange+0x4a>
 8003498:	4b25      	ldr	r3, [pc, #148]	@ (8003530 <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 800349a:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800349c:	4a24      	ldr	r2, [pc, #144]	@ (8003530 <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 800349e:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80034a2:	6593      	str	r3, [r2, #88]	@ 0x58
 80034a4:	4b22      	ldr	r3, [pc, #136]	@ (8003530 <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 80034a6:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80034a8:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80034ac:	60fb      	str	r3, [r7, #12]
 80034ae:	68fb      	ldr	r3, [r7, #12]
 80034b0:	f7ff f990 	bl	80027d4 <HAL_PWREx_GetVoltageRange>
 80034b4:	6178      	str	r0, [r7, #20]
 80034b6:	4b1e      	ldr	r3, [pc, #120]	@ (8003530 <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 80034b8:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80034ba:	4a1d      	ldr	r2, [pc, #116]	@ (8003530 <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 80034bc:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 80034c0:	6593      	str	r3, [r2, #88]	@ 0x58
 80034c2:	697b      	ldr	r3, [r7, #20]
 80034c4:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80034c8:	d10b      	bne.n	80034e2 <RCC_SetFlashLatencyFromMSIRange+0x6a>
 80034ca:	687b      	ldr	r3, [r7, #4]
 80034cc:	2b80      	cmp	r3, #128	@ 0x80
 80034ce:	d919      	bls.n	8003504 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 80034d0:	687b      	ldr	r3, [r7, #4]
 80034d2:	2ba0      	cmp	r3, #160	@ 0xa0
 80034d4:	d902      	bls.n	80034dc <RCC_SetFlashLatencyFromMSIRange+0x64>
 80034d6:	2302      	movs	r3, #2
 80034d8:	613b      	str	r3, [r7, #16]
 80034da:	e013      	b.n	8003504 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 80034dc:	2301      	movs	r3, #1
 80034de:	613b      	str	r3, [r7, #16]
 80034e0:	e010      	b.n	8003504 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 80034e2:	687b      	ldr	r3, [r7, #4]
 80034e4:	2b80      	cmp	r3, #128	@ 0x80
 80034e6:	d902      	bls.n	80034ee <RCC_SetFlashLatencyFromMSIRange+0x76>
 80034e8:	2303      	movs	r3, #3
 80034ea:	613b      	str	r3, [r7, #16]
 80034ec:	e00a      	b.n	8003504 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 80034ee:	687b      	ldr	r3, [r7, #4]
 80034f0:	2b80      	cmp	r3, #128	@ 0x80
 80034f2:	d102      	bne.n	80034fa <RCC_SetFlashLatencyFromMSIRange+0x82>
 80034f4:	2302      	movs	r3, #2
 80034f6:	613b      	str	r3, [r7, #16]
 80034f8:	e004      	b.n	8003504 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 80034fa:	687b      	ldr	r3, [r7, #4]
 80034fc:	2b70      	cmp	r3, #112	@ 0x70
 80034fe:	d101      	bne.n	8003504 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 8003500:	2301      	movs	r3, #1
 8003502:	613b      	str	r3, [r7, #16]
 8003504:	4b0b      	ldr	r3, [pc, #44]	@ (8003534 <RCC_SetFlashLatencyFromMSIRange+0xbc>)
 8003506:	681b      	ldr	r3, [r3, #0]
 8003508:	f023 0207 	bic.w	r2, r3, #7
 800350c:	4909      	ldr	r1, [pc, #36]	@ (8003534 <RCC_SetFlashLatencyFromMSIRange+0xbc>)
 800350e:	693b      	ldr	r3, [r7, #16]
 8003510:	4313      	orrs	r3, r2
 8003512:	600b      	str	r3, [r1, #0]
 8003514:	4b07      	ldr	r3, [pc, #28]	@ (8003534 <RCC_SetFlashLatencyFromMSIRange+0xbc>)
 8003516:	681b      	ldr	r3, [r3, #0]
 8003518:	f003 0307 	and.w	r3, r3, #7
 800351c:	693a      	ldr	r2, [r7, #16]
 800351e:	429a      	cmp	r2, r3
 8003520:	d001      	beq.n	8003526 <RCC_SetFlashLatencyFromMSIRange+0xae>
 8003522:	2301      	movs	r3, #1
 8003524:	e000      	b.n	8003528 <RCC_SetFlashLatencyFromMSIRange+0xb0>
 8003526:	2300      	movs	r3, #0
 8003528:	4618      	mov	r0, r3
 800352a:	3718      	adds	r7, #24
 800352c:	46bd      	mov	sp, r7
 800352e:	bd80      	pop	{r7, pc}
 8003530:	40021000 	.word	0x40021000
 8003534:	40022000 	.word	0x40022000

08003538 <HAL_RCCEx_PeriphCLKConfig>:
 8003538:	b580      	push	{r7, lr}
 800353a:	b086      	sub	sp, #24
 800353c:	af00      	add	r7, sp, #0
 800353e:	6078      	str	r0, [r7, #4]
 8003540:	2300      	movs	r3, #0
 8003542:	74fb      	strb	r3, [r7, #19]
 8003544:	2300      	movs	r3, #0
 8003546:	74bb      	strb	r3, [r7, #18]
 8003548:	687b      	ldr	r3, [r7, #4]
 800354a:	681b      	ldr	r3, [r3, #0]
 800354c:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8003550:	2b00      	cmp	r3, #0
 8003552:	d041      	beq.n	80035d8 <HAL_RCCEx_PeriphCLKConfig+0xa0>
 8003554:	687b      	ldr	r3, [r7, #4]
 8003556:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 8003558:	f5b3 0f40 	cmp.w	r3, #12582912	@ 0xc00000
 800355c:	d02a      	beq.n	80035b4 <HAL_RCCEx_PeriphCLKConfig+0x7c>
 800355e:	f5b3 0f40 	cmp.w	r3, #12582912	@ 0xc00000
 8003562:	d824      	bhi.n	80035ae <HAL_RCCEx_PeriphCLKConfig+0x76>
 8003564:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 8003568:	d008      	beq.n	800357c <HAL_RCCEx_PeriphCLKConfig+0x44>
 800356a:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 800356e:	d81e      	bhi.n	80035ae <HAL_RCCEx_PeriphCLKConfig+0x76>
 8003570:	2b00      	cmp	r3, #0
 8003572:	d00a      	beq.n	800358a <HAL_RCCEx_PeriphCLKConfig+0x52>
 8003574:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8003578:	d010      	beq.n	800359c <HAL_RCCEx_PeriphCLKConfig+0x64>
 800357a:	e018      	b.n	80035ae <HAL_RCCEx_PeriphCLKConfig+0x76>
 800357c:	4b86      	ldr	r3, [pc, #536]	@ (8003798 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 800357e:	68db      	ldr	r3, [r3, #12]
 8003580:	4a85      	ldr	r2, [pc, #532]	@ (8003798 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8003582:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8003586:	60d3      	str	r3, [r2, #12]
 8003588:	e015      	b.n	80035b6 <HAL_RCCEx_PeriphCLKConfig+0x7e>
 800358a:	687b      	ldr	r3, [r7, #4]
 800358c:	3304      	adds	r3, #4
 800358e:	2100      	movs	r1, #0
 8003590:	4618      	mov	r0, r3
 8003592:	f000 facd 	bl	8003b30 <RCCEx_PLLSAI1_Config>
 8003596:	4603      	mov	r3, r0
 8003598:	74fb      	strb	r3, [r7, #19]
 800359a:	e00c      	b.n	80035b6 <HAL_RCCEx_PeriphCLKConfig+0x7e>
 800359c:	687b      	ldr	r3, [r7, #4]
 800359e:	3320      	adds	r3, #32
 80035a0:	2100      	movs	r1, #0
 80035a2:	4618      	mov	r0, r3
 80035a4:	f000 fbb6 	bl	8003d14 <RCCEx_PLLSAI2_Config>
 80035a8:	4603      	mov	r3, r0
 80035aa:	74fb      	strb	r3, [r7, #19]
 80035ac:	e003      	b.n	80035b6 <HAL_RCCEx_PeriphCLKConfig+0x7e>
 80035ae:	2301      	movs	r3, #1
 80035b0:	74fb      	strb	r3, [r7, #19]
 80035b2:	e000      	b.n	80035b6 <HAL_RCCEx_PeriphCLKConfig+0x7e>
 80035b4:	bf00      	nop
 80035b6:	7cfb      	ldrb	r3, [r7, #19]
 80035b8:	2b00      	cmp	r3, #0
 80035ba:	d10b      	bne.n	80035d4 <HAL_RCCEx_PeriphCLKConfig+0x9c>
 80035bc:	4b76      	ldr	r3, [pc, #472]	@ (8003798 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 80035be:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80035c2:	f423 0240 	bic.w	r2, r3, #12582912	@ 0xc00000
 80035c6:	687b      	ldr	r3, [r7, #4]
 80035c8:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 80035ca:	4973      	ldr	r1, [pc, #460]	@ (8003798 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 80035cc:	4313      	orrs	r3, r2
 80035ce:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80035d2:	e001      	b.n	80035d8 <HAL_RCCEx_PeriphCLKConfig+0xa0>
 80035d4:	7cfb      	ldrb	r3, [r7, #19]
 80035d6:	74bb      	strb	r3, [r7, #18]
 80035d8:	687b      	ldr	r3, [r7, #4]
 80035da:	681b      	ldr	r3, [r3, #0]
 80035dc:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 80035e0:	2b00      	cmp	r3, #0
 80035e2:	d041      	beq.n	8003668 <HAL_RCCEx_PeriphCLKConfig+0x130>
 80035e4:	687b      	ldr	r3, [r7, #4]
 80035e6:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 80035e8:	f1b3 7f40 	cmp.w	r3, #50331648	@ 0x3000000
 80035ec:	d02a      	beq.n	8003644 <HAL_RCCEx_PeriphCLKConfig+0x10c>
 80035ee:	f1b3 7f40 	cmp.w	r3, #50331648	@ 0x3000000
 80035f2:	d824      	bhi.n	800363e <HAL_RCCEx_PeriphCLKConfig+0x106>
 80035f4:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 80035f8:	d008      	beq.n	800360c <HAL_RCCEx_PeriphCLKConfig+0xd4>
 80035fa:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 80035fe:	d81e      	bhi.n	800363e <HAL_RCCEx_PeriphCLKConfig+0x106>
 8003600:	2b00      	cmp	r3, #0
 8003602:	d00a      	beq.n	800361a <HAL_RCCEx_PeriphCLKConfig+0xe2>
 8003604:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8003608:	d010      	beq.n	800362c <HAL_RCCEx_PeriphCLKConfig+0xf4>
 800360a:	e018      	b.n	800363e <HAL_RCCEx_PeriphCLKConfig+0x106>
 800360c:	4b62      	ldr	r3, [pc, #392]	@ (8003798 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 800360e:	68db      	ldr	r3, [r3, #12]
 8003610:	4a61      	ldr	r2, [pc, #388]	@ (8003798 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8003612:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8003616:	60d3      	str	r3, [r2, #12]
 8003618:	e015      	b.n	8003646 <HAL_RCCEx_PeriphCLKConfig+0x10e>
 800361a:	687b      	ldr	r3, [r7, #4]
 800361c:	3304      	adds	r3, #4
 800361e:	2100      	movs	r1, #0
 8003620:	4618      	mov	r0, r3
 8003622:	f000 fa85 	bl	8003b30 <RCCEx_PLLSAI1_Config>
 8003626:	4603      	mov	r3, r0
 8003628:	74fb      	strb	r3, [r7, #19]
 800362a:	e00c      	b.n	8003646 <HAL_RCCEx_PeriphCLKConfig+0x10e>
 800362c:	687b      	ldr	r3, [r7, #4]
 800362e:	3320      	adds	r3, #32
 8003630:	2100      	movs	r1, #0
 8003632:	4618      	mov	r0, r3
 8003634:	f000 fb6e 	bl	8003d14 <RCCEx_PLLSAI2_Config>
 8003638:	4603      	mov	r3, r0
 800363a:	74fb      	strb	r3, [r7, #19]
 800363c:	e003      	b.n	8003646 <HAL_RCCEx_PeriphCLKConfig+0x10e>
 800363e:	2301      	movs	r3, #1
 8003640:	74fb      	strb	r3, [r7, #19]
 8003642:	e000      	b.n	8003646 <HAL_RCCEx_PeriphCLKConfig+0x10e>
 8003644:	bf00      	nop
 8003646:	7cfb      	ldrb	r3, [r7, #19]
 8003648:	2b00      	cmp	r3, #0
 800364a:	d10b      	bne.n	8003664 <HAL_RCCEx_PeriphCLKConfig+0x12c>
 800364c:	4b52      	ldr	r3, [pc, #328]	@ (8003798 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 800364e:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8003652:	f023 7240 	bic.w	r2, r3, #50331648	@ 0x3000000
 8003656:	687b      	ldr	r3, [r7, #4]
 8003658:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800365a:	494f      	ldr	r1, [pc, #316]	@ (8003798 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 800365c:	4313      	orrs	r3, r2
 800365e:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8003662:	e001      	b.n	8003668 <HAL_RCCEx_PeriphCLKConfig+0x130>
 8003664:	7cfb      	ldrb	r3, [r7, #19]
 8003666:	74bb      	strb	r3, [r7, #18]
 8003668:	687b      	ldr	r3, [r7, #4]
 800366a:	681b      	ldr	r3, [r3, #0]
 800366c:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003670:	2b00      	cmp	r3, #0
 8003672:	f000 80a0 	beq.w	80037b6 <HAL_RCCEx_PeriphCLKConfig+0x27e>
 8003676:	2300      	movs	r3, #0
 8003678:	747b      	strb	r3, [r7, #17]
 800367a:	4b47      	ldr	r3, [pc, #284]	@ (8003798 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 800367c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800367e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8003682:	2b00      	cmp	r3, #0
 8003684:	d101      	bne.n	800368a <HAL_RCCEx_PeriphCLKConfig+0x152>
 8003686:	2301      	movs	r3, #1
 8003688:	e000      	b.n	800368c <HAL_RCCEx_PeriphCLKConfig+0x154>
 800368a:	2300      	movs	r3, #0
 800368c:	2b00      	cmp	r3, #0
 800368e:	d00d      	beq.n	80036ac <HAL_RCCEx_PeriphCLKConfig+0x174>
 8003690:	4b41      	ldr	r3, [pc, #260]	@ (8003798 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8003692:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003694:	4a40      	ldr	r2, [pc, #256]	@ (8003798 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8003696:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800369a:	6593      	str	r3, [r2, #88]	@ 0x58
 800369c:	4b3e      	ldr	r3, [pc, #248]	@ (8003798 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 800369e:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80036a0:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80036a4:	60bb      	str	r3, [r7, #8]
 80036a6:	68bb      	ldr	r3, [r7, #8]
 80036a8:	2301      	movs	r3, #1
 80036aa:	747b      	strb	r3, [r7, #17]
 80036ac:	4b3b      	ldr	r3, [pc, #236]	@ (800379c <HAL_RCCEx_PeriphCLKConfig+0x264>)
 80036ae:	681b      	ldr	r3, [r3, #0]
 80036b0:	4a3a      	ldr	r2, [pc, #232]	@ (800379c <HAL_RCCEx_PeriphCLKConfig+0x264>)
 80036b2:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80036b6:	6013      	str	r3, [r2, #0]
 80036b8:	f7fd fff6 	bl	80016a8 <HAL_GetTick>
 80036bc:	60f8      	str	r0, [r7, #12]
 80036be:	e009      	b.n	80036d4 <HAL_RCCEx_PeriphCLKConfig+0x19c>
 80036c0:	f7fd fff2 	bl	80016a8 <HAL_GetTick>
 80036c4:	4602      	mov	r2, r0
 80036c6:	68fb      	ldr	r3, [r7, #12]
 80036c8:	1ad3      	subs	r3, r2, r3
 80036ca:	2b02      	cmp	r3, #2
 80036cc:	d902      	bls.n	80036d4 <HAL_RCCEx_PeriphCLKConfig+0x19c>
 80036ce:	2303      	movs	r3, #3
 80036d0:	74fb      	strb	r3, [r7, #19]
 80036d2:	e005      	b.n	80036e0 <HAL_RCCEx_PeriphCLKConfig+0x1a8>
 80036d4:	4b31      	ldr	r3, [pc, #196]	@ (800379c <HAL_RCCEx_PeriphCLKConfig+0x264>)
 80036d6:	681b      	ldr	r3, [r3, #0]
 80036d8:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80036dc:	2b00      	cmp	r3, #0
 80036de:	d0ef      	beq.n	80036c0 <HAL_RCCEx_PeriphCLKConfig+0x188>
 80036e0:	7cfb      	ldrb	r3, [r7, #19]
 80036e2:	2b00      	cmp	r3, #0
 80036e4:	d15c      	bne.n	80037a0 <HAL_RCCEx_PeriphCLKConfig+0x268>
 80036e6:	4b2c      	ldr	r3, [pc, #176]	@ (8003798 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 80036e8:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80036ec:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80036f0:	617b      	str	r3, [r7, #20]
 80036f2:	697b      	ldr	r3, [r7, #20]
 80036f4:	2b00      	cmp	r3, #0
 80036f6:	d01f      	beq.n	8003738 <HAL_RCCEx_PeriphCLKConfig+0x200>
 80036f8:	687b      	ldr	r3, [r7, #4]
 80036fa:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80036fe:	697a      	ldr	r2, [r7, #20]
 8003700:	429a      	cmp	r2, r3
 8003702:	d019      	beq.n	8003738 <HAL_RCCEx_PeriphCLKConfig+0x200>
 8003704:	4b24      	ldr	r3, [pc, #144]	@ (8003798 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8003706:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800370a:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800370e:	617b      	str	r3, [r7, #20]
 8003710:	4b21      	ldr	r3, [pc, #132]	@ (8003798 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8003712:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8003716:	4a20      	ldr	r2, [pc, #128]	@ (8003798 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8003718:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800371c:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8003720:	4b1d      	ldr	r3, [pc, #116]	@ (8003798 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8003722:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8003726:	4a1c      	ldr	r2, [pc, #112]	@ (8003798 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8003728:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 800372c:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8003730:	4a19      	ldr	r2, [pc, #100]	@ (8003798 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8003732:	697b      	ldr	r3, [r7, #20]
 8003734:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8003738:	697b      	ldr	r3, [r7, #20]
 800373a:	f003 0301 	and.w	r3, r3, #1
 800373e:	2b00      	cmp	r3, #0
 8003740:	d016      	beq.n	8003770 <HAL_RCCEx_PeriphCLKConfig+0x238>
 8003742:	f7fd ffb1 	bl	80016a8 <HAL_GetTick>
 8003746:	60f8      	str	r0, [r7, #12]
 8003748:	e00b      	b.n	8003762 <HAL_RCCEx_PeriphCLKConfig+0x22a>
 800374a:	f7fd ffad 	bl	80016a8 <HAL_GetTick>
 800374e:	4602      	mov	r2, r0
 8003750:	68fb      	ldr	r3, [r7, #12]
 8003752:	1ad3      	subs	r3, r2, r3
 8003754:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003758:	4293      	cmp	r3, r2
 800375a:	d902      	bls.n	8003762 <HAL_RCCEx_PeriphCLKConfig+0x22a>
 800375c:	2303      	movs	r3, #3
 800375e:	74fb      	strb	r3, [r7, #19]
 8003760:	e006      	b.n	8003770 <HAL_RCCEx_PeriphCLKConfig+0x238>
 8003762:	4b0d      	ldr	r3, [pc, #52]	@ (8003798 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8003764:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8003768:	f003 0302 	and.w	r3, r3, #2
 800376c:	2b00      	cmp	r3, #0
 800376e:	d0ec      	beq.n	800374a <HAL_RCCEx_PeriphCLKConfig+0x212>
 8003770:	7cfb      	ldrb	r3, [r7, #19]
 8003772:	2b00      	cmp	r3, #0
 8003774:	d10c      	bne.n	8003790 <HAL_RCCEx_PeriphCLKConfig+0x258>
 8003776:	4b08      	ldr	r3, [pc, #32]	@ (8003798 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8003778:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800377c:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 8003780:	687b      	ldr	r3, [r7, #4]
 8003782:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8003786:	4904      	ldr	r1, [pc, #16]	@ (8003798 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8003788:	4313      	orrs	r3, r2
 800378a:	f8c1 3090 	str.w	r3, [r1, #144]	@ 0x90
 800378e:	e009      	b.n	80037a4 <HAL_RCCEx_PeriphCLKConfig+0x26c>
 8003790:	7cfb      	ldrb	r3, [r7, #19]
 8003792:	74bb      	strb	r3, [r7, #18]
 8003794:	e006      	b.n	80037a4 <HAL_RCCEx_PeriphCLKConfig+0x26c>
 8003796:	bf00      	nop
 8003798:	40021000 	.word	0x40021000
 800379c:	40007000 	.word	0x40007000
 80037a0:	7cfb      	ldrb	r3, [r7, #19]
 80037a2:	74bb      	strb	r3, [r7, #18]
 80037a4:	7c7b      	ldrb	r3, [r7, #17]
 80037a6:	2b01      	cmp	r3, #1
 80037a8:	d105      	bne.n	80037b6 <HAL_RCCEx_PeriphCLKConfig+0x27e>
 80037aa:	4ba6      	ldr	r3, [pc, #664]	@ (8003a44 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 80037ac:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80037ae:	4aa5      	ldr	r2, [pc, #660]	@ (8003a44 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 80037b0:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 80037b4:	6593      	str	r3, [r2, #88]	@ 0x58
 80037b6:	687b      	ldr	r3, [r7, #4]
 80037b8:	681b      	ldr	r3, [r3, #0]
 80037ba:	f003 0301 	and.w	r3, r3, #1
 80037be:	2b00      	cmp	r3, #0
 80037c0:	d00a      	beq.n	80037d8 <HAL_RCCEx_PeriphCLKConfig+0x2a0>
 80037c2:	4ba0      	ldr	r3, [pc, #640]	@ (8003a44 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 80037c4:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80037c8:	f023 0203 	bic.w	r2, r3, #3
 80037cc:	687b      	ldr	r3, [r7, #4]
 80037ce:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80037d0:	499c      	ldr	r1, [pc, #624]	@ (8003a44 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 80037d2:	4313      	orrs	r3, r2
 80037d4:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80037d8:	687b      	ldr	r3, [r7, #4]
 80037da:	681b      	ldr	r3, [r3, #0]
 80037dc:	f003 0302 	and.w	r3, r3, #2
 80037e0:	2b00      	cmp	r3, #0
 80037e2:	d00a      	beq.n	80037fa <HAL_RCCEx_PeriphCLKConfig+0x2c2>
 80037e4:	4b97      	ldr	r3, [pc, #604]	@ (8003a44 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 80037e6:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80037ea:	f023 020c 	bic.w	r2, r3, #12
 80037ee:	687b      	ldr	r3, [r7, #4]
 80037f0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80037f2:	4994      	ldr	r1, [pc, #592]	@ (8003a44 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 80037f4:	4313      	orrs	r3, r2
 80037f6:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80037fa:	687b      	ldr	r3, [r7, #4]
 80037fc:	681b      	ldr	r3, [r3, #0]
 80037fe:	f003 0304 	and.w	r3, r3, #4
 8003802:	2b00      	cmp	r3, #0
 8003804:	d00a      	beq.n	800381c <HAL_RCCEx_PeriphCLKConfig+0x2e4>
 8003806:	4b8f      	ldr	r3, [pc, #572]	@ (8003a44 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 8003808:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800380c:	f023 0230 	bic.w	r2, r3, #48	@ 0x30
 8003810:	687b      	ldr	r3, [r7, #4]
 8003812:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003814:	498b      	ldr	r1, [pc, #556]	@ (8003a44 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 8003816:	4313      	orrs	r3, r2
 8003818:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 800381c:	687b      	ldr	r3, [r7, #4]
 800381e:	681b      	ldr	r3, [r3, #0]
 8003820:	f003 0308 	and.w	r3, r3, #8
 8003824:	2b00      	cmp	r3, #0
 8003826:	d00a      	beq.n	800383e <HAL_RCCEx_PeriphCLKConfig+0x306>
 8003828:	4b86      	ldr	r3, [pc, #536]	@ (8003a44 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 800382a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800382e:	f023 02c0 	bic.w	r2, r3, #192	@ 0xc0
 8003832:	687b      	ldr	r3, [r7, #4]
 8003834:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003836:	4983      	ldr	r1, [pc, #524]	@ (8003a44 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 8003838:	4313      	orrs	r3, r2
 800383a:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 800383e:	687b      	ldr	r3, [r7, #4]
 8003840:	681b      	ldr	r3, [r3, #0]
 8003842:	f003 0310 	and.w	r3, r3, #16
 8003846:	2b00      	cmp	r3, #0
 8003848:	d00a      	beq.n	8003860 <HAL_RCCEx_PeriphCLKConfig+0x328>
 800384a:	4b7e      	ldr	r3, [pc, #504]	@ (8003a44 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 800384c:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8003850:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 8003854:	687b      	ldr	r3, [r7, #4]
 8003856:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8003858:	497a      	ldr	r1, [pc, #488]	@ (8003a44 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 800385a:	4313      	orrs	r3, r2
 800385c:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8003860:	687b      	ldr	r3, [r7, #4]
 8003862:	681b      	ldr	r3, [r3, #0]
 8003864:	f003 0320 	and.w	r3, r3, #32
 8003868:	2b00      	cmp	r3, #0
 800386a:	d00a      	beq.n	8003882 <HAL_RCCEx_PeriphCLKConfig+0x34a>
 800386c:	4b75      	ldr	r3, [pc, #468]	@ (8003a44 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 800386e:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8003872:	f423 6240 	bic.w	r2, r3, #3072	@ 0xc00
 8003876:	687b      	ldr	r3, [r7, #4]
 8003878:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800387a:	4972      	ldr	r1, [pc, #456]	@ (8003a44 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 800387c:	4313      	orrs	r3, r2
 800387e:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8003882:	687b      	ldr	r3, [r7, #4]
 8003884:	681b      	ldr	r3, [r3, #0]
 8003886:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 800388a:	2b00      	cmp	r3, #0
 800388c:	d00a      	beq.n	80038a4 <HAL_RCCEx_PeriphCLKConfig+0x36c>
 800388e:	4b6d      	ldr	r3, [pc, #436]	@ (8003a44 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 8003890:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8003894:	f423 2240 	bic.w	r2, r3, #786432	@ 0xc0000
 8003898:	687b      	ldr	r3, [r7, #4]
 800389a:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800389c:	4969      	ldr	r1, [pc, #420]	@ (8003a44 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 800389e:	4313      	orrs	r3, r2
 80038a0:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80038a4:	687b      	ldr	r3, [r7, #4]
 80038a6:	681b      	ldr	r3, [r3, #0]
 80038a8:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80038ac:	2b00      	cmp	r3, #0
 80038ae:	d00a      	beq.n	80038c6 <HAL_RCCEx_PeriphCLKConfig+0x38e>
 80038b0:	4b64      	ldr	r3, [pc, #400]	@ (8003a44 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 80038b2:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80038b6:	f423 1240 	bic.w	r2, r3, #3145728	@ 0x300000
 80038ba:	687b      	ldr	r3, [r7, #4]
 80038bc:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 80038be:	4961      	ldr	r1, [pc, #388]	@ (8003a44 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 80038c0:	4313      	orrs	r3, r2
 80038c2:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80038c6:	687b      	ldr	r3, [r7, #4]
 80038c8:	681b      	ldr	r3, [r3, #0]
 80038ca:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80038ce:	2b00      	cmp	r3, #0
 80038d0:	d00a      	beq.n	80038e8 <HAL_RCCEx_PeriphCLKConfig+0x3b0>
 80038d2:	4b5c      	ldr	r3, [pc, #368]	@ (8003a44 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 80038d4:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80038d8:	f423 5240 	bic.w	r2, r3, #12288	@ 0x3000
 80038dc:	687b      	ldr	r3, [r7, #4]
 80038de:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80038e0:	4958      	ldr	r1, [pc, #352]	@ (8003a44 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 80038e2:	4313      	orrs	r3, r2
 80038e4:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80038e8:	687b      	ldr	r3, [r7, #4]
 80038ea:	681b      	ldr	r3, [r3, #0]
 80038ec:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80038f0:	2b00      	cmp	r3, #0
 80038f2:	d00a      	beq.n	800390a <HAL_RCCEx_PeriphCLKConfig+0x3d2>
 80038f4:	4b53      	ldr	r3, [pc, #332]	@ (8003a44 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 80038f6:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80038fa:	f423 4240 	bic.w	r2, r3, #49152	@ 0xc000
 80038fe:	687b      	ldr	r3, [r7, #4]
 8003900:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003902:	4950      	ldr	r1, [pc, #320]	@ (8003a44 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 8003904:	4313      	orrs	r3, r2
 8003906:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 800390a:	687b      	ldr	r3, [r7, #4]
 800390c:	681b      	ldr	r3, [r3, #0]
 800390e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003912:	2b00      	cmp	r3, #0
 8003914:	d00a      	beq.n	800392c <HAL_RCCEx_PeriphCLKConfig+0x3f4>
 8003916:	4b4b      	ldr	r3, [pc, #300]	@ (8003a44 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 8003918:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800391c:	f423 3240 	bic.w	r2, r3, #196608	@ 0x30000
 8003920:	687b      	ldr	r3, [r7, #4]
 8003922:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003924:	4947      	ldr	r1, [pc, #284]	@ (8003a44 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 8003926:	4313      	orrs	r3, r2
 8003928:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 800392c:	687b      	ldr	r3, [r7, #4]
 800392e:	681b      	ldr	r3, [r3, #0]
 8003930:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8003934:	2b00      	cmp	r3, #0
 8003936:	d00a      	beq.n	800394e <HAL_RCCEx_PeriphCLKConfig+0x416>
 8003938:	4b42      	ldr	r3, [pc, #264]	@ (8003a44 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 800393a:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 800393e:	f023 0203 	bic.w	r2, r3, #3
 8003942:	687b      	ldr	r3, [r7, #4]
 8003944:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003946:	493f      	ldr	r1, [pc, #252]	@ (8003a44 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 8003948:	4313      	orrs	r3, r2
 800394a:	f8c1 309c 	str.w	r3, [r1, #156]	@ 0x9c
 800394e:	687b      	ldr	r3, [r7, #4]
 8003950:	681b      	ldr	r3, [r3, #0]
 8003952:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8003956:	2b00      	cmp	r3, #0
 8003958:	d028      	beq.n	80039ac <HAL_RCCEx_PeriphCLKConfig+0x474>
 800395a:	4b3a      	ldr	r3, [pc, #232]	@ (8003a44 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 800395c:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8003960:	f023 6240 	bic.w	r2, r3, #201326592	@ 0xc000000
 8003964:	687b      	ldr	r3, [r7, #4]
 8003966:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8003968:	4936      	ldr	r1, [pc, #216]	@ (8003a44 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 800396a:	4313      	orrs	r3, r2
 800396c:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8003970:	687b      	ldr	r3, [r7, #4]
 8003972:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8003974:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 8003978:	d106      	bne.n	8003988 <HAL_RCCEx_PeriphCLKConfig+0x450>
 800397a:	4b32      	ldr	r3, [pc, #200]	@ (8003a44 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 800397c:	68db      	ldr	r3, [r3, #12]
 800397e:	4a31      	ldr	r2, [pc, #196]	@ (8003a44 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 8003980:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8003984:	60d3      	str	r3, [r2, #12]
 8003986:	e011      	b.n	80039ac <HAL_RCCEx_PeriphCLKConfig+0x474>
 8003988:	687b      	ldr	r3, [r7, #4]
 800398a:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800398c:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 8003990:	d10c      	bne.n	80039ac <HAL_RCCEx_PeriphCLKConfig+0x474>
 8003992:	687b      	ldr	r3, [r7, #4]
 8003994:	3304      	adds	r3, #4
 8003996:	2101      	movs	r1, #1
 8003998:	4618      	mov	r0, r3
 800399a:	f000 f8c9 	bl	8003b30 <RCCEx_PLLSAI1_Config>
 800399e:	4603      	mov	r3, r0
 80039a0:	74fb      	strb	r3, [r7, #19]
 80039a2:	7cfb      	ldrb	r3, [r7, #19]
 80039a4:	2b00      	cmp	r3, #0
 80039a6:	d001      	beq.n	80039ac <HAL_RCCEx_PeriphCLKConfig+0x474>
 80039a8:	7cfb      	ldrb	r3, [r7, #19]
 80039aa:	74bb      	strb	r3, [r7, #18]
 80039ac:	687b      	ldr	r3, [r7, #4]
 80039ae:	681b      	ldr	r3, [r3, #0]
 80039b0:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 80039b4:	2b00      	cmp	r3, #0
 80039b6:	d028      	beq.n	8003a0a <HAL_RCCEx_PeriphCLKConfig+0x4d2>
 80039b8:	4b22      	ldr	r3, [pc, #136]	@ (8003a44 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 80039ba:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80039be:	f023 6240 	bic.w	r2, r3, #201326592	@ 0xc000000
 80039c2:	687b      	ldr	r3, [r7, #4]
 80039c4:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80039c6:	491f      	ldr	r1, [pc, #124]	@ (8003a44 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 80039c8:	4313      	orrs	r3, r2
 80039ca:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80039ce:	687b      	ldr	r3, [r7, #4]
 80039d0:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80039d2:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 80039d6:	d106      	bne.n	80039e6 <HAL_RCCEx_PeriphCLKConfig+0x4ae>
 80039d8:	4b1a      	ldr	r3, [pc, #104]	@ (8003a44 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 80039da:	68db      	ldr	r3, [r3, #12]
 80039dc:	4a19      	ldr	r2, [pc, #100]	@ (8003a44 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 80039de:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 80039e2:	60d3      	str	r3, [r2, #12]
 80039e4:	e011      	b.n	8003a0a <HAL_RCCEx_PeriphCLKConfig+0x4d2>
 80039e6:	687b      	ldr	r3, [r7, #4]
 80039e8:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80039ea:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 80039ee:	d10c      	bne.n	8003a0a <HAL_RCCEx_PeriphCLKConfig+0x4d2>
 80039f0:	687b      	ldr	r3, [r7, #4]
 80039f2:	3304      	adds	r3, #4
 80039f4:	2101      	movs	r1, #1
 80039f6:	4618      	mov	r0, r3
 80039f8:	f000 f89a 	bl	8003b30 <RCCEx_PLLSAI1_Config>
 80039fc:	4603      	mov	r3, r0
 80039fe:	74fb      	strb	r3, [r7, #19]
 8003a00:	7cfb      	ldrb	r3, [r7, #19]
 8003a02:	2b00      	cmp	r3, #0
 8003a04:	d001      	beq.n	8003a0a <HAL_RCCEx_PeriphCLKConfig+0x4d2>
 8003a06:	7cfb      	ldrb	r3, [r7, #19]
 8003a08:	74bb      	strb	r3, [r7, #18]
 8003a0a:	687b      	ldr	r3, [r7, #4]
 8003a0c:	681b      	ldr	r3, [r3, #0]
 8003a0e:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8003a12:	2b00      	cmp	r3, #0
 8003a14:	d02a      	beq.n	8003a6c <HAL_RCCEx_PeriphCLKConfig+0x534>
 8003a16:	4b0b      	ldr	r3, [pc, #44]	@ (8003a44 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 8003a18:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8003a1c:	f023 6240 	bic.w	r2, r3, #201326592	@ 0xc000000
 8003a20:	687b      	ldr	r3, [r7, #4]
 8003a22:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 8003a24:	4907      	ldr	r1, [pc, #28]	@ (8003a44 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 8003a26:	4313      	orrs	r3, r2
 8003a28:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8003a2c:	687b      	ldr	r3, [r7, #4]
 8003a2e:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 8003a30:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 8003a34:	d108      	bne.n	8003a48 <HAL_RCCEx_PeriphCLKConfig+0x510>
 8003a36:	4b03      	ldr	r3, [pc, #12]	@ (8003a44 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 8003a38:	68db      	ldr	r3, [r3, #12]
 8003a3a:	4a02      	ldr	r2, [pc, #8]	@ (8003a44 <HAL_RCCEx_PeriphCLKConfig+0x50c>)
 8003a3c:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8003a40:	60d3      	str	r3, [r2, #12]
 8003a42:	e013      	b.n	8003a6c <HAL_RCCEx_PeriphCLKConfig+0x534>
 8003a44:	40021000 	.word	0x40021000
 8003a48:	687b      	ldr	r3, [r7, #4]
 8003a4a:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 8003a4c:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 8003a50:	d10c      	bne.n	8003a6c <HAL_RCCEx_PeriphCLKConfig+0x534>
 8003a52:	687b      	ldr	r3, [r7, #4]
 8003a54:	3304      	adds	r3, #4
 8003a56:	2101      	movs	r1, #1
 8003a58:	4618      	mov	r0, r3
 8003a5a:	f000 f869 	bl	8003b30 <RCCEx_PLLSAI1_Config>
 8003a5e:	4603      	mov	r3, r0
 8003a60:	74fb      	strb	r3, [r7, #19]
 8003a62:	7cfb      	ldrb	r3, [r7, #19]
 8003a64:	2b00      	cmp	r3, #0
 8003a66:	d001      	beq.n	8003a6c <HAL_RCCEx_PeriphCLKConfig+0x534>
 8003a68:	7cfb      	ldrb	r3, [r7, #19]
 8003a6a:	74bb      	strb	r3, [r7, #18]
 8003a6c:	687b      	ldr	r3, [r7, #4]
 8003a6e:	681b      	ldr	r3, [r3, #0]
 8003a70:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8003a74:	2b00      	cmp	r3, #0
 8003a76:	d02f      	beq.n	8003ad8 <HAL_RCCEx_PeriphCLKConfig+0x5a0>
 8003a78:	4b2c      	ldr	r3, [pc, #176]	@ (8003b2c <HAL_RCCEx_PeriphCLKConfig+0x5f4>)
 8003a7a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8003a7e:	f023 5240 	bic.w	r2, r3, #805306368	@ 0x30000000
 8003a82:	687b      	ldr	r3, [r7, #4]
 8003a84:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8003a86:	4929      	ldr	r1, [pc, #164]	@ (8003b2c <HAL_RCCEx_PeriphCLKConfig+0x5f4>)
 8003a88:	4313      	orrs	r3, r2
 8003a8a:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8003a8e:	687b      	ldr	r3, [r7, #4]
 8003a90:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8003a92:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8003a96:	d10d      	bne.n	8003ab4 <HAL_RCCEx_PeriphCLKConfig+0x57c>
 8003a98:	687b      	ldr	r3, [r7, #4]
 8003a9a:	3304      	adds	r3, #4
 8003a9c:	2102      	movs	r1, #2
 8003a9e:	4618      	mov	r0, r3
 8003aa0:	f000 f846 	bl	8003b30 <RCCEx_PLLSAI1_Config>
 8003aa4:	4603      	mov	r3, r0
 8003aa6:	74fb      	strb	r3, [r7, #19]
 8003aa8:	7cfb      	ldrb	r3, [r7, #19]
 8003aaa:	2b00      	cmp	r3, #0
 8003aac:	d014      	beq.n	8003ad8 <HAL_RCCEx_PeriphCLKConfig+0x5a0>
 8003aae:	7cfb      	ldrb	r3, [r7, #19]
 8003ab0:	74bb      	strb	r3, [r7, #18]
 8003ab2:	e011      	b.n	8003ad8 <HAL_RCCEx_PeriphCLKConfig+0x5a0>
 8003ab4:	687b      	ldr	r3, [r7, #4]
 8003ab6:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8003ab8:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8003abc:	d10c      	bne.n	8003ad8 <HAL_RCCEx_PeriphCLKConfig+0x5a0>
 8003abe:	687b      	ldr	r3, [r7, #4]
 8003ac0:	3320      	adds	r3, #32
 8003ac2:	2102      	movs	r1, #2
 8003ac4:	4618      	mov	r0, r3
 8003ac6:	f000 f925 	bl	8003d14 <RCCEx_PLLSAI2_Config>
 8003aca:	4603      	mov	r3, r0
 8003acc:	74fb      	strb	r3, [r7, #19]
 8003ace:	7cfb      	ldrb	r3, [r7, #19]
 8003ad0:	2b00      	cmp	r3, #0
 8003ad2:	d001      	beq.n	8003ad8 <HAL_RCCEx_PeriphCLKConfig+0x5a0>
 8003ad4:	7cfb      	ldrb	r3, [r7, #19]
 8003ad6:	74bb      	strb	r3, [r7, #18]
 8003ad8:	687b      	ldr	r3, [r7, #4]
 8003ada:	681b      	ldr	r3, [r3, #0]
 8003adc:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8003ae0:	2b00      	cmp	r3, #0
 8003ae2:	d00b      	beq.n	8003afc <HAL_RCCEx_PeriphCLKConfig+0x5c4>
 8003ae4:	4b11      	ldr	r3, [pc, #68]	@ (8003b2c <HAL_RCCEx_PeriphCLKConfig+0x5f4>)
 8003ae6:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8003aea:	f023 4280 	bic.w	r2, r3, #1073741824	@ 0x40000000
 8003aee:	687b      	ldr	r3, [r7, #4]
 8003af0:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8003af4:	490d      	ldr	r1, [pc, #52]	@ (8003b2c <HAL_RCCEx_PeriphCLKConfig+0x5f4>)
 8003af6:	4313      	orrs	r3, r2
 8003af8:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8003afc:	687b      	ldr	r3, [r7, #4]
 8003afe:	681b      	ldr	r3, [r3, #0]
 8003b00:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8003b04:	2b00      	cmp	r3, #0
 8003b06:	d00b      	beq.n	8003b20 <HAL_RCCEx_PeriphCLKConfig+0x5e8>
 8003b08:	4b08      	ldr	r3, [pc, #32]	@ (8003b2c <HAL_RCCEx_PeriphCLKConfig+0x5f4>)
 8003b0a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8003b0e:	f023 4200 	bic.w	r2, r3, #2147483648	@ 0x80000000
 8003b12:	687b      	ldr	r3, [r7, #4]
 8003b14:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8003b18:	4904      	ldr	r1, [pc, #16]	@ (8003b2c <HAL_RCCEx_PeriphCLKConfig+0x5f4>)
 8003b1a:	4313      	orrs	r3, r2
 8003b1c:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8003b20:	7cbb      	ldrb	r3, [r7, #18]
 8003b22:	4618      	mov	r0, r3
 8003b24:	3718      	adds	r7, #24
 8003b26:	46bd      	mov	sp, r7
 8003b28:	bd80      	pop	{r7, pc}
 8003b2a:	bf00      	nop
 8003b2c:	40021000 	.word	0x40021000

08003b30 <RCCEx_PLLSAI1_Config>:
 8003b30:	b580      	push	{r7, lr}
 8003b32:	b084      	sub	sp, #16
 8003b34:	af00      	add	r7, sp, #0
 8003b36:	6078      	str	r0, [r7, #4]
 8003b38:	6039      	str	r1, [r7, #0]
 8003b3a:	2300      	movs	r3, #0
 8003b3c:	73fb      	strb	r3, [r7, #15]
 8003b3e:	4b74      	ldr	r3, [pc, #464]	@ (8003d10 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003b40:	68db      	ldr	r3, [r3, #12]
 8003b42:	f003 0303 	and.w	r3, r3, #3
 8003b46:	2b00      	cmp	r3, #0
 8003b48:	d018      	beq.n	8003b7c <RCCEx_PLLSAI1_Config+0x4c>
 8003b4a:	4b71      	ldr	r3, [pc, #452]	@ (8003d10 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003b4c:	68db      	ldr	r3, [r3, #12]
 8003b4e:	f003 0203 	and.w	r2, r3, #3
 8003b52:	687b      	ldr	r3, [r7, #4]
 8003b54:	681b      	ldr	r3, [r3, #0]
 8003b56:	429a      	cmp	r2, r3
 8003b58:	d10d      	bne.n	8003b76 <RCCEx_PLLSAI1_Config+0x46>
 8003b5a:	687b      	ldr	r3, [r7, #4]
 8003b5c:	681b      	ldr	r3, [r3, #0]
 8003b5e:	2b00      	cmp	r3, #0
 8003b60:	d009      	beq.n	8003b76 <RCCEx_PLLSAI1_Config+0x46>
 8003b62:	4b6b      	ldr	r3, [pc, #428]	@ (8003d10 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003b64:	68db      	ldr	r3, [r3, #12]
 8003b66:	091b      	lsrs	r3, r3, #4
 8003b68:	f003 0307 	and.w	r3, r3, #7
 8003b6c:	1c5a      	adds	r2, r3, #1
 8003b6e:	687b      	ldr	r3, [r7, #4]
 8003b70:	685b      	ldr	r3, [r3, #4]
 8003b72:	429a      	cmp	r2, r3
 8003b74:	d047      	beq.n	8003c06 <RCCEx_PLLSAI1_Config+0xd6>
 8003b76:	2301      	movs	r3, #1
 8003b78:	73fb      	strb	r3, [r7, #15]
 8003b7a:	e044      	b.n	8003c06 <RCCEx_PLLSAI1_Config+0xd6>
 8003b7c:	687b      	ldr	r3, [r7, #4]
 8003b7e:	681b      	ldr	r3, [r3, #0]
 8003b80:	2b03      	cmp	r3, #3
 8003b82:	d018      	beq.n	8003bb6 <RCCEx_PLLSAI1_Config+0x86>
 8003b84:	2b03      	cmp	r3, #3
 8003b86:	d825      	bhi.n	8003bd4 <RCCEx_PLLSAI1_Config+0xa4>
 8003b88:	2b01      	cmp	r3, #1
 8003b8a:	d002      	beq.n	8003b92 <RCCEx_PLLSAI1_Config+0x62>
 8003b8c:	2b02      	cmp	r3, #2
 8003b8e:	d009      	beq.n	8003ba4 <RCCEx_PLLSAI1_Config+0x74>
 8003b90:	e020      	b.n	8003bd4 <RCCEx_PLLSAI1_Config+0xa4>
 8003b92:	4b5f      	ldr	r3, [pc, #380]	@ (8003d10 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003b94:	681b      	ldr	r3, [r3, #0]
 8003b96:	f003 0302 	and.w	r3, r3, #2
 8003b9a:	2b00      	cmp	r3, #0
 8003b9c:	d11d      	bne.n	8003bda <RCCEx_PLLSAI1_Config+0xaa>
 8003b9e:	2301      	movs	r3, #1
 8003ba0:	73fb      	strb	r3, [r7, #15]
 8003ba2:	e01a      	b.n	8003bda <RCCEx_PLLSAI1_Config+0xaa>
 8003ba4:	4b5a      	ldr	r3, [pc, #360]	@ (8003d10 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003ba6:	681b      	ldr	r3, [r3, #0]
 8003ba8:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8003bac:	2b00      	cmp	r3, #0
 8003bae:	d116      	bne.n	8003bde <RCCEx_PLLSAI1_Config+0xae>
 8003bb0:	2301      	movs	r3, #1
 8003bb2:	73fb      	strb	r3, [r7, #15]
 8003bb4:	e013      	b.n	8003bde <RCCEx_PLLSAI1_Config+0xae>
 8003bb6:	4b56      	ldr	r3, [pc, #344]	@ (8003d10 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003bb8:	681b      	ldr	r3, [r3, #0]
 8003bba:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003bbe:	2b00      	cmp	r3, #0
 8003bc0:	d10f      	bne.n	8003be2 <RCCEx_PLLSAI1_Config+0xb2>
 8003bc2:	4b53      	ldr	r3, [pc, #332]	@ (8003d10 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003bc4:	681b      	ldr	r3, [r3, #0]
 8003bc6:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8003bca:	2b00      	cmp	r3, #0
 8003bcc:	d109      	bne.n	8003be2 <RCCEx_PLLSAI1_Config+0xb2>
 8003bce:	2301      	movs	r3, #1
 8003bd0:	73fb      	strb	r3, [r7, #15]
 8003bd2:	e006      	b.n	8003be2 <RCCEx_PLLSAI1_Config+0xb2>
 8003bd4:	2301      	movs	r3, #1
 8003bd6:	73fb      	strb	r3, [r7, #15]
 8003bd8:	e004      	b.n	8003be4 <RCCEx_PLLSAI1_Config+0xb4>
 8003bda:	bf00      	nop
 8003bdc:	e002      	b.n	8003be4 <RCCEx_PLLSAI1_Config+0xb4>
 8003bde:	bf00      	nop
 8003be0:	e000      	b.n	8003be4 <RCCEx_PLLSAI1_Config+0xb4>
 8003be2:	bf00      	nop
 8003be4:	7bfb      	ldrb	r3, [r7, #15]
 8003be6:	2b00      	cmp	r3, #0
 8003be8:	d10d      	bne.n	8003c06 <RCCEx_PLLSAI1_Config+0xd6>
 8003bea:	4b49      	ldr	r3, [pc, #292]	@ (8003d10 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003bec:	68db      	ldr	r3, [r3, #12]
 8003bee:	f023 0273 	bic.w	r2, r3, #115	@ 0x73
 8003bf2:	687b      	ldr	r3, [r7, #4]
 8003bf4:	6819      	ldr	r1, [r3, #0]
 8003bf6:	687b      	ldr	r3, [r7, #4]
 8003bf8:	685b      	ldr	r3, [r3, #4]
 8003bfa:	3b01      	subs	r3, #1
 8003bfc:	011b      	lsls	r3, r3, #4
 8003bfe:	430b      	orrs	r3, r1
 8003c00:	4943      	ldr	r1, [pc, #268]	@ (8003d10 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003c02:	4313      	orrs	r3, r2
 8003c04:	60cb      	str	r3, [r1, #12]
 8003c06:	7bfb      	ldrb	r3, [r7, #15]
 8003c08:	2b00      	cmp	r3, #0
 8003c0a:	d17c      	bne.n	8003d06 <RCCEx_PLLSAI1_Config+0x1d6>
 8003c0c:	4b40      	ldr	r3, [pc, #256]	@ (8003d10 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003c0e:	681b      	ldr	r3, [r3, #0]
 8003c10:	4a3f      	ldr	r2, [pc, #252]	@ (8003d10 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003c12:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 8003c16:	6013      	str	r3, [r2, #0]
 8003c18:	f7fd fd46 	bl	80016a8 <HAL_GetTick>
 8003c1c:	60b8      	str	r0, [r7, #8]
 8003c1e:	e009      	b.n	8003c34 <RCCEx_PLLSAI1_Config+0x104>
 8003c20:	f7fd fd42 	bl	80016a8 <HAL_GetTick>
 8003c24:	4602      	mov	r2, r0
 8003c26:	68bb      	ldr	r3, [r7, #8]
 8003c28:	1ad3      	subs	r3, r2, r3
 8003c2a:	2b02      	cmp	r3, #2
 8003c2c:	d902      	bls.n	8003c34 <RCCEx_PLLSAI1_Config+0x104>
 8003c2e:	2303      	movs	r3, #3
 8003c30:	73fb      	strb	r3, [r7, #15]
 8003c32:	e005      	b.n	8003c40 <RCCEx_PLLSAI1_Config+0x110>
 8003c34:	4b36      	ldr	r3, [pc, #216]	@ (8003d10 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003c36:	681b      	ldr	r3, [r3, #0]
 8003c38:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 8003c3c:	2b00      	cmp	r3, #0
 8003c3e:	d1ef      	bne.n	8003c20 <RCCEx_PLLSAI1_Config+0xf0>
 8003c40:	7bfb      	ldrb	r3, [r7, #15]
 8003c42:	2b00      	cmp	r3, #0
 8003c44:	d15f      	bne.n	8003d06 <RCCEx_PLLSAI1_Config+0x1d6>
 8003c46:	683b      	ldr	r3, [r7, #0]
 8003c48:	2b00      	cmp	r3, #0
 8003c4a:	d110      	bne.n	8003c6e <RCCEx_PLLSAI1_Config+0x13e>
 8003c4c:	4b30      	ldr	r3, [pc, #192]	@ (8003d10 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003c4e:	691b      	ldr	r3, [r3, #16]
 8003c50:	f023 4378 	bic.w	r3, r3, #4160749568	@ 0xf8000000
 8003c54:	f423 43fe 	bic.w	r3, r3, #32512	@ 0x7f00
 8003c58:	687a      	ldr	r2, [r7, #4]
 8003c5a:	6892      	ldr	r2, [r2, #8]
 8003c5c:	0211      	lsls	r1, r2, #8
 8003c5e:	687a      	ldr	r2, [r7, #4]
 8003c60:	68d2      	ldr	r2, [r2, #12]
 8003c62:	06d2      	lsls	r2, r2, #27
 8003c64:	430a      	orrs	r2, r1
 8003c66:	492a      	ldr	r1, [pc, #168]	@ (8003d10 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003c68:	4313      	orrs	r3, r2
 8003c6a:	610b      	str	r3, [r1, #16]
 8003c6c:	e027      	b.n	8003cbe <RCCEx_PLLSAI1_Config+0x18e>
 8003c6e:	683b      	ldr	r3, [r7, #0]
 8003c70:	2b01      	cmp	r3, #1
 8003c72:	d112      	bne.n	8003c9a <RCCEx_PLLSAI1_Config+0x16a>
 8003c74:	4b26      	ldr	r3, [pc, #152]	@ (8003d10 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003c76:	691b      	ldr	r3, [r3, #16]
 8003c78:	f423 03c0 	bic.w	r3, r3, #6291456	@ 0x600000
 8003c7c:	f423 43fe 	bic.w	r3, r3, #32512	@ 0x7f00
 8003c80:	687a      	ldr	r2, [r7, #4]
 8003c82:	6892      	ldr	r2, [r2, #8]
 8003c84:	0211      	lsls	r1, r2, #8
 8003c86:	687a      	ldr	r2, [r7, #4]
 8003c88:	6912      	ldr	r2, [r2, #16]
 8003c8a:	0852      	lsrs	r2, r2, #1
 8003c8c:	3a01      	subs	r2, #1
 8003c8e:	0552      	lsls	r2, r2, #21
 8003c90:	430a      	orrs	r2, r1
 8003c92:	491f      	ldr	r1, [pc, #124]	@ (8003d10 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003c94:	4313      	orrs	r3, r2
 8003c96:	610b      	str	r3, [r1, #16]
 8003c98:	e011      	b.n	8003cbe <RCCEx_PLLSAI1_Config+0x18e>
 8003c9a:	4b1d      	ldr	r3, [pc, #116]	@ (8003d10 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003c9c:	691b      	ldr	r3, [r3, #16]
 8003c9e:	f023 63c0 	bic.w	r3, r3, #100663296	@ 0x6000000
 8003ca2:	f423 43fe 	bic.w	r3, r3, #32512	@ 0x7f00
 8003ca6:	687a      	ldr	r2, [r7, #4]
 8003ca8:	6892      	ldr	r2, [r2, #8]
 8003caa:	0211      	lsls	r1, r2, #8
 8003cac:	687a      	ldr	r2, [r7, #4]
 8003cae:	6952      	ldr	r2, [r2, #20]
 8003cb0:	0852      	lsrs	r2, r2, #1
 8003cb2:	3a01      	subs	r2, #1
 8003cb4:	0652      	lsls	r2, r2, #25
 8003cb6:	430a      	orrs	r2, r1
 8003cb8:	4915      	ldr	r1, [pc, #84]	@ (8003d10 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003cba:	4313      	orrs	r3, r2
 8003cbc:	610b      	str	r3, [r1, #16]
 8003cbe:	4b14      	ldr	r3, [pc, #80]	@ (8003d10 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003cc0:	681b      	ldr	r3, [r3, #0]
 8003cc2:	4a13      	ldr	r2, [pc, #76]	@ (8003d10 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003cc4:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 8003cc8:	6013      	str	r3, [r2, #0]
 8003cca:	f7fd fced 	bl	80016a8 <HAL_GetTick>
 8003cce:	60b8      	str	r0, [r7, #8]
 8003cd0:	e009      	b.n	8003ce6 <RCCEx_PLLSAI1_Config+0x1b6>
 8003cd2:	f7fd fce9 	bl	80016a8 <HAL_GetTick>
 8003cd6:	4602      	mov	r2, r0
 8003cd8:	68bb      	ldr	r3, [r7, #8]
 8003cda:	1ad3      	subs	r3, r2, r3
 8003cdc:	2b02      	cmp	r3, #2
 8003cde:	d902      	bls.n	8003ce6 <RCCEx_PLLSAI1_Config+0x1b6>
 8003ce0:	2303      	movs	r3, #3
 8003ce2:	73fb      	strb	r3, [r7, #15]
 8003ce4:	e005      	b.n	8003cf2 <RCCEx_PLLSAI1_Config+0x1c2>
 8003ce6:	4b0a      	ldr	r3, [pc, #40]	@ (8003d10 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003ce8:	681b      	ldr	r3, [r3, #0]
 8003cea:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 8003cee:	2b00      	cmp	r3, #0
 8003cf0:	d0ef      	beq.n	8003cd2 <RCCEx_PLLSAI1_Config+0x1a2>
 8003cf2:	7bfb      	ldrb	r3, [r7, #15]
 8003cf4:	2b00      	cmp	r3, #0
 8003cf6:	d106      	bne.n	8003d06 <RCCEx_PLLSAI1_Config+0x1d6>
 8003cf8:	4b05      	ldr	r3, [pc, #20]	@ (8003d10 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003cfa:	691a      	ldr	r2, [r3, #16]
 8003cfc:	687b      	ldr	r3, [r7, #4]
 8003cfe:	699b      	ldr	r3, [r3, #24]
 8003d00:	4903      	ldr	r1, [pc, #12]	@ (8003d10 <RCCEx_PLLSAI1_Config+0x1e0>)
 8003d02:	4313      	orrs	r3, r2
 8003d04:	610b      	str	r3, [r1, #16]
 8003d06:	7bfb      	ldrb	r3, [r7, #15]
 8003d08:	4618      	mov	r0, r3
 8003d0a:	3710      	adds	r7, #16
 8003d0c:	46bd      	mov	sp, r7
 8003d0e:	bd80      	pop	{r7, pc}
 8003d10:	40021000 	.word	0x40021000

08003d14 <RCCEx_PLLSAI2_Config>:
 8003d14:	b580      	push	{r7, lr}
 8003d16:	b084      	sub	sp, #16
 8003d18:	af00      	add	r7, sp, #0
 8003d1a:	6078      	str	r0, [r7, #4]
 8003d1c:	6039      	str	r1, [r7, #0]
 8003d1e:	2300      	movs	r3, #0
 8003d20:	73fb      	strb	r3, [r7, #15]
 8003d22:	4b69      	ldr	r3, [pc, #420]	@ (8003ec8 <RCCEx_PLLSAI2_Config+0x1b4>)
 8003d24:	68db      	ldr	r3, [r3, #12]
 8003d26:	f003 0303 	and.w	r3, r3, #3
 8003d2a:	2b00      	cmp	r3, #0
 8003d2c:	d018      	beq.n	8003d60 <RCCEx_PLLSAI2_Config+0x4c>
 8003d2e:	4b66      	ldr	r3, [pc, #408]	@ (8003ec8 <RCCEx_PLLSAI2_Config+0x1b4>)
 8003d30:	68db      	ldr	r3, [r3, #12]
 8003d32:	f003 0203 	and.w	r2, r3, #3
 8003d36:	687b      	ldr	r3, [r7, #4]
 8003d38:	681b      	ldr	r3, [r3, #0]
 8003d3a:	429a      	cmp	r2, r3
 8003d3c:	d10d      	bne.n	8003d5a <RCCEx_PLLSAI2_Config+0x46>
 8003d3e:	687b      	ldr	r3, [r7, #4]
 8003d40:	681b      	ldr	r3, [r3, #0]
 8003d42:	2b00      	cmp	r3, #0
 8003d44:	d009      	beq.n	8003d5a <RCCEx_PLLSAI2_Config+0x46>
 8003d46:	4b60      	ldr	r3, [pc, #384]	@ (8003ec8 <RCCEx_PLLSAI2_Config+0x1b4>)
 8003d48:	68db      	ldr	r3, [r3, #12]
 8003d4a:	091b      	lsrs	r3, r3, #4
 8003d4c:	f003 0307 	and.w	r3, r3, #7
 8003d50:	1c5a      	adds	r2, r3, #1
 8003d52:	687b      	ldr	r3, [r7, #4]
 8003d54:	685b      	ldr	r3, [r3, #4]
 8003d56:	429a      	cmp	r2, r3
 8003d58:	d047      	beq.n	8003dea <RCCEx_PLLSAI2_Config+0xd6>
 8003d5a:	2301      	movs	r3, #1
 8003d5c:	73fb      	strb	r3, [r7, #15]
 8003d5e:	e044      	b.n	8003dea <RCCEx_PLLSAI2_Config+0xd6>
 8003d60:	687b      	ldr	r3, [r7, #4]
 8003d62:	681b      	ldr	r3, [r3, #0]
 8003d64:	2b03      	cmp	r3, #3
 8003d66:	d018      	beq.n	8003d9a <RCCEx_PLLSAI2_Config+0x86>
 8003d68:	2b03      	cmp	r3, #3
 8003d6a:	d825      	bhi.n	8003db8 <RCCEx_PLLSAI2_Config+0xa4>
 8003d6c:	2b01      	cmp	r3, #1
 8003d6e:	d002      	beq.n	8003d76 <RCCEx_PLLSAI2_Config+0x62>
 8003d70:	2b02      	cmp	r3, #2
 8003d72:	d009      	beq.n	8003d88 <RCCEx_PLLSAI2_Config+0x74>
 8003d74:	e020      	b.n	8003db8 <RCCEx_PLLSAI2_Config+0xa4>
 8003d76:	4b54      	ldr	r3, [pc, #336]	@ (8003ec8 <RCCEx_PLLSAI2_Config+0x1b4>)
 8003d78:	681b      	ldr	r3, [r3, #0]
 8003d7a:	f003 0302 	and.w	r3, r3, #2
 8003d7e:	2b00      	cmp	r3, #0
 8003d80:	d11d      	bne.n	8003dbe <RCCEx_PLLSAI2_Config+0xaa>
 8003d82:	2301      	movs	r3, #1
 8003d84:	73fb      	strb	r3, [r7, #15]
 8003d86:	e01a      	b.n	8003dbe <RCCEx_PLLSAI2_Config+0xaa>
 8003d88:	4b4f      	ldr	r3, [pc, #316]	@ (8003ec8 <RCCEx_PLLSAI2_Config+0x1b4>)
 8003d8a:	681b      	ldr	r3, [r3, #0]
 8003d8c:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8003d90:	2b00      	cmp	r3, #0
 8003d92:	d116      	bne.n	8003dc2 <RCCEx_PLLSAI2_Config+0xae>
 8003d94:	2301      	movs	r3, #1
 8003d96:	73fb      	strb	r3, [r7, #15]
 8003d98:	e013      	b.n	8003dc2 <RCCEx_PLLSAI2_Config+0xae>
 8003d9a:	4b4b      	ldr	r3, [pc, #300]	@ (8003ec8 <RCCEx_PLLSAI2_Config+0x1b4>)
 8003d9c:	681b      	ldr	r3, [r3, #0]
 8003d9e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003da2:	2b00      	cmp	r3, #0
 8003da4:	d10f      	bne.n	8003dc6 <RCCEx_PLLSAI2_Config+0xb2>
 8003da6:	4b48      	ldr	r3, [pc, #288]	@ (8003ec8 <RCCEx_PLLSAI2_Config+0x1b4>)
 8003da8:	681b      	ldr	r3, [r3, #0]
 8003daa:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8003dae:	2b00      	cmp	r3, #0
 8003db0:	d109      	bne.n	8003dc6 <RCCEx_PLLSAI2_Config+0xb2>
 8003db2:	2301      	movs	r3, #1
 8003db4:	73fb      	strb	r3, [r7, #15]
 8003db6:	e006      	b.n	8003dc6 <RCCEx_PLLSAI2_Config+0xb2>
 8003db8:	2301      	movs	r3, #1
 8003dba:	73fb      	strb	r3, [r7, #15]
 8003dbc:	e004      	b.n	8003dc8 <RCCEx_PLLSAI2_Config+0xb4>
 8003dbe:	bf00      	nop
 8003dc0:	e002      	b.n	8003dc8 <RCCEx_PLLSAI2_Config+0xb4>
 8003dc2:	bf00      	nop
 8003dc4:	e000      	b.n	8003dc8 <RCCEx_PLLSAI2_Config+0xb4>
 8003dc6:	bf00      	nop
 8003dc8:	7bfb      	ldrb	r3, [r7, #15]
 8003dca:	2b00      	cmp	r3, #0
 8003dcc:	d10d      	bne.n	8003dea <RCCEx_PLLSAI2_Config+0xd6>
 8003dce:	4b3e      	ldr	r3, [pc, #248]	@ (8003ec8 <RCCEx_PLLSAI2_Config+0x1b4>)
 8003dd0:	68db      	ldr	r3, [r3, #12]
 8003dd2:	f023 0273 	bic.w	r2, r3, #115	@ 0x73
 8003dd6:	687b      	ldr	r3, [r7, #4]
 8003dd8:	6819      	ldr	r1, [r3, #0]
 8003dda:	687b      	ldr	r3, [r7, #4]
 8003ddc:	685b      	ldr	r3, [r3, #4]
 8003dde:	3b01      	subs	r3, #1
 8003de0:	011b      	lsls	r3, r3, #4
 8003de2:	430b      	orrs	r3, r1
 8003de4:	4938      	ldr	r1, [pc, #224]	@ (8003ec8 <RCCEx_PLLSAI2_Config+0x1b4>)
 8003de6:	4313      	orrs	r3, r2
 8003de8:	60cb      	str	r3, [r1, #12]
 8003dea:	7bfb      	ldrb	r3, [r7, #15]
 8003dec:	2b00      	cmp	r3, #0
 8003dee:	d166      	bne.n	8003ebe <RCCEx_PLLSAI2_Config+0x1aa>
 8003df0:	4b35      	ldr	r3, [pc, #212]	@ (8003ec8 <RCCEx_PLLSAI2_Config+0x1b4>)
 8003df2:	681b      	ldr	r3, [r3, #0]
 8003df4:	4a34      	ldr	r2, [pc, #208]	@ (8003ec8 <RCCEx_PLLSAI2_Config+0x1b4>)
 8003df6:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8003dfa:	6013      	str	r3, [r2, #0]
 8003dfc:	f7fd fc54 	bl	80016a8 <HAL_GetTick>
 8003e00:	60b8      	str	r0, [r7, #8]
 8003e02:	e009      	b.n	8003e18 <RCCEx_PLLSAI2_Config+0x104>
 8003e04:	f7fd fc50 	bl	80016a8 <HAL_GetTick>
 8003e08:	4602      	mov	r2, r0
 8003e0a:	68bb      	ldr	r3, [r7, #8]
 8003e0c:	1ad3      	subs	r3, r2, r3
 8003e0e:	2b02      	cmp	r3, #2
 8003e10:	d902      	bls.n	8003e18 <RCCEx_PLLSAI2_Config+0x104>
 8003e12:	2303      	movs	r3, #3
 8003e14:	73fb      	strb	r3, [r7, #15]
 8003e16:	e005      	b.n	8003e24 <RCCEx_PLLSAI2_Config+0x110>
 8003e18:	4b2b      	ldr	r3, [pc, #172]	@ (8003ec8 <RCCEx_PLLSAI2_Config+0x1b4>)
 8003e1a:	681b      	ldr	r3, [r3, #0]
 8003e1c:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 8003e20:	2b00      	cmp	r3, #0
 8003e22:	d1ef      	bne.n	8003e04 <RCCEx_PLLSAI2_Config+0xf0>
 8003e24:	7bfb      	ldrb	r3, [r7, #15]
 8003e26:	2b00      	cmp	r3, #0
 8003e28:	d149      	bne.n	8003ebe <RCCEx_PLLSAI2_Config+0x1aa>
 8003e2a:	683b      	ldr	r3, [r7, #0]
 8003e2c:	2b00      	cmp	r3, #0
 8003e2e:	d110      	bne.n	8003e52 <RCCEx_PLLSAI2_Config+0x13e>
 8003e30:	4b25      	ldr	r3, [pc, #148]	@ (8003ec8 <RCCEx_PLLSAI2_Config+0x1b4>)
 8003e32:	695b      	ldr	r3, [r3, #20]
 8003e34:	f023 4378 	bic.w	r3, r3, #4160749568	@ 0xf8000000
 8003e38:	f423 43fe 	bic.w	r3, r3, #32512	@ 0x7f00
 8003e3c:	687a      	ldr	r2, [r7, #4]
 8003e3e:	6892      	ldr	r2, [r2, #8]
 8003e40:	0211      	lsls	r1, r2, #8
 8003e42:	687a      	ldr	r2, [r7, #4]
 8003e44:	68d2      	ldr	r2, [r2, #12]
 8003e46:	06d2      	lsls	r2, r2, #27
 8003e48:	430a      	orrs	r2, r1
 8003e4a:	491f      	ldr	r1, [pc, #124]	@ (8003ec8 <RCCEx_PLLSAI2_Config+0x1b4>)
 8003e4c:	4313      	orrs	r3, r2
 8003e4e:	614b      	str	r3, [r1, #20]
 8003e50:	e011      	b.n	8003e76 <RCCEx_PLLSAI2_Config+0x162>
 8003e52:	4b1d      	ldr	r3, [pc, #116]	@ (8003ec8 <RCCEx_PLLSAI2_Config+0x1b4>)
 8003e54:	695b      	ldr	r3, [r3, #20]
 8003e56:	f023 63c0 	bic.w	r3, r3, #100663296	@ 0x6000000
 8003e5a:	f423 43fe 	bic.w	r3, r3, #32512	@ 0x7f00
 8003e5e:	687a      	ldr	r2, [r7, #4]
 8003e60:	6892      	ldr	r2, [r2, #8]
 8003e62:	0211      	lsls	r1, r2, #8
 8003e64:	687a      	ldr	r2, [r7, #4]
 8003e66:	6912      	ldr	r2, [r2, #16]
 8003e68:	0852      	lsrs	r2, r2, #1
 8003e6a:	3a01      	subs	r2, #1
 8003e6c:	0652      	lsls	r2, r2, #25
 8003e6e:	430a      	orrs	r2, r1
 8003e70:	4915      	ldr	r1, [pc, #84]	@ (8003ec8 <RCCEx_PLLSAI2_Config+0x1b4>)
 8003e72:	4313      	orrs	r3, r2
 8003e74:	614b      	str	r3, [r1, #20]
 8003e76:	4b14      	ldr	r3, [pc, #80]	@ (8003ec8 <RCCEx_PLLSAI2_Config+0x1b4>)
 8003e78:	681b      	ldr	r3, [r3, #0]
 8003e7a:	4a13      	ldr	r2, [pc, #76]	@ (8003ec8 <RCCEx_PLLSAI2_Config+0x1b4>)
 8003e7c:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8003e80:	6013      	str	r3, [r2, #0]
 8003e82:	f7fd fc11 	bl	80016a8 <HAL_GetTick>
 8003e86:	60b8      	str	r0, [r7, #8]
 8003e88:	e009      	b.n	8003e9e <RCCEx_PLLSAI2_Config+0x18a>
 8003e8a:	f7fd fc0d 	bl	80016a8 <HAL_GetTick>
 8003e8e:	4602      	mov	r2, r0
 8003e90:	68bb      	ldr	r3, [r7, #8]
 8003e92:	1ad3      	subs	r3, r2, r3
 8003e94:	2b02      	cmp	r3, #2
 8003e96:	d902      	bls.n	8003e9e <RCCEx_PLLSAI2_Config+0x18a>
 8003e98:	2303      	movs	r3, #3
 8003e9a:	73fb      	strb	r3, [r7, #15]
 8003e9c:	e005      	b.n	8003eaa <RCCEx_PLLSAI2_Config+0x196>
 8003e9e:	4b0a      	ldr	r3, [pc, #40]	@ (8003ec8 <RCCEx_PLLSAI2_Config+0x1b4>)
 8003ea0:	681b      	ldr	r3, [r3, #0]
 8003ea2:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 8003ea6:	2b00      	cmp	r3, #0
 8003ea8:	d0ef      	beq.n	8003e8a <RCCEx_PLLSAI2_Config+0x176>
 8003eaa:	7bfb      	ldrb	r3, [r7, #15]
 8003eac:	2b00      	cmp	r3, #0
 8003eae:	d106      	bne.n	8003ebe <RCCEx_PLLSAI2_Config+0x1aa>
 8003eb0:	4b05      	ldr	r3, [pc, #20]	@ (8003ec8 <RCCEx_PLLSAI2_Config+0x1b4>)
 8003eb2:	695a      	ldr	r2, [r3, #20]
 8003eb4:	687b      	ldr	r3, [r7, #4]
 8003eb6:	695b      	ldr	r3, [r3, #20]
 8003eb8:	4903      	ldr	r1, [pc, #12]	@ (8003ec8 <RCCEx_PLLSAI2_Config+0x1b4>)
 8003eba:	4313      	orrs	r3, r2
 8003ebc:	614b      	str	r3, [r1, #20]
 8003ebe:	7bfb      	ldrb	r3, [r7, #15]
 8003ec0:	4618      	mov	r0, r3
 8003ec2:	3710      	adds	r7, #16
 8003ec4:	46bd      	mov	sp, r7
 8003ec6:	bd80      	pop	{r7, pc}
 8003ec8:	40021000 	.word	0x40021000

08003ecc <HAL_UART_Init>:
 8003ecc:	b580      	push	{r7, lr}
 8003ece:	b082      	sub	sp, #8
 8003ed0:	af00      	add	r7, sp, #0
 8003ed2:	6078      	str	r0, [r7, #4]
 8003ed4:	687b      	ldr	r3, [r7, #4]
 8003ed6:	2b00      	cmp	r3, #0
 8003ed8:	d101      	bne.n	8003ede <HAL_UART_Init+0x12>
 8003eda:	2301      	movs	r3, #1
 8003edc:	e040      	b.n	8003f60 <HAL_UART_Init+0x94>
 8003ede:	687b      	ldr	r3, [r7, #4]
 8003ee0:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8003ee2:	2b00      	cmp	r3, #0
 8003ee4:	d106      	bne.n	8003ef4 <HAL_UART_Init+0x28>
 8003ee6:	687b      	ldr	r3, [r7, #4]
 8003ee8:	2200      	movs	r2, #0
 8003eea:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 8003eee:	6878      	ldr	r0, [r7, #4]
 8003ef0:	f7fd fa2c 	bl	800134c <HAL_UART_MspInit>
 8003ef4:	687b      	ldr	r3, [r7, #4]
 8003ef6:	2224      	movs	r2, #36	@ 0x24
 8003ef8:	67da      	str	r2, [r3, #124]	@ 0x7c
 8003efa:	687b      	ldr	r3, [r7, #4]
 8003efc:	681b      	ldr	r3, [r3, #0]
 8003efe:	681a      	ldr	r2, [r3, #0]
 8003f00:	687b      	ldr	r3, [r7, #4]
 8003f02:	681b      	ldr	r3, [r3, #0]
 8003f04:	f022 0201 	bic.w	r2, r2, #1
 8003f08:	601a      	str	r2, [r3, #0]
 8003f0a:	687b      	ldr	r3, [r7, #4]
 8003f0c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003f0e:	2b00      	cmp	r3, #0
 8003f10:	d002      	beq.n	8003f18 <HAL_UART_Init+0x4c>
 8003f12:	6878      	ldr	r0, [r7, #4]
 8003f14:	f000 fc32 	bl	800477c <UART_AdvFeatureConfig>
 8003f18:	6878      	ldr	r0, [r7, #4]
 8003f1a:	f000 f977 	bl	800420c <UART_SetConfig>
 8003f1e:	4603      	mov	r3, r0
 8003f20:	2b01      	cmp	r3, #1
 8003f22:	d101      	bne.n	8003f28 <HAL_UART_Init+0x5c>
 8003f24:	2301      	movs	r3, #1
 8003f26:	e01b      	b.n	8003f60 <HAL_UART_Init+0x94>
 8003f28:	687b      	ldr	r3, [r7, #4]
 8003f2a:	681b      	ldr	r3, [r3, #0]
 8003f2c:	685a      	ldr	r2, [r3, #4]
 8003f2e:	687b      	ldr	r3, [r7, #4]
 8003f30:	681b      	ldr	r3, [r3, #0]
 8003f32:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8003f36:	605a      	str	r2, [r3, #4]
 8003f38:	687b      	ldr	r3, [r7, #4]
 8003f3a:	681b      	ldr	r3, [r3, #0]
 8003f3c:	689a      	ldr	r2, [r3, #8]
 8003f3e:	687b      	ldr	r3, [r7, #4]
 8003f40:	681b      	ldr	r3, [r3, #0]
 8003f42:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8003f46:	609a      	str	r2, [r3, #8]
 8003f48:	687b      	ldr	r3, [r7, #4]
 8003f4a:	681b      	ldr	r3, [r3, #0]
 8003f4c:	681a      	ldr	r2, [r3, #0]
 8003f4e:	687b      	ldr	r3, [r7, #4]
 8003f50:	681b      	ldr	r3, [r3, #0]
 8003f52:	f042 0201 	orr.w	r2, r2, #1
 8003f56:	601a      	str	r2, [r3, #0]
 8003f58:	6878      	ldr	r0, [r7, #4]
 8003f5a:	f000 fcb1 	bl	80048c0 <UART_CheckIdleState>
 8003f5e:	4603      	mov	r3, r0
 8003f60:	4618      	mov	r0, r3
 8003f62:	3708      	adds	r7, #8
 8003f64:	46bd      	mov	sp, r7
 8003f66:	bd80      	pop	{r7, pc}

08003f68 <HAL_UART_Transmit>:
 8003f68:	b580      	push	{r7, lr}
 8003f6a:	b08a      	sub	sp, #40	@ 0x28
 8003f6c:	af02      	add	r7, sp, #8
 8003f6e:	60f8      	str	r0, [r7, #12]
 8003f70:	60b9      	str	r1, [r7, #8]
 8003f72:	603b      	str	r3, [r7, #0]
 8003f74:	4613      	mov	r3, r2
 8003f76:	80fb      	strh	r3, [r7, #6]
 8003f78:	68fb      	ldr	r3, [r7, #12]
 8003f7a:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8003f7c:	2b20      	cmp	r3, #32
 8003f7e:	d177      	bne.n	8004070 <HAL_UART_Transmit+0x108>
 8003f80:	68bb      	ldr	r3, [r7, #8]
 8003f82:	2b00      	cmp	r3, #0
 8003f84:	d002      	beq.n	8003f8c <HAL_UART_Transmit+0x24>
 8003f86:	88fb      	ldrh	r3, [r7, #6]
 8003f88:	2b00      	cmp	r3, #0
 8003f8a:	d101      	bne.n	8003f90 <HAL_UART_Transmit+0x28>
 8003f8c:	2301      	movs	r3, #1
 8003f8e:	e070      	b.n	8004072 <HAL_UART_Transmit+0x10a>
 8003f90:	68fb      	ldr	r3, [r7, #12]
 8003f92:	2200      	movs	r2, #0
 8003f94:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 8003f98:	68fb      	ldr	r3, [r7, #12]
 8003f9a:	2221      	movs	r2, #33	@ 0x21
 8003f9c:	67da      	str	r2, [r3, #124]	@ 0x7c
 8003f9e:	f7fd fb83 	bl	80016a8 <HAL_GetTick>
 8003fa2:	6178      	str	r0, [r7, #20]
 8003fa4:	68fb      	ldr	r3, [r7, #12]
 8003fa6:	88fa      	ldrh	r2, [r7, #6]
 8003fa8:	f8a3 2050 	strh.w	r2, [r3, #80]	@ 0x50
 8003fac:	68fb      	ldr	r3, [r7, #12]
 8003fae:	88fa      	ldrh	r2, [r7, #6]
 8003fb0:	f8a3 2052 	strh.w	r2, [r3, #82]	@ 0x52
 8003fb4:	68fb      	ldr	r3, [r7, #12]
 8003fb6:	689b      	ldr	r3, [r3, #8]
 8003fb8:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8003fbc:	d108      	bne.n	8003fd0 <HAL_UART_Transmit+0x68>
 8003fbe:	68fb      	ldr	r3, [r7, #12]
 8003fc0:	691b      	ldr	r3, [r3, #16]
 8003fc2:	2b00      	cmp	r3, #0
 8003fc4:	d104      	bne.n	8003fd0 <HAL_UART_Transmit+0x68>
 8003fc6:	2300      	movs	r3, #0
 8003fc8:	61fb      	str	r3, [r7, #28]
 8003fca:	68bb      	ldr	r3, [r7, #8]
 8003fcc:	61bb      	str	r3, [r7, #24]
 8003fce:	e003      	b.n	8003fd8 <HAL_UART_Transmit+0x70>
 8003fd0:	68bb      	ldr	r3, [r7, #8]
 8003fd2:	61fb      	str	r3, [r7, #28]
 8003fd4:	2300      	movs	r3, #0
 8003fd6:	61bb      	str	r3, [r7, #24]
 8003fd8:	e02f      	b.n	800403a <HAL_UART_Transmit+0xd2>
 8003fda:	683b      	ldr	r3, [r7, #0]
 8003fdc:	9300      	str	r3, [sp, #0]
 8003fde:	697b      	ldr	r3, [r7, #20]
 8003fe0:	2200      	movs	r2, #0
 8003fe2:	2180      	movs	r1, #128	@ 0x80
 8003fe4:	68f8      	ldr	r0, [r7, #12]
 8003fe6:	f000 fd13 	bl	8004a10 <UART_WaitOnFlagUntilTimeout>
 8003fea:	4603      	mov	r3, r0
 8003fec:	2b00      	cmp	r3, #0
 8003fee:	d004      	beq.n	8003ffa <HAL_UART_Transmit+0x92>
 8003ff0:	68fb      	ldr	r3, [r7, #12]
 8003ff2:	2220      	movs	r2, #32
 8003ff4:	67da      	str	r2, [r3, #124]	@ 0x7c
 8003ff6:	2303      	movs	r3, #3
 8003ff8:	e03b      	b.n	8004072 <HAL_UART_Transmit+0x10a>
 8003ffa:	69fb      	ldr	r3, [r7, #28]
 8003ffc:	2b00      	cmp	r3, #0
 8003ffe:	d10b      	bne.n	8004018 <HAL_UART_Transmit+0xb0>
 8004000:	69bb      	ldr	r3, [r7, #24]
 8004002:	881a      	ldrh	r2, [r3, #0]
 8004004:	68fb      	ldr	r3, [r7, #12]
 8004006:	681b      	ldr	r3, [r3, #0]
 8004008:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800400c:	b292      	uxth	r2, r2
 800400e:	851a      	strh	r2, [r3, #40]	@ 0x28
 8004010:	69bb      	ldr	r3, [r7, #24]
 8004012:	3302      	adds	r3, #2
 8004014:	61bb      	str	r3, [r7, #24]
 8004016:	e007      	b.n	8004028 <HAL_UART_Transmit+0xc0>
 8004018:	69fb      	ldr	r3, [r7, #28]
 800401a:	781a      	ldrb	r2, [r3, #0]
 800401c:	68fb      	ldr	r3, [r7, #12]
 800401e:	681b      	ldr	r3, [r3, #0]
 8004020:	851a      	strh	r2, [r3, #40]	@ 0x28
 8004022:	69fb      	ldr	r3, [r7, #28]
 8004024:	3301      	adds	r3, #1
 8004026:	61fb      	str	r3, [r7, #28]
 8004028:	68fb      	ldr	r3, [r7, #12]
 800402a:	f8b3 3052 	ldrh.w	r3, [r3, #82]	@ 0x52
 800402e:	b29b      	uxth	r3, r3
 8004030:	3b01      	subs	r3, #1
 8004032:	b29a      	uxth	r2, r3
 8004034:	68fb      	ldr	r3, [r7, #12]
 8004036:	f8a3 2052 	strh.w	r2, [r3, #82]	@ 0x52
 800403a:	68fb      	ldr	r3, [r7, #12]
 800403c:	f8b3 3052 	ldrh.w	r3, [r3, #82]	@ 0x52
 8004040:	b29b      	uxth	r3, r3
 8004042:	2b00      	cmp	r3, #0
 8004044:	d1c9      	bne.n	8003fda <HAL_UART_Transmit+0x72>
 8004046:	683b      	ldr	r3, [r7, #0]
 8004048:	9300      	str	r3, [sp, #0]
 800404a:	697b      	ldr	r3, [r7, #20]
 800404c:	2200      	movs	r2, #0
 800404e:	2140      	movs	r1, #64	@ 0x40
 8004050:	68f8      	ldr	r0, [r7, #12]
 8004052:	f000 fcdd 	bl	8004a10 <UART_WaitOnFlagUntilTimeout>
 8004056:	4603      	mov	r3, r0
 8004058:	2b00      	cmp	r3, #0
 800405a:	d004      	beq.n	8004066 <HAL_UART_Transmit+0xfe>
 800405c:	68fb      	ldr	r3, [r7, #12]
 800405e:	2220      	movs	r2, #32
 8004060:	67da      	str	r2, [r3, #124]	@ 0x7c
 8004062:	2303      	movs	r3, #3
 8004064:	e005      	b.n	8004072 <HAL_UART_Transmit+0x10a>
 8004066:	68fb      	ldr	r3, [r7, #12]
 8004068:	2220      	movs	r2, #32
 800406a:	67da      	str	r2, [r3, #124]	@ 0x7c
 800406c:	2300      	movs	r3, #0
 800406e:	e000      	b.n	8004072 <HAL_UART_Transmit+0x10a>
 8004070:	2302      	movs	r3, #2
 8004072:	4618      	mov	r0, r3
 8004074:	3720      	adds	r7, #32
 8004076:	46bd      	mov	sp, r7
 8004078:	bd80      	pop	{r7, pc}

0800407a <HAL_UART_Receive>:
 800407a:	b580      	push	{r7, lr}
 800407c:	b08a      	sub	sp, #40	@ 0x28
 800407e:	af02      	add	r7, sp, #8
 8004080:	60f8      	str	r0, [r7, #12]
 8004082:	60b9      	str	r1, [r7, #8]
 8004084:	603b      	str	r3, [r7, #0]
 8004086:	4613      	mov	r3, r2
 8004088:	80fb      	strh	r3, [r7, #6]
 800408a:	68fb      	ldr	r3, [r7, #12]
 800408c:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8004090:	2b20      	cmp	r3, #32
 8004092:	f040 80b6 	bne.w	8004202 <HAL_UART_Receive+0x188>
 8004096:	68bb      	ldr	r3, [r7, #8]
 8004098:	2b00      	cmp	r3, #0
 800409a:	d002      	beq.n	80040a2 <HAL_UART_Receive+0x28>
 800409c:	88fb      	ldrh	r3, [r7, #6]
 800409e:	2b00      	cmp	r3, #0
 80040a0:	d101      	bne.n	80040a6 <HAL_UART_Receive+0x2c>
 80040a2:	2301      	movs	r3, #1
 80040a4:	e0ae      	b.n	8004204 <HAL_UART_Receive+0x18a>
 80040a6:	68fb      	ldr	r3, [r7, #12]
 80040a8:	2200      	movs	r2, #0
 80040aa:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 80040ae:	68fb      	ldr	r3, [r7, #12]
 80040b0:	2222      	movs	r2, #34	@ 0x22
 80040b2:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 80040b6:	68fb      	ldr	r3, [r7, #12]
 80040b8:	2200      	movs	r2, #0
 80040ba:	661a      	str	r2, [r3, #96]	@ 0x60
 80040bc:	f7fd faf4 	bl	80016a8 <HAL_GetTick>
 80040c0:	6178      	str	r0, [r7, #20]
 80040c2:	68fb      	ldr	r3, [r7, #12]
 80040c4:	88fa      	ldrh	r2, [r7, #6]
 80040c6:	f8a3 2058 	strh.w	r2, [r3, #88]	@ 0x58
 80040ca:	68fb      	ldr	r3, [r7, #12]
 80040cc:	88fa      	ldrh	r2, [r7, #6]
 80040ce:	f8a3 205a 	strh.w	r2, [r3, #90]	@ 0x5a
 80040d2:	68fb      	ldr	r3, [r7, #12]
 80040d4:	689b      	ldr	r3, [r3, #8]
 80040d6:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80040da:	d10e      	bne.n	80040fa <HAL_UART_Receive+0x80>
 80040dc:	68fb      	ldr	r3, [r7, #12]
 80040de:	691b      	ldr	r3, [r3, #16]
 80040e0:	2b00      	cmp	r3, #0
 80040e2:	d105      	bne.n	80040f0 <HAL_UART_Receive+0x76>
 80040e4:	68fb      	ldr	r3, [r7, #12]
 80040e6:	f240 12ff 	movw	r2, #511	@ 0x1ff
 80040ea:	f8a3 205c 	strh.w	r2, [r3, #92]	@ 0x5c
 80040ee:	e02d      	b.n	800414c <HAL_UART_Receive+0xd2>
 80040f0:	68fb      	ldr	r3, [r7, #12]
 80040f2:	22ff      	movs	r2, #255	@ 0xff
 80040f4:	f8a3 205c 	strh.w	r2, [r3, #92]	@ 0x5c
 80040f8:	e028      	b.n	800414c <HAL_UART_Receive+0xd2>
 80040fa:	68fb      	ldr	r3, [r7, #12]
 80040fc:	689b      	ldr	r3, [r3, #8]
 80040fe:	2b00      	cmp	r3, #0
 8004100:	d10d      	bne.n	800411e <HAL_UART_Receive+0xa4>
 8004102:	68fb      	ldr	r3, [r7, #12]
 8004104:	691b      	ldr	r3, [r3, #16]
 8004106:	2b00      	cmp	r3, #0
 8004108:	d104      	bne.n	8004114 <HAL_UART_Receive+0x9a>
 800410a:	68fb      	ldr	r3, [r7, #12]
 800410c:	22ff      	movs	r2, #255	@ 0xff
 800410e:	f8a3 205c 	strh.w	r2, [r3, #92]	@ 0x5c
 8004112:	e01b      	b.n	800414c <HAL_UART_Receive+0xd2>
 8004114:	68fb      	ldr	r3, [r7, #12]
 8004116:	227f      	movs	r2, #127	@ 0x7f
 8004118:	f8a3 205c 	strh.w	r2, [r3, #92]	@ 0x5c
 800411c:	e016      	b.n	800414c <HAL_UART_Receive+0xd2>
 800411e:	68fb      	ldr	r3, [r7, #12]
 8004120:	689b      	ldr	r3, [r3, #8]
 8004122:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8004126:	d10d      	bne.n	8004144 <HAL_UART_Receive+0xca>
 8004128:	68fb      	ldr	r3, [r7, #12]
 800412a:	691b      	ldr	r3, [r3, #16]
 800412c:	2b00      	cmp	r3, #0
 800412e:	d104      	bne.n	800413a <HAL_UART_Receive+0xc0>
 8004130:	68fb      	ldr	r3, [r7, #12]
 8004132:	227f      	movs	r2, #127	@ 0x7f
 8004134:	f8a3 205c 	strh.w	r2, [r3, #92]	@ 0x5c
 8004138:	e008      	b.n	800414c <HAL_UART_Receive+0xd2>
 800413a:	68fb      	ldr	r3, [r7, #12]
 800413c:	223f      	movs	r2, #63	@ 0x3f
 800413e:	f8a3 205c 	strh.w	r2, [r3, #92]	@ 0x5c
 8004142:	e003      	b.n	800414c <HAL_UART_Receive+0xd2>
 8004144:	68fb      	ldr	r3, [r7, #12]
 8004146:	2200      	movs	r2, #0
 8004148:	f8a3 205c 	strh.w	r2, [r3, #92]	@ 0x5c
 800414c:	68fb      	ldr	r3, [r7, #12]
 800414e:	f8b3 305c 	ldrh.w	r3, [r3, #92]	@ 0x5c
 8004152:	827b      	strh	r3, [r7, #18]
 8004154:	68fb      	ldr	r3, [r7, #12]
 8004156:	689b      	ldr	r3, [r3, #8]
 8004158:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800415c:	d108      	bne.n	8004170 <HAL_UART_Receive+0xf6>
 800415e:	68fb      	ldr	r3, [r7, #12]
 8004160:	691b      	ldr	r3, [r3, #16]
 8004162:	2b00      	cmp	r3, #0
 8004164:	d104      	bne.n	8004170 <HAL_UART_Receive+0xf6>
 8004166:	2300      	movs	r3, #0
 8004168:	61fb      	str	r3, [r7, #28]
 800416a:	68bb      	ldr	r3, [r7, #8]
 800416c:	61bb      	str	r3, [r7, #24]
 800416e:	e003      	b.n	8004178 <HAL_UART_Receive+0xfe>
 8004170:	68bb      	ldr	r3, [r7, #8]
 8004172:	61fb      	str	r3, [r7, #28]
 8004174:	2300      	movs	r3, #0
 8004176:	61bb      	str	r3, [r7, #24]
 8004178:	e037      	b.n	80041ea <HAL_UART_Receive+0x170>
 800417a:	683b      	ldr	r3, [r7, #0]
 800417c:	9300      	str	r3, [sp, #0]
 800417e:	697b      	ldr	r3, [r7, #20]
 8004180:	2200      	movs	r2, #0
 8004182:	2120      	movs	r1, #32
 8004184:	68f8      	ldr	r0, [r7, #12]
 8004186:	f000 fc43 	bl	8004a10 <UART_WaitOnFlagUntilTimeout>
 800418a:	4603      	mov	r3, r0
 800418c:	2b00      	cmp	r3, #0
 800418e:	d005      	beq.n	800419c <HAL_UART_Receive+0x122>
 8004190:	68fb      	ldr	r3, [r7, #12]
 8004192:	2220      	movs	r2, #32
 8004194:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 8004198:	2303      	movs	r3, #3
 800419a:	e033      	b.n	8004204 <HAL_UART_Receive+0x18a>
 800419c:	69fb      	ldr	r3, [r7, #28]
 800419e:	2b00      	cmp	r3, #0
 80041a0:	d10c      	bne.n	80041bc <HAL_UART_Receive+0x142>
 80041a2:	68fb      	ldr	r3, [r7, #12]
 80041a4:	681b      	ldr	r3, [r3, #0]
 80041a6:	8c9b      	ldrh	r3, [r3, #36]	@ 0x24
 80041a8:	b29a      	uxth	r2, r3
 80041aa:	8a7b      	ldrh	r3, [r7, #18]
 80041ac:	4013      	ands	r3, r2
 80041ae:	b29a      	uxth	r2, r3
 80041b0:	69bb      	ldr	r3, [r7, #24]
 80041b2:	801a      	strh	r2, [r3, #0]
 80041b4:	69bb      	ldr	r3, [r7, #24]
 80041b6:	3302      	adds	r3, #2
 80041b8:	61bb      	str	r3, [r7, #24]
 80041ba:	e00d      	b.n	80041d8 <HAL_UART_Receive+0x15e>
 80041bc:	68fb      	ldr	r3, [r7, #12]
 80041be:	681b      	ldr	r3, [r3, #0]
 80041c0:	8c9b      	ldrh	r3, [r3, #36]	@ 0x24
 80041c2:	b29b      	uxth	r3, r3
 80041c4:	b2da      	uxtb	r2, r3
 80041c6:	8a7b      	ldrh	r3, [r7, #18]
 80041c8:	b2db      	uxtb	r3, r3
 80041ca:	4013      	ands	r3, r2
 80041cc:	b2da      	uxtb	r2, r3
 80041ce:	69fb      	ldr	r3, [r7, #28]
 80041d0:	701a      	strb	r2, [r3, #0]
 80041d2:	69fb      	ldr	r3, [r7, #28]
 80041d4:	3301      	adds	r3, #1
 80041d6:	61fb      	str	r3, [r7, #28]
 80041d8:	68fb      	ldr	r3, [r7, #12]
 80041da:	f8b3 305a 	ldrh.w	r3, [r3, #90]	@ 0x5a
 80041de:	b29b      	uxth	r3, r3
 80041e0:	3b01      	subs	r3, #1
 80041e2:	b29a      	uxth	r2, r3
 80041e4:	68fb      	ldr	r3, [r7, #12]
 80041e6:	f8a3 205a 	strh.w	r2, [r3, #90]	@ 0x5a
 80041ea:	68fb      	ldr	r3, [r7, #12]
 80041ec:	f8b3 305a 	ldrh.w	r3, [r3, #90]	@ 0x5a
 80041f0:	b29b      	uxth	r3, r3
 80041f2:	2b00      	cmp	r3, #0
 80041f4:	d1c1      	bne.n	800417a <HAL_UART_Receive+0x100>
 80041f6:	68fb      	ldr	r3, [r7, #12]
 80041f8:	2220      	movs	r2, #32
 80041fa:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 80041fe:	2300      	movs	r3, #0
 8004200:	e000      	b.n	8004204 <HAL_UART_Receive+0x18a>
 8004202:	2302      	movs	r3, #2
 8004204:	4618      	mov	r0, r3
 8004206:	3720      	adds	r7, #32
 8004208:	46bd      	mov	sp, r7
 800420a:	bd80      	pop	{r7, pc}

0800420c <UART_SetConfig>:
 800420c:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8004210:	b08a      	sub	sp, #40	@ 0x28
 8004212:	af00      	add	r7, sp, #0
 8004214:	60f8      	str	r0, [r7, #12]
 8004216:	2300      	movs	r3, #0
 8004218:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 800421c:	68fb      	ldr	r3, [r7, #12]
 800421e:	689a      	ldr	r2, [r3, #8]
 8004220:	68fb      	ldr	r3, [r7, #12]
 8004222:	691b      	ldr	r3, [r3, #16]
 8004224:	431a      	orrs	r2, r3
 8004226:	68fb      	ldr	r3, [r7, #12]
 8004228:	695b      	ldr	r3, [r3, #20]
 800422a:	431a      	orrs	r2, r3
 800422c:	68fb      	ldr	r3, [r7, #12]
 800422e:	69db      	ldr	r3, [r3, #28]
 8004230:	4313      	orrs	r3, r2
 8004232:	627b      	str	r3, [r7, #36]	@ 0x24
 8004234:	68fb      	ldr	r3, [r7, #12]
 8004236:	681b      	ldr	r3, [r3, #0]
 8004238:	681a      	ldr	r2, [r3, #0]
 800423a:	4ba4      	ldr	r3, [pc, #656]	@ (80044cc <UART_SetConfig+0x2c0>)
 800423c:	4013      	ands	r3, r2
 800423e:	68fa      	ldr	r2, [r7, #12]
 8004240:	6812      	ldr	r2, [r2, #0]
 8004242:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 8004244:	430b      	orrs	r3, r1
 8004246:	6013      	str	r3, [r2, #0]
 8004248:	68fb      	ldr	r3, [r7, #12]
 800424a:	681b      	ldr	r3, [r3, #0]
 800424c:	685b      	ldr	r3, [r3, #4]
 800424e:	f423 5140 	bic.w	r1, r3, #12288	@ 0x3000
 8004252:	68fb      	ldr	r3, [r7, #12]
 8004254:	68da      	ldr	r2, [r3, #12]
 8004256:	68fb      	ldr	r3, [r7, #12]
 8004258:	681b      	ldr	r3, [r3, #0]
 800425a:	430a      	orrs	r2, r1
 800425c:	605a      	str	r2, [r3, #4]
 800425e:	68fb      	ldr	r3, [r7, #12]
 8004260:	699b      	ldr	r3, [r3, #24]
 8004262:	627b      	str	r3, [r7, #36]	@ 0x24
 8004264:	68fb      	ldr	r3, [r7, #12]
 8004266:	681b      	ldr	r3, [r3, #0]
 8004268:	4a99      	ldr	r2, [pc, #612]	@ (80044d0 <UART_SetConfig+0x2c4>)
 800426a:	4293      	cmp	r3, r2
 800426c:	d004      	beq.n	8004278 <UART_SetConfig+0x6c>
 800426e:	68fb      	ldr	r3, [r7, #12]
 8004270:	6a1b      	ldr	r3, [r3, #32]
 8004272:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8004274:	4313      	orrs	r3, r2
 8004276:	627b      	str	r3, [r7, #36]	@ 0x24
 8004278:	68fb      	ldr	r3, [r7, #12]
 800427a:	681b      	ldr	r3, [r3, #0]
 800427c:	689b      	ldr	r3, [r3, #8]
 800427e:	f423 6130 	bic.w	r1, r3, #2816	@ 0xb00
 8004282:	68fb      	ldr	r3, [r7, #12]
 8004284:	681b      	ldr	r3, [r3, #0]
 8004286:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8004288:	430a      	orrs	r2, r1
 800428a:	609a      	str	r2, [r3, #8]
 800428c:	68fb      	ldr	r3, [r7, #12]
 800428e:	681b      	ldr	r3, [r3, #0]
 8004290:	4a90      	ldr	r2, [pc, #576]	@ (80044d4 <UART_SetConfig+0x2c8>)
 8004292:	4293      	cmp	r3, r2
 8004294:	d126      	bne.n	80042e4 <UART_SetConfig+0xd8>
 8004296:	4b90      	ldr	r3, [pc, #576]	@ (80044d8 <UART_SetConfig+0x2cc>)
 8004298:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800429c:	f003 0303 	and.w	r3, r3, #3
 80042a0:	2b03      	cmp	r3, #3
 80042a2:	d81b      	bhi.n	80042dc <UART_SetConfig+0xd0>
 80042a4:	a201      	add	r2, pc, #4	@ (adr r2, 80042ac <UART_SetConfig+0xa0>)
 80042a6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80042aa:	bf00      	nop
 80042ac:	080042bd 	.word	0x080042bd
 80042b0:	080042cd 	.word	0x080042cd
 80042b4:	080042c5 	.word	0x080042c5
 80042b8:	080042d5 	.word	0x080042d5
 80042bc:	2301      	movs	r3, #1
 80042be:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80042c2:	e116      	b.n	80044f2 <UART_SetConfig+0x2e6>
 80042c4:	2302      	movs	r3, #2
 80042c6:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80042ca:	e112      	b.n	80044f2 <UART_SetConfig+0x2e6>
 80042cc:	2304      	movs	r3, #4
 80042ce:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80042d2:	e10e      	b.n	80044f2 <UART_SetConfig+0x2e6>
 80042d4:	2308      	movs	r3, #8
 80042d6:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80042da:	e10a      	b.n	80044f2 <UART_SetConfig+0x2e6>
 80042dc:	2310      	movs	r3, #16
 80042de:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80042e2:	e106      	b.n	80044f2 <UART_SetConfig+0x2e6>
 80042e4:	68fb      	ldr	r3, [r7, #12]
 80042e6:	681b      	ldr	r3, [r3, #0]
 80042e8:	4a7c      	ldr	r2, [pc, #496]	@ (80044dc <UART_SetConfig+0x2d0>)
 80042ea:	4293      	cmp	r3, r2
 80042ec:	d138      	bne.n	8004360 <UART_SetConfig+0x154>
 80042ee:	4b7a      	ldr	r3, [pc, #488]	@ (80044d8 <UART_SetConfig+0x2cc>)
 80042f0:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80042f4:	f003 030c 	and.w	r3, r3, #12
 80042f8:	2b0c      	cmp	r3, #12
 80042fa:	d82d      	bhi.n	8004358 <UART_SetConfig+0x14c>
 80042fc:	a201      	add	r2, pc, #4	@ (adr r2, 8004304 <UART_SetConfig+0xf8>)
 80042fe:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004302:	bf00      	nop
 8004304:	08004339 	.word	0x08004339
 8004308:	08004359 	.word	0x08004359
 800430c:	08004359 	.word	0x08004359
 8004310:	08004359 	.word	0x08004359
 8004314:	08004349 	.word	0x08004349
 8004318:	08004359 	.word	0x08004359
 800431c:	08004359 	.word	0x08004359
 8004320:	08004359 	.word	0x08004359
 8004324:	08004341 	.word	0x08004341
 8004328:	08004359 	.word	0x08004359
 800432c:	08004359 	.word	0x08004359
 8004330:	08004359 	.word	0x08004359
 8004334:	08004351 	.word	0x08004351
 8004338:	2300      	movs	r3, #0
 800433a:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800433e:	e0d8      	b.n	80044f2 <UART_SetConfig+0x2e6>
 8004340:	2302      	movs	r3, #2
 8004342:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8004346:	e0d4      	b.n	80044f2 <UART_SetConfig+0x2e6>
 8004348:	2304      	movs	r3, #4
 800434a:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800434e:	e0d0      	b.n	80044f2 <UART_SetConfig+0x2e6>
 8004350:	2308      	movs	r3, #8
 8004352:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8004356:	e0cc      	b.n	80044f2 <UART_SetConfig+0x2e6>
 8004358:	2310      	movs	r3, #16
 800435a:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800435e:	e0c8      	b.n	80044f2 <UART_SetConfig+0x2e6>
 8004360:	68fb      	ldr	r3, [r7, #12]
 8004362:	681b      	ldr	r3, [r3, #0]
 8004364:	4a5e      	ldr	r2, [pc, #376]	@ (80044e0 <UART_SetConfig+0x2d4>)
 8004366:	4293      	cmp	r3, r2
 8004368:	d125      	bne.n	80043b6 <UART_SetConfig+0x1aa>
 800436a:	4b5b      	ldr	r3, [pc, #364]	@ (80044d8 <UART_SetConfig+0x2cc>)
 800436c:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8004370:	f003 0330 	and.w	r3, r3, #48	@ 0x30
 8004374:	2b30      	cmp	r3, #48	@ 0x30
 8004376:	d016      	beq.n	80043a6 <UART_SetConfig+0x19a>
 8004378:	2b30      	cmp	r3, #48	@ 0x30
 800437a:	d818      	bhi.n	80043ae <UART_SetConfig+0x1a2>
 800437c:	2b20      	cmp	r3, #32
 800437e:	d00a      	beq.n	8004396 <UART_SetConfig+0x18a>
 8004380:	2b20      	cmp	r3, #32
 8004382:	d814      	bhi.n	80043ae <UART_SetConfig+0x1a2>
 8004384:	2b00      	cmp	r3, #0
 8004386:	d002      	beq.n	800438e <UART_SetConfig+0x182>
 8004388:	2b10      	cmp	r3, #16
 800438a:	d008      	beq.n	800439e <UART_SetConfig+0x192>
 800438c:	e00f      	b.n	80043ae <UART_SetConfig+0x1a2>
 800438e:	2300      	movs	r3, #0
 8004390:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8004394:	e0ad      	b.n	80044f2 <UART_SetConfig+0x2e6>
 8004396:	2302      	movs	r3, #2
 8004398:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800439c:	e0a9      	b.n	80044f2 <UART_SetConfig+0x2e6>
 800439e:	2304      	movs	r3, #4
 80043a0:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80043a4:	e0a5      	b.n	80044f2 <UART_SetConfig+0x2e6>
 80043a6:	2308      	movs	r3, #8
 80043a8:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80043ac:	e0a1      	b.n	80044f2 <UART_SetConfig+0x2e6>
 80043ae:	2310      	movs	r3, #16
 80043b0:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80043b4:	e09d      	b.n	80044f2 <UART_SetConfig+0x2e6>
 80043b6:	68fb      	ldr	r3, [r7, #12]
 80043b8:	681b      	ldr	r3, [r3, #0]
 80043ba:	4a4a      	ldr	r2, [pc, #296]	@ (80044e4 <UART_SetConfig+0x2d8>)
 80043bc:	4293      	cmp	r3, r2
 80043be:	d125      	bne.n	800440c <UART_SetConfig+0x200>
 80043c0:	4b45      	ldr	r3, [pc, #276]	@ (80044d8 <UART_SetConfig+0x2cc>)
 80043c2:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80043c6:	f003 03c0 	and.w	r3, r3, #192	@ 0xc0
 80043ca:	2bc0      	cmp	r3, #192	@ 0xc0
 80043cc:	d016      	beq.n	80043fc <UART_SetConfig+0x1f0>
 80043ce:	2bc0      	cmp	r3, #192	@ 0xc0
 80043d0:	d818      	bhi.n	8004404 <UART_SetConfig+0x1f8>
 80043d2:	2b80      	cmp	r3, #128	@ 0x80
 80043d4:	d00a      	beq.n	80043ec <UART_SetConfig+0x1e0>
 80043d6:	2b80      	cmp	r3, #128	@ 0x80
 80043d8:	d814      	bhi.n	8004404 <UART_SetConfig+0x1f8>
 80043da:	2b00      	cmp	r3, #0
 80043dc:	d002      	beq.n	80043e4 <UART_SetConfig+0x1d8>
 80043de:	2b40      	cmp	r3, #64	@ 0x40
 80043e0:	d008      	beq.n	80043f4 <UART_SetConfig+0x1e8>
 80043e2:	e00f      	b.n	8004404 <UART_SetConfig+0x1f8>
 80043e4:	2300      	movs	r3, #0
 80043e6:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80043ea:	e082      	b.n	80044f2 <UART_SetConfig+0x2e6>
 80043ec:	2302      	movs	r3, #2
 80043ee:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80043f2:	e07e      	b.n	80044f2 <UART_SetConfig+0x2e6>
 80043f4:	2304      	movs	r3, #4
 80043f6:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80043fa:	e07a      	b.n	80044f2 <UART_SetConfig+0x2e6>
 80043fc:	2308      	movs	r3, #8
 80043fe:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8004402:	e076      	b.n	80044f2 <UART_SetConfig+0x2e6>
 8004404:	2310      	movs	r3, #16
 8004406:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800440a:	e072      	b.n	80044f2 <UART_SetConfig+0x2e6>
 800440c:	68fb      	ldr	r3, [r7, #12]
 800440e:	681b      	ldr	r3, [r3, #0]
 8004410:	4a35      	ldr	r2, [pc, #212]	@ (80044e8 <UART_SetConfig+0x2dc>)
 8004412:	4293      	cmp	r3, r2
 8004414:	d12a      	bne.n	800446c <UART_SetConfig+0x260>
 8004416:	4b30      	ldr	r3, [pc, #192]	@ (80044d8 <UART_SetConfig+0x2cc>)
 8004418:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800441c:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8004420:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8004424:	d01a      	beq.n	800445c <UART_SetConfig+0x250>
 8004426:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 800442a:	d81b      	bhi.n	8004464 <UART_SetConfig+0x258>
 800442c:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8004430:	d00c      	beq.n	800444c <UART_SetConfig+0x240>
 8004432:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8004436:	d815      	bhi.n	8004464 <UART_SetConfig+0x258>
 8004438:	2b00      	cmp	r3, #0
 800443a:	d003      	beq.n	8004444 <UART_SetConfig+0x238>
 800443c:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8004440:	d008      	beq.n	8004454 <UART_SetConfig+0x248>
 8004442:	e00f      	b.n	8004464 <UART_SetConfig+0x258>
 8004444:	2300      	movs	r3, #0
 8004446:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800444a:	e052      	b.n	80044f2 <UART_SetConfig+0x2e6>
 800444c:	2302      	movs	r3, #2
 800444e:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8004452:	e04e      	b.n	80044f2 <UART_SetConfig+0x2e6>
 8004454:	2304      	movs	r3, #4
 8004456:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800445a:	e04a      	b.n	80044f2 <UART_SetConfig+0x2e6>
 800445c:	2308      	movs	r3, #8
 800445e:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8004462:	e046      	b.n	80044f2 <UART_SetConfig+0x2e6>
 8004464:	2310      	movs	r3, #16
 8004466:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800446a:	e042      	b.n	80044f2 <UART_SetConfig+0x2e6>
 800446c:	68fb      	ldr	r3, [r7, #12]
 800446e:	681b      	ldr	r3, [r3, #0]
 8004470:	4a17      	ldr	r2, [pc, #92]	@ (80044d0 <UART_SetConfig+0x2c4>)
 8004472:	4293      	cmp	r3, r2
 8004474:	d13a      	bne.n	80044ec <UART_SetConfig+0x2e0>
 8004476:	4b18      	ldr	r3, [pc, #96]	@ (80044d8 <UART_SetConfig+0x2cc>)
 8004478:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800447c:	f403 6340 	and.w	r3, r3, #3072	@ 0xc00
 8004480:	f5b3 6f40 	cmp.w	r3, #3072	@ 0xc00
 8004484:	d01a      	beq.n	80044bc <UART_SetConfig+0x2b0>
 8004486:	f5b3 6f40 	cmp.w	r3, #3072	@ 0xc00
 800448a:	d81b      	bhi.n	80044c4 <UART_SetConfig+0x2b8>
 800448c:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8004490:	d00c      	beq.n	80044ac <UART_SetConfig+0x2a0>
 8004492:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8004496:	d815      	bhi.n	80044c4 <UART_SetConfig+0x2b8>
 8004498:	2b00      	cmp	r3, #0
 800449a:	d003      	beq.n	80044a4 <UART_SetConfig+0x298>
 800449c:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80044a0:	d008      	beq.n	80044b4 <UART_SetConfig+0x2a8>
 80044a2:	e00f      	b.n	80044c4 <UART_SetConfig+0x2b8>
 80044a4:	2300      	movs	r3, #0
 80044a6:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80044aa:	e022      	b.n	80044f2 <UART_SetConfig+0x2e6>
 80044ac:	2302      	movs	r3, #2
 80044ae:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80044b2:	e01e      	b.n	80044f2 <UART_SetConfig+0x2e6>
 80044b4:	2304      	movs	r3, #4
 80044b6:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80044ba:	e01a      	b.n	80044f2 <UART_SetConfig+0x2e6>
 80044bc:	2308      	movs	r3, #8
 80044be:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80044c2:	e016      	b.n	80044f2 <UART_SetConfig+0x2e6>
 80044c4:	2310      	movs	r3, #16
 80044c6:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80044ca:	e012      	b.n	80044f2 <UART_SetConfig+0x2e6>
 80044cc:	efff69f3 	.word	0xefff69f3
 80044d0:	40008000 	.word	0x40008000
 80044d4:	40013800 	.word	0x40013800
 80044d8:	40021000 	.word	0x40021000
 80044dc:	40004400 	.word	0x40004400
 80044e0:	40004800 	.word	0x40004800
 80044e4:	40004c00 	.word	0x40004c00
 80044e8:	40005000 	.word	0x40005000
 80044ec:	2310      	movs	r3, #16
 80044ee:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80044f2:	68fb      	ldr	r3, [r7, #12]
 80044f4:	681b      	ldr	r3, [r3, #0]
 80044f6:	4a9f      	ldr	r2, [pc, #636]	@ (8004774 <UART_SetConfig+0x568>)
 80044f8:	4293      	cmp	r3, r2
 80044fa:	d17a      	bne.n	80045f2 <UART_SetConfig+0x3e6>
 80044fc:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 8004500:	2b08      	cmp	r3, #8
 8004502:	d824      	bhi.n	800454e <UART_SetConfig+0x342>
 8004504:	a201      	add	r2, pc, #4	@ (adr r2, 800450c <UART_SetConfig+0x300>)
 8004506:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800450a:	bf00      	nop
 800450c:	08004531 	.word	0x08004531
 8004510:	0800454f 	.word	0x0800454f
 8004514:	08004539 	.word	0x08004539
 8004518:	0800454f 	.word	0x0800454f
 800451c:	0800453f 	.word	0x0800453f
 8004520:	0800454f 	.word	0x0800454f
 8004524:	0800454f 	.word	0x0800454f
 8004528:	0800454f 	.word	0x0800454f
 800452c:	08004547 	.word	0x08004547
 8004530:	f7fe ff76 	bl	8003420 <HAL_RCC_GetPCLK1Freq>
 8004534:	61f8      	str	r0, [r7, #28]
 8004536:	e010      	b.n	800455a <UART_SetConfig+0x34e>
 8004538:	4b8f      	ldr	r3, [pc, #572]	@ (8004778 <UART_SetConfig+0x56c>)
 800453a:	61fb      	str	r3, [r7, #28]
 800453c:	e00d      	b.n	800455a <UART_SetConfig+0x34e>
 800453e:	f7fe fed7 	bl	80032f0 <HAL_RCC_GetSysClockFreq>
 8004542:	61f8      	str	r0, [r7, #28]
 8004544:	e009      	b.n	800455a <UART_SetConfig+0x34e>
 8004546:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800454a:	61fb      	str	r3, [r7, #28]
 800454c:	e005      	b.n	800455a <UART_SetConfig+0x34e>
 800454e:	2300      	movs	r3, #0
 8004550:	61fb      	str	r3, [r7, #28]
 8004552:	2301      	movs	r3, #1
 8004554:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 8004558:	bf00      	nop
 800455a:	69fb      	ldr	r3, [r7, #28]
 800455c:	2b00      	cmp	r3, #0
 800455e:	f000 80fb 	beq.w	8004758 <UART_SetConfig+0x54c>
 8004562:	68fb      	ldr	r3, [r7, #12]
 8004564:	685a      	ldr	r2, [r3, #4]
 8004566:	4613      	mov	r3, r2
 8004568:	005b      	lsls	r3, r3, #1
 800456a:	4413      	add	r3, r2
 800456c:	69fa      	ldr	r2, [r7, #28]
 800456e:	429a      	cmp	r2, r3
 8004570:	d305      	bcc.n	800457e <UART_SetConfig+0x372>
 8004572:	68fb      	ldr	r3, [r7, #12]
 8004574:	685b      	ldr	r3, [r3, #4]
 8004576:	031b      	lsls	r3, r3, #12
 8004578:	69fa      	ldr	r2, [r7, #28]
 800457a:	429a      	cmp	r2, r3
 800457c:	d903      	bls.n	8004586 <UART_SetConfig+0x37a>
 800457e:	2301      	movs	r3, #1
 8004580:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 8004584:	e0e8      	b.n	8004758 <UART_SetConfig+0x54c>
 8004586:	69fb      	ldr	r3, [r7, #28]
 8004588:	2200      	movs	r2, #0
 800458a:	461c      	mov	r4, r3
 800458c:	4615      	mov	r5, r2
 800458e:	f04f 0200 	mov.w	r2, #0
 8004592:	f04f 0300 	mov.w	r3, #0
 8004596:	022b      	lsls	r3, r5, #8
 8004598:	ea43 6314 	orr.w	r3, r3, r4, lsr #24
 800459c:	0222      	lsls	r2, r4, #8
 800459e:	68f9      	ldr	r1, [r7, #12]
 80045a0:	6849      	ldr	r1, [r1, #4]
 80045a2:	0849      	lsrs	r1, r1, #1
 80045a4:	2000      	movs	r0, #0
 80045a6:	4688      	mov	r8, r1
 80045a8:	4681      	mov	r9, r0
 80045aa:	eb12 0a08 	adds.w	sl, r2, r8
 80045ae:	eb43 0b09 	adc.w	fp, r3, r9
 80045b2:	68fb      	ldr	r3, [r7, #12]
 80045b4:	685b      	ldr	r3, [r3, #4]
 80045b6:	2200      	movs	r2, #0
 80045b8:	603b      	str	r3, [r7, #0]
 80045ba:	607a      	str	r2, [r7, #4]
 80045bc:	e9d7 2300 	ldrd	r2, r3, [r7]
 80045c0:	4650      	mov	r0, sl
 80045c2:	4659      	mov	r1, fp
 80045c4:	f7fb fe6c 	bl	80002a0 <__aeabi_uldivmod>
 80045c8:	4602      	mov	r2, r0
 80045ca:	460b      	mov	r3, r1
 80045cc:	4613      	mov	r3, r2
 80045ce:	61bb      	str	r3, [r7, #24]
 80045d0:	69bb      	ldr	r3, [r7, #24]
 80045d2:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 80045d6:	d308      	bcc.n	80045ea <UART_SetConfig+0x3de>
 80045d8:	69bb      	ldr	r3, [r7, #24]
 80045da:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 80045de:	d204      	bcs.n	80045ea <UART_SetConfig+0x3de>
 80045e0:	68fb      	ldr	r3, [r7, #12]
 80045e2:	681b      	ldr	r3, [r3, #0]
 80045e4:	69ba      	ldr	r2, [r7, #24]
 80045e6:	60da      	str	r2, [r3, #12]
 80045e8:	e0b6      	b.n	8004758 <UART_SetConfig+0x54c>
 80045ea:	2301      	movs	r3, #1
 80045ec:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 80045f0:	e0b2      	b.n	8004758 <UART_SetConfig+0x54c>
 80045f2:	68fb      	ldr	r3, [r7, #12]
 80045f4:	69db      	ldr	r3, [r3, #28]
 80045f6:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 80045fa:	d15e      	bne.n	80046ba <UART_SetConfig+0x4ae>
 80045fc:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 8004600:	2b08      	cmp	r3, #8
 8004602:	d828      	bhi.n	8004656 <UART_SetConfig+0x44a>
 8004604:	a201      	add	r2, pc, #4	@ (adr r2, 800460c <UART_SetConfig+0x400>)
 8004606:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800460a:	bf00      	nop
 800460c:	08004631 	.word	0x08004631
 8004610:	08004639 	.word	0x08004639
 8004614:	08004641 	.word	0x08004641
 8004618:	08004657 	.word	0x08004657
 800461c:	08004647 	.word	0x08004647
 8004620:	08004657 	.word	0x08004657
 8004624:	08004657 	.word	0x08004657
 8004628:	08004657 	.word	0x08004657
 800462c:	0800464f 	.word	0x0800464f
 8004630:	f7fe fef6 	bl	8003420 <HAL_RCC_GetPCLK1Freq>
 8004634:	61f8      	str	r0, [r7, #28]
 8004636:	e014      	b.n	8004662 <UART_SetConfig+0x456>
 8004638:	f7fe ff08 	bl	800344c <HAL_RCC_GetPCLK2Freq>
 800463c:	61f8      	str	r0, [r7, #28]
 800463e:	e010      	b.n	8004662 <UART_SetConfig+0x456>
 8004640:	4b4d      	ldr	r3, [pc, #308]	@ (8004778 <UART_SetConfig+0x56c>)
 8004642:	61fb      	str	r3, [r7, #28]
 8004644:	e00d      	b.n	8004662 <UART_SetConfig+0x456>
 8004646:	f7fe fe53 	bl	80032f0 <HAL_RCC_GetSysClockFreq>
 800464a:	61f8      	str	r0, [r7, #28]
 800464c:	e009      	b.n	8004662 <UART_SetConfig+0x456>
 800464e:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8004652:	61fb      	str	r3, [r7, #28]
 8004654:	e005      	b.n	8004662 <UART_SetConfig+0x456>
 8004656:	2300      	movs	r3, #0
 8004658:	61fb      	str	r3, [r7, #28]
 800465a:	2301      	movs	r3, #1
 800465c:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 8004660:	bf00      	nop
 8004662:	69fb      	ldr	r3, [r7, #28]
 8004664:	2b00      	cmp	r3, #0
 8004666:	d077      	beq.n	8004758 <UART_SetConfig+0x54c>
 8004668:	69fb      	ldr	r3, [r7, #28]
 800466a:	005a      	lsls	r2, r3, #1
 800466c:	68fb      	ldr	r3, [r7, #12]
 800466e:	685b      	ldr	r3, [r3, #4]
 8004670:	085b      	lsrs	r3, r3, #1
 8004672:	441a      	add	r2, r3
 8004674:	68fb      	ldr	r3, [r7, #12]
 8004676:	685b      	ldr	r3, [r3, #4]
 8004678:	fbb2 f3f3 	udiv	r3, r2, r3
 800467c:	61bb      	str	r3, [r7, #24]
 800467e:	69bb      	ldr	r3, [r7, #24]
 8004680:	2b0f      	cmp	r3, #15
 8004682:	d916      	bls.n	80046b2 <UART_SetConfig+0x4a6>
 8004684:	69bb      	ldr	r3, [r7, #24]
 8004686:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800468a:	d212      	bcs.n	80046b2 <UART_SetConfig+0x4a6>
 800468c:	69bb      	ldr	r3, [r7, #24]
 800468e:	b29b      	uxth	r3, r3
 8004690:	f023 030f 	bic.w	r3, r3, #15
 8004694:	82fb      	strh	r3, [r7, #22]
 8004696:	69bb      	ldr	r3, [r7, #24]
 8004698:	085b      	lsrs	r3, r3, #1
 800469a:	b29b      	uxth	r3, r3
 800469c:	f003 0307 	and.w	r3, r3, #7
 80046a0:	b29a      	uxth	r2, r3
 80046a2:	8afb      	ldrh	r3, [r7, #22]
 80046a4:	4313      	orrs	r3, r2
 80046a6:	82fb      	strh	r3, [r7, #22]
 80046a8:	68fb      	ldr	r3, [r7, #12]
 80046aa:	681b      	ldr	r3, [r3, #0]
 80046ac:	8afa      	ldrh	r2, [r7, #22]
 80046ae:	60da      	str	r2, [r3, #12]
 80046b0:	e052      	b.n	8004758 <UART_SetConfig+0x54c>
 80046b2:	2301      	movs	r3, #1
 80046b4:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 80046b8:	e04e      	b.n	8004758 <UART_SetConfig+0x54c>
 80046ba:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 80046be:	2b08      	cmp	r3, #8
 80046c0:	d827      	bhi.n	8004712 <UART_SetConfig+0x506>
 80046c2:	a201      	add	r2, pc, #4	@ (adr r2, 80046c8 <UART_SetConfig+0x4bc>)
 80046c4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80046c8:	080046ed 	.word	0x080046ed
 80046cc:	080046f5 	.word	0x080046f5
 80046d0:	080046fd 	.word	0x080046fd
 80046d4:	08004713 	.word	0x08004713
 80046d8:	08004703 	.word	0x08004703
 80046dc:	08004713 	.word	0x08004713
 80046e0:	08004713 	.word	0x08004713
 80046e4:	08004713 	.word	0x08004713
 80046e8:	0800470b 	.word	0x0800470b
 80046ec:	f7fe fe98 	bl	8003420 <HAL_RCC_GetPCLK1Freq>
 80046f0:	61f8      	str	r0, [r7, #28]
 80046f2:	e014      	b.n	800471e <UART_SetConfig+0x512>
 80046f4:	f7fe feaa 	bl	800344c <HAL_RCC_GetPCLK2Freq>
 80046f8:	61f8      	str	r0, [r7, #28]
 80046fa:	e010      	b.n	800471e <UART_SetConfig+0x512>
 80046fc:	4b1e      	ldr	r3, [pc, #120]	@ (8004778 <UART_SetConfig+0x56c>)
 80046fe:	61fb      	str	r3, [r7, #28]
 8004700:	e00d      	b.n	800471e <UART_SetConfig+0x512>
 8004702:	f7fe fdf5 	bl	80032f0 <HAL_RCC_GetSysClockFreq>
 8004706:	61f8      	str	r0, [r7, #28]
 8004708:	e009      	b.n	800471e <UART_SetConfig+0x512>
 800470a:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800470e:	61fb      	str	r3, [r7, #28]
 8004710:	e005      	b.n	800471e <UART_SetConfig+0x512>
 8004712:	2300      	movs	r3, #0
 8004714:	61fb      	str	r3, [r7, #28]
 8004716:	2301      	movs	r3, #1
 8004718:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 800471c:	bf00      	nop
 800471e:	69fb      	ldr	r3, [r7, #28]
 8004720:	2b00      	cmp	r3, #0
 8004722:	d019      	beq.n	8004758 <UART_SetConfig+0x54c>
 8004724:	68fb      	ldr	r3, [r7, #12]
 8004726:	685b      	ldr	r3, [r3, #4]
 8004728:	085a      	lsrs	r2, r3, #1
 800472a:	69fb      	ldr	r3, [r7, #28]
 800472c:	441a      	add	r2, r3
 800472e:	68fb      	ldr	r3, [r7, #12]
 8004730:	685b      	ldr	r3, [r3, #4]
 8004732:	fbb2 f3f3 	udiv	r3, r2, r3
 8004736:	61bb      	str	r3, [r7, #24]
 8004738:	69bb      	ldr	r3, [r7, #24]
 800473a:	2b0f      	cmp	r3, #15
 800473c:	d909      	bls.n	8004752 <UART_SetConfig+0x546>
 800473e:	69bb      	ldr	r3, [r7, #24]
 8004740:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8004744:	d205      	bcs.n	8004752 <UART_SetConfig+0x546>
 8004746:	69bb      	ldr	r3, [r7, #24]
 8004748:	b29a      	uxth	r2, r3
 800474a:	68fb      	ldr	r3, [r7, #12]
 800474c:	681b      	ldr	r3, [r3, #0]
 800474e:	60da      	str	r2, [r3, #12]
 8004750:	e002      	b.n	8004758 <UART_SetConfig+0x54c>
 8004752:	2301      	movs	r3, #1
 8004754:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 8004758:	68fb      	ldr	r3, [r7, #12]
 800475a:	2200      	movs	r2, #0
 800475c:	669a      	str	r2, [r3, #104]	@ 0x68
 800475e:	68fb      	ldr	r3, [r7, #12]
 8004760:	2200      	movs	r2, #0
 8004762:	66da      	str	r2, [r3, #108]	@ 0x6c
 8004764:	f897 3022 	ldrb.w	r3, [r7, #34]	@ 0x22
 8004768:	4618      	mov	r0, r3
 800476a:	3728      	adds	r7, #40	@ 0x28
 800476c:	46bd      	mov	sp, r7
 800476e:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8004772:	bf00      	nop
 8004774:	40008000 	.word	0x40008000
 8004778:	00f42400 	.word	0x00f42400

0800477c <UART_AdvFeatureConfig>:
 800477c:	b480      	push	{r7}
 800477e:	b083      	sub	sp, #12
 8004780:	af00      	add	r7, sp, #0
 8004782:	6078      	str	r0, [r7, #4]
 8004784:	687b      	ldr	r3, [r7, #4]
 8004786:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004788:	f003 0308 	and.w	r3, r3, #8
 800478c:	2b00      	cmp	r3, #0
 800478e:	d00a      	beq.n	80047a6 <UART_AdvFeatureConfig+0x2a>
 8004790:	687b      	ldr	r3, [r7, #4]
 8004792:	681b      	ldr	r3, [r3, #0]
 8004794:	685b      	ldr	r3, [r3, #4]
 8004796:	f423 4100 	bic.w	r1, r3, #32768	@ 0x8000
 800479a:	687b      	ldr	r3, [r7, #4]
 800479c:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800479e:	687b      	ldr	r3, [r7, #4]
 80047a0:	681b      	ldr	r3, [r3, #0]
 80047a2:	430a      	orrs	r2, r1
 80047a4:	605a      	str	r2, [r3, #4]
 80047a6:	687b      	ldr	r3, [r7, #4]
 80047a8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80047aa:	f003 0301 	and.w	r3, r3, #1
 80047ae:	2b00      	cmp	r3, #0
 80047b0:	d00a      	beq.n	80047c8 <UART_AdvFeatureConfig+0x4c>
 80047b2:	687b      	ldr	r3, [r7, #4]
 80047b4:	681b      	ldr	r3, [r3, #0]
 80047b6:	685b      	ldr	r3, [r3, #4]
 80047b8:	f423 3100 	bic.w	r1, r3, #131072	@ 0x20000
 80047bc:	687b      	ldr	r3, [r7, #4]
 80047be:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 80047c0:	687b      	ldr	r3, [r7, #4]
 80047c2:	681b      	ldr	r3, [r3, #0]
 80047c4:	430a      	orrs	r2, r1
 80047c6:	605a      	str	r2, [r3, #4]
 80047c8:	687b      	ldr	r3, [r7, #4]
 80047ca:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80047cc:	f003 0302 	and.w	r3, r3, #2
 80047d0:	2b00      	cmp	r3, #0
 80047d2:	d00a      	beq.n	80047ea <UART_AdvFeatureConfig+0x6e>
 80047d4:	687b      	ldr	r3, [r7, #4]
 80047d6:	681b      	ldr	r3, [r3, #0]
 80047d8:	685b      	ldr	r3, [r3, #4]
 80047da:	f423 3180 	bic.w	r1, r3, #65536	@ 0x10000
 80047de:	687b      	ldr	r3, [r7, #4]
 80047e0:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80047e2:	687b      	ldr	r3, [r7, #4]
 80047e4:	681b      	ldr	r3, [r3, #0]
 80047e6:	430a      	orrs	r2, r1
 80047e8:	605a      	str	r2, [r3, #4]
 80047ea:	687b      	ldr	r3, [r7, #4]
 80047ec:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80047ee:	f003 0304 	and.w	r3, r3, #4
 80047f2:	2b00      	cmp	r3, #0
 80047f4:	d00a      	beq.n	800480c <UART_AdvFeatureConfig+0x90>
 80047f6:	687b      	ldr	r3, [r7, #4]
 80047f8:	681b      	ldr	r3, [r3, #0]
 80047fa:	685b      	ldr	r3, [r3, #4]
 80047fc:	f423 2180 	bic.w	r1, r3, #262144	@ 0x40000
 8004800:	687b      	ldr	r3, [r7, #4]
 8004802:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8004804:	687b      	ldr	r3, [r7, #4]
 8004806:	681b      	ldr	r3, [r3, #0]
 8004808:	430a      	orrs	r2, r1
 800480a:	605a      	str	r2, [r3, #4]
 800480c:	687b      	ldr	r3, [r7, #4]
 800480e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004810:	f003 0310 	and.w	r3, r3, #16
 8004814:	2b00      	cmp	r3, #0
 8004816:	d00a      	beq.n	800482e <UART_AdvFeatureConfig+0xb2>
 8004818:	687b      	ldr	r3, [r7, #4]
 800481a:	681b      	ldr	r3, [r3, #0]
 800481c:	689b      	ldr	r3, [r3, #8]
 800481e:	f423 5180 	bic.w	r1, r3, #4096	@ 0x1000
 8004822:	687b      	ldr	r3, [r7, #4]
 8004824:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8004826:	687b      	ldr	r3, [r7, #4]
 8004828:	681b      	ldr	r3, [r3, #0]
 800482a:	430a      	orrs	r2, r1
 800482c:	609a      	str	r2, [r3, #8]
 800482e:	687b      	ldr	r3, [r7, #4]
 8004830:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004832:	f003 0320 	and.w	r3, r3, #32
 8004836:	2b00      	cmp	r3, #0
 8004838:	d00a      	beq.n	8004850 <UART_AdvFeatureConfig+0xd4>
 800483a:	687b      	ldr	r3, [r7, #4]
 800483c:	681b      	ldr	r3, [r3, #0]
 800483e:	689b      	ldr	r3, [r3, #8]
 8004840:	f423 5100 	bic.w	r1, r3, #8192	@ 0x2000
 8004844:	687b      	ldr	r3, [r7, #4]
 8004846:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8004848:	687b      	ldr	r3, [r7, #4]
 800484a:	681b      	ldr	r3, [r3, #0]
 800484c:	430a      	orrs	r2, r1
 800484e:	609a      	str	r2, [r3, #8]
 8004850:	687b      	ldr	r3, [r7, #4]
 8004852:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004854:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8004858:	2b00      	cmp	r3, #0
 800485a:	d01a      	beq.n	8004892 <UART_AdvFeatureConfig+0x116>
 800485c:	687b      	ldr	r3, [r7, #4]
 800485e:	681b      	ldr	r3, [r3, #0]
 8004860:	685b      	ldr	r3, [r3, #4]
 8004862:	f423 1180 	bic.w	r1, r3, #1048576	@ 0x100000
 8004866:	687b      	ldr	r3, [r7, #4]
 8004868:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800486a:	687b      	ldr	r3, [r7, #4]
 800486c:	681b      	ldr	r3, [r3, #0]
 800486e:	430a      	orrs	r2, r1
 8004870:	605a      	str	r2, [r3, #4]
 8004872:	687b      	ldr	r3, [r7, #4]
 8004874:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004876:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 800487a:	d10a      	bne.n	8004892 <UART_AdvFeatureConfig+0x116>
 800487c:	687b      	ldr	r3, [r7, #4]
 800487e:	681b      	ldr	r3, [r3, #0]
 8004880:	685b      	ldr	r3, [r3, #4]
 8004882:	f423 01c0 	bic.w	r1, r3, #6291456	@ 0x600000
 8004886:	687b      	ldr	r3, [r7, #4]
 8004888:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 800488a:	687b      	ldr	r3, [r7, #4]
 800488c:	681b      	ldr	r3, [r3, #0]
 800488e:	430a      	orrs	r2, r1
 8004890:	605a      	str	r2, [r3, #4]
 8004892:	687b      	ldr	r3, [r7, #4]
 8004894:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004896:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800489a:	2b00      	cmp	r3, #0
 800489c:	d00a      	beq.n	80048b4 <UART_AdvFeatureConfig+0x138>
 800489e:	687b      	ldr	r3, [r7, #4]
 80048a0:	681b      	ldr	r3, [r3, #0]
 80048a2:	685b      	ldr	r3, [r3, #4]
 80048a4:	f423 2100 	bic.w	r1, r3, #524288	@ 0x80000
 80048a8:	687b      	ldr	r3, [r7, #4]
 80048aa:	6c9a      	ldr	r2, [r3, #72]	@ 0x48
 80048ac:	687b      	ldr	r3, [r7, #4]
 80048ae:	681b      	ldr	r3, [r3, #0]
 80048b0:	430a      	orrs	r2, r1
 80048b2:	605a      	str	r2, [r3, #4]
 80048b4:	bf00      	nop
 80048b6:	370c      	adds	r7, #12
 80048b8:	46bd      	mov	sp, r7
 80048ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80048be:	4770      	bx	lr

080048c0 <UART_CheckIdleState>:
 80048c0:	b580      	push	{r7, lr}
 80048c2:	b098      	sub	sp, #96	@ 0x60
 80048c4:	af02      	add	r7, sp, #8
 80048c6:	6078      	str	r0, [r7, #4]
 80048c8:	687b      	ldr	r3, [r7, #4]
 80048ca:	2200      	movs	r2, #0
 80048cc:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 80048d0:	f7fc feea 	bl	80016a8 <HAL_GetTick>
 80048d4:	6578      	str	r0, [r7, #84]	@ 0x54
 80048d6:	687b      	ldr	r3, [r7, #4]
 80048d8:	681b      	ldr	r3, [r3, #0]
 80048da:	681b      	ldr	r3, [r3, #0]
 80048dc:	f003 0308 	and.w	r3, r3, #8
 80048e0:	2b08      	cmp	r3, #8
 80048e2:	d12e      	bne.n	8004942 <UART_CheckIdleState+0x82>
 80048e4:	f06f 437e 	mvn.w	r3, #4261412864	@ 0xfe000000
 80048e8:	9300      	str	r3, [sp, #0]
 80048ea:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80048ec:	2200      	movs	r2, #0
 80048ee:	f44f 1100 	mov.w	r1, #2097152	@ 0x200000
 80048f2:	6878      	ldr	r0, [r7, #4]
 80048f4:	f000 f88c 	bl	8004a10 <UART_WaitOnFlagUntilTimeout>
 80048f8:	4603      	mov	r3, r0
 80048fa:	2b00      	cmp	r3, #0
 80048fc:	d021      	beq.n	8004942 <UART_CheckIdleState+0x82>
 80048fe:	687b      	ldr	r3, [r7, #4]
 8004900:	681b      	ldr	r3, [r3, #0]
 8004902:	63bb      	str	r3, [r7, #56]	@ 0x38
 8004904:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004906:	e853 3f00 	ldrex	r3, [r3]
 800490a:	637b      	str	r3, [r7, #52]	@ 0x34
 800490c:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800490e:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8004912:	653b      	str	r3, [r7, #80]	@ 0x50
 8004914:	687b      	ldr	r3, [r7, #4]
 8004916:	681b      	ldr	r3, [r3, #0]
 8004918:	461a      	mov	r2, r3
 800491a:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 800491c:	647b      	str	r3, [r7, #68]	@ 0x44
 800491e:	643a      	str	r2, [r7, #64]	@ 0x40
 8004920:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 8004922:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8004924:	e841 2300 	strex	r3, r2, [r1]
 8004928:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800492a:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800492c:	2b00      	cmp	r3, #0
 800492e:	d1e6      	bne.n	80048fe <UART_CheckIdleState+0x3e>
 8004930:	687b      	ldr	r3, [r7, #4]
 8004932:	2220      	movs	r2, #32
 8004934:	67da      	str	r2, [r3, #124]	@ 0x7c
 8004936:	687b      	ldr	r3, [r7, #4]
 8004938:	2200      	movs	r2, #0
 800493a:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 800493e:	2303      	movs	r3, #3
 8004940:	e062      	b.n	8004a08 <UART_CheckIdleState+0x148>
 8004942:	687b      	ldr	r3, [r7, #4]
 8004944:	681b      	ldr	r3, [r3, #0]
 8004946:	681b      	ldr	r3, [r3, #0]
 8004948:	f003 0304 	and.w	r3, r3, #4
 800494c:	2b04      	cmp	r3, #4
 800494e:	d149      	bne.n	80049e4 <UART_CheckIdleState+0x124>
 8004950:	f06f 437e 	mvn.w	r3, #4261412864	@ 0xfe000000
 8004954:	9300      	str	r3, [sp, #0]
 8004956:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8004958:	2200      	movs	r2, #0
 800495a:	f44f 0180 	mov.w	r1, #4194304	@ 0x400000
 800495e:	6878      	ldr	r0, [r7, #4]
 8004960:	f000 f856 	bl	8004a10 <UART_WaitOnFlagUntilTimeout>
 8004964:	4603      	mov	r3, r0
 8004966:	2b00      	cmp	r3, #0
 8004968:	d03c      	beq.n	80049e4 <UART_CheckIdleState+0x124>
 800496a:	687b      	ldr	r3, [r7, #4]
 800496c:	681b      	ldr	r3, [r3, #0]
 800496e:	627b      	str	r3, [r7, #36]	@ 0x24
 8004970:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004972:	e853 3f00 	ldrex	r3, [r3]
 8004976:	623b      	str	r3, [r7, #32]
 8004978:	6a3b      	ldr	r3, [r7, #32]
 800497a:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 800497e:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8004980:	687b      	ldr	r3, [r7, #4]
 8004982:	681b      	ldr	r3, [r3, #0]
 8004984:	461a      	mov	r2, r3
 8004986:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8004988:	633b      	str	r3, [r7, #48]	@ 0x30
 800498a:	62fa      	str	r2, [r7, #44]	@ 0x2c
 800498c:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 800498e:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8004990:	e841 2300 	strex	r3, r2, [r1]
 8004994:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004996:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004998:	2b00      	cmp	r3, #0
 800499a:	d1e6      	bne.n	800496a <UART_CheckIdleState+0xaa>
 800499c:	687b      	ldr	r3, [r7, #4]
 800499e:	681b      	ldr	r3, [r3, #0]
 80049a0:	3308      	adds	r3, #8
 80049a2:	613b      	str	r3, [r7, #16]
 80049a4:	693b      	ldr	r3, [r7, #16]
 80049a6:	e853 3f00 	ldrex	r3, [r3]
 80049aa:	60fb      	str	r3, [r7, #12]
 80049ac:	68fb      	ldr	r3, [r7, #12]
 80049ae:	f023 0301 	bic.w	r3, r3, #1
 80049b2:	64bb      	str	r3, [r7, #72]	@ 0x48
 80049b4:	687b      	ldr	r3, [r7, #4]
 80049b6:	681b      	ldr	r3, [r3, #0]
 80049b8:	3308      	adds	r3, #8
 80049ba:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 80049bc:	61fa      	str	r2, [r7, #28]
 80049be:	61bb      	str	r3, [r7, #24]
 80049c0:	69b9      	ldr	r1, [r7, #24]
 80049c2:	69fa      	ldr	r2, [r7, #28]
 80049c4:	e841 2300 	strex	r3, r2, [r1]
 80049c8:	617b      	str	r3, [r7, #20]
 80049ca:	697b      	ldr	r3, [r7, #20]
 80049cc:	2b00      	cmp	r3, #0
 80049ce:	d1e5      	bne.n	800499c <UART_CheckIdleState+0xdc>
 80049d0:	687b      	ldr	r3, [r7, #4]
 80049d2:	2220      	movs	r2, #32
 80049d4:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 80049d8:	687b      	ldr	r3, [r7, #4]
 80049da:	2200      	movs	r2, #0
 80049dc:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 80049e0:	2303      	movs	r3, #3
 80049e2:	e011      	b.n	8004a08 <UART_CheckIdleState+0x148>
 80049e4:	687b      	ldr	r3, [r7, #4]
 80049e6:	2220      	movs	r2, #32
 80049e8:	67da      	str	r2, [r3, #124]	@ 0x7c
 80049ea:	687b      	ldr	r3, [r7, #4]
 80049ec:	2220      	movs	r2, #32
 80049ee:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 80049f2:	687b      	ldr	r3, [r7, #4]
 80049f4:	2200      	movs	r2, #0
 80049f6:	661a      	str	r2, [r3, #96]	@ 0x60
 80049f8:	687b      	ldr	r3, [r7, #4]
 80049fa:	2200      	movs	r2, #0
 80049fc:	665a      	str	r2, [r3, #100]	@ 0x64
 80049fe:	687b      	ldr	r3, [r7, #4]
 8004a00:	2200      	movs	r2, #0
 8004a02:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 8004a06:	2300      	movs	r3, #0
 8004a08:	4618      	mov	r0, r3
 8004a0a:	3758      	adds	r7, #88	@ 0x58
 8004a0c:	46bd      	mov	sp, r7
 8004a0e:	bd80      	pop	{r7, pc}

08004a10 <UART_WaitOnFlagUntilTimeout>:
 8004a10:	b580      	push	{r7, lr}
 8004a12:	b084      	sub	sp, #16
 8004a14:	af00      	add	r7, sp, #0
 8004a16:	60f8      	str	r0, [r7, #12]
 8004a18:	60b9      	str	r1, [r7, #8]
 8004a1a:	603b      	str	r3, [r7, #0]
 8004a1c:	4613      	mov	r3, r2
 8004a1e:	71fb      	strb	r3, [r7, #7]
 8004a20:	e04f      	b.n	8004ac2 <UART_WaitOnFlagUntilTimeout+0xb2>
 8004a22:	69bb      	ldr	r3, [r7, #24]
 8004a24:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004a28:	d04b      	beq.n	8004ac2 <UART_WaitOnFlagUntilTimeout+0xb2>
 8004a2a:	f7fc fe3d 	bl	80016a8 <HAL_GetTick>
 8004a2e:	4602      	mov	r2, r0
 8004a30:	683b      	ldr	r3, [r7, #0]
 8004a32:	1ad3      	subs	r3, r2, r3
 8004a34:	69ba      	ldr	r2, [r7, #24]
 8004a36:	429a      	cmp	r2, r3
 8004a38:	d302      	bcc.n	8004a40 <UART_WaitOnFlagUntilTimeout+0x30>
 8004a3a:	69bb      	ldr	r3, [r7, #24]
 8004a3c:	2b00      	cmp	r3, #0
 8004a3e:	d101      	bne.n	8004a44 <UART_WaitOnFlagUntilTimeout+0x34>
 8004a40:	2303      	movs	r3, #3
 8004a42:	e04e      	b.n	8004ae2 <UART_WaitOnFlagUntilTimeout+0xd2>
 8004a44:	68fb      	ldr	r3, [r7, #12]
 8004a46:	681b      	ldr	r3, [r3, #0]
 8004a48:	681b      	ldr	r3, [r3, #0]
 8004a4a:	f003 0304 	and.w	r3, r3, #4
 8004a4e:	2b00      	cmp	r3, #0
 8004a50:	d037      	beq.n	8004ac2 <UART_WaitOnFlagUntilTimeout+0xb2>
 8004a52:	68bb      	ldr	r3, [r7, #8]
 8004a54:	2b80      	cmp	r3, #128	@ 0x80
 8004a56:	d034      	beq.n	8004ac2 <UART_WaitOnFlagUntilTimeout+0xb2>
 8004a58:	68bb      	ldr	r3, [r7, #8]
 8004a5a:	2b40      	cmp	r3, #64	@ 0x40
 8004a5c:	d031      	beq.n	8004ac2 <UART_WaitOnFlagUntilTimeout+0xb2>
 8004a5e:	68fb      	ldr	r3, [r7, #12]
 8004a60:	681b      	ldr	r3, [r3, #0]
 8004a62:	69db      	ldr	r3, [r3, #28]
 8004a64:	f003 0308 	and.w	r3, r3, #8
 8004a68:	2b08      	cmp	r3, #8
 8004a6a:	d110      	bne.n	8004a8e <UART_WaitOnFlagUntilTimeout+0x7e>
 8004a6c:	68fb      	ldr	r3, [r7, #12]
 8004a6e:	681b      	ldr	r3, [r3, #0]
 8004a70:	2208      	movs	r2, #8
 8004a72:	621a      	str	r2, [r3, #32]
 8004a74:	68f8      	ldr	r0, [r7, #12]
 8004a76:	f000 f838 	bl	8004aea <UART_EndRxTransfer>
 8004a7a:	68fb      	ldr	r3, [r7, #12]
 8004a7c:	2208      	movs	r2, #8
 8004a7e:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 8004a82:	68fb      	ldr	r3, [r7, #12]
 8004a84:	2200      	movs	r2, #0
 8004a86:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 8004a8a:	2301      	movs	r3, #1
 8004a8c:	e029      	b.n	8004ae2 <UART_WaitOnFlagUntilTimeout+0xd2>
 8004a8e:	68fb      	ldr	r3, [r7, #12]
 8004a90:	681b      	ldr	r3, [r3, #0]
 8004a92:	69db      	ldr	r3, [r3, #28]
 8004a94:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8004a98:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8004a9c:	d111      	bne.n	8004ac2 <UART_WaitOnFlagUntilTimeout+0xb2>
 8004a9e:	68fb      	ldr	r3, [r7, #12]
 8004aa0:	681b      	ldr	r3, [r3, #0]
 8004aa2:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 8004aa6:	621a      	str	r2, [r3, #32]
 8004aa8:	68f8      	ldr	r0, [r7, #12]
 8004aaa:	f000 f81e 	bl	8004aea <UART_EndRxTransfer>
 8004aae:	68fb      	ldr	r3, [r7, #12]
 8004ab0:	2220      	movs	r2, #32
 8004ab2:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 8004ab6:	68fb      	ldr	r3, [r7, #12]
 8004ab8:	2200      	movs	r2, #0
 8004aba:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 8004abe:	2303      	movs	r3, #3
 8004ac0:	e00f      	b.n	8004ae2 <UART_WaitOnFlagUntilTimeout+0xd2>
 8004ac2:	68fb      	ldr	r3, [r7, #12]
 8004ac4:	681b      	ldr	r3, [r3, #0]
 8004ac6:	69da      	ldr	r2, [r3, #28]
 8004ac8:	68bb      	ldr	r3, [r7, #8]
 8004aca:	4013      	ands	r3, r2
 8004acc:	68ba      	ldr	r2, [r7, #8]
 8004ace:	429a      	cmp	r2, r3
 8004ad0:	bf0c      	ite	eq
 8004ad2:	2301      	moveq	r3, #1
 8004ad4:	2300      	movne	r3, #0
 8004ad6:	b2db      	uxtb	r3, r3
 8004ad8:	461a      	mov	r2, r3
 8004ada:	79fb      	ldrb	r3, [r7, #7]
 8004adc:	429a      	cmp	r2, r3
 8004ade:	d0a0      	beq.n	8004a22 <UART_WaitOnFlagUntilTimeout+0x12>
 8004ae0:	2300      	movs	r3, #0
 8004ae2:	4618      	mov	r0, r3
 8004ae4:	3710      	adds	r7, #16
 8004ae6:	46bd      	mov	sp, r7
 8004ae8:	bd80      	pop	{r7, pc}

08004aea <UART_EndRxTransfer>:
 8004aea:	b480      	push	{r7}
 8004aec:	b095      	sub	sp, #84	@ 0x54
 8004aee:	af00      	add	r7, sp, #0
 8004af0:	6078      	str	r0, [r7, #4]
 8004af2:	687b      	ldr	r3, [r7, #4]
 8004af4:	681b      	ldr	r3, [r3, #0]
 8004af6:	637b      	str	r3, [r7, #52]	@ 0x34
 8004af8:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8004afa:	e853 3f00 	ldrex	r3, [r3]
 8004afe:	633b      	str	r3, [r7, #48]	@ 0x30
 8004b00:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004b02:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8004b06:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8004b08:	687b      	ldr	r3, [r7, #4]
 8004b0a:	681b      	ldr	r3, [r3, #0]
 8004b0c:	461a      	mov	r2, r3
 8004b0e:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8004b10:	643b      	str	r3, [r7, #64]	@ 0x40
 8004b12:	63fa      	str	r2, [r7, #60]	@ 0x3c
 8004b14:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 8004b16:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 8004b18:	e841 2300 	strex	r3, r2, [r1]
 8004b1c:	63bb      	str	r3, [r7, #56]	@ 0x38
 8004b1e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004b20:	2b00      	cmp	r3, #0
 8004b22:	d1e6      	bne.n	8004af2 <UART_EndRxTransfer+0x8>
 8004b24:	687b      	ldr	r3, [r7, #4]
 8004b26:	681b      	ldr	r3, [r3, #0]
 8004b28:	3308      	adds	r3, #8
 8004b2a:	623b      	str	r3, [r7, #32]
 8004b2c:	6a3b      	ldr	r3, [r7, #32]
 8004b2e:	e853 3f00 	ldrex	r3, [r3]
 8004b32:	61fb      	str	r3, [r7, #28]
 8004b34:	69fb      	ldr	r3, [r7, #28]
 8004b36:	f023 0301 	bic.w	r3, r3, #1
 8004b3a:	64bb      	str	r3, [r7, #72]	@ 0x48
 8004b3c:	687b      	ldr	r3, [r7, #4]
 8004b3e:	681b      	ldr	r3, [r3, #0]
 8004b40:	3308      	adds	r3, #8
 8004b42:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8004b44:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8004b46:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004b48:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8004b4a:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8004b4c:	e841 2300 	strex	r3, r2, [r1]
 8004b50:	627b      	str	r3, [r7, #36]	@ 0x24
 8004b52:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004b54:	2b00      	cmp	r3, #0
 8004b56:	d1e5      	bne.n	8004b24 <UART_EndRxTransfer+0x3a>
 8004b58:	687b      	ldr	r3, [r7, #4]
 8004b5a:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8004b5c:	2b01      	cmp	r3, #1
 8004b5e:	d118      	bne.n	8004b92 <UART_EndRxTransfer+0xa8>
 8004b60:	687b      	ldr	r3, [r7, #4]
 8004b62:	681b      	ldr	r3, [r3, #0]
 8004b64:	60fb      	str	r3, [r7, #12]
 8004b66:	68fb      	ldr	r3, [r7, #12]
 8004b68:	e853 3f00 	ldrex	r3, [r3]
 8004b6c:	60bb      	str	r3, [r7, #8]
 8004b6e:	68bb      	ldr	r3, [r7, #8]
 8004b70:	f023 0310 	bic.w	r3, r3, #16
 8004b74:	647b      	str	r3, [r7, #68]	@ 0x44
 8004b76:	687b      	ldr	r3, [r7, #4]
 8004b78:	681b      	ldr	r3, [r3, #0]
 8004b7a:	461a      	mov	r2, r3
 8004b7c:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8004b7e:	61bb      	str	r3, [r7, #24]
 8004b80:	617a      	str	r2, [r7, #20]
 8004b82:	6979      	ldr	r1, [r7, #20]
 8004b84:	69ba      	ldr	r2, [r7, #24]
 8004b86:	e841 2300 	strex	r3, r2, [r1]
 8004b8a:	613b      	str	r3, [r7, #16]
 8004b8c:	693b      	ldr	r3, [r7, #16]
 8004b8e:	2b00      	cmp	r3, #0
 8004b90:	d1e6      	bne.n	8004b60 <UART_EndRxTransfer+0x76>
 8004b92:	687b      	ldr	r3, [r7, #4]
 8004b94:	2220      	movs	r2, #32
 8004b96:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 8004b9a:	687b      	ldr	r3, [r7, #4]
 8004b9c:	2200      	movs	r2, #0
 8004b9e:	661a      	str	r2, [r3, #96]	@ 0x60
 8004ba0:	687b      	ldr	r3, [r7, #4]
 8004ba2:	2200      	movs	r2, #0
 8004ba4:	669a      	str	r2, [r3, #104]	@ 0x68
 8004ba6:	bf00      	nop
 8004ba8:	3754      	adds	r7, #84	@ 0x54
 8004baa:	46bd      	mov	sp, r7
 8004bac:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004bb0:	4770      	bx	lr
	...

08004bb4 <_vsiprintf_r>:
 8004bb4:	b510      	push	{r4, lr}
 8004bb6:	b09a      	sub	sp, #104	@ 0x68
 8004bb8:	2400      	movs	r4, #0
 8004bba:	9100      	str	r1, [sp, #0]
 8004bbc:	9104      	str	r1, [sp, #16]
 8004bbe:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 8004bc2:	9105      	str	r1, [sp, #20]
 8004bc4:	9102      	str	r1, [sp, #8]
 8004bc6:	4905      	ldr	r1, [pc, #20]	@ (8004bdc <_vsiprintf_r+0x28>)
 8004bc8:	9103      	str	r1, [sp, #12]
 8004bca:	4669      	mov	r1, sp
 8004bcc:	9419      	str	r4, [sp, #100]	@ 0x64
 8004bce:	f000 f999 	bl	8004f04 <_svfiprintf_r>
 8004bd2:	9b00      	ldr	r3, [sp, #0]
 8004bd4:	701c      	strb	r4, [r3, #0]
 8004bd6:	b01a      	add	sp, #104	@ 0x68
 8004bd8:	bd10      	pop	{r4, pc}
 8004bda:	bf00      	nop
 8004bdc:	ffff0208 	.word	0xffff0208

08004be0 <vsiprintf>:
 8004be0:	4613      	mov	r3, r2
 8004be2:	460a      	mov	r2, r1
 8004be4:	4601      	mov	r1, r0
 8004be6:	4802      	ldr	r0, [pc, #8]	@ (8004bf0 <vsiprintf+0x10>)
 8004be8:	6800      	ldr	r0, [r0, #0]
 8004bea:	f7ff bfe3 	b.w	8004bb4 <_vsiprintf_r>
 8004bee:	bf00      	nop
 8004bf0:	20000038 	.word	0x20000038

08004bf4 <memset>:
 8004bf4:	4402      	add	r2, r0
 8004bf6:	4603      	mov	r3, r0
 8004bf8:	4293      	cmp	r3, r2
 8004bfa:	d100      	bne.n	8004bfe <memset+0xa>
 8004bfc:	4770      	bx	lr
 8004bfe:	f803 1b01 	strb.w	r1, [r3], #1
 8004c02:	e7f9      	b.n	8004bf8 <memset+0x4>

08004c04 <__errno>:
 8004c04:	4b01      	ldr	r3, [pc, #4]	@ (8004c0c <__errno+0x8>)
 8004c06:	6818      	ldr	r0, [r3, #0]
 8004c08:	4770      	bx	lr
 8004c0a:	bf00      	nop
 8004c0c:	20000038 	.word	0x20000038

08004c10 <__libc_init_array>:
 8004c10:	b570      	push	{r4, r5, r6, lr}
 8004c12:	4d0d      	ldr	r5, [pc, #52]	@ (8004c48 <__libc_init_array+0x38>)
 8004c14:	4c0d      	ldr	r4, [pc, #52]	@ (8004c4c <__libc_init_array+0x3c>)
 8004c16:	1b64      	subs	r4, r4, r5
 8004c18:	10a4      	asrs	r4, r4, #2
 8004c1a:	2600      	movs	r6, #0
 8004c1c:	42a6      	cmp	r6, r4
 8004c1e:	d109      	bne.n	8004c34 <__libc_init_array+0x24>
 8004c20:	4d0b      	ldr	r5, [pc, #44]	@ (8004c50 <__libc_init_array+0x40>)
 8004c22:	4c0c      	ldr	r4, [pc, #48]	@ (8004c54 <__libc_init_array+0x44>)
 8004c24:	f000 fc64 	bl	80054f0 <_init>
 8004c28:	1b64      	subs	r4, r4, r5
 8004c2a:	10a4      	asrs	r4, r4, #2
 8004c2c:	2600      	movs	r6, #0
 8004c2e:	42a6      	cmp	r6, r4
 8004c30:	d105      	bne.n	8004c3e <__libc_init_array+0x2e>
 8004c32:	bd70      	pop	{r4, r5, r6, pc}
 8004c34:	f855 3b04 	ldr.w	r3, [r5], #4
 8004c38:	4798      	blx	r3
 8004c3a:	3601      	adds	r6, #1
 8004c3c:	e7ee      	b.n	8004c1c <__libc_init_array+0xc>
 8004c3e:	f855 3b04 	ldr.w	r3, [r5], #4
 8004c42:	4798      	blx	r3
 8004c44:	3601      	adds	r6, #1
 8004c46:	e7f2      	b.n	8004c2e <__libc_init_array+0x1e>
 8004c48:	08005a18 	.word	0x08005a18
 8004c4c:	08005a18 	.word	0x08005a18
 8004c50:	08005a18 	.word	0x08005a18
 8004c54:	08005a1c 	.word	0x08005a1c

08004c58 <__retarget_lock_acquire_recursive>:
 8004c58:	4770      	bx	lr

08004c5a <__retarget_lock_release_recursive>:
 8004c5a:	4770      	bx	lr

08004c5c <_free_r>:
 8004c5c:	b538      	push	{r3, r4, r5, lr}
 8004c5e:	4605      	mov	r5, r0
 8004c60:	2900      	cmp	r1, #0
 8004c62:	d041      	beq.n	8004ce8 <_free_r+0x8c>
 8004c64:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8004c68:	1f0c      	subs	r4, r1, #4
 8004c6a:	2b00      	cmp	r3, #0
 8004c6c:	bfb8      	it	lt
 8004c6e:	18e4      	addlt	r4, r4, r3
 8004c70:	f000 f8e0 	bl	8004e34 <__malloc_lock>
 8004c74:	4a1d      	ldr	r2, [pc, #116]	@ (8004cec <_free_r+0x90>)
 8004c76:	6813      	ldr	r3, [r2, #0]
 8004c78:	b933      	cbnz	r3, 8004c88 <_free_r+0x2c>
 8004c7a:	6063      	str	r3, [r4, #4]
 8004c7c:	6014      	str	r4, [r2, #0]
 8004c7e:	4628      	mov	r0, r5
 8004c80:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004c84:	f000 b8dc 	b.w	8004e40 <__malloc_unlock>
 8004c88:	42a3      	cmp	r3, r4
 8004c8a:	d908      	bls.n	8004c9e <_free_r+0x42>
 8004c8c:	6820      	ldr	r0, [r4, #0]
 8004c8e:	1821      	adds	r1, r4, r0
 8004c90:	428b      	cmp	r3, r1
 8004c92:	bf01      	itttt	eq
 8004c94:	6819      	ldreq	r1, [r3, #0]
 8004c96:	685b      	ldreq	r3, [r3, #4]
 8004c98:	1809      	addeq	r1, r1, r0
 8004c9a:	6021      	streq	r1, [r4, #0]
 8004c9c:	e7ed      	b.n	8004c7a <_free_r+0x1e>
 8004c9e:	461a      	mov	r2, r3
 8004ca0:	685b      	ldr	r3, [r3, #4]
 8004ca2:	b10b      	cbz	r3, 8004ca8 <_free_r+0x4c>
 8004ca4:	42a3      	cmp	r3, r4
 8004ca6:	d9fa      	bls.n	8004c9e <_free_r+0x42>
 8004ca8:	6811      	ldr	r1, [r2, #0]
 8004caa:	1850      	adds	r0, r2, r1
 8004cac:	42a0      	cmp	r0, r4
 8004cae:	d10b      	bne.n	8004cc8 <_free_r+0x6c>
 8004cb0:	6820      	ldr	r0, [r4, #0]
 8004cb2:	4401      	add	r1, r0
 8004cb4:	1850      	adds	r0, r2, r1
 8004cb6:	4283      	cmp	r3, r0
 8004cb8:	6011      	str	r1, [r2, #0]
 8004cba:	d1e0      	bne.n	8004c7e <_free_r+0x22>
 8004cbc:	6818      	ldr	r0, [r3, #0]
 8004cbe:	685b      	ldr	r3, [r3, #4]
 8004cc0:	6053      	str	r3, [r2, #4]
 8004cc2:	4408      	add	r0, r1
 8004cc4:	6010      	str	r0, [r2, #0]
 8004cc6:	e7da      	b.n	8004c7e <_free_r+0x22>
 8004cc8:	d902      	bls.n	8004cd0 <_free_r+0x74>
 8004cca:	230c      	movs	r3, #12
 8004ccc:	602b      	str	r3, [r5, #0]
 8004cce:	e7d6      	b.n	8004c7e <_free_r+0x22>
 8004cd0:	6820      	ldr	r0, [r4, #0]
 8004cd2:	1821      	adds	r1, r4, r0
 8004cd4:	428b      	cmp	r3, r1
 8004cd6:	bf04      	itt	eq
 8004cd8:	6819      	ldreq	r1, [r3, #0]
 8004cda:	685b      	ldreq	r3, [r3, #4]
 8004cdc:	6063      	str	r3, [r4, #4]
 8004cde:	bf04      	itt	eq
 8004ce0:	1809      	addeq	r1, r1, r0
 8004ce2:	6021      	streq	r1, [r4, #0]
 8004ce4:	6054      	str	r4, [r2, #4]
 8004ce6:	e7ca      	b.n	8004c7e <_free_r+0x22>
 8004ce8:	bd38      	pop	{r3, r4, r5, pc}
 8004cea:	bf00      	nop
 8004cec:	200003f0 	.word	0x200003f0

08004cf0 <sbrk_aligned>:
 8004cf0:	b570      	push	{r4, r5, r6, lr}
 8004cf2:	4e0f      	ldr	r6, [pc, #60]	@ (8004d30 <sbrk_aligned+0x40>)
 8004cf4:	460c      	mov	r4, r1
 8004cf6:	6831      	ldr	r1, [r6, #0]
 8004cf8:	4605      	mov	r5, r0
 8004cfa:	b911      	cbnz	r1, 8004d02 <sbrk_aligned+0x12>
 8004cfc:	f000 fba4 	bl	8005448 <_sbrk_r>
 8004d00:	6030      	str	r0, [r6, #0]
 8004d02:	4621      	mov	r1, r4
 8004d04:	4628      	mov	r0, r5
 8004d06:	f000 fb9f 	bl	8005448 <_sbrk_r>
 8004d0a:	1c43      	adds	r3, r0, #1
 8004d0c:	d103      	bne.n	8004d16 <sbrk_aligned+0x26>
 8004d0e:	f04f 34ff 	mov.w	r4, #4294967295
 8004d12:	4620      	mov	r0, r4
 8004d14:	bd70      	pop	{r4, r5, r6, pc}
 8004d16:	1cc4      	adds	r4, r0, #3
 8004d18:	f024 0403 	bic.w	r4, r4, #3
 8004d1c:	42a0      	cmp	r0, r4
 8004d1e:	d0f8      	beq.n	8004d12 <sbrk_aligned+0x22>
 8004d20:	1a21      	subs	r1, r4, r0
 8004d22:	4628      	mov	r0, r5
 8004d24:	f000 fb90 	bl	8005448 <_sbrk_r>
 8004d28:	3001      	adds	r0, #1
 8004d2a:	d1f2      	bne.n	8004d12 <sbrk_aligned+0x22>
 8004d2c:	e7ef      	b.n	8004d0e <sbrk_aligned+0x1e>
 8004d2e:	bf00      	nop
 8004d30:	200003ec 	.word	0x200003ec

08004d34 <_malloc_r>:
 8004d34:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004d38:	1ccd      	adds	r5, r1, #3
 8004d3a:	f025 0503 	bic.w	r5, r5, #3
 8004d3e:	3508      	adds	r5, #8
 8004d40:	2d0c      	cmp	r5, #12
 8004d42:	bf38      	it	cc
 8004d44:	250c      	movcc	r5, #12
 8004d46:	2d00      	cmp	r5, #0
 8004d48:	4606      	mov	r6, r0
 8004d4a:	db01      	blt.n	8004d50 <_malloc_r+0x1c>
 8004d4c:	42a9      	cmp	r1, r5
 8004d4e:	d904      	bls.n	8004d5a <_malloc_r+0x26>
 8004d50:	230c      	movs	r3, #12
 8004d52:	6033      	str	r3, [r6, #0]
 8004d54:	2000      	movs	r0, #0
 8004d56:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004d5a:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8004e30 <_malloc_r+0xfc>
 8004d5e:	f000 f869 	bl	8004e34 <__malloc_lock>
 8004d62:	f8d8 3000 	ldr.w	r3, [r8]
 8004d66:	461c      	mov	r4, r3
 8004d68:	bb44      	cbnz	r4, 8004dbc <_malloc_r+0x88>
 8004d6a:	4629      	mov	r1, r5
 8004d6c:	4630      	mov	r0, r6
 8004d6e:	f7ff ffbf 	bl	8004cf0 <sbrk_aligned>
 8004d72:	1c43      	adds	r3, r0, #1
 8004d74:	4604      	mov	r4, r0
 8004d76:	d158      	bne.n	8004e2a <_malloc_r+0xf6>
 8004d78:	f8d8 4000 	ldr.w	r4, [r8]
 8004d7c:	4627      	mov	r7, r4
 8004d7e:	2f00      	cmp	r7, #0
 8004d80:	d143      	bne.n	8004e0a <_malloc_r+0xd6>
 8004d82:	2c00      	cmp	r4, #0
 8004d84:	d04b      	beq.n	8004e1e <_malloc_r+0xea>
 8004d86:	6823      	ldr	r3, [r4, #0]
 8004d88:	4639      	mov	r1, r7
 8004d8a:	4630      	mov	r0, r6
 8004d8c:	eb04 0903 	add.w	r9, r4, r3
 8004d90:	f000 fb5a 	bl	8005448 <_sbrk_r>
 8004d94:	4581      	cmp	r9, r0
 8004d96:	d142      	bne.n	8004e1e <_malloc_r+0xea>
 8004d98:	6821      	ldr	r1, [r4, #0]
 8004d9a:	1a6d      	subs	r5, r5, r1
 8004d9c:	4629      	mov	r1, r5
 8004d9e:	4630      	mov	r0, r6
 8004da0:	f7ff ffa6 	bl	8004cf0 <sbrk_aligned>
 8004da4:	3001      	adds	r0, #1
 8004da6:	d03a      	beq.n	8004e1e <_malloc_r+0xea>
 8004da8:	6823      	ldr	r3, [r4, #0]
 8004daa:	442b      	add	r3, r5
 8004dac:	6023      	str	r3, [r4, #0]
 8004dae:	f8d8 3000 	ldr.w	r3, [r8]
 8004db2:	685a      	ldr	r2, [r3, #4]
 8004db4:	bb62      	cbnz	r2, 8004e10 <_malloc_r+0xdc>
 8004db6:	f8c8 7000 	str.w	r7, [r8]
 8004dba:	e00f      	b.n	8004ddc <_malloc_r+0xa8>
 8004dbc:	6822      	ldr	r2, [r4, #0]
 8004dbe:	1b52      	subs	r2, r2, r5
 8004dc0:	d420      	bmi.n	8004e04 <_malloc_r+0xd0>
 8004dc2:	2a0b      	cmp	r2, #11
 8004dc4:	d917      	bls.n	8004df6 <_malloc_r+0xc2>
 8004dc6:	1961      	adds	r1, r4, r5
 8004dc8:	42a3      	cmp	r3, r4
 8004dca:	6025      	str	r5, [r4, #0]
 8004dcc:	bf18      	it	ne
 8004dce:	6059      	strne	r1, [r3, #4]
 8004dd0:	6863      	ldr	r3, [r4, #4]
 8004dd2:	bf08      	it	eq
 8004dd4:	f8c8 1000 	streq.w	r1, [r8]
 8004dd8:	5162      	str	r2, [r4, r5]
 8004dda:	604b      	str	r3, [r1, #4]
 8004ddc:	4630      	mov	r0, r6
 8004dde:	f000 f82f 	bl	8004e40 <__malloc_unlock>
 8004de2:	f104 000b 	add.w	r0, r4, #11
 8004de6:	1d23      	adds	r3, r4, #4
 8004de8:	f020 0007 	bic.w	r0, r0, #7
 8004dec:	1ac2      	subs	r2, r0, r3
 8004dee:	bf1c      	itt	ne
 8004df0:	1a1b      	subne	r3, r3, r0
 8004df2:	50a3      	strne	r3, [r4, r2]
 8004df4:	e7af      	b.n	8004d56 <_malloc_r+0x22>
 8004df6:	6862      	ldr	r2, [r4, #4]
 8004df8:	42a3      	cmp	r3, r4
 8004dfa:	bf0c      	ite	eq
 8004dfc:	f8c8 2000 	streq.w	r2, [r8]
 8004e00:	605a      	strne	r2, [r3, #4]
 8004e02:	e7eb      	b.n	8004ddc <_malloc_r+0xa8>
 8004e04:	4623      	mov	r3, r4
 8004e06:	6864      	ldr	r4, [r4, #4]
 8004e08:	e7ae      	b.n	8004d68 <_malloc_r+0x34>
 8004e0a:	463c      	mov	r4, r7
 8004e0c:	687f      	ldr	r7, [r7, #4]
 8004e0e:	e7b6      	b.n	8004d7e <_malloc_r+0x4a>
 8004e10:	461a      	mov	r2, r3
 8004e12:	685b      	ldr	r3, [r3, #4]
 8004e14:	42a3      	cmp	r3, r4
 8004e16:	d1fb      	bne.n	8004e10 <_malloc_r+0xdc>
 8004e18:	2300      	movs	r3, #0
 8004e1a:	6053      	str	r3, [r2, #4]
 8004e1c:	e7de      	b.n	8004ddc <_malloc_r+0xa8>
 8004e1e:	230c      	movs	r3, #12
 8004e20:	6033      	str	r3, [r6, #0]
 8004e22:	4630      	mov	r0, r6
 8004e24:	f000 f80c 	bl	8004e40 <__malloc_unlock>
 8004e28:	e794      	b.n	8004d54 <_malloc_r+0x20>
 8004e2a:	6005      	str	r5, [r0, #0]
 8004e2c:	e7d6      	b.n	8004ddc <_malloc_r+0xa8>
 8004e2e:	bf00      	nop
 8004e30:	200003f0 	.word	0x200003f0

08004e34 <__malloc_lock>:
 8004e34:	4801      	ldr	r0, [pc, #4]	@ (8004e3c <__malloc_lock+0x8>)
 8004e36:	f7ff bf0f 	b.w	8004c58 <__retarget_lock_acquire_recursive>
 8004e3a:	bf00      	nop
 8004e3c:	200003e8 	.word	0x200003e8

08004e40 <__malloc_unlock>:
 8004e40:	4801      	ldr	r0, [pc, #4]	@ (8004e48 <__malloc_unlock+0x8>)
 8004e42:	f7ff bf0a 	b.w	8004c5a <__retarget_lock_release_recursive>
 8004e46:	bf00      	nop
 8004e48:	200003e8 	.word	0x200003e8

08004e4c <__ssputs_r>:
 8004e4c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004e50:	688e      	ldr	r6, [r1, #8]
 8004e52:	461f      	mov	r7, r3
 8004e54:	42be      	cmp	r6, r7
 8004e56:	680b      	ldr	r3, [r1, #0]
 8004e58:	4682      	mov	sl, r0
 8004e5a:	460c      	mov	r4, r1
 8004e5c:	4690      	mov	r8, r2
 8004e5e:	d82d      	bhi.n	8004ebc <__ssputs_r+0x70>
 8004e60:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8004e64:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 8004e68:	d026      	beq.n	8004eb8 <__ssputs_r+0x6c>
 8004e6a:	6965      	ldr	r5, [r4, #20]
 8004e6c:	6909      	ldr	r1, [r1, #16]
 8004e6e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8004e72:	eba3 0901 	sub.w	r9, r3, r1
 8004e76:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8004e7a:	1c7b      	adds	r3, r7, #1
 8004e7c:	444b      	add	r3, r9
 8004e7e:	106d      	asrs	r5, r5, #1
 8004e80:	429d      	cmp	r5, r3
 8004e82:	bf38      	it	cc
 8004e84:	461d      	movcc	r5, r3
 8004e86:	0553      	lsls	r3, r2, #21
 8004e88:	d527      	bpl.n	8004eda <__ssputs_r+0x8e>
 8004e8a:	4629      	mov	r1, r5
 8004e8c:	f7ff ff52 	bl	8004d34 <_malloc_r>
 8004e90:	4606      	mov	r6, r0
 8004e92:	b360      	cbz	r0, 8004eee <__ssputs_r+0xa2>
 8004e94:	6921      	ldr	r1, [r4, #16]
 8004e96:	464a      	mov	r2, r9
 8004e98:	f000 fae6 	bl	8005468 <memcpy>
 8004e9c:	89a3      	ldrh	r3, [r4, #12]
 8004e9e:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 8004ea2:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8004ea6:	81a3      	strh	r3, [r4, #12]
 8004ea8:	6126      	str	r6, [r4, #16]
 8004eaa:	6165      	str	r5, [r4, #20]
 8004eac:	444e      	add	r6, r9
 8004eae:	eba5 0509 	sub.w	r5, r5, r9
 8004eb2:	6026      	str	r6, [r4, #0]
 8004eb4:	60a5      	str	r5, [r4, #8]
 8004eb6:	463e      	mov	r6, r7
 8004eb8:	42be      	cmp	r6, r7
 8004eba:	d900      	bls.n	8004ebe <__ssputs_r+0x72>
 8004ebc:	463e      	mov	r6, r7
 8004ebe:	6820      	ldr	r0, [r4, #0]
 8004ec0:	4632      	mov	r2, r6
 8004ec2:	4641      	mov	r1, r8
 8004ec4:	f000 faa6 	bl	8005414 <memmove>
 8004ec8:	68a3      	ldr	r3, [r4, #8]
 8004eca:	1b9b      	subs	r3, r3, r6
 8004ecc:	60a3      	str	r3, [r4, #8]
 8004ece:	6823      	ldr	r3, [r4, #0]
 8004ed0:	4433      	add	r3, r6
 8004ed2:	6023      	str	r3, [r4, #0]
 8004ed4:	2000      	movs	r0, #0
 8004ed6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004eda:	462a      	mov	r2, r5
 8004edc:	f000 fad2 	bl	8005484 <_realloc_r>
 8004ee0:	4606      	mov	r6, r0
 8004ee2:	2800      	cmp	r0, #0
 8004ee4:	d1e0      	bne.n	8004ea8 <__ssputs_r+0x5c>
 8004ee6:	6921      	ldr	r1, [r4, #16]
 8004ee8:	4650      	mov	r0, sl
 8004eea:	f7ff feb7 	bl	8004c5c <_free_r>
 8004eee:	230c      	movs	r3, #12
 8004ef0:	f8ca 3000 	str.w	r3, [sl]
 8004ef4:	89a3      	ldrh	r3, [r4, #12]
 8004ef6:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8004efa:	81a3      	strh	r3, [r4, #12]
 8004efc:	f04f 30ff 	mov.w	r0, #4294967295
 8004f00:	e7e9      	b.n	8004ed6 <__ssputs_r+0x8a>
	...

08004f04 <_svfiprintf_r>:
 8004f04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004f08:	4698      	mov	r8, r3
 8004f0a:	898b      	ldrh	r3, [r1, #12]
 8004f0c:	061b      	lsls	r3, r3, #24
 8004f0e:	b09d      	sub	sp, #116	@ 0x74
 8004f10:	4607      	mov	r7, r0
 8004f12:	460d      	mov	r5, r1
 8004f14:	4614      	mov	r4, r2
 8004f16:	d510      	bpl.n	8004f3a <_svfiprintf_r+0x36>
 8004f18:	690b      	ldr	r3, [r1, #16]
 8004f1a:	b973      	cbnz	r3, 8004f3a <_svfiprintf_r+0x36>
 8004f1c:	2140      	movs	r1, #64	@ 0x40
 8004f1e:	f7ff ff09 	bl	8004d34 <_malloc_r>
 8004f22:	6028      	str	r0, [r5, #0]
 8004f24:	6128      	str	r0, [r5, #16]
 8004f26:	b930      	cbnz	r0, 8004f36 <_svfiprintf_r+0x32>
 8004f28:	230c      	movs	r3, #12
 8004f2a:	603b      	str	r3, [r7, #0]
 8004f2c:	f04f 30ff 	mov.w	r0, #4294967295
 8004f30:	b01d      	add	sp, #116	@ 0x74
 8004f32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004f36:	2340      	movs	r3, #64	@ 0x40
 8004f38:	616b      	str	r3, [r5, #20]
 8004f3a:	2300      	movs	r3, #0
 8004f3c:	9309      	str	r3, [sp, #36]	@ 0x24
 8004f3e:	2320      	movs	r3, #32
 8004f40:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8004f44:	f8cd 800c 	str.w	r8, [sp, #12]
 8004f48:	2330      	movs	r3, #48	@ 0x30
 8004f4a:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 80050e8 <_svfiprintf_r+0x1e4>
 8004f4e:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8004f52:	f04f 0901 	mov.w	r9, #1
 8004f56:	4623      	mov	r3, r4
 8004f58:	469a      	mov	sl, r3
 8004f5a:	f813 2b01 	ldrb.w	r2, [r3], #1
 8004f5e:	b10a      	cbz	r2, 8004f64 <_svfiprintf_r+0x60>
 8004f60:	2a25      	cmp	r2, #37	@ 0x25
 8004f62:	d1f9      	bne.n	8004f58 <_svfiprintf_r+0x54>
 8004f64:	ebba 0b04 	subs.w	fp, sl, r4
 8004f68:	d00b      	beq.n	8004f82 <_svfiprintf_r+0x7e>
 8004f6a:	465b      	mov	r3, fp
 8004f6c:	4622      	mov	r2, r4
 8004f6e:	4629      	mov	r1, r5
 8004f70:	4638      	mov	r0, r7
 8004f72:	f7ff ff6b 	bl	8004e4c <__ssputs_r>
 8004f76:	3001      	adds	r0, #1
 8004f78:	f000 80a7 	beq.w	80050ca <_svfiprintf_r+0x1c6>
 8004f7c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8004f7e:	445a      	add	r2, fp
 8004f80:	9209      	str	r2, [sp, #36]	@ 0x24
 8004f82:	f89a 3000 	ldrb.w	r3, [sl]
 8004f86:	2b00      	cmp	r3, #0
 8004f88:	f000 809f 	beq.w	80050ca <_svfiprintf_r+0x1c6>
 8004f8c:	2300      	movs	r3, #0
 8004f8e:	f04f 32ff 	mov.w	r2, #4294967295
 8004f92:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8004f96:	f10a 0a01 	add.w	sl, sl, #1
 8004f9a:	9304      	str	r3, [sp, #16]
 8004f9c:	9307      	str	r3, [sp, #28]
 8004f9e:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8004fa2:	931a      	str	r3, [sp, #104]	@ 0x68
 8004fa4:	4654      	mov	r4, sl
 8004fa6:	2205      	movs	r2, #5
 8004fa8:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004fac:	484e      	ldr	r0, [pc, #312]	@ (80050e8 <_svfiprintf_r+0x1e4>)
 8004fae:	f7fb f927 	bl	8000200 <memchr>
 8004fb2:	9a04      	ldr	r2, [sp, #16]
 8004fb4:	b9d8      	cbnz	r0, 8004fee <_svfiprintf_r+0xea>
 8004fb6:	06d0      	lsls	r0, r2, #27
 8004fb8:	bf44      	itt	mi
 8004fba:	2320      	movmi	r3, #32
 8004fbc:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8004fc0:	0711      	lsls	r1, r2, #28
 8004fc2:	bf44      	itt	mi
 8004fc4:	232b      	movmi	r3, #43	@ 0x2b
 8004fc6:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8004fca:	f89a 3000 	ldrb.w	r3, [sl]
 8004fce:	2b2a      	cmp	r3, #42	@ 0x2a
 8004fd0:	d015      	beq.n	8004ffe <_svfiprintf_r+0xfa>
 8004fd2:	9a07      	ldr	r2, [sp, #28]
 8004fd4:	4654      	mov	r4, sl
 8004fd6:	2000      	movs	r0, #0
 8004fd8:	f04f 0c0a 	mov.w	ip, #10
 8004fdc:	4621      	mov	r1, r4
 8004fde:	f811 3b01 	ldrb.w	r3, [r1], #1
 8004fe2:	3b30      	subs	r3, #48	@ 0x30
 8004fe4:	2b09      	cmp	r3, #9
 8004fe6:	d94b      	bls.n	8005080 <_svfiprintf_r+0x17c>
 8004fe8:	b1b0      	cbz	r0, 8005018 <_svfiprintf_r+0x114>
 8004fea:	9207      	str	r2, [sp, #28]
 8004fec:	e014      	b.n	8005018 <_svfiprintf_r+0x114>
 8004fee:	eba0 0308 	sub.w	r3, r0, r8
 8004ff2:	fa09 f303 	lsl.w	r3, r9, r3
 8004ff6:	4313      	orrs	r3, r2
 8004ff8:	9304      	str	r3, [sp, #16]
 8004ffa:	46a2      	mov	sl, r4
 8004ffc:	e7d2      	b.n	8004fa4 <_svfiprintf_r+0xa0>
 8004ffe:	9b03      	ldr	r3, [sp, #12]
 8005000:	1d19      	adds	r1, r3, #4
 8005002:	681b      	ldr	r3, [r3, #0]
 8005004:	9103      	str	r1, [sp, #12]
 8005006:	2b00      	cmp	r3, #0
 8005008:	bfbb      	ittet	lt
 800500a:	425b      	neglt	r3, r3
 800500c:	f042 0202 	orrlt.w	r2, r2, #2
 8005010:	9307      	strge	r3, [sp, #28]
 8005012:	9307      	strlt	r3, [sp, #28]
 8005014:	bfb8      	it	lt
 8005016:	9204      	strlt	r2, [sp, #16]
 8005018:	7823      	ldrb	r3, [r4, #0]
 800501a:	2b2e      	cmp	r3, #46	@ 0x2e
 800501c:	d10a      	bne.n	8005034 <_svfiprintf_r+0x130>
 800501e:	7863      	ldrb	r3, [r4, #1]
 8005020:	2b2a      	cmp	r3, #42	@ 0x2a
 8005022:	d132      	bne.n	800508a <_svfiprintf_r+0x186>
 8005024:	9b03      	ldr	r3, [sp, #12]
 8005026:	1d1a      	adds	r2, r3, #4
 8005028:	681b      	ldr	r3, [r3, #0]
 800502a:	9203      	str	r2, [sp, #12]
 800502c:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8005030:	3402      	adds	r4, #2
 8005032:	9305      	str	r3, [sp, #20]
 8005034:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 80050f8 <_svfiprintf_r+0x1f4>
 8005038:	7821      	ldrb	r1, [r4, #0]
 800503a:	2203      	movs	r2, #3
 800503c:	4650      	mov	r0, sl
 800503e:	f7fb f8df 	bl	8000200 <memchr>
 8005042:	b138      	cbz	r0, 8005054 <_svfiprintf_r+0x150>
 8005044:	9b04      	ldr	r3, [sp, #16]
 8005046:	eba0 000a 	sub.w	r0, r0, sl
 800504a:	2240      	movs	r2, #64	@ 0x40
 800504c:	4082      	lsls	r2, r0
 800504e:	4313      	orrs	r3, r2
 8005050:	3401      	adds	r4, #1
 8005052:	9304      	str	r3, [sp, #16]
 8005054:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005058:	4824      	ldr	r0, [pc, #144]	@ (80050ec <_svfiprintf_r+0x1e8>)
 800505a:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 800505e:	2206      	movs	r2, #6
 8005060:	f7fb f8ce 	bl	8000200 <memchr>
 8005064:	2800      	cmp	r0, #0
 8005066:	d036      	beq.n	80050d6 <_svfiprintf_r+0x1d2>
 8005068:	4b21      	ldr	r3, [pc, #132]	@ (80050f0 <_svfiprintf_r+0x1ec>)
 800506a:	bb1b      	cbnz	r3, 80050b4 <_svfiprintf_r+0x1b0>
 800506c:	9b03      	ldr	r3, [sp, #12]
 800506e:	3307      	adds	r3, #7
 8005070:	f023 0307 	bic.w	r3, r3, #7
 8005074:	3308      	adds	r3, #8
 8005076:	9303      	str	r3, [sp, #12]
 8005078:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800507a:	4433      	add	r3, r6
 800507c:	9309      	str	r3, [sp, #36]	@ 0x24
 800507e:	e76a      	b.n	8004f56 <_svfiprintf_r+0x52>
 8005080:	fb0c 3202 	mla	r2, ip, r2, r3
 8005084:	460c      	mov	r4, r1
 8005086:	2001      	movs	r0, #1
 8005088:	e7a8      	b.n	8004fdc <_svfiprintf_r+0xd8>
 800508a:	2300      	movs	r3, #0
 800508c:	3401      	adds	r4, #1
 800508e:	9305      	str	r3, [sp, #20]
 8005090:	4619      	mov	r1, r3
 8005092:	f04f 0c0a 	mov.w	ip, #10
 8005096:	4620      	mov	r0, r4
 8005098:	f810 2b01 	ldrb.w	r2, [r0], #1
 800509c:	3a30      	subs	r2, #48	@ 0x30
 800509e:	2a09      	cmp	r2, #9
 80050a0:	d903      	bls.n	80050aa <_svfiprintf_r+0x1a6>
 80050a2:	2b00      	cmp	r3, #0
 80050a4:	d0c6      	beq.n	8005034 <_svfiprintf_r+0x130>
 80050a6:	9105      	str	r1, [sp, #20]
 80050a8:	e7c4      	b.n	8005034 <_svfiprintf_r+0x130>
 80050aa:	fb0c 2101 	mla	r1, ip, r1, r2
 80050ae:	4604      	mov	r4, r0
 80050b0:	2301      	movs	r3, #1
 80050b2:	e7f0      	b.n	8005096 <_svfiprintf_r+0x192>
 80050b4:	ab03      	add	r3, sp, #12
 80050b6:	9300      	str	r3, [sp, #0]
 80050b8:	462a      	mov	r2, r5
 80050ba:	4b0e      	ldr	r3, [pc, #56]	@ (80050f4 <_svfiprintf_r+0x1f0>)
 80050bc:	a904      	add	r1, sp, #16
 80050be:	4638      	mov	r0, r7
 80050c0:	f3af 8000 	nop.w
 80050c4:	1c42      	adds	r2, r0, #1
 80050c6:	4606      	mov	r6, r0
 80050c8:	d1d6      	bne.n	8005078 <_svfiprintf_r+0x174>
 80050ca:	89ab      	ldrh	r3, [r5, #12]
 80050cc:	065b      	lsls	r3, r3, #25
 80050ce:	f53f af2d 	bmi.w	8004f2c <_svfiprintf_r+0x28>
 80050d2:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80050d4:	e72c      	b.n	8004f30 <_svfiprintf_r+0x2c>
 80050d6:	ab03      	add	r3, sp, #12
 80050d8:	9300      	str	r3, [sp, #0]
 80050da:	462a      	mov	r2, r5
 80050dc:	4b05      	ldr	r3, [pc, #20]	@ (80050f4 <_svfiprintf_r+0x1f0>)
 80050de:	a904      	add	r1, sp, #16
 80050e0:	4638      	mov	r0, r7
 80050e2:	f000 f879 	bl	80051d8 <_printf_i>
 80050e6:	e7ed      	b.n	80050c4 <_svfiprintf_r+0x1c0>
 80050e8:	080059dc 	.word	0x080059dc
 80050ec:	080059e6 	.word	0x080059e6
 80050f0:	00000000 	.word	0x00000000
 80050f4:	08004e4d 	.word	0x08004e4d
 80050f8:	080059e2 	.word	0x080059e2

080050fc <_printf_common>:
 80050fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005100:	4616      	mov	r6, r2
 8005102:	4698      	mov	r8, r3
 8005104:	688a      	ldr	r2, [r1, #8]
 8005106:	690b      	ldr	r3, [r1, #16]
 8005108:	f8dd 9020 	ldr.w	r9, [sp, #32]
 800510c:	4293      	cmp	r3, r2
 800510e:	bfb8      	it	lt
 8005110:	4613      	movlt	r3, r2
 8005112:	6033      	str	r3, [r6, #0]
 8005114:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8005118:	4607      	mov	r7, r0
 800511a:	460c      	mov	r4, r1
 800511c:	b10a      	cbz	r2, 8005122 <_printf_common+0x26>
 800511e:	3301      	adds	r3, #1
 8005120:	6033      	str	r3, [r6, #0]
 8005122:	6823      	ldr	r3, [r4, #0]
 8005124:	0699      	lsls	r1, r3, #26
 8005126:	bf42      	ittt	mi
 8005128:	6833      	ldrmi	r3, [r6, #0]
 800512a:	3302      	addmi	r3, #2
 800512c:	6033      	strmi	r3, [r6, #0]
 800512e:	6825      	ldr	r5, [r4, #0]
 8005130:	f015 0506 	ands.w	r5, r5, #6
 8005134:	d106      	bne.n	8005144 <_printf_common+0x48>
 8005136:	f104 0a19 	add.w	sl, r4, #25
 800513a:	68e3      	ldr	r3, [r4, #12]
 800513c:	6832      	ldr	r2, [r6, #0]
 800513e:	1a9b      	subs	r3, r3, r2
 8005140:	42ab      	cmp	r3, r5
 8005142:	dc26      	bgt.n	8005192 <_printf_common+0x96>
 8005144:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8005148:	6822      	ldr	r2, [r4, #0]
 800514a:	3b00      	subs	r3, #0
 800514c:	bf18      	it	ne
 800514e:	2301      	movne	r3, #1
 8005150:	0692      	lsls	r2, r2, #26
 8005152:	d42b      	bmi.n	80051ac <_printf_common+0xb0>
 8005154:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8005158:	4641      	mov	r1, r8
 800515a:	4638      	mov	r0, r7
 800515c:	47c8      	blx	r9
 800515e:	3001      	adds	r0, #1
 8005160:	d01e      	beq.n	80051a0 <_printf_common+0xa4>
 8005162:	6823      	ldr	r3, [r4, #0]
 8005164:	6922      	ldr	r2, [r4, #16]
 8005166:	f003 0306 	and.w	r3, r3, #6
 800516a:	2b04      	cmp	r3, #4
 800516c:	bf02      	ittt	eq
 800516e:	68e5      	ldreq	r5, [r4, #12]
 8005170:	6833      	ldreq	r3, [r6, #0]
 8005172:	1aed      	subeq	r5, r5, r3
 8005174:	68a3      	ldr	r3, [r4, #8]
 8005176:	bf0c      	ite	eq
 8005178:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800517c:	2500      	movne	r5, #0
 800517e:	4293      	cmp	r3, r2
 8005180:	bfc4      	itt	gt
 8005182:	1a9b      	subgt	r3, r3, r2
 8005184:	18ed      	addgt	r5, r5, r3
 8005186:	2600      	movs	r6, #0
 8005188:	341a      	adds	r4, #26
 800518a:	42b5      	cmp	r5, r6
 800518c:	d11a      	bne.n	80051c4 <_printf_common+0xc8>
 800518e:	2000      	movs	r0, #0
 8005190:	e008      	b.n	80051a4 <_printf_common+0xa8>
 8005192:	2301      	movs	r3, #1
 8005194:	4652      	mov	r2, sl
 8005196:	4641      	mov	r1, r8
 8005198:	4638      	mov	r0, r7
 800519a:	47c8      	blx	r9
 800519c:	3001      	adds	r0, #1
 800519e:	d103      	bne.n	80051a8 <_printf_common+0xac>
 80051a0:	f04f 30ff 	mov.w	r0, #4294967295
 80051a4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80051a8:	3501      	adds	r5, #1
 80051aa:	e7c6      	b.n	800513a <_printf_common+0x3e>
 80051ac:	18e1      	adds	r1, r4, r3
 80051ae:	1c5a      	adds	r2, r3, #1
 80051b0:	2030      	movs	r0, #48	@ 0x30
 80051b2:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 80051b6:	4422      	add	r2, r4
 80051b8:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 80051bc:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 80051c0:	3302      	adds	r3, #2
 80051c2:	e7c7      	b.n	8005154 <_printf_common+0x58>
 80051c4:	2301      	movs	r3, #1
 80051c6:	4622      	mov	r2, r4
 80051c8:	4641      	mov	r1, r8
 80051ca:	4638      	mov	r0, r7
 80051cc:	47c8      	blx	r9
 80051ce:	3001      	adds	r0, #1
 80051d0:	d0e6      	beq.n	80051a0 <_printf_common+0xa4>
 80051d2:	3601      	adds	r6, #1
 80051d4:	e7d9      	b.n	800518a <_printf_common+0x8e>
	...

080051d8 <_printf_i>:
 80051d8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80051dc:	7e0f      	ldrb	r7, [r1, #24]
 80051de:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 80051e0:	2f78      	cmp	r7, #120	@ 0x78
 80051e2:	4691      	mov	r9, r2
 80051e4:	4680      	mov	r8, r0
 80051e6:	460c      	mov	r4, r1
 80051e8:	469a      	mov	sl, r3
 80051ea:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 80051ee:	d807      	bhi.n	8005200 <_printf_i+0x28>
 80051f0:	2f62      	cmp	r7, #98	@ 0x62
 80051f2:	d80a      	bhi.n	800520a <_printf_i+0x32>
 80051f4:	2f00      	cmp	r7, #0
 80051f6:	f000 80d1 	beq.w	800539c <_printf_i+0x1c4>
 80051fa:	2f58      	cmp	r7, #88	@ 0x58
 80051fc:	f000 80b8 	beq.w	8005370 <_printf_i+0x198>
 8005200:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8005204:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8005208:	e03a      	b.n	8005280 <_printf_i+0xa8>
 800520a:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 800520e:	2b15      	cmp	r3, #21
 8005210:	d8f6      	bhi.n	8005200 <_printf_i+0x28>
 8005212:	a101      	add	r1, pc, #4	@ (adr r1, 8005218 <_printf_i+0x40>)
 8005214:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8005218:	08005271 	.word	0x08005271
 800521c:	08005285 	.word	0x08005285
 8005220:	08005201 	.word	0x08005201
 8005224:	08005201 	.word	0x08005201
 8005228:	08005201 	.word	0x08005201
 800522c:	08005201 	.word	0x08005201
 8005230:	08005285 	.word	0x08005285
 8005234:	08005201 	.word	0x08005201
 8005238:	08005201 	.word	0x08005201
 800523c:	08005201 	.word	0x08005201
 8005240:	08005201 	.word	0x08005201
 8005244:	08005383 	.word	0x08005383
 8005248:	080052af 	.word	0x080052af
 800524c:	0800533d 	.word	0x0800533d
 8005250:	08005201 	.word	0x08005201
 8005254:	08005201 	.word	0x08005201
 8005258:	080053a5 	.word	0x080053a5
 800525c:	08005201 	.word	0x08005201
 8005260:	080052af 	.word	0x080052af
 8005264:	08005201 	.word	0x08005201
 8005268:	08005201 	.word	0x08005201
 800526c:	08005345 	.word	0x08005345
 8005270:	6833      	ldr	r3, [r6, #0]
 8005272:	1d1a      	adds	r2, r3, #4
 8005274:	681b      	ldr	r3, [r3, #0]
 8005276:	6032      	str	r2, [r6, #0]
 8005278:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 800527c:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8005280:	2301      	movs	r3, #1
 8005282:	e09c      	b.n	80053be <_printf_i+0x1e6>
 8005284:	6833      	ldr	r3, [r6, #0]
 8005286:	6820      	ldr	r0, [r4, #0]
 8005288:	1d19      	adds	r1, r3, #4
 800528a:	6031      	str	r1, [r6, #0]
 800528c:	0606      	lsls	r6, r0, #24
 800528e:	d501      	bpl.n	8005294 <_printf_i+0xbc>
 8005290:	681d      	ldr	r5, [r3, #0]
 8005292:	e003      	b.n	800529c <_printf_i+0xc4>
 8005294:	0645      	lsls	r5, r0, #25
 8005296:	d5fb      	bpl.n	8005290 <_printf_i+0xb8>
 8005298:	f9b3 5000 	ldrsh.w	r5, [r3]
 800529c:	2d00      	cmp	r5, #0
 800529e:	da03      	bge.n	80052a8 <_printf_i+0xd0>
 80052a0:	232d      	movs	r3, #45	@ 0x2d
 80052a2:	426d      	negs	r5, r5
 80052a4:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80052a8:	4858      	ldr	r0, [pc, #352]	@ (800540c <_printf_i+0x234>)
 80052aa:	230a      	movs	r3, #10
 80052ac:	e011      	b.n	80052d2 <_printf_i+0xfa>
 80052ae:	6821      	ldr	r1, [r4, #0]
 80052b0:	6833      	ldr	r3, [r6, #0]
 80052b2:	0608      	lsls	r0, r1, #24
 80052b4:	f853 5b04 	ldr.w	r5, [r3], #4
 80052b8:	d402      	bmi.n	80052c0 <_printf_i+0xe8>
 80052ba:	0649      	lsls	r1, r1, #25
 80052bc:	bf48      	it	mi
 80052be:	b2ad      	uxthmi	r5, r5
 80052c0:	2f6f      	cmp	r7, #111	@ 0x6f
 80052c2:	4852      	ldr	r0, [pc, #328]	@ (800540c <_printf_i+0x234>)
 80052c4:	6033      	str	r3, [r6, #0]
 80052c6:	bf14      	ite	ne
 80052c8:	230a      	movne	r3, #10
 80052ca:	2308      	moveq	r3, #8
 80052cc:	2100      	movs	r1, #0
 80052ce:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 80052d2:	6866      	ldr	r6, [r4, #4]
 80052d4:	60a6      	str	r6, [r4, #8]
 80052d6:	2e00      	cmp	r6, #0
 80052d8:	db05      	blt.n	80052e6 <_printf_i+0x10e>
 80052da:	6821      	ldr	r1, [r4, #0]
 80052dc:	432e      	orrs	r6, r5
 80052de:	f021 0104 	bic.w	r1, r1, #4
 80052e2:	6021      	str	r1, [r4, #0]
 80052e4:	d04b      	beq.n	800537e <_printf_i+0x1a6>
 80052e6:	4616      	mov	r6, r2
 80052e8:	fbb5 f1f3 	udiv	r1, r5, r3
 80052ec:	fb03 5711 	mls	r7, r3, r1, r5
 80052f0:	5dc7      	ldrb	r7, [r0, r7]
 80052f2:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80052f6:	462f      	mov	r7, r5
 80052f8:	42bb      	cmp	r3, r7
 80052fa:	460d      	mov	r5, r1
 80052fc:	d9f4      	bls.n	80052e8 <_printf_i+0x110>
 80052fe:	2b08      	cmp	r3, #8
 8005300:	d10b      	bne.n	800531a <_printf_i+0x142>
 8005302:	6823      	ldr	r3, [r4, #0]
 8005304:	07df      	lsls	r7, r3, #31
 8005306:	d508      	bpl.n	800531a <_printf_i+0x142>
 8005308:	6923      	ldr	r3, [r4, #16]
 800530a:	6861      	ldr	r1, [r4, #4]
 800530c:	4299      	cmp	r1, r3
 800530e:	bfde      	ittt	le
 8005310:	2330      	movle	r3, #48	@ 0x30
 8005312:	f806 3c01 	strble.w	r3, [r6, #-1]
 8005316:	f106 36ff 	addle.w	r6, r6, #4294967295
 800531a:	1b92      	subs	r2, r2, r6
 800531c:	6122      	str	r2, [r4, #16]
 800531e:	f8cd a000 	str.w	sl, [sp]
 8005322:	464b      	mov	r3, r9
 8005324:	aa03      	add	r2, sp, #12
 8005326:	4621      	mov	r1, r4
 8005328:	4640      	mov	r0, r8
 800532a:	f7ff fee7 	bl	80050fc <_printf_common>
 800532e:	3001      	adds	r0, #1
 8005330:	d14a      	bne.n	80053c8 <_printf_i+0x1f0>
 8005332:	f04f 30ff 	mov.w	r0, #4294967295
 8005336:	b004      	add	sp, #16
 8005338:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800533c:	6823      	ldr	r3, [r4, #0]
 800533e:	f043 0320 	orr.w	r3, r3, #32
 8005342:	6023      	str	r3, [r4, #0]
 8005344:	4832      	ldr	r0, [pc, #200]	@ (8005410 <_printf_i+0x238>)
 8005346:	2778      	movs	r7, #120	@ 0x78
 8005348:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 800534c:	6823      	ldr	r3, [r4, #0]
 800534e:	6831      	ldr	r1, [r6, #0]
 8005350:	061f      	lsls	r7, r3, #24
 8005352:	f851 5b04 	ldr.w	r5, [r1], #4
 8005356:	d402      	bmi.n	800535e <_printf_i+0x186>
 8005358:	065f      	lsls	r7, r3, #25
 800535a:	bf48      	it	mi
 800535c:	b2ad      	uxthmi	r5, r5
 800535e:	6031      	str	r1, [r6, #0]
 8005360:	07d9      	lsls	r1, r3, #31
 8005362:	bf44      	itt	mi
 8005364:	f043 0320 	orrmi.w	r3, r3, #32
 8005368:	6023      	strmi	r3, [r4, #0]
 800536a:	b11d      	cbz	r5, 8005374 <_printf_i+0x19c>
 800536c:	2310      	movs	r3, #16
 800536e:	e7ad      	b.n	80052cc <_printf_i+0xf4>
 8005370:	4826      	ldr	r0, [pc, #152]	@ (800540c <_printf_i+0x234>)
 8005372:	e7e9      	b.n	8005348 <_printf_i+0x170>
 8005374:	6823      	ldr	r3, [r4, #0]
 8005376:	f023 0320 	bic.w	r3, r3, #32
 800537a:	6023      	str	r3, [r4, #0]
 800537c:	e7f6      	b.n	800536c <_printf_i+0x194>
 800537e:	4616      	mov	r6, r2
 8005380:	e7bd      	b.n	80052fe <_printf_i+0x126>
 8005382:	6833      	ldr	r3, [r6, #0]
 8005384:	6825      	ldr	r5, [r4, #0]
 8005386:	6961      	ldr	r1, [r4, #20]
 8005388:	1d18      	adds	r0, r3, #4
 800538a:	6030      	str	r0, [r6, #0]
 800538c:	062e      	lsls	r6, r5, #24
 800538e:	681b      	ldr	r3, [r3, #0]
 8005390:	d501      	bpl.n	8005396 <_printf_i+0x1be>
 8005392:	6019      	str	r1, [r3, #0]
 8005394:	e002      	b.n	800539c <_printf_i+0x1c4>
 8005396:	0668      	lsls	r0, r5, #25
 8005398:	d5fb      	bpl.n	8005392 <_printf_i+0x1ba>
 800539a:	8019      	strh	r1, [r3, #0]
 800539c:	2300      	movs	r3, #0
 800539e:	6123      	str	r3, [r4, #16]
 80053a0:	4616      	mov	r6, r2
 80053a2:	e7bc      	b.n	800531e <_printf_i+0x146>
 80053a4:	6833      	ldr	r3, [r6, #0]
 80053a6:	1d1a      	adds	r2, r3, #4
 80053a8:	6032      	str	r2, [r6, #0]
 80053aa:	681e      	ldr	r6, [r3, #0]
 80053ac:	6862      	ldr	r2, [r4, #4]
 80053ae:	2100      	movs	r1, #0
 80053b0:	4630      	mov	r0, r6
 80053b2:	f7fa ff25 	bl	8000200 <memchr>
 80053b6:	b108      	cbz	r0, 80053bc <_printf_i+0x1e4>
 80053b8:	1b80      	subs	r0, r0, r6
 80053ba:	6060      	str	r0, [r4, #4]
 80053bc:	6863      	ldr	r3, [r4, #4]
 80053be:	6123      	str	r3, [r4, #16]
 80053c0:	2300      	movs	r3, #0
 80053c2:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80053c6:	e7aa      	b.n	800531e <_printf_i+0x146>
 80053c8:	6923      	ldr	r3, [r4, #16]
 80053ca:	4632      	mov	r2, r6
 80053cc:	4649      	mov	r1, r9
 80053ce:	4640      	mov	r0, r8
 80053d0:	47d0      	blx	sl
 80053d2:	3001      	adds	r0, #1
 80053d4:	d0ad      	beq.n	8005332 <_printf_i+0x15a>
 80053d6:	6823      	ldr	r3, [r4, #0]
 80053d8:	079b      	lsls	r3, r3, #30
 80053da:	d413      	bmi.n	8005404 <_printf_i+0x22c>
 80053dc:	68e0      	ldr	r0, [r4, #12]
 80053de:	9b03      	ldr	r3, [sp, #12]
 80053e0:	4298      	cmp	r0, r3
 80053e2:	bfb8      	it	lt
 80053e4:	4618      	movlt	r0, r3
 80053e6:	e7a6      	b.n	8005336 <_printf_i+0x15e>
 80053e8:	2301      	movs	r3, #1
 80053ea:	4632      	mov	r2, r6
 80053ec:	4649      	mov	r1, r9
 80053ee:	4640      	mov	r0, r8
 80053f0:	47d0      	blx	sl
 80053f2:	3001      	adds	r0, #1
 80053f4:	d09d      	beq.n	8005332 <_printf_i+0x15a>
 80053f6:	3501      	adds	r5, #1
 80053f8:	68e3      	ldr	r3, [r4, #12]
 80053fa:	9903      	ldr	r1, [sp, #12]
 80053fc:	1a5b      	subs	r3, r3, r1
 80053fe:	42ab      	cmp	r3, r5
 8005400:	dcf2      	bgt.n	80053e8 <_printf_i+0x210>
 8005402:	e7eb      	b.n	80053dc <_printf_i+0x204>
 8005404:	2500      	movs	r5, #0
 8005406:	f104 0619 	add.w	r6, r4, #25
 800540a:	e7f5      	b.n	80053f8 <_printf_i+0x220>
 800540c:	080059ed 	.word	0x080059ed
 8005410:	080059fe 	.word	0x080059fe

08005414 <memmove>:
 8005414:	4288      	cmp	r0, r1
 8005416:	b510      	push	{r4, lr}
 8005418:	eb01 0402 	add.w	r4, r1, r2
 800541c:	d902      	bls.n	8005424 <memmove+0x10>
 800541e:	4284      	cmp	r4, r0
 8005420:	4623      	mov	r3, r4
 8005422:	d807      	bhi.n	8005434 <memmove+0x20>
 8005424:	1e43      	subs	r3, r0, #1
 8005426:	42a1      	cmp	r1, r4
 8005428:	d008      	beq.n	800543c <memmove+0x28>
 800542a:	f811 2b01 	ldrb.w	r2, [r1], #1
 800542e:	f803 2f01 	strb.w	r2, [r3, #1]!
 8005432:	e7f8      	b.n	8005426 <memmove+0x12>
 8005434:	4402      	add	r2, r0
 8005436:	4601      	mov	r1, r0
 8005438:	428a      	cmp	r2, r1
 800543a:	d100      	bne.n	800543e <memmove+0x2a>
 800543c:	bd10      	pop	{r4, pc}
 800543e:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8005442:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8005446:	e7f7      	b.n	8005438 <memmove+0x24>

08005448 <_sbrk_r>:
 8005448:	b538      	push	{r3, r4, r5, lr}
 800544a:	4d06      	ldr	r5, [pc, #24]	@ (8005464 <_sbrk_r+0x1c>)
 800544c:	2300      	movs	r3, #0
 800544e:	4604      	mov	r4, r0
 8005450:	4608      	mov	r0, r1
 8005452:	602b      	str	r3, [r5, #0]
 8005454:	f7fc f84e 	bl	80014f4 <_sbrk>
 8005458:	1c43      	adds	r3, r0, #1
 800545a:	d102      	bne.n	8005462 <_sbrk_r+0x1a>
 800545c:	682b      	ldr	r3, [r5, #0]
 800545e:	b103      	cbz	r3, 8005462 <_sbrk_r+0x1a>
 8005460:	6023      	str	r3, [r4, #0]
 8005462:	bd38      	pop	{r3, r4, r5, pc}
 8005464:	200003e4 	.word	0x200003e4

08005468 <memcpy>:
 8005468:	440a      	add	r2, r1
 800546a:	4291      	cmp	r1, r2
 800546c:	f100 33ff 	add.w	r3, r0, #4294967295
 8005470:	d100      	bne.n	8005474 <memcpy+0xc>
 8005472:	4770      	bx	lr
 8005474:	b510      	push	{r4, lr}
 8005476:	f811 4b01 	ldrb.w	r4, [r1], #1
 800547a:	f803 4f01 	strb.w	r4, [r3, #1]!
 800547e:	4291      	cmp	r1, r2
 8005480:	d1f9      	bne.n	8005476 <memcpy+0xe>
 8005482:	bd10      	pop	{r4, pc}

08005484 <_realloc_r>:
 8005484:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005488:	4607      	mov	r7, r0
 800548a:	4614      	mov	r4, r2
 800548c:	460d      	mov	r5, r1
 800548e:	b921      	cbnz	r1, 800549a <_realloc_r+0x16>
 8005490:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8005494:	4611      	mov	r1, r2
 8005496:	f7ff bc4d 	b.w	8004d34 <_malloc_r>
 800549a:	b92a      	cbnz	r2, 80054a8 <_realloc_r+0x24>
 800549c:	f7ff fbde 	bl	8004c5c <_free_r>
 80054a0:	4625      	mov	r5, r4
 80054a2:	4628      	mov	r0, r5
 80054a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80054a8:	f000 f81a 	bl	80054e0 <_malloc_usable_size_r>
 80054ac:	4284      	cmp	r4, r0
 80054ae:	4606      	mov	r6, r0
 80054b0:	d802      	bhi.n	80054b8 <_realloc_r+0x34>
 80054b2:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 80054b6:	d8f4      	bhi.n	80054a2 <_realloc_r+0x1e>
 80054b8:	4621      	mov	r1, r4
 80054ba:	4638      	mov	r0, r7
 80054bc:	f7ff fc3a 	bl	8004d34 <_malloc_r>
 80054c0:	4680      	mov	r8, r0
 80054c2:	b908      	cbnz	r0, 80054c8 <_realloc_r+0x44>
 80054c4:	4645      	mov	r5, r8
 80054c6:	e7ec      	b.n	80054a2 <_realloc_r+0x1e>
 80054c8:	42b4      	cmp	r4, r6
 80054ca:	4622      	mov	r2, r4
 80054cc:	4629      	mov	r1, r5
 80054ce:	bf28      	it	cs
 80054d0:	4632      	movcs	r2, r6
 80054d2:	f7ff ffc9 	bl	8005468 <memcpy>
 80054d6:	4629      	mov	r1, r5
 80054d8:	4638      	mov	r0, r7
 80054da:	f7ff fbbf 	bl	8004c5c <_free_r>
 80054de:	e7f1      	b.n	80054c4 <_realloc_r+0x40>

080054e0 <_malloc_usable_size_r>:
 80054e0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80054e4:	1f18      	subs	r0, r3, #4
 80054e6:	2b00      	cmp	r3, #0
 80054e8:	bfbc      	itt	lt
 80054ea:	580b      	ldrlt	r3, [r1, r0]
 80054ec:	18c0      	addlt	r0, r0, r3
 80054ee:	4770      	bx	lr

080054f0 <_init>:
 80054f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80054f2:	bf00      	nop
 80054f4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80054f6:	bc08      	pop	{r3}
 80054f8:	469e      	mov	lr, r3
 80054fa:	4770      	bx	lr

080054fc <_fini>:
 80054fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80054fe:	bf00      	nop
 8005500:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8005502:	bc08      	pop	{r3}
 8005504:	469e      	mov	lr, r3
 8005506:	4770      	bx	lr
